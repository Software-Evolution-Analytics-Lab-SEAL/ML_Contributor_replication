,Issue#,Title,Owner,Description,Labels,Reviewers,Assignees,Opened time,Closed time,Changed Files,Commits,Events,Participants,Number of Comments,Merged
0,2,Update CONTRIBUTING with remote change instructions,canyon289,Add instructions to help folks move their contributions over,,,,2020-02-07 15:38:09,2020-04-10 08:23:14,CONTRIBUTING.md,1ead90f87908d118fa5075515e8182dd9715e481,"twiecki referenced 2020-04-10 08:23:14,twiecki merged 2020-04-10 08:23:14,twiecki closed 2020-04-10 08:23:14,twiecki head_ref_deleted 2020-04-10 08:23:20,canyon289 mentioned 2020-04-10 08:23:26,canyon289 subscribed 2020-04-10 08:23:26",canyon289 twiecki,1,True
1,3,Remove restrictive type assertion,brandonwillard,Originally from https://github.com/Theano/Theano/pull/6727,,,,2020-02-21 17:26:15,2020-04-10 08:23:45,theano/scalar/basic.py,f5fb7b46b0168518dc0f900a5801ba8e09c5f86a,"twiecki referenced 2020-04-10 08:23:45,twiecki merged 2020-04-10 08:23:45,twiecki closed 2020-04-10 08:23:45",twiecki brandonwillard,1,True
2,4,Make Canonizer always collapse nested ops,brandonwillard,Originally from https://github.com/Theano/Theano/pull/6686.,,,,2020-02-21 17:27:03,2020-04-10 08:24:17,theano/tensor/opt.py theano/tensor/tests/test_opt.py,5b06db27d6fa9fcb681a5a457871d8e1b6797df3,"twiecki referenced 2020-04-10 08:24:16,twiecki merged 2020-04-10 08:24:17,twiecki closed 2020-04-10 08:24:17",twiecki brandonwillard,0,True
3,7,Update Travis infrastructure to Python 3.6/3.7 and current numpy,dfm,"This pull request merges the current master branch of Theano (especially https://github.com/Theano/Theano/pull/6749), fixes a few imports from `numpy.testing`, and updates the `.travis.yml` config to run on the current Python and numpy versions that PyMC3 targets. With these changes, all the tests appear to run and pass. Take a look and let me know if there are any suggestions.",,brandonwillard,,2020-04-09 15:29:32,2020-04-10 08:22:17,theano/tensor/subtensor.py theano/tensor/nnet/abstract_conv.py theano/compile/profiling.py bin/theano_nose.py doc/extending/extending_theano.txt theano/tests/test_determinism.py theano/compile/mode.py .travis.yml theano/gof/cmodule.py theano/tensor/var.py .travis/travis_install.sh doc/library/tensor/basic.txt doc/scripts/docgen.py theano/sparse/tests/test_basic.py setup.cfg theano/gof/op.py theano/tensor/sort.py theano/compat/__init__.py theano/tensor/tests/test_shared_randomstreams.py theano/tensor/tests/test_raw_random.py theano/gof/tests/test_compute_test_value.py theano/gof/opt.py theano/tensor/nnet/bn.py theano/scalar/basic_scipy.py theano/compile/nanguardmode.py theano/gof/tests/test_link.py theano/tests/main.py theano/misc/frozendict.py theano/scalar/basic.py theano/tensor/tests/test_basic.py .travis/travis_before_install.sh theano/tensor/nnet/tests/test_conv.py,cab7a323b2bc7e0fb70636cf6a540d62780aca75 10f6e3496703dc2c77b42733737c9f0fd24d702b 9c96c7e21a13cd6dcb74573d3188e1341ea99a34 1b9804b65ecd008cfb424752e65aced92b63ff92 3c5de93cf5b393b57e920443dfabaf711c5fb2b3 473d74ea47beae124bc1883730ad8c996ee941be c86a0e02c99ad6392e1fdf40f6d4f64d96dcdddd f92cf2353248e4c0b745a9716bcf27cab72a9ce1 4590439d720419ca6539c57d3b61d3064f322907 7bf6eb02269e973a849db797adb3e7c7247d2562 3072d5a3ecfd10f401612fa9b6fb4d1ef404df45 8523240b43a6a586e5ed985b08cc40ba4690731e b104e31af38c3c0b9a33a6e5c757603a1be8ff63 9501ac8feec0d2af195f31f38f3230d07faa3414 e76727b6cc46be97da72d045297d81a1ea617bb2 647135dcd8abf438cac87774b3de1270774ae157 4270277fe3884fb3a53ad9d7e8290fc5b200d2b5 1df8ddb5477b7d7ccf17f26e01e2b06d21a33fef cdeb9afd96e41151005851db417243a21668b5ff 5a9900cf8b53a4f05ac3824fd9330e66bca27771 0da749df35eee35008e7ab42babe2c29e3e2cb45 14671ad316cfe2fff88bfa1fdd6dd24c8a7ae1bf a8f36e4623aa69f50651882a501f5f611dfacd60 b50ba163bcb9b3f804e77de7a667282ad6eb107a cb6c6448684920aede9b2a2759989f5bd9b35efa 4ce5b9d98d91d458a41c4998f1841395520a2a51 bb629b6a07a5a23442a3a7a6b3749d22fbf42531 3e89a5eeeb2987b8b1edb02297e5da50b414f5a5 d46fd7b2e0e7f7f6e4dbcaecd0bc3c40c2299fbd ed1c62400942d307dc4c9c90bb17e03161c47184 89d592e354cd3f384b73ec7f9f2c2e18b60d7f13 6dea5e476ece3c54926b03e0b64838ec79b2cbf3 c0f3832ad3ee61efb5cf0b91ec84e92ec4663f7b 29590c5051cd1f3b25b5079a442c767702c529e7 f1e4ec47c76520adadbd4b5ad4c1d72277337d50 31f86c5c225b9ea63b1e2fd7cc481dbda47a177e beba62f0ddcd61606414b0c54c8fe01c9991dabf 6a4cf4c96cd284e5ac4d22b6df88d8718c1d8a73 630974a7b67ef76d7a051b57d0c65f95ac0a6152 ce7b9382d00df2103612dc09e70a08f4ed34b1f5 5c38d6cb008e4dd66ac55b4c6970d1578587d024 a9fc462056f634f9e0a7664e5455e8560c9946ec b776a17694d147670c363e96ac470171065a0765 ad6cd53a837dc70fc232e3579ee53dbdc4dce4d5 7248c65a09d18e9b0293524fb9e80eb293148372 9016c7ad04d781269e4bccc1e13f0b9a1ae1abed 18e781aae231ccc8a01254fbf31feea9c7a64eca,"twiecki referenced 2020-04-10 08:22:16,twiecki merged 2020-04-10 08:22:16,twiecki closed 2020-04-10 08:22:17,brandonwillard mentioned 2020-04-10 08:22:42,brandonwillard subscribed 2020-04-10 08:22:42",twiecki dfm brandonwillard,4,True
4,8,Adding support for building docs on ReadTheDocs,dfm,"This pull request adds support for automatically building the documentation on ReadTheDocs. It looks like it's working, but I'd love to get another set of eyes on it to look for missing pages.

You can take a look at the build docs here: https://theano-pymc-test.readthedocs.io/en/readthedocs/",,,,2020-04-09 16:17:46,2020-04-10 08:20:22,readthedocs.yml doc/environment.yml,4457582f401e3117fbffeea63ec299e800b5d8a9,"twiecki mentioned 2020-04-10 00:58:15,twiecki subscribed 2020-04-10 00:58:15,dfm mentioned 2020-04-10 08:19:55,dfm subscribed 2020-04-10 08:19:55,brandonwillard mentioned 2020-04-10 08:19:55,brandonwillard subscribed 2020-04-10 08:19:55,twiecki referenced 2020-04-10 08:20:22,twiecki merged 2020-04-10 08:20:22,twiecki closed 2020-04-10 08:20:22,brandonwillard mentioned 2020-04-10 12:28:31,brandonwillard subscribed 2020-04-10 12:28:31",twiecki dfm brandonwillard,4,True
5,9,Update to head of upstream Theano master branch,dfm,This pull request just merges the updates that have been applied to the master branch of the main Theano repository.,,,,2020-04-09 16:47:26,2020-04-10 00:50:14,theano/tensor/subtensor.py theano/tensor/nnet/abstract_conv.py theano/compile/profiling.py doc/extending/extending_theano.txt theano/tests/test_determinism.py theano/compile/mode.py .travis.yml theano/gof/cmodule.py theano/tensor/var.py doc/library/tensor/basic.txt doc/scripts/docgen.py theano/sparse/tests/test_basic.py theano/gof/op.py theano/tensor/sort.py theano/compat/__init__.py theano/tensor/tests/test_shared_randomstreams.py theano/tensor/tests/test_raw_random.py theano/gof/tests/test_compute_test_value.py theano/gof/opt.py theano/tensor/nnet/bn.py theano/scalar/basic_scipy.py theano/compile/nanguardmode.py theano/gof/tests/test_link.py theano/misc/frozendict.py theano/scalar/basic.py theano/tensor/tests/test_basic.py theano/tensor/nnet/tests/test_conv.py,e1588615dacbf601e40ed469d9823002b11891d3 10f6e3496703dc2c77b42733737c9f0fd24d702b 9c96c7e21a13cd6dcb74573d3188e1341ea99a34 1b9804b65ecd008cfb424752e65aced92b63ff92 3c5de93cf5b393b57e920443dfabaf711c5fb2b3 473d74ea47beae124bc1883730ad8c996ee941be c86a0e02c99ad6392e1fdf40f6d4f64d96dcdddd f92cf2353248e4c0b745a9716bcf27cab72a9ce1 4590439d720419ca6539c57d3b61d3064f322907 3072d5a3ecfd10f401612fa9b6fb4d1ef404df45 8523240b43a6a586e5ed985b08cc40ba4690731e b104e31af38c3c0b9a33a6e5c757603a1be8ff63 9501ac8feec0d2af195f31f38f3230d07faa3414 4270277fe3884fb3a53ad9d7e8290fc5b200d2b5 cdeb9afd96e41151005851db417243a21668b5ff 5a9900cf8b53a4f05ac3824fd9330e66bca27771 0da749df35eee35008e7ab42babe2c29e3e2cb45 14671ad316cfe2fff88bfa1fdd6dd24c8a7ae1bf b50ba163bcb9b3f804e77de7a667282ad6eb107a bb629b6a07a5a23442a3a7a6b3749d22fbf42531 ed1c62400942d307dc4c9c90bb17e03161c47184 89d592e354cd3f384b73ec7f9f2c2e18b60d7f13 6dea5e476ece3c54926b03e0b64838ec79b2cbf3 f1e4ec47c76520adadbd4b5ad4c1d72277337d50 31f86c5c225b9ea63b1e2fd7cc481dbda47a177e 630974a7b67ef76d7a051b57d0c65f95ac0a6152 a9fc462056f634f9e0a7664e5455e8560c9946ec b776a17694d147670c363e96ac470171065a0765 ad6cd53a837dc70fc232e3579ee53dbdc4dce4d5 9016c7ad04d781269e4bccc1e13f0b9a1ae1abed 18e781aae231ccc8a01254fbf31feea9c7a64eca,"brandonwillard referenced 2020-04-10 00:50:14,brandonwillard merged 2020-04-10 00:50:14,brandonwillard closed 2020-04-10 00:50:14",dfm brandonwillard,0,True
6,12,Use pytest instead,ColCarroll,"I haven't updated this, but here is the pytest work I did for theano last year.",,,,2020-07-03 14:55:54,2020-07-05 22:07:15,theano/scan_module/tests/test_scan.py theano/gpuarray/tests/test_linalg.py theano/tensor/tests/test_opt_uncanonicalize.py theano/compile/tests/test_function_module.py bin/theano_nose.py theano/scalar/tests/test_basic.py theano/gpuarray/tests/test_blas.py theano/compile/tests/test_nanguardmode.py theano/tensor/tests/test_blas_c.py theano/tensor/tests/test_fourier.py theano/typed_list/tests/test_type.py theano/gof/tests/test_op.py theano/tensor/tests/test_sharedvar.py theano/tensor/tests/test_sort.py setup.py theano/tensor/nnet/tests/test_blocksparse.py theano/gpuarray/tests/test_abstractconv.py theano/gpuarray/tests/test_nnet.py theano/tensor/nnet/tests/test_abstract_conv.py theano/tensor/nnet/tests/test_neighbours.py theano/tests/test_updates.py theano/tests/unittest_tools.py theano/gpuarray/tests/check_dnn_conv.py theano/scan_module/tests/test_scan_utils.py theano/sandbox/cuda/__init__.py theano/compile/tests/test_function.py theano/sparse/sandbox/test_sp.py theano/tests/test_ifelse.py theano/tensor/nnet/tests/test_corr.py theano/tensor/tests/test_io.py theano/sparse/tests/test_sp2.py theano/gpuarray/tests/test_gemmcorr3d.py theano/gof/tests/test_vm.py bin/theano-nose theano/tests/test_gradient.py theano/gpuarray/tests/test_pickle.py theano/gpuarray/tests/test_blocksparse.py theano/tensor/nnet/tests/test_conv.py conftest.py theano/compile/tests/test_builders.py theano/gpuarray/tests/test_ctc.py requirement-rtd.txt theano/tensor/tests/test_xlogx.py theano/tensor/tests/test_blas_scipy.py theano/tests/test_printing.py doc/extending/extending_theano_solution_1.py theano/tensor/tests/test_complex.py theano/tensor/signal/tests/test_conv.py theano/d3viz/tests/test_formatting.py theano/sparse/tests/test_basic.py theano/compile/tests/test_mode.py theano/gpuarray/tests/test_dnn.py theano/sparse/sandbox/truedot.py theano/scalar/tests/test_div_future.py theano/compile/tests/test_pfunc.py theano/gpuarray/tests/test_opt.py theano/tensor/tests/test_opt.py theano/compile/tests/test_ops.py theano/gpuarray/tests/test_subtensor.py theano/tensor/nnet/tests/test_conv3d2d.py theano/sandbox/tests/test_rng_mrg.py theano/gpuarray/tests/test_type.py theano/tests/test_rop.py theano/compile/tests/test_modes.py theano/tensor/tests/test_nlinalg.py theano/gof/tests/test_fg.py theano/tests/test_dictionary_output.py theano/tensor/tests/test_casting.py theano/sandbox/minimal.py theano/gpuarray/tests/test_scan.py .travis.yml theano/tensor/tests/test_inc_subtensor.py theano/gof/tests/test_params_type.py theano/tensor/tests/test_mpi.py theano/tests/test_config.py theano/sandbox/tests/test_multinomial.py theano/gpuarray/tests/test_gemmcorr.py theano/tests/diverse_tests.py theano/compile/tests/test_shared.py theano/misc/tests/test_pkl_utils.py theano/compile/tests/test_profiling.py theano/tests/test_flake8.py theano/tensor/tests/test_fft.py theano/tensor/tests/test_raw_random.py theano/gpuarray/tests/test_basic_ops.py theano/sandbox/linalg/tests/test_linalg.py theano/gpuarray/tests/test_multinomial.py theano/gpuarray/tests/test_neighbours.py theano/gof/tests/test_cc.py theano/tensor/nnet/tests/test_nnet.py theano/tensor/nnet/tests/test_sigm.py theano/tensor/tests/test_blas.py theano/gpuarray/tests/test_fft.py theano/compile/tests/test_misc.py theano/scan_module/tests/test_scan_checkpoints.py theano/tensor/tests/test_elemwise.py theano/gof/tests/test_link.py theano/tensor/tests/test_basic.py theano/tensor/tests/test_slinalg.py theano/sparse/tests/test_utils.py conda/meta.yaml theano/gof/tests/test_types.py theano/gof/tests/test_graph.py theano/scan_module/tests/test_scan_opt.py theano/gpuarray/tests/test_extra_ops.py theano/sparse/tests/test_opt.py theano/tensor/signal/tests/test_pool.py theano/compile/tests/test_debugmode.py doc/extending/unittest.txt doc/install_windows.txt theano/sandbox/tests/test_multinomial_wo_replacement.py theano/tests/test_breakpoint.py theano/gof/tests/test_optdb.py theano/compile/tests/test_function_name.py theano/tensor/tests/test_subtensor.py theano/gpuarray/tests/config.py theano/tensor/tests/test_utils.py doc/requirements.inc theano/tensor/tests/test_shared_randomstreams.py theano/tensor/tests/test_var.py theano/gof/tests/test_compute_test_value.py theano/d3viz/tests/test_d3viz.py theano/tensor/tests/test_extra_ops.py theano/gpuarray/tests/test_reduction.py theano/gpuarray/tests/test_pool.py theano/scalar/tests/test_div_no_future.py theano/gpuarray/tests/test_elemwise.py theano/tensor/tests/test_keepdims.py theano/scalar/tests/test_basic_sympy.py theano/tensor/nnet/tests/test_corr3d.py theano/tests/main.py theano/typed_list/tests/test_opt.py theano/tensor/nnet/tests/test_ctc.py theano/typed_list/tests/test_basic.py,edd618ad99efc71a6c18e66f5017d208c87ef103 d8e013faffd66da8f55aed6446905a597fd2069b 7ffb65a1e62b344e02cb7dabc34410519c74bff3 4506018f172c503763e1d653d9b6938375cd49d0,"brandonwillard review_requested 2020-07-03 14:59:55,ColCarroll mentioned 2020-07-05 20:35:25,ColCarroll subscribed 2020-07-05 20:35:25,ColCarroll closed 2020-07-05 22:07:15",ColCarroll brandonwillard,2,False
7,13,Use black formatting and update code style and conventions,brandonwillard,"This PR applies `black` formatting and adds a formatting check to Travis.  It also removes an unnecessary custom `flake8` test runner script, applies some `flake8`-based style changes, and simplifies the use of `flake8` on this codebase.",,,,2020-07-03 20:56:08,2020-07-08 14:32:04,theano/misc/do_nightly_build_send theano/compile/tests/test_function_module.py bin/theano_nose.py theano/gof/params_type.py theano/tensor/tests/test_blas_c.py theano/gof/vm.py theano/gof/tests/test_opt.py doc/crei2013/scan_poly.py theano/tensor/tests/test_sort.py theano/tensor/fft.py theano/gof/toolbox.py theano/tensor/nnet/blocksparse.py theano/misc/pkl_utils.py theano/compile/monitormode.py theano/sandbox/linalg/ops.py theano/sandbox/fourier.py theano/tensor/nnet/tests/__init__.py theano/d3viz/__init__.py theano/compile/nanguardmode.py theano/tensor/nnet/tests/test_corr.py theano/gpuarray/tests/test_gemmcorr3d.py theano/misc/frozendict.py theano/tensor/nnet/tests/test_conv.py theano/gof/link.py requirement-rtd.txt theano/misc/ordered_set.py theano/tensor/nnet/ctc.py theano/gpuarray/sort.py theano/gpuarray/type.py theano/gpuarray/pool.py theano/tensor/elemwise_cgen.py theano/compile/__init__.py theano/gpuarray/tests/test_dnn.py doc/tutorial/loop_solution_1.py theano/scalar/tests/test_div_future.py theano/tensor/fourier.py theano/gpuarray/fft.py theano/tensor/nnet/tests/test_conv3d2d.py theano/compile/tests/test_modes.py theano/tensor/tests/test_nlinalg.py theano/tensor/nnet/conv3d2d.py theano/tensor/opt_uncanonicalize.py theano/gpuarray/tests/test_scan.py theano/gof/unify.py theano/tensor/__init__.py theano/tensor/blas_c.py theano/tests/test_config.py theano/gpuarray/reduction.py theano/tensor/tests/_test_mpi_roundtrip.py theano/scalar/basic_sympy.py theano/tensor/tests/test_fft.py theano/tensor/tests/test_raw_random.py theano/gpuarray/tests/test_basic_ops.py doc/extending/other_ops.txt theano/gpuarray/tests/test_neighbours.py theano/gpuarray/linalg.py theano/tensor/nnet/tests/test_sigm.py theano/tensor/tests/test_elemwise.py theano/gpuarray/blocksparse.py doc/hpcs2011_tutorial/logreg_example.py theano/tensor/tests/test_slinalg.py theano/sandbox/solve.py theano/gof/tests/test_graph.py doc/omlw2014/logreg.py theano/tensor/signal/pool.py doc/hpcs2011_tutorial/pycuda_simple.py theano/tensor/tests/mlp_test.py theano/gof/cmodule.py theano/sandbox/tests/test_multinomial_wo_replacement.py theano/scan_module/scan_views.py doc/generate_dtype_tensor_table.py theano/tensor/tests/test_var.py theano/d3viz/tests/test_d3viz.py theano/tensor/nnet/corr3d.py theano/sparse/__init__.py theano/gpuarray/tests/test_sort.py theano/scalar/tests/test_div_no_future.py theano/tensor/slinalg.py theano/scalar/tests/test_basic_sympy.py theano/tensor/nnet/tests/test_corr3d.py theano/tests/main.py .gitignore theano/tensor/subtensor.py theano/tensor/blas_scipy.py theano/tensor/tests/test_opt_uncanonicalize.py doc/conf.py theano/compile/ops.py theano/scalar/tests/test_basic.py theano/gpuarray/tests/test_blas.py theano/sandbox/tests/test_minimal.py theano/gpuarray/ctc.py theano/gpuarray/multinomial.py theano/scan_module/scan_opt.py theano/sparse/tests/test_type.py setup.py theano/gpuarray/tests/test_nnet.py theano/tensor/nnet/tests/test_abstract_conv.py theano/gpuarray/extra_ops.py doc/install_others.txt theano/tensor/nnet/tests/test_neighbours.py theano/misc/latence_gpu_transfert.py theano/tests/unittest_tools.py theano/gpuarray/opt.py theano/compile/tests/test_function.py theano/gpuarray/neighbours.py theano/gpuarray/nerv.py theano/gpuarray/tests/test_misc.py theano/sparse/sandbox/sp2.py theano/gof/tests/test_vm.py theano/gpuarray/kernel_codegen.py theano/gof/cc.py theano/compile/tests/test_builders.py theano/gpuarray/tests/test_ctc.py theano/tensor/tests/test_xlogx.py theano/_version.py theano/configdefaults.py theano/tensor/signal/tests/test_conv.py theano/gof/callcache.py theano/tensor/var.py theano/tensor/nnet/neighbours.py theano/sparse/tests/test_basic.py theano/compile/tests/test_mode.py theano/misc/check_blas.py theano/sparse/sandbox/truedot.py theano/compile/tests/test_ops.py theano/tensor/tests/test_gc.py theano/gof/tests/test_sched.py theano/tensor/type.py theano/gpuarray/__init__.py theano/gpuarray/subtensor.py theano/scalar/basic.py theano/gof/__init__.py theano/gof/tests/test_fg.py theano/gpuarray/blas.py theano/tests/__init__.py theano/sandbox/softsign.py theano/tests/test_2nd_order_grads.py theano/sandbox/minimal.py theano/gpuarray/tests/test_cgpukernelbase.py .travis.yml theano/tensor/raw_random.py theano/gof/cutils.py theano/gof/tests/test_params_type.py theano/tensor/nnet/__init__.py theano/sandbox/tests/test_multinomial.py theano/gpuarray/tests/test_gemmcorr.py theano/tests/diverse_tests.py theano/sparse/basic.py theano/tensor/tests/test_misc.py theano/gof/tests/test_cmodule.py theano/compat/__init__.py theano/misc/tests/test_pkl_utils.py theano/compile/tests/test_profiling.py theano/misc/gh_api.py theano/gof/opt.py theano/misc/doubleop.py doc/tutorial/using_gpu_solution_1.py theano/gof/tests/test_link.py theano/sandbox/neighbours.py theano/tensor/inplace.py theano/tensor/tests/test_mlp.py theano/sparse/tests/test_utils.py conda/meta.yaml theano/gof/tests/test_types.py theano/gpuarray/tests/test_extra_ops.py theano/sparse/tests/test_opt.py theano/tensor/nnet/sigm.py theano/gof/optdb.py theano/compile/tests/test_monitormode.py theano/gpuarray/tests/test_rng_mrg.py doc/links.txt theano/gpuarray/dnn.py doc/tutorial/profiling_example.py .jenkins/jenkins_pr_pretest.sh theano/tests/test_breakpoint.py doc/tutorial/modes_solution_1.py theano/compile/tests/test_function_name.py theano/tensor/nlinalg.py theano/tensor/tests/test_utils.py doc/requirements.inc theano/gpuarray/tests/test_reduction.py doc/tutorial/adding_solution_1.py theano/sparse/opt.py theano/tensor/nnet/tests/speed_test_conv.py theano/raise_op.py theano/scalar/sharedvar.py theano/tensor/nnet/tests/test_ctc.py theano/typed_list/tests/test_basic.py theano/gpuarray/tests/test_linalg.py theano/scan_module/__init__.py theano/gof/tests/test_lazy.py theano/d3viz/d3viz.py theano/tensor/tests/test_fourier.py theano/gof/tests/test_op.py theano/tensor/tests/test_sharedvar.py theano/tensor/nnet/tests/test_blocksparse.py theano/gpuarray/tests/test_abstractconv.py .travis/travis_install.sh theano/sandbox/multinomial.py theano/tensor/basic.py doc/install_macos.txt theano/tests/test_updates.py theano/sparse/sandbox/tests/__init__.py theano/tests/run_tests_in_batch.py theano/scan_module/tests/test_scan_utils.py theano/sparse/sandbox/test_sp.py theano/tensor/elemwise.py theano/scalar/basic_scipy.py theano/misc/hooks/reindent.py theano/gradient.py theano/tensor/tests/test_io.py theano/sparse/tests/test_sp2.py theano/tests/breakpoint.py theano/misc/check_duplicate_key.py doc/extending/extending_theano_c.txt doc/crei2013/ifelse_switch.py theano/misc/windows.py theano/compile/function_module.py theano/gpuarray/tests/test_blocksparse.py theano/gpuarray/tests/test_pickle.py theano/tests/test_gradient.py theano/compile/pfunc.py theano/compile/profiling.py theano/tensor/nnet/opt.py theano/tensor/tests/test_blas_scipy.py theano/gof/tests/test_utils.py theano/gof/fg.py theano/gpuarray/tests/rnn_support.py theano/misc/elemwise_openmp_speedup.py theano/tensor/tests/test_complex.py doc/hpcs2011_tutorial/double_op.py doc/hpcs2011_tutorial/simple_example.py theano/sandbox/conv.py MANIFEST.in theano/tensor/sort.py theano/compile/io.py theano/tensor/nnet/tests/test_bn.py theano/compile/tests/test_pfunc.py theano/tensor/tests/test_opt.py theano/d3viz/tests/models.py theano/compile/function.py theano/sandbox/tests/test_rng_mrg.py theano/gof/tests/test_graph_opt_caching.py theano/scalar/__init__.py theano/tensor/sharedvar.py theano/gpuarray/tests/test_type.py theano/tests/test_rop.py theano/gof/null_type.py theano/__init__.py theano/sparse/sandbox/sp.py theano/tensor/nnet/nnet.py doc/crei2013/logreg.py theano/configparser.py theano/misc/safe_asarray.py theano/compile/debugmode.py theano/tensor/nnet/tests/test_opt.py doc/install_ubuntu.txt theano/compile/tests/test_shared.py doc/install_centos6.txt theano/tests/test_flake8.py doc/dev_start_guide.txt theano/sandbox/linalg/tests/test_linalg.py theano/gof/tests/test_cc.py theano/tensor/nnet/tests/test_nnet.py theano/gpuarray/tests/test_fft.py theano/compile/tests/test_misc.py theano/gof/sched.py theano/tensor/nnet/abstract_conv.py theano/ifelse.py doc/sandbox/sandbox.txt theano/misc/may_share_memory.py doc/extending/unittest.txt doc/install_windows.txt theano/gpuarray/rng_mrg.py theano/tensor/blas.py theano/tensor/shared_randomstreams.py theano/misc/do_nightly_build theano/misc/buildbot_filter.py theano/scan_module/scan.py theano/misc/cpucount.py theano/gpuarray/tests/config.py theano/sparse/utils.py theano/gof/destroyhandler.py theano/scan_module/scan_perform_ext.py theano/compile/builders.py theano/gpuarray/tests/test_pool.py theano/gof/type.py theano/misc/tests/test_may_share_memory.py theano/tensor/tests/test_keepdims.py theano/gof/tests/test_destroyhandler.py theano/gof/tests/test_compiledir.py theano/scan_module/tests/test_scan.py theano/gof/utils.py theano/compile/tests/test_nanguardmode.py doc/extending/extending_theano.txt theano/typed_list/tests/test_type.py theano/misc/strutil.py theano/gof/op.py theano/sandbox/linalg/__init__.py theano/gpuarray/tests/check_dnn_conv.py theano/misc/check_multi_gpu.py theano/tensor/extra_ops.py theano/sandbox/cuda/__init__.py theano/tensor/nnet/conv.py theano/scan_module/scan_op.py theano/scan_module/scan_checkpoints.py theano/tensor/nnet/bn.py theano/tests/test_ifelse.py theano/gof/lazylinker_c.py theano/tensor/blas_headers.py theano/gpuarray/elemwise.py theano/tensor/nnet/corr.py theano/tensor/inc_code.py doc/extending/extending_theano_solution_1.py theano/gpuarray/tests/run_dnn_conv.py theano/d3viz/tests/test_formatting.py theano/compile/sharedvalue.py theano/d3viz/formatting.py theano/gpuarray/fp16_help.py theano/misc/burn_gpu.py theano/sparse/sharedvar.py bin/theano_cache.py theano/gpuarray/tests/test_opt.py theano/gpuarray/tests/test_subtensor.py theano/gpuarray/nnet.py theano/gpuarray/tests/test_others.py theano/tensor/tests/test_casting.py doc/hpcs2011_tutorial/scan_pow.py theano/pathparse.py theano/compile/mode.py theano/tensor/tests/test_inc_subtensor.py doc/crei2013/scan_pow.py theano/tensor/tests/test_mpi.py doc/scripts/docgen.py theano/tensor/signal/conv.py theano/tensor/tests/test_merge.py theano/gpuarray/cudnn_defs.py theano/gof/compilelock.py theano/tensor/opt.py theano/gpuarray/basic_ops.py theano/scan_module/scan_utils.py theano/sandbox/blocksparse.py theano/gpuarray/tests/test_multinomial.py doc/hpcs2011_tutorial/pycuda_double_op.py theano/tensor/tests/test_blas.py theano/scan_module/tests/test_scan_checkpoints.py theano/tensor/tests/test_basic.py theano/sparse/sandbox/tests/test_sp.py theano/scan_module/tests/test_scan_opt.py theano/gof/graph.py theano/tensor/signal/tests/test_pool.py theano/compile/tests/test_debugmode.py setup.cfg theano/gof/compiledir.py theano/misc/hooks/check_whitespace.py theano/tensor/tests/test_type_other.py theano/gof/tests/test_optdb.py theano/sandbox/rng_mrg.py theano/sparse/type.py theano/misc/elemwise_time_test.py theano/tensor/tests/test_subtensor.py theano/gpuarray/opt_util.py theano/tensor/tests/test_shared_randomstreams.py theano/gof/tests/test_compute_test_value.py theano/printing.py theano/tensor/tests/test_extra_ops.py doc/hpcs2011_tutorial/scan_poly.py theano/tensor/io.py theano/gpuarray/tests/test_elemwise.py theano/typed_list/tests/test_opt.py theano/gof/tests/test_toolbox.py,f3e6e78e5145d75e23bd453df3f804bac2b1a907 cac3e5b15eadb98131b313cd64bced6c209b418b 7dc3e47db9f837429a9b910ba002b90432a0554d 2f7eb1d2a57f5124cd2de06c5d55f257b724c022 23460ad2067b751f1c2e9711d99927df92ad2d0f e9ee91e0e2d5bd29de1d032ca5fe6ddbed47ad99 603c7167cd477d10dc66ae120a6314e8f6e41f38 cd4defa5c2a8e3b3f017fefb79e2a8a5b372a9cd 6e8c2b927d6b27c873a8937e87617583b15cf9bb 218ecbcaf205aa9321ec6ead4342bef950ad5e07 292c559ca309c286ee1197be71d1570f23cc7eca 674318724da08ea2eacd68fbc9f377db43a2b57c e928363d4d66739b8a4069763564e4a506c909b3 5512a3d6c06645220f82700d53bffc23f2529182,"brandonwillard head_ref_force_pushed 2020-07-03 21:02:27,brandonwillard head_ref_force_pushed 2020-07-04 00:32:05,brandonwillard review_requested 2020-07-04 01:55:05,brandonwillard review_requested 2020-07-04 01:55:05,brandonwillard head_ref_force_pushed 2020-07-06 04:41:09,brandonwillard head_ref_force_pushed 2020-07-06 04:46:05,brandonwillard head_ref_force_pushed 2020-07-06 05:02:26,brandonwillard head_ref_force_pushed 2020-07-06 05:21:49,brandonwillard head_ref_force_pushed 2020-07-06 05:37:31,brandonwillard renamed 2020-07-06 16:20:06,brandonwillard connected 2020-07-06 16:20:38,brandonwillard convert_to_draft 2020-07-06 16:21:15,brandonwillard head_ref_force_pushed 2020-07-06 16:40:06,brandonwillard head_ref_force_pushed 2020-07-06 16:52:28,brandonwillard head_ref_force_pushed 2020-07-06 17:20:09,brandonwillard mentioned 2020-07-06 19:17:58,brandonwillard subscribed 2020-07-06 19:17:58,brandonwillard head_ref_force_pushed 2020-07-07 00:12:28,brandonwillard head_ref_force_pushed 2020-07-07 04:20:05,brandonwillard head_ref_force_pushed 2020-07-07 05:43:44,brandonwillard head_ref_force_pushed 2020-07-07 19:28:20,brandonwillard head_ref_force_pushed 2020-07-08 00:34:16,brandonwillard head_ref_force_pushed 2020-07-08 00:58:25,brandonwillard ready_for_review 2020-07-08 02:53:50,brandonwillard referenced 2020-07-08 14:32:04,brandonwillard merged 2020-07-08 14:32:04,brandonwillard closed 2020-07-08 14:32:05,brandonwillard head_ref_deleted 2020-07-08 14:32:15",dfm twiecki brandonwillard,7,True
8,14,Move from unittest/nose to pytest,ColCarroll,"This supersedes the last pytest. Brandon fixed the merge problems. There are a few more instances of `nose` sticking its... `nose` up again from reworking travis, but I think this is a good step if tests still pass.",,,,2020-07-05 22:06:55,2020-07-05 23:52:01,theano/scan_module/tests/test_scan.py theano/compile/tests/test_function_module.py theano/gpuarray/tests/test_linalg.py theano/tensor/tests/test_opt_uncanonicalize.py theano/scalar/tests/test_basic.py theano/gpuarray/tests/test_blas.py theano/compile/tests/test_nanguardmode.py theano/tensor/tests/test_blas_c.py theano/tensor/tests/test_fourier.py theano/typed_list/tests/test_type.py theano/gof/tests/test_op.py theano/tensor/tests/test_sharedvar.py theano/tensor/tests/test_sort.py setup.py theano/tensor/nnet/tests/test_blocksparse.py theano/gpuarray/tests/test_abstractconv.py .travis/travis_install.sh theano/gpuarray/tests/test_nnet.py theano/tensor/nnet/tests/test_abstract_conv.py theano/tensor/nnet/tests/test_neighbours.py theano/tests/test_updates.py theano/tests/unittest_tools.py theano/gpuarray/tests/check_dnn_conv.py theano/scan_module/tests/test_scan_utils.py theano/sandbox/cuda/__init__.py theano/compile/tests/test_function.py theano/sparse/sandbox/test_sp.py theano/tests/test_ifelse.py theano/tensor/nnet/tests/test_corr.py theano/tensor/tests/test_io.py theano/sparse/tests/test_sp2.py theano/gpuarray/tests/test_gemmcorr3d.py theano/gof/tests/test_vm.py bin/theano-nose theano/tests/test_gradient.py theano/gpuarray/tests/test_pickle.py theano/gpuarray/tests/test_blocksparse.py theano/tensor/nnet/tests/test_conv.py conftest.py theano/compile/tests/test_builders.py theano/gpuarray/tests/test_ctc.py requirement-rtd.txt theano/tensor/tests/test_xlogx.py theano/tensor/tests/test_blas_scipy.py theano/tests/test_printing.py doc/extending/extending_theano_solution_1.py theano/tensor/tests/test_complex.py theano/tensor/signal/tests/test_conv.py theano/d3viz/tests/test_formatting.py theano/sparse/tests/test_basic.py theano/compile/tests/test_mode.py theano/gpuarray/tests/test_dnn.py theano/sparse/sandbox/truedot.py theano/scalar/tests/test_div_future.py theano/compile/tests/test_pfunc.py theano/gpuarray/tests/test_opt.py theano/compile/tests/test_ops.py theano/tensor/tests/test_opt.py theano/gpuarray/tests/test_subtensor.py theano/tensor/nnet/tests/test_conv3d2d.py theano/sandbox/tests/test_rng_mrg.py theano/gpuarray/tests/test_type.py theano/tests/test_rop.py theano/compile/tests/test_modes.py theano/tensor/tests/test_nlinalg.py theano/gof/tests/test_fg.py theano/tests/test_dictionary_output.py theano/tensor/tests/test_casting.py theano/sandbox/minimal.py theano/gpuarray/tests/test_scan.py .travis.yml theano/tensor/tests/test_inc_subtensor.py theano/gof/tests/test_params_type.py theano/tensor/tests/test_mpi.py theano/tests/test_config.py theano/sandbox/tests/test_multinomial.py theano/gpuarray/tests/test_gemmcorr.py theano/tests/diverse_tests.py theano/compile/tests/test_shared.py theano/misc/tests/test_pkl_utils.py theano/compile/tests/test_profiling.py theano/tests/test_flake8.py theano/tensor/tests/test_fft.py theano/tensor/tests/test_raw_random.py theano/gpuarray/tests/test_basic_ops.py theano/sandbox/linalg/tests/test_linalg.py theano/gpuarray/tests/test_multinomial.py theano/gpuarray/tests/test_neighbours.py theano/gof/tests/test_cc.py theano/tensor/nnet/tests/test_nnet.py theano/tensor/nnet/tests/test_sigm.py theano/gpuarray/tests/test_fft.py theano/tensor/tests/test_blas.py theano/compile/tests/test_misc.py theano/scan_module/tests/test_scan_checkpoints.py theano/tensor/tests/test_elemwise.py theano/gof/tests/test_link.py theano/tensor/tests/test_basic.py theano/sparse/tests/test_utils.py theano/tensor/tests/test_slinalg.py conda/meta.yaml theano/gof/tests/test_types.py theano/gof/tests/test_graph.py theano/scan_module/tests/test_scan_opt.py theano/gpuarray/tests/test_extra_ops.py theano/sparse/tests/test_opt.py theano/tensor/signal/tests/test_pool.py theano/compile/tests/test_debugmode.py doc/extending/unittest.txt doc/install_windows.txt theano/sandbox/tests/test_multinomial_wo_replacement.py theano/gof/tests/test_optdb.py theano/tests/test_breakpoint.py theano/compile/tests/test_function_name.py theano/tensor/tests/test_subtensor.py theano/gpuarray/tests/config.py theano/tensor/tests/test_utils.py doc/requirements.inc theano/tensor/tests/test_shared_randomstreams.py theano/tensor/tests/test_var.py theano/gof/tests/test_compute_test_value.py theano/d3viz/tests/test_d3viz.py theano/tensor/tests/test_extra_ops.py theano/gpuarray/tests/test_reduction.py theano/gpuarray/tests/test_pool.py theano/scalar/tests/test_div_no_future.py theano/gpuarray/tests/test_elemwise.py theano/tensor/tests/test_keepdims.py theano/scalar/tests/test_basic_sympy.py theano/tensor/nnet/tests/test_corr3d.py theano/typed_list/tests/test_opt.py theano/tensor/nnet/tests/test_ctc.py theano/typed_list/tests/test_basic.py,f306397f876fb94c375255578d3dd867a94f4cfb e947e267831dde0ef0e8a9007a6adbce04357873 d869832e8edc62dc8398987385758d86c74d7f0b e51c50046fb71a242a67604c571b163e30876274,"brandonwillard referenced 2020-07-05 23:52:01,brandonwillard merged 2020-07-05 23:52:01,brandonwillard closed 2020-07-05 23:52:01",ColCarroll dfm brandonwillard,3,True
9,18,Fix print statement in docs page,adrn,"This is a trivial fix, but here's something I caught when reading the troubleshooting page!",,,,2020-07-20 12:12:47,2020-07-20 13:48:28,doc/troubleshooting.txt,1307c194dd94167ec4aa48b65bb250bf125cd602,"ColCarroll referenced 2020-07-20 13:48:27,ColCarroll merged 2020-07-20 13:48:28,ColCarroll closed 2020-07-20 13:48:28",ColCarroll adrn,1,True
10,20,Prepare version 1.0.5,twiecki,"Just preparing for a release, we should probably start populating the NEWS.txt file.",,brandonwillard,,2020-07-27 16:39:41,2020-07-28 13:40:53,HISTORY.txt theano/version.py doc/library/config.txt theano/configdefaults.py NEWS.txt setup.py doc/LICENSE.txt doc/install_generic.inc,2f15dc25d9e9cbc491efacba1e2c65c148e2a33d,"twiecki referenced 2020-07-28 13:40:53,twiecki merged 2020-07-28 13:40:53,twiecki closed 2020-07-28 13:40:53,twiecki head_ref_deleted 2020-07-28 13:40:57",twiecki brandonwillard,0,True
11,21,Introduce a JAX Linker class,brandonwillard,"This PR introduces a JAX `Linker` class that compiles graphs to XLA using `jax`.

## Local PyMC3 Testing Example

For anyone interested in trying out this functionality, first install the latest PyMC3 from GitHub (e.g. `pip install --no-deps git+https://github.com/pymc-devs/pymc3`).  We need the latest PyMC3 because it contains a Theano import fix that allows it to run using Theano-PyMC (i.e. this project).  The option `--no-deps` is used to prevent `pip` from installing the old Theano.  If you leave out that option, you'll have to `pip uninstall theano`.

Next, check out this PR branch (e.g. `git clone git@github.com:brandonwillard/Theano.git -b jax-linker`) and install (e.g. `pip install -r requirements.txt`) Theano-PyMC.

Finally, try a small example in PyMC3:
```python
import theano

import pymc3 as pm

# Disable C compilation by default
theano.config.cxx = """"

# This will make the JAX Linker the default
theano.config.mode = ""JAX""

# Create a simple model
with pm.Model() as model:
    a = pm.Exponential(""a"", 1.0)
    b = pm.InverseGamma(""b"", 0.5, 0.5)
    x = pm.Normal(""x"", a, b)

# Evaluate the log-likelihood in JAX!
model.logp(model.test_point)
```
The output should look similar to the following:
```python
/home/bwillard/apps/anaconda3/envs/theano-36/lib/python3.7/site-packages/jax/lax/lax.py:5905: UserWarning: Explicitly requested dtype float64 requested in array is not available, and will be truncated to dtype float32. To enable more dtypes, set the jax_enable_x64 configuration option or the JAX_ENABLE_X64 shell environment variable. See https://github.com/google/jax#current-gotchas for more.
  warnings.warn(msg.format(dtype, fun_name , truncated_dtype))
/home/bwillard/apps/anaconda3/envs/theano-36/lib/python3.7/site-packages/jax/lax/lax.py:5905: UserWarning: Explicitly requested dtype float64 requested in astype is not available, and will be truncated to dtype float32. To enable more dtypes, set the jax_enable_x64 configuration option or the JAX_ENABLE_X64 shell environment variable. See https://github.com/google/jax#current-gotchas for more.
  warnings.warn(msg.format(dtype, fun_name , truncated_dtype))
Out[37]: DeviceArray(-2.749619, dtype=float32)
```",enhancement,twiecki,brandonwillard,2020-07-31 22:06:43,2020-09-27 08:54:42,requirements.txt tests/sandbox/test_jax.py theano/tensor/basic.py theano/tensor/opt_uncanonicalize.py theano/sandbox/jaxify.py theano/tensor/elemwise.py theano/scalar/basic.py theano/sandbox/jax_linker.py theano/configdefaults.py theano/tensor/nnet/sigm.py theano/compile/mode.py .travis.yml,8a8c7e7d0c3282abff4a843011cd58fc4231d63c 02c02d728be6c568e87566922f3ff605a0486133 1f3b41c87df3979903df465071ab7c7d391bd7f7 a62dec23aa2f014c58485664da17df02e60a7fc9 b2a5bd9b1bc65795491cefa793ef5af2be0d4164 80d8a0ef3f10882511caec15a0b0359bd8c1b8a4 0e4bf69b9066885c820ffdc2242ba8738d0512ba 54678486997e9ef6a1ccd34b75e58a8015bb007c,"brandonwillard labeled 2020-07-31 22:06:43,brandonwillard assigned 2020-07-31 22:06:43,brandonwillard head_ref_force_pushed 2020-07-31 22:08:53,brandonwillard connected 2020-07-31 22:19:41,brandonwillard head_ref_force_pushed 2020-07-31 22:37:24,brandonwillard head_ref_force_pushed 2020-08-02 19:08:52,brandonwillard head_ref_force_pushed 2020-08-02 19:13:08,brandonwillard head_ref_force_pushed 2020-08-03 00:38:34,brandonwillard head_ref_force_pushed 2020-08-05 16:11:06,brandonwillard head_ref_force_pushed 2020-08-05 18:24:10,brandonwillard head_ref_force_pushed 2020-08-05 20:11:05,brandonwillard head_ref_force_pushed 2020-08-05 21:20:22,brandonwillard head_ref_force_pushed 2020-08-05 21:27:18,brandonwillard head_ref_force_pushed 2020-08-06 02:40:21,brandonwillard head_ref_force_pushed 2020-08-15 18:58:29,brandonwillard head_ref_force_pushed 2020-08-15 19:11:12,brandonwillard head_ref_force_pushed 2020-08-15 19:26:22,brandonwillard head_ref_force_pushed 2020-08-15 20:02:29,brandonwillard head_ref_force_pushed 2020-08-15 20:08:28,brandonwillard head_ref_force_pushed 2020-08-17 15:21:50,brandonwillard head_ref_force_pushed 2020-08-17 19:34:12,brandonwillard head_ref_force_pushed 2020-08-17 23:48:48,brandonwillard head_ref_force_pushed 2020-08-18 14:46:34,brandonwillard head_ref_force_pushed 2020-08-18 18:17:50,brandonwillard head_ref_force_pushed 2020-09-24 20:08:41,brandonwillard head_ref_force_pushed 2020-09-25 04:32:22,brandonwillard head_ref_force_pushed 2020-09-25 23:21:24,brandonwillard head_ref_force_pushed 2020-09-26 00:05:43,brandonwillard head_ref_force_pushed 2020-09-26 05:05:18,twiecki ready_for_review 2020-09-26 12:30:39,brandonwillard review_dismissed 2020-09-26 23:23:12,brandonwillard head_ref_force_pushed 2020-09-26 23:23:12,brandonwillard head_ref_force_pushed 2020-09-27 03:29:21,brandonwillard head_ref_force_pushed 2020-09-27 03:53:00,twiecki referenced 2020-09-27 08:54:41,twiecki merged 2020-09-27 08:54:41,twiecki closed 2020-09-27 08:54:42,brandonwillard referenced 2020-09-29 16:36:15,brandonwillard head_ref_deleted 2020-10-19 20:58:53",junpenglao twiecki brandonwillard,9,True
12,22,Refactor Travis config and add Coveralls,brandonwillard,"This PR adds Coveralls to the Travis setup and does some refactoring/simplification in anticipation of a potential move to GitHub Actions.

- [x] Move tests to a separate `tests` directory (this should help focus the coverage analysis to only the code, without having to set up a bunch of test directory and filename filters)",,twiecki,,2020-07-31 22:59:46,2020-08-02 18:21:57,tests/gof/test_link.py theano/tensor/subtensor.py tests/gpuarray/test_nnet.py tests/compile/test_builders.py theano/compile/ops.py theano/gof/utils.py tests/sandbox/multinomial_test_graph.pkl tests/gof/test_compute_test_value.py doc/extending/extending_theano.txt tests/d3viz/__init__.py doc/library/sparse/index.txt theano/gof/vm.py theano/d3viz/d3viz.py tests/d3viz/models.py tests/misc/__init__.py theano/misc/strutil.py theano/scan_module/scan_opt.py tests/tensor/nnet/test_corr.py doc/tutorial/examples.txt .travis/travis_install.sh tests/sparse/test_basic.py tests/gof/c_code/test_quadratic_function.c tests/tensor/_test_mpi_roundtrip.py tests/gpuarray/c_code/tstgpueye.c tests/gof/test_cmodule.py tests/gpuarray/test_fft.py tests/tensor/signal/test_conv.py tests/gof/test_destroyhandler.py tests/tensor/test_mlp.py tests/__init__.py tests/tensor/test_keepdims.py tests/gof/test_optdb.py tests/sparse/test_type.py tests/tensor/test_xlogx.py tests/test_rop.py theano/tensor/basic.py theano/gof/op.py tests/gpuarray/test_subtensor.py README.rst theano/tensor/extra_ops.py tests/typed_list/__init__.py tests/typed_list/test_basic.py theano/gpuarray/opt.py theano/tensor/nnet/conv.py theano/scan_module/scan_op.py tests/tensor/test_raw_random.py tests/tensor/test_blas_c.py tests/gpuarray/test_ctc.py theano/sandbox/linalg/ops.py theano/sandbox/fourier.py tests/gpuarray/test_basic_ops.py theano/tensor/elemwise.py tests/gof/test_compiledir.py tests/tensor/nnet/test_blocksparse.py tests/unittest_tools.py theano/misc/hooks/reindent.py tests/gof/test_utils.py tests/tensor/test_utils.py tests/gpuarray/test_linalg.py tests/d3viz/test_d3viz.py tests/gpuarray/test_pool.py tests/compile/test_ops.py tests/scan_module/__init__.py theano/gradient.py tests/compile/test_function_module.py tests/record.py tests/tensor/nnet/test_neighbours.py tests/tensor/test_inc_subtensor.py tests/tensor/test_sort.py theano/misc/check_duplicate_key.py theano/sparse/sandbox/sp2.py tests/tensor/nnet/test_abstract_conv.py doc/crei2013/ifelse_switch.py theano/compile/function_module.py theano/gof/link.py theano/gof/cc.py theano/updates.py tests/gpuarray/test_extra_ops.py tests/sparse/test_opt.py theano/compile/pfunc.py theano/compile/profiling.py tests/gof/c_code/test_cenum.h tests/gpuarray/test_rng_mrg.py theano/tensor/nnet/opt.py theano/tensor/utils.py theano/gpuarray/elemwise.py tests/gpuarray/test_cgpukernelbase.py theano/gpuarray/type.py theano/misc/ordered_set.py theano/gof/fg.py tests/tensor/nnet/test_ctc.py tests/gpuarray/test_opt.py doc/extending/extending_theano_solution_1.py tests/tensor/test_misc.py tests/tensor/test_io.py theano/tensor/var.py theano/tensor/nnet/neighbours.py tests/gpuarray/config.py tests/breakpoint.py tests/gpuarray/test_dnn.py tests/gpuarray/test_pickle.py tests/sparse/__init__.py tests/tensor/nnet/speed_test_conv.py tests/test_gradient.py tests/scan_module/test_scan_checkpoints.py tests/typed_list/test_opt.py doc/cifarSC2011/introduction.txt theano/d3viz/formatting.py tests/compile/test_modes.py tests/gpuarray/GpuArray.pkl tests/gpuarray/test_scan.py tests/gpuarray/__init__.py tests/scalar/test_basic.py tests/tensor/test_mpi.py theano/tensor/elemwise_cgen.py tests/compile/test_misc.py theano/sparse/sandbox/truedot.py doc/tutorial/loop_solution_1.py tests/gof/test_vm.py theano/scalar/tests/test_div_future.py doc/tutorial/logistic.gp tests/gof/test_sched.py tests/test_breakpoint.py tests/tensor/test_gc.py doc/introduction.txt tests/sandbox/test_multinomial_wo_replacement.py tests/tensor/test_type_other.py tests/gpuarray/test_type.py tests/gof/test_toolbox.py tests/tensor/test_fft.py tests/tensor/test_nlinalg.py tests/gpuarray/test_gemmcorr.py tests/tensor/nnet/test_bn.py tests/tensor/test_subtensor.py tests/tensor/test_var.py tests/test_config.py doc/sandbox/logistic_regression_example.txt tests/compile/__init__.py theano/gpuarray/subtensor.py tests/test_pickle_unpickle_theano_fn.py theano/scalar/basic.py theano/__init__.py tests/gof/__init__.py tests/compile/test_function_name.py theano/sparse/sandbox/sp.py tests/tensor/__init__.py tests/gpuarray/test_abstractconv.py doc/hpcs2011_tutorial/scan_pow.py tests/compile/test_monitormode.py tests/sparse/sandbox/test_sp.py tests/misc/test_may_share_memory.py tests/scan_module/test_scan.py tests/tensor/nnet/test_nnet.py tests/gof/test_opt.py tests/sandbox/linalg/__init__.py tests/tensor/test_elemwise.py tests/gof/test_op.py tests/sandbox/test_rng_mrg.py theano/tensor/nnet/nnet.py tests/gof/test_fg.py tests/tensor/nnet/test_corr3d.py theano/gof/unify.py .travis.yml tests/sparse/test_utils.py doc/crei2013/scan_pow.py theano/tensor/raw_random.py tests/test_updates.py doc/library/tests.txt theano/configparser.py tests/gof/test_graph.py tests/sparse/sandbox/__init__.py doc/tutorial/gradients.txt tests/compile/test_profiling.py doc/tutorial/modes.txt theano/compile/debugmode.py tests/test_determinism.py tests/tensor/signal/old_pool_interface.pkl tests/sandbox/test_multinomial.py tests/d3viz/test_formatting.py tests/gpuarray/rnn_support.py tests/gof/test_types.py tests/tensor/nnet/test_conv3d2d.py tests/gpuarray/test_reduction.py tests/sandbox/linalg/test_linalg.py tests/tensor/test_blas_scipy.py theano/gof/compilelock.py theano/sparse/basic.py theano/compat/__init__.py tests/gpuarray/test_gpuarray_multinomial_wo_replacement.pkl tests/gof/test_fg_old_crash.pkl tests/typed_list/test_type.py tests/gof/test_graph_opt_caching.py theano/tensor/opt.py theano/gpuarray/basic_ops.py tests/tensor/test_opt.py tests/gof/test_lazy.py theano/gof/opt.py theano/scan_module/scan_utils.py doc/extending/other_ops.txt tests/gpuarray/test_others.py tests/test_dictionary_output.py tests/compile/test_debugmode.py tests/gpuarray/run_dnn_conv.py tests/tensor/test_merge.py tests/compile/test_shared.py theano/gof/sched.py tests/tensor/test_shared_randomstreams.py tests/gpuarray/test_blas.py tests/sandbox/test_minimal.py tests/sparse/test_sp2.py conda/meta.yaml tests/tensor/test_slinalg.py tests/gpuarray/test_elemwise.py tests/scalar/__init__.py tests/gof/test_params_type.py tests/tensor/signal/__init__.py tests/tensor/test_blas.py tests/gpuarray/test_blocksparse.py theano/tensor/nnet/abstract_conv.py tests/test_2nd_order_grads.py theano/tensor/signal/pool.py tests/gpuarray/test_sort.py tests/compile/test_function.py doc/extending/fibby.txt tests/scan_module/test_scan_opt.py tests/diverse_tests.py doc/tutorial/debug_faq.txt tests/tensor/test_basic.py tests/tensor/test_opt_uncanonicalize.py theano/ifelse.py theano/tensor/nnet/sigm.py tests/tensor/test_complex.py theano/gof/graph.py tests/gpuarray/test_gemmcorr3d.py theano/gof/cmodule.py tests/scalar/test_basic_sympy.py tests/disturb_mem.py setup.cfg tests/tensor/signal/test_pool.py doc/extending/unittest.txt tests/test_printing.py theano/gof/compiledir.py theano/gpuarray/dnn.py tests/tensor/nnet/test_sigm.py theano/tensor/blas.py tests/gpuarray/test_multinomial.py theano/sandbox/rng_mrg.py theano/misc/elemwise_time_test.py theano/scan_module/scan.py tests/gof/test_cc.py theano/tensor/nlinalg.py tests/compile/test_mode.py tests/tensor/nnet/__init__.py tests/tensor/test_extra_ops.py theano/gof/destroyhandler.py tests/gpuarray/test_neighbours.py theano/printing.py tests/test_record.py tests/sandbox/test_sandbox_multinomial_wo_replacement.pkl theano/tensor/nnet/corr3d.py tests/tensor/test_sharedvar.py theano/compile/builders.py tests/sandbox/__init__.py tests/tensor/nnet/test_opt.py theano/gof/type.py theano/gpuarray/tests/test_sort.py tests/gpuarray/check_dnn_conv.py theano/scalar/tests/test_div_no_future.py tests/compile/test_pfunc.py tests/test_ifelse.py theano/sparse/opt.py tests/tensor/test_casting.py doc/crei2013/introduction.txt theano/tensor/slinalg.py tests/misc/test_pkl_utils.py tests/gpuarray/test_misc.py tests/tensor/test_fourier.py tests/scan_module/test_scan_utils.py tests/compile/test_nanguardmode.py tests/tensor/nnet/test_conv.py .travis/travis_before_install.sh,dd44d9e3fce94e851b4edcf31e83b6a83ba5e421 b6166d69fd80f5a72a2fa882ca429749b9bb6abc 0a906d707f36307e2e712c302b7cf53ef6311469 63e5dd7392846e7ba073ca8699f4ed721d4e7872 311feb67a04cadc79a68b74459bd9cc4b8aff5e4 11c78375001575ec20928573d641e0a17ee1cbb2,"brandonwillard head_ref_force_pushed 2020-07-31 23:06:47,brandonwillard renamed 2020-07-31 23:13:32,brandonwillard connected 2020-07-31 23:13:57,brandonwillard head_ref_force_pushed 2020-08-01 07:26:56,brandonwillard head_ref_force_pushed 2020-08-01 19:19:51,brandonwillard head_ref_force_pushed 2020-08-01 19:29:04,brandonwillard head_ref_force_pushed 2020-08-01 20:34:34,brandonwillard head_ref_force_pushed 2020-08-01 21:43:26,brandonwillard head_ref_force_pushed 2020-08-01 22:59:44,brandonwillard head_ref_force_pushed 2020-08-02 01:18:29,brandonwillard head_ref_force_pushed 2020-08-02 05:16:53,brandonwillard head_ref_force_pushed 2020-08-02 05:18:08,brandonwillard head_ref_force_pushed 2020-08-02 06:58:46,brandonwillard head_ref_force_pushed 2020-08-02 16:42:58,brandonwillard connected 2020-08-02 18:13:57,brandonwillard referenced 2020-08-02 18:21:57,brandonwillard merged 2020-08-02 18:21:57,brandonwillard closed 2020-08-02 18:21:57,brandonwillard head_ref_deleted 2020-08-02 19:04:38",twiecki brandonwillard,0,True
13,27,Allow single dimension slices in mgrid and ogrid,brandonwillard,"----

This PR improves compatibility with NumPy's `mgrid` and `ogrid` by allowing single dimension slices (e.g.  `ogrid[:5]`).",,twiecki,,2020-08-21 15:35:44,2020-08-24 04:06:36,tests/tensor/test_basic.py theano/tensor/basic.py,8e9da14fd508fa7c62f5341defcd094d8ef1c54d,"brandonwillard head_ref_force_pushed 2020-08-21 21:21:01,brandonwillard referenced 2020-08-24 04:06:36,brandonwillard merged 2020-08-24 04:06:36,brandonwillard closed 2020-08-24 04:06:36,brandonwillard head_ref_deleted 2020-08-24 04:06:40",twiecki brandonwillard,0,True
14,28,Generalize the type interface to tensor.zeros,brandonwillard,"This PR allows all sequence/array types as arguments to `tt.zeros` and `tt.ones`.  For example, with these changes one can now pass NumPy arrays as the shape argument to both functions, and prevents reasonable expectations like this from raising cryptic exceptions.",enhancement,twiecki,brandonwillard,2020-08-24 05:39:24,2020-08-28 15:25:41,tests/tensor/test_basic.py theano/tensor/basic.py,8d90c272d3b2a8e497e36bb7a0fa405be027430d,"brandonwillard assigned 2020-08-24 05:39:29,brandonwillard labeled 2020-08-24 05:39:36,brandonwillard review_dismissed 2020-08-28 01:46:21,brandonwillard head_ref_force_pushed 2020-08-28 01:46:21,brandonwillard head_ref_force_pushed 2020-08-28 15:24:58,brandonwillard referenced 2020-08-28 15:25:41,brandonwillard merged 2020-08-28 15:25:41,brandonwillard closed 2020-08-28 15:25:41,brandonwillard head_ref_deleted 2020-08-28 15:25:45",twiecki brandonwillard,0,True
15,30,use sphinx section names,OriolAbril,"Every time I build the documentation for pymc3 I get warnings about unrecognized sections ""Note"" and ""Example"" referring to elemwise... and other theano objects. Not sure this is the reason but I think it's worth trying. It should also fix the warnings when building theano docs in case we ever have to build them.",,twiecki,,2020-08-27 04:08:30,2020-08-28 15:23:21,theano/gof/cmodule.py theano/compile/nanguardmode.py theano/tensor/slinalg.py theano/gradient.py theano/compile/ops.py theano/tensor/basic.py theano/gpuarray/dnn.py theano/gof/op.py theano/scan_module/scan_utils.py theano/tensor/elemwise.py theano/gof/graph.py theano/gof/link.py,1950538581c58ec92ce9e7056d4c4641d3760816,"OriolAbril review_dismissed 2020-08-28 04:52:44,brandonwillard referenced 2020-08-28 15:23:21,brandonwillard merged 2020-08-28 15:23:21,brandonwillard closed 2020-08-28 15:23:21,OriolAbril head_ref_deleted 2020-08-28 15:42:41",twiecki OriolAbril brandonwillard,2,True
16,31,Update setup and black,brandonwillard,This PR refactors the package setup and testing so that it uses `requirements.txt` and pins the version of `black`.,,,brandonwillard,2020-08-27 22:28:12,2020-08-28 01:44:14,requirements.txt theano/tensor/nnet/abstract_conv.py theano/tensor/signal/pool.py tests/tensor/test_blas.py tests/gpuarray/test_rng_mrg.py theano/tensor/nnet/opt.py tests/sparse/sandbox/test_sp.py requirements-rtd.txt tests/scan_module/test_scan.py theano/gpuarray/ctc.py theano/ifelse.py theano/gof/vm.py tests/tensor/test_basic.py theano/tensor/nnet/nnet.py tests/tensor/test_elemwise.py tests/sandbox/test_rng_mrg.py theano/configdefaults.py theano/compile/mode.py theano/gof/graph.py setup.py .travis.yml theano/gof/cmodule.py tests/sparse/test_basic.py tests/gof/test_graph.py theano/tensor/blas_c.py tests/gpuarray/test_dnn.py tests/tensor/signal/test_pool.py tests/tensor/signal/test_conv.py tests/tensor/test_mlp.py theano/tensor/basic.py theano/gof/op.py tests/test_determinism.py theano/tensor/blas.py tests/test_rop.py tests/gpuarray/test_scan.py theano/sparse/basic.py doc/install_generic.inc theano/compat/__init__.py theano/tensor/nlinalg.py theano/tensor/nnet/conv.py theano/scan_module/scan_op.py theano/tensor/opt.py tests/tensor/test_blas_c.py tests/tensor/test_opt.py tests/tensor/test_extra_ops.py theano/printing.py theano/scan_module/scan_checkpoints.py theano/tensor/elemwise.py theano/tensor/fourier.py tests/tensor/nnet/test_blocksparse.py theano/gpuarray/linalg.py tests/compile/test_debugmode.py theano/sparse/opt.py tests/tensor/test_subtensor.py theano/tensor/slinalg.py theano/gradient.py theano/raise_op.py tests/compile/test_function_module.py tests/tensor/test_inc_subtensor.py theano/gpuarray/subtensor.py tests/tensor/nnet/test_abstract_conv.py .gitignore,771eb470f542ed635f16e1b5d10e79e69dcb33df 5c7811a2fa0761fb9c5b918b06c0f7745211bd94,"brandonwillard assigned 2020-08-27 22:28:13,brandonwillard head_ref_force_pushed 2020-08-27 22:44:58,brandonwillard head_ref_force_pushed 2020-08-27 22:50:32,brandonwillard head_ref_force_pushed 2020-08-27 22:56:30,brandonwillard referenced 2020-08-28 01:44:14,brandonwillard merged 2020-08-28 01:44:14,brandonwillard closed 2020-08-28 01:44:14,brandonwillard head_ref_deleted 2020-08-28 01:44:19",brandonwillard,0,True
17,32,remove sigmoid optimization for extreme values,bridgeland,the sigmoid optimization was inaccurate for z > 19,,twiecki dfm brandonwillard,brandonwillard,2020-08-28 20:07:14,2020-09-16 08:45:23,requirements.txt theano/tensor/nnet/abstract_conv.py theano/tensor/signal/pool.py tests/tensor/test_blas.py tests/gpuarray/test_rng_mrg.py theano/tensor/nnet/opt.py tests/sparse/sandbox/test_sp.py theano/compile/ops.py requirements-rtd.txt tests/scan_module/test_scan.py theano/gpuarray/ctc.py theano/ifelse.py theano/gof/vm.py tests/tensor/test_basic.py theano/tensor/nnet/nnet.py tests/tensor/test_elemwise.py tests/sandbox/test_rng_mrg.py theano/configdefaults.py theano/tensor/nnet/sigm.py theano/compile/mode.py theano/gof/graph.py setup.py .travis.yml theano/gof/cmodule.py tests/sparse/test_basic.py tests/gof/test_graph.py theano/tensor/blas_c.py tests/gpuarray/test_dnn.py tests/tensor/signal/test_pool.py tests/tensor/signal/test_conv.py theano/tensor/basic.py tests/tensor/test_mlp.py theano/gpuarray/dnn.py theano/gof/op.py tests/test_determinism.py tests/tensor/nnet/test_sigm.py theano/tensor/blas.py tests/test_rop.py tests/gpuarray/test_scan.py theano/tensor/extra_ops.py theano/sparse/basic.py doc/install_generic.inc theano/compat/__init__.py theano/tensor/nlinalg.py theano/tensor/nnet/conv.py theano/scan_module/scan_op.py theano/tensor/opt.py tests/tensor/test_blas_c.py tests/tensor/test_opt.py tests/tensor/test_extra_ops.py theano/printing.py theano/scan_module/scan_checkpoints.py theano/scan_module/scan_utils.py theano/tensor/elemwise.py theano/tensor/fourier.py tests/tensor/nnet/test_blocksparse.py theano/gpuarray/linalg.py tests/compile/test_debugmode.py theano/sparse/opt.py tests/tensor/test_subtensor.py theano/tensor/slinalg.py theano/gradient.py theano/raise_op.py theano/compile/nanguardmode.py tests/compile/test_function_module.py tests/tensor/test_inc_subtensor.py theano/gpuarray/subtensor.py tests/tensor/nnet/test_abstract_conv.py .gitignore theano/gof/link.py,ddfbde2d03061dead7190a99b78c7cef7896bd04 297117009f74a7b958f38950eb0f8ca05b003bea f4b95e639b02bb48ffb93a2b71ec45153379ea47 9ad724eeb7641d8692e3bdba336dd20e2b581a9e 4d749980ddfc5734c6758ccd0194f42ba620c2ae ab9971b3b2b1fea86afdb65eec8114b0cd72a3e0 8b484957a7837fb781cff9789d15ee6331194acc e05a39971f9986074215e475d056b7e286f581db,"brandonwillard connected 2020-08-28 20:35:51,dfm mentioned 2020-08-31 11:08:19,dfm subscribed 2020-08-31 11:08:19,bridgeland mentioned 2020-08-31 11:26:59,bridgeland subscribed 2020-08-31 11:26:59,bridgeland head_ref_force_pushed 2020-09-01 21:52:10,brandonwillard mentioned 2020-09-01 22:01:09,brandonwillard subscribed 2020-09-01 22:01:09,brandonwillard mentioned 2020-09-02 23:35:59,brandonwillard subscribed 2020-09-02 23:35:59,dfm mentioned 2020-09-04 12:32:39,dfm subscribed 2020-09-04 12:32:39,brandonwillard mentioned 2020-09-04 12:32:39,brandonwillard subscribed 2020-09-04 12:32:39,bridgeland mentioned 2020-09-04 18:59:24,bridgeland subscribed 2020-09-04 18:59:24,brandonwillard mentioned 2020-09-04 19:48:05,brandonwillard subscribed 2020-09-04 19:48:05,bridgeland head_ref_force_pushed 2020-09-04 21:20:52,bridgeland head_ref_force_pushed 2020-09-04 22:19:59,bridgeland head_ref_force_pushed 2020-09-06 13:09:10,twiecki mentioned 2020-09-06 13:12:06,twiecki subscribed 2020-09-06 13:12:06,brandonwillard convert_to_draft 2020-09-06 21:27:37,bridgeland head_ref_force_pushed 2020-09-07 10:55:25,brandonwillard mentioned 2020-09-07 11:32:17,brandonwillard subscribed 2020-09-07 11:32:17,brandonwillard mentioned 2020-09-07 12:24:51,brandonwillard subscribed 2020-09-07 12:24:51,dfm mentioned 2020-09-09 11:13:46,dfm subscribed 2020-09-09 11:13:46,twiecki mentioned 2020-09-09 11:13:46,twiecki subscribed 2020-09-09 11:13:46,brandonwillard mentioned 2020-09-09 11:13:46,brandonwillard subscribed 2020-09-09 11:13:46,aseyboldt mentioned 2020-09-09 11:56:43,aseyboldt subscribed 2020-09-09 11:56:43,bridgeland mentioned 2020-09-09 16:57:41,bridgeland subscribed 2020-09-09 16:57:41,bridgeland mentioned 2020-09-09 17:40:11,bridgeland subscribed 2020-09-09 17:40:11,brandonwillard mentioned 2020-09-09 19:15:11,brandonwillard subscribed 2020-09-09 19:15:11,bridgeland head_ref_force_pushed 2020-09-09 21:27:07,bridgeland head_ref_force_pushed 2020-09-09 22:46:23,bridgeland head_ref_force_pushed 2020-09-10 12:09:25,brandonwillard mentioned 2020-09-10 15:39:56,brandonwillard subscribed 2020-09-10 15:39:56,dfm mentioned 2020-09-14 20:44:37,dfm subscribed 2020-09-14 20:44:37,twiecki mentioned 2020-09-14 20:44:37,twiecki subscribed 2020-09-14 20:44:37,brandonwillard mentioned 2020-09-14 20:44:37,brandonwillard subscribed 2020-09-14 20:44:37,aseyboldt mentioned 2020-09-14 20:44:37,aseyboldt subscribed 2020-09-14 20:44:38,twiecki ready_for_review 2020-09-15 09:08:22,brandonwillard assigned 2020-09-15 09:08:55,dfm mentioned 2020-09-15 09:09:56,dfm subscribed 2020-09-15 09:09:56,brandonwillard mentioned 2020-09-15 09:09:56,brandonwillard subscribed 2020-09-15 09:09:56,bridgeland mentioned 2020-09-15 09:09:56,bridgeland subscribed 2020-09-15 09:09:56,bridgeland review_requested 2020-09-15 11:49:30,bridgeland review_dismissed 2020-09-15 19:31:32,bridgeland review_dismissed 2020-09-15 19:31:32,bridgeland head_ref_force_pushed 2020-09-15 19:31:32,twiecki referenced 2020-09-16 08:45:23,twiecki merged 2020-09-16 08:45:23,twiecki closed 2020-09-16 08:45:23",brandonwillard aseyboldt dfm bridgeland twiecki,49,True
18,35,Add axis argument to squeeze,brandonwillard,Add NumPy's `axis` argument to `theano.tensor.squeeze`.,,,brandonwillard,2020-09-06 23:52:06,2020-09-07 19:21:02,theano/tensor/extra_ops.py tests/tensor/test_extra_ops.py,08583e19e23a0dc004eae0e4e654c4e3170eb0b4,"brandonwillard assigned 2020-09-06 23:52:07,brandonwillard head_ref_force_pushed 2020-09-07 02:38:07,brandonwillard referenced 2020-09-07 19:21:02,brandonwillard merged 2020-09-07 19:21:02,brandonwillard closed 2020-09-07 19:21:02,brandonwillard head_ref_deleted 2020-09-07 19:21:07",brandonwillard,0,True
19,38,Fixing ResourceWarning on macOS,dfm,"Recently Theano has started emitting a `ResourceWarning` on import on macOS. This can be reproduced by running the following:

```bash
python -Werror::ResourceWarning -c 'import theano'
```

in a clean environment with the GitHub version of Theano-PyMC on macOS. This will produce the following error:

```python
Traceback (most recent call last):
  File ""/Users/dforeman/miniconda3/envs/theano/lib/python3.8/subprocess.py"", line 942, in __del__
    _warn(""subprocess %s is still running"" % self.pid,
ResourceWarning: subprocess 56159 is still running
Exception ignored in: <_io.FileIO name=4 mode='rb' closefd=True>
Traceback (most recent call last):
  File ""/Users/dforeman/src/pymc-devs/Theano-PyMC/theano/misc/cpucount.py"", line 48, in cpuCount
    num = int(os.popen(""sysctl -n hw.ncpu"").read())
ResourceWarning: unclosed file <_io.TextIOWrapper name=4 encoding='UTF-8'>
```

This pull request simplifies the `cpuCount` code which I think is fine since we don't support Python 2.4 anymore :D ",,brandonwillard,,2020-09-15 21:17:21,2020-09-16 01:28:09,theano/misc/cpucount.py,336f42a7fe1e5c6494a01fbe8498788868a9ed5c 9dfcb0676ee8a4dda46e3be5c68bfea729172b91,"dfm review_requested 2020-09-15 21:17:56,brandonwillard mentioned 2020-09-15 22:31:32,brandonwillard subscribed 2020-09-15 22:31:32,brandonwillard referenced 2020-09-16 01:28:09,brandonwillard merged 2020-09-16 01:28:09,brandonwillard closed 2020-09-16 01:28:09",dfm brandonwillard,1,True
20,39,Fix subtensor shape inference,brandonwillard,"This PR adds generic shape inference for basic and advanced NumPy indexing on Theano tensors.

Note: the boolean case isn't covered, yet.",,,brandonwillard,2020-09-16 18:06:24,2020-10-12 02:42:00,requirements.txt conftest.py theano/tensor/subtensor.py theano/compile/ops.py theano/_version.py tests/scan_module/test_scan.py tests/gof/test_compute_test_value.py tests/tensor/test_basic.py theano/gof/fg.py Makefile theano/scan_module/scan_opt.py theano/gof/graph.py tests/gof/test_fg.py theano/gof/cmodule.py theano/gof/toolbox.py theano/tensor/var.py tests/gof/test_graph.py tests/tensor/test_var.py tests/test_printing.py theano/tensor/basic.py tests/tensor/nnet/test_sigm.py theano/tensor/extra_ops.py theano/scan_module/scan_op.py theano/tensor/opt.py tests/tensor/test_opt.py tests/tensor/test_extra_ops.py theano/gof/opt.py theano/scan_module/scan_utils.py theano/compile/builders.py tests/gof/test_toolbox.py tests/tensor/test_subtensor.py tests/scan_module/test_scan_utils.py theano/__init__.py theano/compile/function_module.py theano/gof/__init__.py,7857774b6a4daafa584a8303543b42201dbbd17e adfeaaf4f0bea66f981f9e3dc9e8a69a3fc768c9 84a88de8006d5cba2b1f690d15b8406ce7f6c902 a9e8c7c383cf36b07006dd909328e0f14b49e29a 25defabd1c3df7d77a206ad36a2cdad3aae69327 6a2259f42adee0bb01dafe7e0993afbe9dbb18c3 b210efbcd2b90d844d4fbdd546cd47212d967f20 82c2f79deac5653686cb25f031330ce08784c7fe f14d4799ad2f4f12299324f76450c3966add9574 1ff98d25678949c51e1522a9de2d7cd0fe2b59cc 7bccd317592b99709bb612404673060658f93ca6 24b8bc2806d5be550fc35179d6a287810f80b9f0 eaf1470903f3ac096b1d8b218697913ca52327aa 93fa2ff5854481756a7c92f667a252bb60d090e6 b99dea2f940077c70d621a4afdf3396427c845f2 0e0f613fe05bcdf3c5ee8f335951c95e1006e270 73d798abcef643d627f853a4f92fa2dcf41a561d 1c730796706cb3457f9de5dba56989e010ce7b33 e842fd19cce0c21f944f3ac0b3550898105612ee 6d55c43bb3f84bde7edfa015471713a717d187cd 8036b1429f4acfe90b20db426ad1055ad9e90028 100823568dd677c7ec69c8e755170df58dd61ed6,"brandonwillard assigned 2020-09-16 18:06:30,brandonwillard convert_to_draft 2020-09-16 20:14:39,brandonwillard head_ref_force_pushed 2020-09-17 00:56:44,brandonwillard head_ref_force_pushed 2020-09-17 01:16:44,brandonwillard head_ref_force_pushed 2020-09-17 15:54:01,brandonwillard head_ref_force_pushed 2020-09-19 02:51:40,brandonwillard head_ref_force_pushed 2020-09-19 02:53:45,brandonwillard head_ref_force_pushed 2020-09-19 02:56:36,brandonwillard head_ref_force_pushed 2020-09-19 03:02:40,brandonwillard head_ref_force_pushed 2020-09-19 19:20:06,brandonwillard head_ref_force_pushed 2020-09-21 02:45:21,brandonwillard connected 2020-09-26 00:30:58,brandonwillard head_ref_force_pushed 2020-09-29 07:06:39,brandonwillard head_ref_force_pushed 2020-09-29 07:08:06,brandonwillard head_ref_force_pushed 2020-09-29 17:07:55,brandonwillard head_ref_force_pushed 2020-10-05 03:17:19,brandonwillard disconnected 2020-10-05 04:43:26,brandonwillard head_ref_force_pushed 2020-10-05 06:22:50,brandonwillard head_ref_force_pushed 2020-10-11 06:47:42,brandonwillard head_ref_force_pushed 2020-10-11 06:52:19,brandonwillard head_ref_force_pushed 2020-10-11 18:15:33,brandonwillard head_ref_force_pushed 2020-10-11 20:53:58,brandonwillard head_ref_force_pushed 2020-10-11 21:00:35,brandonwillard head_ref_force_pushed 2020-10-11 21:21:35,brandonwillard head_ref_force_pushed 2020-10-11 21:37:37,brandonwillard head_ref_force_pushed 2020-10-11 22:43:13,brandonwillard head_ref_force_pushed 2020-10-11 22:50:37,brandonwillard head_ref_force_pushed 2020-10-12 00:44:24,brandonwillard ready_for_review 2020-10-12 01:21:42,brandonwillard referenced 2020-10-12 02:41:59,brandonwillard merged 2020-10-12 02:41:59,brandonwillard closed 2020-10-12 02:42:00,brandonwillard head_ref_deleted 2020-10-12 02:42:04",twiecki brandonwillard,4,True
21,40,Prevent sigmoid test from failing with acceptable floating point errors,brandonwillard,This PR adjusts the epsilon error threshold for a sigmoid `Op` test that's currently failing (introduced by #32).  The error is within an acceptable range&mdash;at least until someone determines that the number of significant digits should be higher.,bug,,brandonwillard,2020-09-17 01:11:40,2020-09-17 03:09:16,tests/tensor/nnet/test_sigm.py,a7742cbbc7ea59a0e7f590773532b65102f0e37c,"brandonwillard assigned 2020-09-17 01:11:45,brandonwillard labeled 2020-09-17 01:11:50,brandonwillard referenced 2020-09-17 03:09:16,brandonwillard merged 2020-09-17 03:09:16,brandonwillard closed 2020-09-17 03:09:16,brandonwillard head_ref_deleted 2020-09-17 03:09:20",brandonwillard,0,True
22,44,Don't run coveralls after style checks in Travis,brandonwillard,This PR removes the unnecessary (and probably confounding) step of running `coveralls` after the linting/style checking job in Travis.,,,brandonwillard,2020-09-26 00:11:36,2020-09-26 02:55:54,.travis.yml,a49d621cf83ca95991a57267082a79466c30cac4,"brandonwillard assigned 2020-09-26 00:11:37,brandonwillard head_ref_force_pushed 2020-09-26 00:16:53,brandonwillard referenced 2020-09-26 02:55:54,brandonwillard merged 2020-09-26 02:55:54,brandonwillard closed 2020-09-26 02:55:54,brandonwillard head_ref_deleted 2020-09-26 02:55:58",brandonwillard,0,True
23,48,Add Identity Jaxify,junpenglao,,,twiecki,,2020-09-27 10:22:41,2020-09-29 08:49:26,theano/sandbox/jaxify.py,9ab73458b2fa91fc9df5f7c7174bed44e71f0152 334e906c94e68e0880c139ea184ce06fddfe87ab,"junpenglao review_requested 2020-09-27 10:30:19,twiecki mentioned 2020-09-29 08:44:25,twiecki subscribed 2020-09-29 08:44:25,twiecki referenced 2020-09-29 08:49:25,twiecki merged 2020-09-29 08:49:26,twiecki closed 2020-09-29 08:49:26,junpenglao mentioned 2020-09-29 08:49:50,junpenglao subscribed 2020-09-29 08:49:51,junpenglao head_ref_deleted 2020-09-29 08:51:56,brandonwillard referenced 2020-09-29 14:07:20",junpenglao twiecki brandonwillard,7,True
24,50,"Add ExtractDiag, Cholesky, and Solve Ops to jaxification",twiecki,Closes #49.,,brandonwillard,,2020-09-27 14:43:26,2020-10-01 01:32:28,tests/sandbox/test_jax.py theano/sandbox/jax_linker.py theano/sandbox/jaxify.py,190d849c666e3810c4880d1e90739764303d4dba c58d5568bcd6c9bca57dfa7386f5fb233c580adf,"twiecki convert_to_draft 2020-09-27 14:43:36,twiecki review_requested 2020-09-27 14:43:55,brandonwillard head_ref_force_pushed 2020-09-28 21:25:10,brandonwillard renamed 2020-09-28 21:25:53,brandonwillard head_ref_force_pushed 2020-09-28 21:30:21,twiecki ready_for_review 2020-09-29 08:14:56,twiecki review_requested 2020-09-29 08:15:06,twiecki head_ref_force_pushed 2020-09-29 16:42:49,brandonwillard head_ref_force_pushed 2020-09-29 17:37:42,twiecki closed 2020-09-29 17:45:39,brandonwillard reopened 2020-09-29 18:13:39,brandonwillard closed 2020-10-01 01:32:29,brandonwillard head_ref_deleted 2020-10-05 23:27:55",twiecki brandonwillard,7,False
25,54,Fix import and Elemwise optimization issues,brandonwillard,"This PR fixes the currently failing optimization tests and some import issues that were also introduced in #21.  It also contains some relevant refactoring.

UPDATE: See #58 for an alternative PR that could fix these issues sooner than this one.",bug important,,brandonwillard,2020-09-28 00:38:39,2020-09-29 16:36:56,tests/gpuarray/test_elemwise.py tests/gpuarray/test_nnet.py tests/tensor/test_blas.py tests/compile/test_monitormode.py tests/scan_module/test_scan.py theano/tensor/opt_uncanonicalize.py tests/tensor/nnet/test_nnet.py tests/gof/test_opt.py tests/tensor/test_basic.py tests/tensor/test_opt_uncanonicalize.py tests/sandbox/test_rng_mrg.py tests/tensor/test_complex.py tests/gof/test_graph.py tests/tensor/nnet/speed_test_conv.py tests/test_gradient.py tests/tensor/test_mlp.py tests/test_printing.py tests/tensor/nnet/test_sigm.py tests/tensor/nnet/test_conv3d2d.py tests/gof/test_vm.py theano/tensor/opt.py tests/tensor/test_opt.py theano/gof/opt.py tests/gof/test_lazy.py tests/sandbox/test_multinomial_wo_replacement.py tests/tensor/test_sharedvar.py tests/tensor/test_type_other.py tests/tensor/test_fft.py tests/compile/test_pfunc.py tests/gpuarray/test_pool.py tests/tensor/test_inc_subtensor.py tests/sandbox/test_minimal.py theano/__init__.py,128fc90044aac3f50dfb9e8f3c779538de59addd efb5517f3edb835ca674230f6610f2b971c4ed07 cee26fe90f49814cd105c306a197e1998f5a95db 1531b5c3ebe18bada01ae6923cf83cc025c500b2 99aa98bac01516d49009cba236588e982f2606da a11e56cbcfca76c23af1c18fbdc706c5fc9dbf3e 6e75a59c81bf87aea838757adfb132e61eb64ec3 22f1cb82d475b14107390567d033458be1988800 60e76cb788a212df90cce6d0439f073f31e44943 7e11cfec0aec4366c410b92cfaf24d959cc037c1 c49572c4a680d29d9e41ea9010ce4d5064726982,"brandonwillard assigned 2020-09-28 00:38:40,brandonwillard head_ref_force_pushed 2020-09-28 00:51:09,brandonwillard head_ref_force_pushed 2020-09-28 04:43:33,brandonwillard head_ref_force_pushed 2020-09-28 04:57:09,brandonwillard head_ref_force_pushed 2020-09-28 05:12:50,brandonwillard head_ref_force_pushed 2020-09-28 05:40:20,brandonwillard renamed 2020-09-28 21:19:32,brandonwillard labeled 2020-09-28 21:21:48,brandonwillard labeled 2020-09-28 21:21:48,brandonwillard connected 2020-09-28 21:21:55,brandonwillard disconnected 2020-09-29 07:05:09,brandonwillard closed 2020-09-29 16:36:56",twiecki brandonwillard,3,False
26,58,Quick fix for import issues introduced by #21,brandonwillard,This PR is a quicker/smaller fix than #54.,bug enhancement,,brandonwillard,2020-09-29 06:49:13,2020-09-29 16:36:09,theano/tensor/opt.py theano/sandbox/jaxify.py theano/tensor/opt_uncanonicalize.py theano/configdefaults.py,984404ff161363a9bf7b292d999d031b7b2bb50b f271c46c7a1c788a35a1ee7ddc77f0a6632c0814 f6e090098fd3f74cf613c5119aa7f567e9f2a550 4b318ef718a0bea9978c0e3cfd375c3d3fd28f4c,"brandonwillard labeled 2020-09-29 06:49:13,brandonwillard labeled 2020-09-29 06:49:13,brandonwillard assigned 2020-09-29 06:49:13,brandonwillard head_ref_force_pushed 2020-09-29 06:54:10,brandonwillard review_requested 2020-09-29 06:58:43,brandonwillard connected 2020-09-29 07:05:09,brandonwillard head_ref_force_pushed 2020-09-29 14:47:10,brandonwillard referenced 2020-09-29 16:36:09,brandonwillard merged 2020-09-29 16:36:09,brandonwillard closed 2020-09-29 16:36:10,brandonwillard head_ref_deleted 2020-09-29 16:36:13",ObigerTo brandonwillard allisonmcampbell StefanoDamato XZLeo dalesmith8 michaelosthege twiecki,10,True
27,59,Add more nlinalg ops,twiecki,Extends #50. There still is an issue with Ops that return more than one value.,,brandonwillard,,2020-09-29 13:21:28,2020-10-01 13:43:53,tests/sandbox/test_jax.py theano/sandbox/jax_linker.py theano/sandbox/jaxify.py,dcea409d7ef1756ff82c2144448dc5e8b2979f98,"twiecki head_ref_force_pushed 2020-09-29 16:42:19,brandonwillard mentioned 2020-09-29 17:43:54,brandonwillard subscribed 2020-09-29 17:43:54,brandonwillard head_ref_force_pushed 2020-10-01 01:18:21,brandonwillard head_ref_force_pushed 2020-10-01 01:21:31,brandonwillard head_ref_force_pushed 2020-10-01 01:22:36,brandonwillard head_ref_force_pushed 2020-10-01 01:32:07,brandonwillard head_ref_force_pushed 2020-10-01 01:33:40,brandonwillard head_ref_force_pushed 2020-10-01 01:33:49,brandonwillard head_ref_force_pushed 2020-10-01 01:41:12,brandonwillard head_ref_force_pushed 2020-10-01 05:52:27,twiecki referenced 2020-10-01 13:43:52,twiecki merged 2020-10-01 13:43:53,twiecki closed 2020-10-01 13:43:53,brandonwillard mentioned 2020-10-01 13:44:01,brandonwillard subscribed 2020-10-01 13:44:01,twiecki head_ref_deleted 2020-10-01 13:44:05,brandonwillard connected 2020-10-01 21:21:12",twiecki brandonwillard,10,True
28,62,Add a test for jax conversion of theano.scalar.basic.Identity,brandonwillard,This PR simply adds a test for JAX conversion of `theano.scalar.basic.Identity`.,,junpenglao twiecki,brandonwillard,2020-09-29 14:31:56,2020-09-29 21:21:18,tests/sandbox/test_jax.py,3a03fed66e09e21863b699cfc6260408735772b1,"brandonwillard assigned 2020-09-29 14:32:05,brandonwillard head_ref_force_pushed 2020-09-29 14:48:11,brandonwillard review_dismissed 2020-09-29 17:06:49,brandonwillard review_dismissed 2020-09-29 17:06:49,brandonwillard head_ref_force_pushed 2020-09-29 17:06:49,brandonwillard referenced 2020-09-29 21:21:18,brandonwillard merged 2020-09-29 21:21:18,brandonwillard closed 2020-09-29 21:21:18,brandonwillard head_ref_deleted 2020-09-29 21:21:23",junpenglao twiecki brandonwillard,0,True
29,65,Making theano.compat a module,Rashmi-K-A,"Solves: #57 
",,brandonwillard,,2020-09-30 19:20:01,2020-10-01 01:25:53,theano/compat.py,c2f61a06cc6e52d79277d8c7e94094dbc0efae7a,"brandonwillard connected 2020-10-01 01:24:38,brandonwillard referenced 2020-10-01 01:25:52,brandonwillard merged 2020-10-01 01:25:52,brandonwillard closed 2020-10-01 01:25:53,Rashmi-K-A mentioned 2020-10-01 01:30:08,Rashmi-K-A subscribed 2020-10-01 01:30:08,brandonwillard mentioned 2020-10-01 01:38:00,brandonwillard subscribed 2020-10-01 01:38:00,Rashmi-K-A mentioned 2020-10-01 13:48:56,Rashmi-K-A subscribed 2020-10-01 13:48:56",Rashmi-K-A twiecki brandonwillard,3,True
30,71,Replacing Travis with GitHub Actions,dfm,This is a work in progress to close #63,important,brandonwillard,dfm,2020-10-03 23:34:49,2020-10-04 20:17:29,.coveragerc .github/workflows/test.yml .travis.yml,2602b78d91408660b770b56b965ca9c98b4d9257,"dfm convert_to_draft 2020-10-03 23:35:12,dfm assigned 2020-10-03 23:47:13,brandonwillard labeled 2020-10-03 23:47:20,dfm mentioned 2020-10-04 16:14:10,dfm subscribed 2020-10-04 16:14:11,dfm ready_for_review 2020-10-04 19:59:21,dfm renamed 2020-10-04 20:03:25,brandonwillard referenced 2020-10-04 20:17:29,brandonwillard merged 2020-10-04 20:17:29,brandonwillard closed 2020-10-04 20:17:29",dfm brandonwillard,4,True
31,75,Remove unnecessary self argument in super call,brandonwillard,Fixes a typo/bug in a `c_code` call.,bug,,brandonwillard,2020-10-04 16:12:59,2020-10-04 16:13:30,theano/tensor/basic.py,590ea5c792b9f5ae0ef60089140b817db6a87980,"brandonwillard assigned 2020-10-04 16:13:06,brandonwillard labeled 2020-10-04 16:13:10,brandonwillard referenced 2020-10-04 16:13:30,brandonwillard merged 2020-10-04 16:13:30,brandonwillard closed 2020-10-04 16:13:30,brandonwillard head_ref_deleted 2020-10-04 16:13:34",brandonwillard,0,True
32,76,Add a test for jaxification of a shared variable,brandonwillard,This simply adds a JAXification test for shared variables.,enhancement JAX,,brandonwillard,2020-10-04 16:38:56,2020-10-04 19:12:35,tests/sandbox/test_jax.py,f0d65b2762f2a773e19463c42f1f94770990271e,"brandonwillard assigned 2020-10-04 16:39:00,brandonwillard labeled 2020-10-04 16:39:09,brandonwillard labeled 2020-10-04 16:39:09,brandonwillard head_ref_force_pushed 2020-10-04 16:53:53,brandonwillard referenced 2020-10-04 19:12:35,brandonwillard merged 2020-10-04 19:12:35,brandonwillard closed 2020-10-04 19:12:35,brandonwillard head_ref_deleted 2020-10-04 19:12:38",brandonwillard,0,True
33,78,Adding action to publish to PyPI,dfm,"Ready for review.

Ref: #77 

The workflow for this is that it'll build the sdist on every push and pull request to make sure that that builds and imports properly. Then, on a published release, it would upload the sdist to PyPI using the (currently non-existent) `pypi_password` repo secret (set to a PyPI token with the Theano project scope). This workflow could be adjusted!

(There are also some formatting fixes for the main test action. I can remove those if requested, but I don't think it'll hurt to merge them from here.)",important CI,twiecki,dfm,2020-10-05 16:40:59,2020-10-08 01:03:38,.github/workflows/pypi.yml,e57d7dd870534a16f4b41f11dfa8a88ffaf17906,"brandonwillard labeled 2020-10-06 00:27:27,brandonwillard labeled 2020-10-06 00:27:27,brandonwillard unlabeled 2020-10-06 18:02:03,brandonwillard labeled 2020-10-06 18:02:03,twiecki mentioned 2020-10-07 01:11:31,twiecki subscribed 2020-10-07 01:11:31,dfm assigned 2020-10-07 01:11:55,brandonwillard review_requested 2020-10-07 01:12:01,brandonwillard review_dismissed 2020-10-08 00:58:06,brandonwillard referenced 2020-10-08 01:03:38,brandonwillard merged 2020-10-08 01:03:38,brandonwillard closed 2020-10-08 01:03:38,brandonwillard connected 2020-10-08 01:14:42",twiecki dfm brandonwillard,3,True
34,80,Add cumop jaxification,brandonwillard,"This PR adds more JAX `Op` conversions from `theano.tensor.extra_ops`.  It also fixes the general JAX linker testing framework by removing *all* optimizations, so that more `Op`s are included and none are unexpectedly removed.",,,,2020-10-05 23:11:34,2020-10-06 00:26:24,theano/tensor/basic.py tests/sandbox/test_jax.py tests/tensor/test_extra_ops.py theano/sandbox/jaxify.py theano/tensor/extra_ops.py,cb2e0340f59f3a0e809e4ef95f06423d60ddfc98 9ea670cad7c5a9e6cacb7a35b6f45152483ae913 8a7f59e1011e92d25e75c1287ff83c38e51d79d2 6bf0d06d0b40a8e2d251e5578c36c5c4f1c85610 44aa0fb5c2af86dc6f02fc44c5160edfd56897a8 fe0365add873b3dc87c9d67d21cb6de90cb9e4f0 e464ba491fbf2a7f98fb899d3dd06e78ba842871 d5b9940dccb15ba06e80f176d97e253b0f2111dd,"brandonwillard connected 2020-10-05 23:11:47,dfm mentioned 2020-10-06 00:12:10,dfm subscribed 2020-10-06 00:12:10,brandonwillard referenced 2020-10-06 00:26:24,brandonwillard merged 2020-10-06 00:26:24,brandonwillard closed 2020-10-06 00:26:25,brandonwillard head_ref_deleted 2020-10-06 00:26:28",dfm twiecki brandonwillard,4,True
35,82,Update README,brandonwillard,"This PR contains a couple of updates to the README (e.g. use the GitHub Actions badge, add a features section, etc.)",documentation enhancement,michaelosthege twiecki,brandonwillard,2020-10-06 01:02:49,2020-10-07 06:29:40,.jenkins/jenkins_buildbot_release_extra.sh .jenkins/jenkins_buildbot_nogpp.sh doc/tutorial/debug_faq.txt tests/gpuarray/test_opt.py .jenkins/jenkins_buildbot_mac.sh .jenkins/jenkins_pr_mac.sh setup.cfg theano/compile/debugmode.py README.rst .jenkins/jenkins_pr_pretest.sh .jenkins/jenkins_buildbot_python2_debug.sh Theano.pyproj .circleci/config.yml theano/gpuarray/opt.py theano/sandbox/cuda/__init__.py theano/sparse/sandbox/truedot.py .jenkins/jenkins_pr_build_cache.sh tests/test_breakpoint.py tests/gpuarray/test_basic_ops.py .jenkins/jenkins_buildbot_python2.sh tests/gpuarray/test_type.py .github/ISSUE_TEMPLATE.md .jenkins/jenkins_buildbot_python3.sh tests/unittest_tools.py .jenkins/gpuarray-branch theano/breakpoint.py .jenkins/jenkins_buildbot_python2_32bit.sh tests/gpuarray/test_gemmcorr.py .jenkins/jenkins_pr_gpu.sh Theano.sln .github/PULL_REQUEST_TEMPLATE.md .jenkins/jenkins_pr_core.sh .jenkins/jenkins_buildbot_windows.bat ISSUE_TEMPLATE.md theano/__init__.py .jenkins/jenkins_pr_win.bat,b86434dca84c15414fdd696f30c2151537246575 d283e538e5d6d334f7b8af9df5e1ce30bb4e2498 e2dd45866c47411592d0c2a2491c42aa7e9ccff5 1db5c11ca5760725b039af2aa369131442444a67 d80650542fad3e9160d2fb598c23d409cc639fe3,"brandonwillard review_requested 2020-10-06 01:02:55,brandonwillard head_ref_force_pushed 2020-10-06 01:03:41,brandonwillard head_ref_force_pushed 2020-10-06 01:04:59,brandonwillard head_ref_force_pushed 2020-10-06 01:12:36,brandonwillard head_ref_force_pushed 2020-10-06 01:25:51,brandonwillard head_ref_force_pushed 2020-10-06 01:26:59,brandonwillard assigned 2020-10-06 01:52:51,brandonwillard labeled 2020-10-06 01:53:02,brandonwillard labeled 2020-10-06 01:53:02,brandonwillard milestoned 2020-10-06 01:53:13,brandonwillard review_dismissed 2020-10-06 18:08:43,brandonwillard head_ref_force_pushed 2020-10-06 18:08:43,brandonwillard head_ref_force_pushed 2020-10-06 23:38:38,brandonwillard review_requested 2020-10-07 00:11:23,brandonwillard head_ref_force_pushed 2020-10-07 00:26:41,brandonwillard head_ref_force_pushed 2020-10-07 00:34:38,twiecki referenced 2020-10-07 06:29:39,twiecki merged 2020-10-07 06:29:40,twiecki closed 2020-10-07 06:29:40,brandonwillard head_ref_deleted 2020-10-31 16:23:48",michaelosthege twiecki brandonwillard,1,True
36,83,Prevent CI from running Python tests for non-Python changes,brandonwillard,The changes in the PR prevent CI from running when only non-Python files are changed.  It also attempts to set up Conda and `pip` requirements caching.,enhancement CI,dfm,brandonwillard,2020-10-06 01:52:27,2020-10-06 18:07:28,.github/workflows/test.yml,d0e74a6ea1da72db158776c89a35c6e7f34114ef,"brandonwillard assigned 2020-10-06 01:52:31,brandonwillard labeled 2020-10-06 01:52:41,brandonwillard labeled 2020-10-06 01:52:41,brandonwillard review_requested 2020-10-06 01:53:44,brandonwillard head_ref_force_pushed 2020-10-06 01:54:29,brandonwillard head_ref_force_pushed 2020-10-06 03:04:50,brandonwillard head_ref_force_pushed 2020-10-06 03:13:12,brandonwillard head_ref_force_pushed 2020-10-06 04:02:56,brandonwillard head_ref_force_pushed 2020-10-06 15:11:20,brandonwillard mentioned 2020-10-06 15:20:44,brandonwillard subscribed 2020-10-06 15:20:44,brandonwillard review_dismissed 2020-10-06 17:47:31,brandonwillard head_ref_force_pushed 2020-10-06 17:47:31,brandonwillard referenced 2020-10-06 18:07:28,brandonwillard merged 2020-10-06 18:07:28,brandonwillard closed 2020-10-06 18:07:28,brandonwillard head_ref_deleted 2020-10-06 18:07:34",dfm brandonwillard,11,True
37,85,Stop importing test suite from __init__,michaelosthege,"My understanding of best practice is that the tests should live either in their own folder outside of the actual package (that's the case now) or as a submodule that is not imported from the actual package modules.

The `import tests` line conflicts with both of the above.

+ the 6-year old comment indicated that the import was done because of some GPU configuration, without providing any details
+ the import actually imported the first thing called ""tests"" that is found in the PATH, causing #84 

If just removing the import doesn't work because they are too entangled, we should move the tests into a submodule?

closes #84",testing,brandonwillard,,2020-10-06 11:21:18,2020-10-07 06:29:21,tests/gpuarray/test_gemmcorr.py theano/sparse/sandbox/truedot.py theano/gpuarray/opt.py theano/sandbox/cuda/__init__.py setup.cfg theano/compile/debugmode.py tests/test_breakpoint.py tests/gpuarray/test_opt.py tests/gpuarray/test_basic_ops.py doc/tutorial/debug_faq.txt theano/__init__.py tests/gpuarray/test_type.py theano/breakpoint.py tests/unittest_tools.py,f8ce40ae7ecef2a061912062519a0ccb78be7ad0 0421b6f5b49c84664d8bc0293820b1628b2f5e66 5551061f013dda7ef6a8971959c016deb9358483 f683d1ac735355f01bdb91e0b3a768360ead8cd7 2957ed4e005171f30357e85da5b8cefe7084e811 21a993ea690b3c5123ae4d692c1b484180b3df79,"michaelosthege labeled 2020-10-06 11:21:18,michaelosthege review_requested 2020-10-06 11:21:18,brandonwillard head_ref_force_pushed 2020-10-07 01:39:28,brandonwillard head_ref_force_pushed 2020-10-07 01:39:53,brandonwillard review_dismissed 2020-10-07 01:52:57,brandonwillard referenced 2020-10-07 06:29:20,brandonwillard merged 2020-10-07 06:29:20,brandonwillard closed 2020-10-07 06:29:21,brandonwillard head_ref_deleted 2020-10-07 06:30:48",michaelosthege twiecki brandonwillard,3,True
38,86,Fix coveralls for pull requests,dfm,Let's see if this fixes #81 ,,brandonwillard,,2020-10-06 15:01:30,2020-10-06 17:43:18,.github/workflows/test.yml,4f3ea32a19d0e32e700e27bac8ae1da837dc7ac0 5a7695fd3425a115350522c62beaf89f74694017 a2187c13d687e2e19648c258d26e17416f6b1ffa 2570549709fc2d6299eb207fa8f9ddc2380e484e 83024cb1fb6d489b23166afa3f51dd04b9d5708f,"brandonwillard referenced 2020-10-06 17:43:18,brandonwillard merged 2020-10-06 17:43:18,brandonwillard closed 2020-10-06 17:43:18",dfm brandonwillard,1,True
39,88,Combining checks into one and dealing with skipped runs,dfm,"I believe that this will fix #87.

I'm finding that some of the jax tests are failing on my fork though:

`tests/sandbox/test_jax.py::test_extra_ops` fails with:

```
jax.core.ConcretizationTypeError: Abstract tracer value encountered where concrete value is expected.
```
",,brandonwillard,,2020-10-07 15:36:46,2020-10-08 19:07:05,.github/workflows/test.yml,4f69e5e5d8bf1ad813a4fdb39b5c7d11e8e2954c a0b1d2c3cd6714337949c1afa9f35661454e50d4,"dfm convert_to_draft 2020-10-07 15:41:00,dfm ready_for_review 2020-10-07 17:42:47,dfm convert_to_draft 2020-10-08 13:57:17,dfm ready_for_review 2020-10-08 18:26:03,brandonwillard mentioned 2020-10-08 18:27:42,brandonwillard subscribed 2020-10-08 18:27:42,brandonwillard referenced 2020-10-08 19:07:04,brandonwillard merged 2020-10-08 19:07:05,brandonwillard closed 2020-10-08 19:07:05",dfm brandonwillard,11,True
40,90,Make jax.numpy.unique tests involving non-concrete input expected fails,brandonwillard,This PR makes `jax.numpy.unique` tests involving non-concrete inputs expected fails.,bug JAX,,brandonwillard,2020-10-07 19:08:00,2020-10-08 00:48:27,tests/sandbox/test_jax.py theano/sandbox/jaxify.py,4f8e0666885f97c8586398bf7227a3fa389f4c8c,"brandonwillard labeled 2020-10-07 19:08:01,brandonwillard labeled 2020-10-07 19:08:01,brandonwillard assigned 2020-10-07 19:08:01,brandonwillard head_ref_force_pushed 2020-10-07 19:08:56,brandonwillard convert_to_draft 2020-10-07 19:13:23,brandonwillard connected 2020-10-07 19:13:38,brandonwillard head_ref_force_pushed 2020-10-07 19:25:07,brandonwillard head_ref_force_pushed 2020-10-08 00:01:10,brandonwillard renamed 2020-10-08 00:02:54,brandonwillard ready_for_review 2020-10-08 00:33:53,brandonwillard referenced 2020-10-08 00:48:27,brandonwillard merged 2020-10-08 00:48:27,brandonwillard closed 2020-10-08 00:48:27,brandonwillard head_ref_deleted 2020-10-08 00:48:31",brandonwillard,1,True
41,95,Update the Conda meta.yaml,brandonwillard,,,,brandonwillard,2020-10-09 23:23:55,2020-10-10 16:48:19,conda/meta.yaml,b596c66cb25f3cfd68911f3286657dac69133436,"brandonwillard assigned 2020-10-09 23:23:59,brandonwillard referenced 2020-10-10 16:48:19,brandonwillard merged 2020-10-10 16:48:19,brandonwillard closed 2020-10-10 16:48:19,brandonwillard head_ref_deleted 2020-10-10 16:48:23",brandonwillard,0,True
42,101,Refactor tests.tensor.test_basic,brandonwillard,"This PR moves the following tests out from the gigantic `tests.tensor.test_basic` module and into their own modules:

- [x] the utility functions (`tests.tensor.utils`), 
- [x] the SciPy-specific tests (`tests.tensor.test_basic_scipy`),
- [x] the `theano.tensor.inplace` tests (`tests.tensor.test_inplace`),
- [ ] the `numpy` function wrapper `Op`s defined using `_scal_elemwise` and tested using `makeBroadcastTester` (`tests.tensor.test_numpy`)
",testing refactor,,brandonwillard,2020-10-12 05:19:57,2020-10-23 22:34:10,tests/tensor/test_blas.py tests/tensor/nnet/test_nnet.py tests/tensor/test_basic.py tests/gpuarray/test_opt.py setup.cfg doc/extending/unittest.txt tests/tensor/nnet/test_sigm.py tests/typed_list/test_opt.py tests/scalar/test_basic.py tests/typed_list/test_type.py tests/tensor/test_basic_scipy.py tests/tensor/utils.py tests/tensor/test_inplace.py tests/gpuarray/test_basic_ops.py theano/scalar/basic_scipy.py tests/gpuarray/test_linalg.py .github/workflows/test.yml tests/tensor/test_subtensor.py theano/gradient.py .gitignore,3767f231e73721395c6736d7f1f1ded4a0ec11e9 d3d56a6c3b1b6b437d523bf053969c914570538a 869c923c6e2f122a90755127d16107ff519925fe c9f8a7533f7ead8d9249c73ec015aee95bd7dbd6,"brandonwillard labeled 2020-10-12 05:20:11,brandonwillard labeled 2020-10-12 05:20:11,brandonwillard milestoned 2020-10-12 05:20:14,brandonwillard assigned 2020-10-12 05:20:19,brandonwillard head_ref_force_pushed 2020-10-20 00:36:55,brandonwillard head_ref_force_pushed 2020-10-22 22:29:45,brandonwillard head_ref_force_pushed 2020-10-22 22:30:18,brandonwillard head_ref_force_pushed 2020-10-23 21:46:25,brandonwillard referenced 2020-10-23 22:34:10,brandonwillard merged 2020-10-23 22:34:10,brandonwillard closed 2020-10-23 22:34:10,brandonwillard head_ref_deleted 2020-10-23 22:34:15",brandonwillard,0,True
43,102,Convert boolean indices to integers when determining broadcast pattern,brandonwillard,The changes in this PR should fix the symbolic/actual shape mismatch behind #34.,bug important,,brandonwillard,2020-10-14 05:10:31,2020-10-14 06:07:11,theano/tensor/subtensor.py tests/tensor/test_subtensor.py,ff6019f4489ff31f5e7dcc5d5c7bd24dd223d8d7,"brandonwillard assigned 2020-10-14 05:10:34,brandonwillard labeled 2020-10-14 05:10:38,brandonwillard connected 2020-10-14 05:10:46,brandonwillard head_ref_force_pushed 2020-10-14 05:14:58,brandonwillard head_ref_force_pushed 2020-10-14 05:18:48,brandonwillard labeled 2020-10-14 05:19:18,brandonwillard review_requested 2020-10-14 05:21:08,twiecki mentioned 2020-10-14 05:21:57,twiecki subscribed 2020-10-14 05:21:57,brandonwillard referenced 2020-10-14 06:07:11,brandonwillard merged 2020-10-14 06:07:11,brandonwillard closed 2020-10-14 06:07:11,brandonwillard head_ref_deleted 2020-10-14 06:07:15",twiecki brandonwillard,2,True
44,104,Fix exception handling in as_tensor_variable,brandonwillard,"This PR introduces changes that prevent downstream code (e.g. test value computation) from throwing exceptions (e.g. `ValueError`s) that break the logic in `theano.tensor.basic.as_tensor_variable`.
",bug important,,brandonwillard,2020-10-14 21:11:57,2020-10-14 22:57:36,theano/tensor/var.py theano/tensor/basic.py tests/tensor/test_basic.py theano/scalar/basic.py theano/tensor/__init__.py,485768f48eb841bbb27a1507ad5151ae3154fc17,"brandonwillard labeled 2020-10-14 21:11:57,brandonwillard labeled 2020-10-14 21:11:57,brandonwillard assigned 2020-10-14 21:11:57,brandonwillard head_ref_force_pushed 2020-10-14 22:06:23,brandonwillard referenced 2020-10-14 22:57:36,brandonwillard merged 2020-10-14 22:57:36,brandonwillard closed 2020-10-14 22:57:36,brandonwillard head_ref_deleted 2020-10-14 22:57:39",brandonwillard,0,True
45,106,Remove redundant AdvancedBoolean*Subtensor classes,brandonwillard,"This PR removes the redundant `AdvancedBoolean*Subtensor` classes and merges all functionality into the `Advanced*Subtensor` classes.  In doing so, the `set_subtensor` boolean gradient bug in #105 is also fixed.",,,,2020-10-15 00:32:39,2020-10-15 01:33:01,theano/tensor/subtensor.py theano/tensor/var.py theano/gpuarray/opt.py tests/tensor/test_subtensor.py tests/tensor/test_var.py theano/sandbox/jaxify.py theano/gpuarray/subtensor.py tests/gpuarray/test_subtensor.py,cac907d08b2555d3d624109050e620a4b93326c0,"brandonwillard head_ref_force_pushed 2020-10-15 00:33:03,brandonwillard connected 2020-10-15 00:33:23,brandonwillard head_ref_force_pushed 2020-10-15 00:44:02,brandonwillard referenced 2020-10-15 01:33:01,brandonwillard merged 2020-10-15 01:33:01,brandonwillard closed 2020-10-15 01:33:01,brandonwillard head_ref_deleted 2020-10-15 01:33:06",brandonwillard,0,True
46,108,Prevent test value computation from complaining about subtensor creation,brandonwillard,The temporary values created during subtensor broadcast-value computations would cause the test value computation steps to complain/err.  The changes in this PR prevents that (and establish a test).,bug important,,brandonwillard,2020-10-15 05:08:56,2020-10-15 05:50:52,theano/tensor/subtensor.py tests/tensor/test_subtensor.py,0e3b67dd34e81da53e491341f63d73c8a4144049,"brandonwillard labeled 2020-10-15 05:08:56,brandonwillard labeled 2020-10-15 05:08:56,brandonwillard assigned 2020-10-15 05:08:57,brandonwillard referenced 2020-10-15 05:50:52,brandonwillard merged 2020-10-15 05:50:52,brandonwillard closed 2020-10-15 05:50:52,brandonwillard head_ref_deleted 2020-10-19 21:03:01",brandonwillard,0,True
47,110,Enforce sane test values,brandonwillard,"This PR adds a new `Scratchpad` class that validates the values assigned to it, and this new class is used to check that test values have the correct type as soon as they're set.

Closes #109.",bug,,brandonwillard,2020-10-17 06:19:38,2020-10-18 00:53:59,theano/gof/utils.py tests/gof/test_compute_test_value.py theano/gof/vm.py tests/gof/test_op.py tests/gof/test_fg.py theano/gof/graph.py doc/library/misc/pkl_utils.txt theano/gof/cmodule.py theano/compile/debugmode.py tests/gpuarray/test_pickle.py theano/gof/op.py tests/sandbox/test_multinomial.py theano/misc/pkl_utils.py tests/gpuarray/test_multinomial.py theano/gof/compilelock.py tests/gof/test_fg_old_crash.pkl theano/tensor/nnet/conv.py theano/tensor/opt.py theano/printing.py tests/sandbox/test_multinomial_wo_replacement.py tests/gpuarray/test_type.py tests/unittest_tools.py,5194e7e56f9f0bd08d514b19b0f2db3aeb735d51 747e80fd69495d9ccb301fc2aef7afac17ecb39d 717fd402d0287daeb7875965096dba4d7453ec5a 9df70fdad159c1205531202a2dfc14295c0735d6 2352fcec2c67fcab6499c18df222700ef90670c5 746b85f42c9ea1d1f9a1a4bb2f6673b9cf588da3 21daf4e0fb82b9024ac1a7b57a3a815ba9f1ba68 74ee82b5decee70d31930ea55b40cdc835a3fcdc af703ed29b1483177a81a89b45dd41c31f861cc7 74af3ca25eb336428e6ca7b349b363374bd6b729 ea44b16df4ddab420e1e57846ad3f36a6a813a75,"brandonwillard labeled 2020-10-17 06:19:38,brandonwillard assigned 2020-10-17 06:19:38,brandonwillard head_ref_force_pushed 2020-10-17 06:22:01,brandonwillard head_ref_force_pushed 2020-10-17 21:20:10,brandonwillard referenced 2020-10-18 00:53:58,brandonwillard merged 2020-10-18 00:53:58,brandonwillard closed 2020-10-18 00:53:59,brandonwillard head_ref_deleted 2020-10-18 00:54:08",brandonwillard,0,True
48,111,Add a pre-commit config,brandonwillard,This PR simply adds a pre-commit config for `black` and `flake8`.,enhancement,,brandonwillard,2020-10-18 01:00:57,2020-10-18 01:18:56,requirements.txt .pre-commit-config.yaml,534faf47e600990f7a99b9cc4d6c9bec099ab61c,"brandonwillard labeled 2020-10-18 01:00:57,brandonwillard assigned 2020-10-18 01:00:57,brandonwillard referenced 2020-10-18 01:18:56,brandonwillard merged 2020-10-18 01:18:56,brandonwillard closed 2020-10-18 01:18:56,brandonwillard head_ref_deleted 2020-10-18 01:19:00",brandonwillard,0,True
49,112,Move get_test_value method to the Variable (sub)classes,brandonwillard,"This PR moves the `_get_test_value` implementation from `PureOp` to the `Variable` classes they actually apply. 
 The test value computation steps are also extracted from `PureOp.__call__` and put into a stand-alone `compute_test_value` function.",enhancement refactor,,brandonwillard,2020-10-18 01:21:08,2020-10-18 17:46:08,theano/scan_module/scan.py theano/compile/sharedvalue.py theano/gradient.py theano/tensor/opt.py theano/gof/utils.py theano/gof/op.py theano/scan_module/scan_utils.py theano/tensor/blas.py theano/gof/fg.py tests/tensor/test_basic.py tests/gof/test_op.py theano/__init__.py theano/gof/graph.py theano/gof/__init__.py,174cea8f8fa1ccfcf8777b102235bd65c54003bb da6ea2fbaaf16c296689524204bac6439bd30a0a 31f3aedf1d25f3162e4f9c9e48ab93842b99d89c 0ea1058833e02648ff0fe6bb0f5ad8c8c0122957 f17a8cde4b91ef184411d95fa50c4dcaf3f8141d 5ef9f8306dc5d8c61db0aaa827b43df977d3a45c a1938f768499c81c3957ef1844feaf4c8a814e92 d0458048fa099d1e054d2817bf02799d198b328e,"brandonwillard labeled 2020-10-18 01:21:08,brandonwillard labeled 2020-10-18 01:21:08,brandonwillard milestoned 2020-10-18 01:21:09,brandonwillard assigned 2020-10-18 01:21:09,brandonwillard head_ref_force_pushed 2020-10-18 04:22:38,brandonwillard head_ref_force_pushed 2020-10-18 04:23:18,brandonwillard head_ref_force_pushed 2020-10-18 05:07:25,brandonwillard head_ref_force_pushed 2020-10-18 16:37:13,brandonwillard referenced 2020-10-18 17:46:08,brandonwillard merged 2020-10-18 17:46:08,brandonwillard closed 2020-10-18 17:46:08,brandonwillard head_ref_deleted 2020-10-18 17:46:14",brandonwillard,0,True
50,113,Update and add missing docstrings in theano.gof.op,brandonwillard,This PR introduces multiple updates and additions to the docstrings in `theano.gof.op`.,documentation,,brandonwillard,2020-10-18 01:22:10,2020-10-18 04:58:09,theano/gof/op.py,42662057ebdb0ef75d4b1a6c4f90247ef0055c15,"brandonwillard labeled 2020-10-18 01:22:10,brandonwillard milestoned 2020-10-18 01:22:11,brandonwillard assigned 2020-10-18 01:22:11,brandonwillard referenced 2020-10-18 04:58:09,brandonwillard merged 2020-10-18 04:58:09,brandonwillard closed 2020-10-18 04:58:09,brandonwillard head_ref_deleted 2020-10-18 04:58:19",brandonwillard,0,True
51,114,Update and add missing docstrings in theano.gof.graph,brandonwillard,This PR introduces multiple updates and additions to the docstrings in `theano.gof.graph`.,documentation,,brandonwillard,2020-10-18 01:25:44,2020-10-18 04:58:36,theano/gof/graph.py,d9f780ba2f8270d253581168d16b634fecb59aea,"brandonwillard labeled 2020-10-18 01:25:44,brandonwillard milestoned 2020-10-18 01:25:44,brandonwillard assigned 2020-10-18 01:25:44,brandonwillard referenced 2020-10-18 04:58:36,brandonwillard merged 2020-10-18 04:58:36,brandonwillard closed 2020-10-18 04:58:36,brandonwillard head_ref_deleted 2020-10-18 04:58:39",brandonwillard,0,True
52,116,Misc imports and tests refactoring,brandonwillard,"This PR refactors imports, removes more Python 2.x support code, and cleans up some comments/docstrings.",documentation enhancement,,brandonwillard,2020-10-18 20:55:25,2020-10-19 20:54:56,tests/gpuarray/test_nnet.py tests/compile/test_builders.py theano/gpuarray/ctc.py tests/d3viz/models.py doc/library/d3viz/index.ipynb tests/tensor/nnet/test_corr.py theano/tensor/fft.py doc/library/tensor/fft.txt doc/tutorial/examples.txt doc/library/tensor/basic.txt doc/cifarSC2011/advanced_theano.txt theano/sandbox/multinomial.py tests/gpuarray/test_fft.py tests/tensor/test_mlp.py tests/tensor/signal/test_conv.py theano/gof/op.py tests/typed_list/test_basic.py tests/gpuarray/test_ctc.py theano/gpuarray/neighbours.py tests/gpuarray/test_basic_ops.py theano/tensor/nnet/bn.py tests/unittest_tools.py doc/library/compile/nanguardmode.txt theano/compile/nanguardmode.py doc/hpcs2011_tutorial/presentation.tex tests/compile/test_function_module.py tests/tensor/nnet/test_neighbours.py doc/extending/extending_theano_c.txt tests/gpuarray/test_extra_ops.py tests/tensor/nnet/test_ctc.py theano/tensor/nnet/ctc.py theano/configdefaults.py theano/tensor/nnet/neighbours.py doc/nextml2015/presentation.tex tests/gpuarray/test_dnn.py tests/tensor/nnet/speed_test_conv.py tests/scan_module/test_scan_checkpoints.py tests/typed_list/test_opt.py theano/misc/burn_gpu.py tests/compile/test_modes.py theano/misc/check_blas.py tests/test_breakpoint.py tests/tensor/test_gc.py theano/gpuarray/fft.py tests/tensor/test_fft.py doc/tutorial/broadcasting.txt tests/tensor/nnet/test_bn.py doc/sandbox/logistic_regression_example.txt tests/tensor/test_subtensor.py doc/extending/tips.txt theano/gpuarray/subtensor.py tests/test_pickle_unpickle_theano_fn.py theano/__init__.py theano/gof/__init__.py doc/tutorial/printing_drawing.txt doc/hpcs2011_tutorial/scan_pow.py tests/tensor/nnet/test_nnet.py tests/gof/test_opt.py theano/tensor/nnet/nnet.py tests/tensor/test_elemwise.py tests/tensor/nnet/test_corr3d.py doc/tutorial/using_gpu.txt doc/extending/graphstructures.txt tests/test_updates.py theano/tensor/blas_c.py doc/tutorial/gradients.txt tests/compile/test_profiling.py doc/tutorial/modes.txt doc/library/tensor/nnet/nnet.txt tests/gpuarray/rnn_support.py tests/gpuarray/test_reduction.py tests/typed_list/test_type.py tests/gof/test_graph_opt_caching.py theano/tensor/opt.py tests/tensor/test_opt.py doc/library/compile/io.txt doc/library/d3viz/index.txt tests/gof/test_lazy.py doc/library/gpuarray/fft.txt tests/test_dictionary_output.py tests/tensor/test_merge.py doc/hpcs2011_tutorial/logreg_example.py tests/tensor/test_blas.py doc/extending/fibby.txt tests/tensor/test_basic.py tests/scan_module/test_scan_opt.py doc/tutorial/debug_faq.txt theano/gof/graph.py doc/tutorial/conditions.txt tests/tensor/nnet/test_sigm.py theano/tensor/blas.py doc/crei2013/advanced_theano.txt theano/misc/elemwise_time_test.py theano/scan_module/scan.py doc/library/printing.txt doc/tutorial/index.txt tests/compile/test_mode.py theano/typed_list/basic.py doc/hpcs2011_tutorial/scan_poly.py doc/tutorial/loop.txt theano/breakpoint.py doc/cifarSC2011/theano.txt doc/tutorial/adding.txt doc/library/scan.txt tests/compile/test_nanguardmode.py tests/tensor/nnet/test_conv.py,2a73520d6e152c2c5c1fd9c21a4b2654f6c5306c 4a6192db681a32e0e7c90fc8229e74a32c925462 70a12a177e25a53318284b10acf6071aa4b89a1b 99667825377dc7b33f3b8dc8e17d61f1b60b4e73 c90ef03d01cd0c17cd62393c75f37ddfd1e0ee72 62c6c1ea32fb5a3b7bdd993a49853b6eb9893d49 6df163f0679585df72cef202ab8e31317d338530 2cb3a154d7c7eac3206b0ec398b64075c43e5b5f ac7b52257f369fd4afc417216b54db67dfdbb409 b4dc02d69464a53cbeb7d1a196b4155cc30ab7c1 c51f5936e5030dd71535bb44b0b74b51783d1997 b4c51eb2ec84bf4d2005bb2243dad62de6e40e5f 50ab043091909eb76de0d285157ce2455dc6737d 1e6bbdefa66a034bf0c9e7541a815507f4ee7c7c 43ab4ff06b745251d7437f142c443f6bb54dcb0a e103e7fbe275bf2850dbe27a8854548315a98582 c14fe346be270b9ba8ce038f4fd7f119524deb89 195157653fed89489179dc8528717fffdf8f19d7 6a09a928ab0333316f4ec03e023d7e6672976145 c65bf858fbd0bf697e21e618061ca3db5bddfaab 9bf77c890fad6790e964d00f02620c617fa1bd24 ef279e19031924ca39ef1a4c86243c36f338a36e 6b3003feea2bf1cf6fc50d39bfc9ac95eec3450c 702a8739240a56fef808e9fa12493d98ebfb3557 219428baaad162ba15b6e2b74d7953d9df172602 27f80b39d63306821c9cc6c627bbbccb8b9fd72b daacd0696c249d96e27ea52fa60a1e0544f6a6e7 596b7746175edc4ea791292ef314bd20108660f4 33667eb7dd4c42f35d7723bd8eb13312cc245645 f42f2163f9c57e0c883b73c1f28d0668e5a657c9 1ff084bf558681e44e449f62c8e60d3a4acdfe03 bc23b8cce322c7a19f741ed36416fa240b5b0a5c,"brandonwillard labeled 2020-10-18 20:55:25,brandonwillard labeled 2020-10-18 20:55:25,brandonwillard milestoned 2020-10-18 20:55:25,brandonwillard assigned 2020-10-18 20:55:25,brandonwillard head_ref_force_pushed 2020-10-19 04:17:26,brandonwillard head_ref_force_pushed 2020-10-19 04:56:02,brandonwillard head_ref_force_pushed 2020-10-19 04:56:53,brandonwillard head_ref_force_pushed 2020-10-19 16:02:24,brandonwillard head_ref_force_pushed 2020-10-19 17:35:42,brandonwillard referenced 2020-10-19 20:54:56,brandonwillard merged 2020-10-19 20:54:56,brandonwillard closed 2020-10-19 20:54:57,brandonwillard head_ref_deleted 2020-10-19 20:55:04",brandonwillard,0,True
53,117,Implementing exponentiation by squaring for matrix power,abdalazizrashid,"Issue #115 raised the attention that the current implementation of matrix power is implemented naively; thus, here is an implementation that uses exponentiation by squaring, which is significantly faster.",enhancement,brandonwillard,,2020-10-19 13:29:01,2020-10-22 00:41:57,tests/gpuarray/test_nnet.py tests/compile/test_builders.py theano/gpuarray/ctc.py tests/d3viz/models.py doc/library/d3viz/index.ipynb tests/tensor/nnet/test_corr.py theano/tensor/fft.py doc/library/tensor/fft.txt doc/tutorial/examples.txt doc/library/tensor/basic.txt doc/cifarSC2011/advanced_theano.txt theano/sandbox/multinomial.py tests/gpuarray/test_fft.py tests/tensor/signal/test_conv.py tests/tensor/test_mlp.py theano/gof/op.py tests/typed_list/test_basic.py tests/gpuarray/test_ctc.py theano/gpuarray/neighbours.py tests/gpuarray/test_basic_ops.py theano/tensor/nnet/bn.py tests/unittest_tools.py doc/library/compile/nanguardmode.txt theano/compile/nanguardmode.py doc/hpcs2011_tutorial/presentation.tex tests/compile/test_function_module.py tests/tensor/nnet/test_neighbours.py doc/extending/extending_theano_c.txt tests/gpuarray/test_extra_ops.py tests/tensor/nnet/test_ctc.py theano/tensor/nnet/ctc.py theano/configdefaults.py theano/tensor/nnet/neighbours.py doc/nextml2015/presentation.tex tests/gpuarray/test_dnn.py tests/tensor/nnet/speed_test_conv.py tests/scan_module/test_scan_checkpoints.py tests/typed_list/test_opt.py theano/misc/burn_gpu.py tests/compile/test_modes.py theano/misc/check_blas.py codecov.yml tests/test_breakpoint.py tests/tensor/test_gc.py theano/gpuarray/fft.py tests/tensor/test_fft.py tests/tensor/test_nlinalg.py doc/tutorial/broadcasting.txt tests/tensor/nnet/test_bn.py .github/workflows/test.yml doc/sandbox/logistic_regression_example.txt doc/extending/tips.txt tests/tensor/test_subtensor.py theano/gpuarray/subtensor.py tests/test_pickle_unpickle_theano_fn.py theano/__init__.py theano/gof/__init__.py doc/tutorial/printing_drawing.txt doc/hpcs2011_tutorial/scan_pow.py tests/tensor/nnet/test_nnet.py tests/gof/test_opt.py theano/tensor/nnet/nnet.py tests/tensor/test_elemwise.py tests/tensor/nnet/test_corr3d.py doc/tutorial/using_gpu.txt doc/extending/graphstructures.txt tests/test_updates.py theano/tensor/blas_c.py doc/tutorial/gradients.txt tests/compile/test_profiling.py doc/tutorial/modes.txt doc/library/tensor/nnet/nnet.txt tests/gpuarray/rnn_support.py tests/gpuarray/test_reduction.py tests/typed_list/test_type.py tests/gof/test_graph_opt_caching.py theano/tensor/opt.py tests/tensor/test_opt.py doc/library/compile/io.txt doc/library/d3viz/index.txt tests/gof/test_lazy.py doc/library/gpuarray/fft.txt tests/test_dictionary_output.py tests/tensor/test_merge.py doc/hpcs2011_tutorial/logreg_example.py tests/tensor/test_blas.py doc/extending/fibby.txt tests/scan_module/test_scan_opt.py tests/tensor/test_basic.py doc/tutorial/debug_faq.txt theano/gof/graph.py doc/tutorial/conditions.txt tests/tensor/nnet/test_sigm.py theano/tensor/blas.py doc/crei2013/advanced_theano.txt theano/misc/elemwise_time_test.py theano/scan_module/scan.py theano/tensor/nlinalg.py doc/library/printing.txt doc/tutorial/index.txt tests/compile/test_mode.py theano/typed_list/basic.py doc/hpcs2011_tutorial/scan_poly.py doc/tutorial/loop.txt theano/breakpoint.py doc/cifarSC2011/theano.txt doc/tutorial/adding.txt doc/library/scan.txt .gitignore tests/compile/test_nanguardmode.py tests/tensor/nnet/test_conv.py,b6ec7e4d25e983d5bb39a8fe39383b56f66b673c 54f2f0c47bed0cb60bc956ff0c228987fd48ec83 9d81b51cc43bb2eeccbfd3953f77c7abe2d97f42 c2d639662c4aabec50ffb83382a2e4b41475e790 a81c5e8d392a06f0adba954821e144c421d830ca 96d2d867b3667af840accf77621a694c51e8b341 5c21d15159fa86687c68484bbabff45279007da2 f926b0ac57f5e249d25cd18df4c3b81cb178bf01 93242d5b54433fa39f84932836490f57bc1f82e3 76844f1516bae465d84ddf662a3a530482324eba,"abdalazizrashid renamed 2020-10-19 13:29:16,brandonwillard connected 2020-10-19 15:20:25,brandonwillard labeled 2020-10-19 15:20:36,abdalazizrashid head_ref_force_pushed 2020-10-21 17:02:09,brandonwillard referenced 2020-10-22 00:41:57,brandonwillard merged 2020-10-22 00:41:57,brandonwillard closed 2020-10-22 00:41:57",abdalazizrashid ferrine brandonwillard,13,True
54,119,add codecov,OriolAbril,"Switch to codecov for test coverage reports and checks. Closes #118

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [relevant logical changes](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes).

",,twiecki,,2020-10-19 20:46:49,2020-10-20 06:56:14,codecov.yml .github/workflows/test.yml .gitignore,096bb21b365f23747d2a2186dd061128b8efcb4f c75d8e19a7b56cb7106fa6327c8b35b3595a3db6,"twiecki referenced 2020-10-20 06:56:14,twiecki merged 2020-10-20 06:56:14,twiecki closed 2020-10-20 06:56:14,OriolAbril mentioned 2020-10-20 06:56:21,OriolAbril subscribed 2020-10-20 06:56:21,OriolAbril head_ref_deleted 2020-10-20 15:19:29,twiecki mentioned 2020-10-20 15:25:11,twiecki subscribed 2020-10-20 15:25:11,brandonwillard mentioned 2020-10-20 15:25:11,brandonwillard subscribed 2020-10-20 15:25:11,twiecki mentioned 2020-10-20 15:36:25,twiecki subscribed 2020-10-20 15:36:25,brandonwillard referenced 2020-10-21 16:47:24,brandonwillard referenced 2020-10-21 16:49:52",twiecki dfm OriolAbril brandonwillard,6,True
55,122,Fix imports style,brandonwillard,"This PR introduces `isort` to our style checks.

As a necessary part of this addition, a few more import cycles needed to be broken (e.g. a bad one involving the optimizations in `theano.gpuarray`).  Also, some Python 2.x fixes were made using [`pyupgrade`](https://github.com/asottile/pyupgrade).",,,,2020-10-21 05:20:35,2020-10-22 05:57:37,tests/gof/test_link.py theano/misc/do_nightly_build_send theano/gof/params_type.py theano/gof/vm.py theano/sandbox/jax_linker.py theano/tensor/fft.py theano/tensor/type_other.py tests/sparse/test_basic.py theano/gof/toolbox.py theano/tensor/nnet/blocksparse.py tests/tensor/signal/test_conv.py tests/gof/test_optdb.py tests/test_rop.py tests/gpuarray/test_subtensor.py theano/misc/pkl_utils.py theano/compile/monitormode.py theano/sandbox/linalg/ops.py theano/sandbox/fourier.py tests/gpuarray/test_basic_ops.py theano/compile/nanguardmode.py tests/gpuarray/test_pool.py tests/tensor/nnet/test_neighbours.py tests/tensor/test_inc_subtensor.py theano/misc/frozendict.py theano/gof/link.py theano/tensor/utils.py theano/misc/ordered_set.py theano/tensor/nnet/ctc.py theano/gpuarray/sort.py tests/tensor/test_misc.py theano/gpuarray/type.py theano/gpuarray/pool.py tests/scalar/test_basic.py theano/tensor/elemwise_cgen.py theano/compile/__init__.py theano/tensor/fourier.py theano/gpuarray/fft.py theano/tensor/nnet/conv3d2d.py theano/tensor/opt_uncanonicalize.py tests/tensor/nnet/test_nnet.py theano/gof/unify.py theano/tensor/__init__.py theano/tensor/blas_c.py theano/gpuarray/reduction.py theano/scalar/basic_sympy.py tests/gpuarray/test_others.py theano/gpuarray/linalg.py theano/typed_list/opt.py theano/gpuarray/blocksparse.py theano/sandbox/solve.py theano/tensor/signal/pool.py tests/compile/test_function.py tests/tensor/test_basic.py tests/diverse_tests.py tests/gpuarray/test_gemmcorr3d.py theano/gof/cmodule.py tests/tensor/signal/test_pool.py theano/scan_module/scan_views.py tests/gpuarray/test_multinomial.py theano/tensor/nnet/corr3d.py theano/sparse/__init__.py theano/tensor/slinalg.py theano/tensor/xlogx.py tests/tensor/test_casting.py tests/misc/test_pkl_utils.py tests/scan_module/test_scan_utils.py theano/gpuarray/dnn_opt.py theano/tensor/subtensor.py theano/tensor/blas_scipy.py theano/compat.py theano/compile/ops.py theano/gpuarray/ctc.py theano/gpuarray/multinomial.py theano/scan_module/scan_opt.py tests/tensor/nnet/test_corr.py setup.py theano/gpuarray/extra_ops.py tests/gof/test_destroyhandler.py tests/tensor/test_keepdims.py theano/misc/latence_gpu_transfert.py tests/typed_list/test_basic.py theano/gpuarray/opt.py theano/gpuarray/neighbours.py tests/tensor/nnet/test_blocksparse.py tests/unittest_tools.py tests/d3viz/test_d3viz.py tests/sandbox/test_jax.py theano/sparse/sandbox/sp2.py tests/tensor/test_sort.py theano/gpuarray/kernel_codegen.py theano/gof/cc.py theano/updates.py tests/gpuarray/test_extra_ops.py tests/sparse/test_opt.py theano/_version.py tests/gpuarray/test_cgpukernelbase.py theano/configdefaults.py tests/gpuarray/test_opt.py theano/gof/callcache.py theano/tensor/var.py theano/tensor/nnet/neighbours.py tests/test_gradient.py tests/gpuarray/test_dnn.py tests/gpuarray/test_pickle.py tests/tensor/test_mpi.py tests/gpuarray/test_scan.py theano/misc/check_blas.py tests/compile/test_misc.py theano/tensor/type.py theano/gpuarray/__init__.py theano/gpuarray/subtensor.py theano/scalar/basic.py theano/gof/__init__.py theano/gpuarray/blas.py theano/sandbox/softsign.py tests/misc/test_may_share_memory.py theano/sandbox/minimal.py tests/gof/test_op.py tests/sandbox/test_rng_mrg.py theano/tensor/raw_random.py theano/gof/cutils.py tests/test_updates.py theano/tensor/nnet/__init__.py theano/typed_list/__init__.py theano/sparse/basic.py tests/tensor/nnet/test_conv3d2d.py tests/gpuarray/rnn_support.py theano/misc/gh_api.py theano/gof/opt.py tests/gpuarray/run_dnn_conv.py theano/sandbox/neighbours.py theano/tensor/inplace.py tests/tensor/test_shared_randomstreams.py tests/sparse/test_sp2.py tests/gpuarray/test_elemwise.py tests/tensor/test_blas.py theano/tensor/nnet/sigm.py theano/gof/optdb.py theano/gpuarray/dnn.py tests/tensor/nnet/test_sigm.py theano/tensor/nlinalg.py tests/compile/test_mode.py tests/gpuarray/test_neighbours.py tests/gpuarray/check_dnn_conv.py theano/sparse/opt.py theano/raise_op.py theano/scalar/sharedvar.py tests/gpuarray/test_misc.py tests/tensor/test_fourier.py tests/compile/test_nanguardmode.py theano/scan_module/__init__.py tests/gof/test_compute_test_value.py theano/d3viz/d3viz.py tests/d3viz/models.py theano/sandbox/multinomial.py tests/tensor/test_var.py tests/tensor/test_mlp.py theano/tensor/basic.py tests/tensor/test_blas_c.py tests/gpuarray/test_ctc.py theano/tensor/elemwise.py theano/scalar/basic_scipy.py theano/misc/hooks/reindent.py tests/tensor/test_utils.py theano/gradient.py tests/compile/test_ops.py tests/record.py theano/misc/check_duplicate_key.py theano/compile/function_module.py theano/compile/pfunc.py theano/compile/profiling.py tests/gpuarray/test_rng_mrg.py theano/tensor/nnet/opt.py theano/gof/fg.py theano/misc/elemwise_openmp_speedup.py tests/tensor/test_io.py tests/scan_module/test_scan_checkpoints.py tests/typed_list/test_opt.py theano/sandbox/conv.py theano/tensor/sort.py theano/compile/io.py tests/gof/test_sched.py tests/test_breakpoint.py tests/tensor/test_type_other.py tests/gpuarray/test_type.py tests/gof/test_toolbox.py theano/compile/function.py tests/tensor/test_fft.py tests/tensor/test_nlinalg.py tests/tensor/nnet/test_bn.py tests/test_config.py theano/scalar/__init__.py theano/tensor/sharedvar.py tests/test_pickle_unpickle_theano_fn.py theano/__init__.py theano/sparse/sandbox/sp.py tests/scan_module/test_scan.py tests/gof/test_opt.py theano/tensor/nnet/nnet.py theano/configparser.py theano/misc/safe_asarray.py theano/compile/debugmode.py tests/compile/test_profiling.py tests/test_determinism.py tests/sandbox/test_multinomial.py tests/gpuarray/test_reduction.py tests/sandbox/linalg/test_linalg.py tests/gof/test_graph_opt_caching.py doc/dev_start_guide.txt tests/compile/test_shared.py theano/gof/sched.py tests/gpuarray/test_blas.py tests/tensor/test_slinalg.py theano/tensor/nnet/abstract_conv.py tests/gpuarray/test_blocksparse.py theano/ifelse.py tests/scan_module/test_scan_opt.py Makefile theano/misc/may_share_memory.py tests/scalar/test_basic_sympy.py theano/gpuarray/rng_mrg.py theano/tensor/blas.py theano/tensor/shared_randomstreams.py theano/scan_module/scan.py tests/tensor/nnet/__init__.py theano/gof/destroyhandler.py theano/scan_module/scan_perform_ext.py tests/tensor/test_sharedvar.py theano/compile/builders.py tests/tensor/nnet/test_opt.py theano/gof/type.py tests/compile/test_pfunc.py tests/test_ifelse.py theano/scan_module/scan_perform.pyx tests/gpuarray/test_nnet.py tests/compile/test_builders.py theano/gof/utils.py theano/misc/strutil.py tests/tensor/_test_mpi_roundtrip.py tests/gpuarray/test_fft.py tests/tensor/test_xlogx.py theano/gof/op.py theano/sandbox/linalg/__init__.py theano/tensor/extra_ops.py theano/misc/check_multi_gpu.py theano/tensor/nnet/conv.py theano/scan_module/scan_op.py tests/tensor/test_raw_random.py theano/gpuarray/optdb.py theano/scan_module/scan_checkpoints.py theano/tensor/nnet/bn.py tests/gpuarray/test_linalg.py tests/compile/test_function_module.py theano/gof/lazylinker_c.py theano/tensor/blas_headers.py tests/tensor/nnet/test_abstract_conv.py .pre-commit-config.yaml theano/gpuarray/elemwise.py tests/tensor/nnet/test_ctc.py theano/tensor/nnet/corr.py theano/compile/sharedvalue.py tests/gpuarray/config.py tests/tensor/nnet/speed_test_conv.py theano/d3viz/formatting.py theano/misc/burn_gpu.py theano/sparse/sharedvar.py tests/gof/test_vm.py theano/sandbox/jaxify.py tests/tensor/test_gc.py theano/gpuarray/nnet.py tests/gpuarray/test_gemmcorr.py tests/tensor/test_subtensor.py .github/workflows/test.yml tests/gpuarray/test_abstractconv.py requirements.txt tests/sparse/sandbox/test_sp.py tests/tensor/test_elemwise.py theano/pathparse.py theano/compile/mode.py tests/tensor/nnet/test_corr3d.py tests/sparse/test_utils.py tests/gof/test_graph.py theano/tensor/signal/conv.py tests/d3viz/test_formatting.py tests/gof/test_types.py theano/gpuarray/cudnn_defs.py tests/tensor/test_blas_scipy.py theano/gof/compilelock.py tests/typed_list/test_type.py theano/tensor/opt.py theano/gpuarray/basic_ops.py tests/tensor/test_opt.py theano/scan_module/scan_utils.py tests/gof/test_lazy.py theano/sandbox/blocksparse.py tests/compile/test_debugmode.py tests/tensor/test_merge.py tests/sandbox/test_minimal.py tests/gof/test_params_type.py tests/test_2nd_order_grads.py tests/gpuarray/test_sort.py tests/tensor/test_opt_uncanonicalize.py tests/tensor/test_complex.py theano/gof/graph.py setup.cfg tests/test_printing.py theano/gof/compiledir.py theano/misc/hooks/check_whitespace.py theano/sandbox/rng_mrg.py theano/sparse/type.py theano/misc/elemwise_time_test.py tests/gof/test_cc.py theano/gpuarray/opt_util.py theano/typed_list/basic.py theano/printing.py tests/tensor/test_extra_ops.py tests/test_record.py theano/tensor/io.py theano/breakpoint.py tests/tensor/nnet/test_conv.py,59a91c4b956c27a7853899e790f1df12eddfdb7d 671b190c0771d1e7063adcd5566605cd1e5ee5e2 a476da34b9b4db6f0c364494852c5edd7d07c717 ba16d2d6f0b3108c54fc7773fb3e7ad80e933dfa 2b65809010237f0f17b3570c7792ac8bad14316a b4fbaa2ea2b2e2cc9dcb40a4a198ee16dad69144 7b02965d6ded5c19d939608497356b7a57972a66 11c3695b0c8f425199f6796ce16be97427ee6dd6 e97cae435defa2632ea6384baad946826d84bf5f 2e3f17cbcf1462972c7a0074a8c34568dd8f4fa1 88599bc3977c0cd20a569907553541443f24980c a9f0edf335eca4a9f1b727bfc13535dfb8ac2f0b c4d699c72bcc502da0bf965835317096670e8096 bfcd85cc52c31c322e54e26d650b24be0ede3237 e96f06dad6e5f828ab450f22874687d04cae2fa7 b90a5388da62971918b35ed34d952890c255873f 1be3fe3b1603bdaf1e425a243186aef86ae6d89a 0a499b81fa1d4797d39c3e56860d74c052228aaa a3dbdec363e1cc7079db10069ea6872d72428c56 30cfad4b2946b2160cf5718a418fb75bff8cf69c 64096a4a96d94f09d0894f13c05e9e5c4686314b ffa5e139f5815d94f531b5ef00db7bd20deddc3e beb93a4442a23d75c7959a8ba4a25cb97a111c59 bcccce7a34bf3e44011573b18a75af3d57905f14 b079be4cb8d57c4dc85ed685644207bcbadd7301 ed04fa8a4a2d325c44f11d01db36ec5e84a7f0ef c1af419c8d729e229865164abe6d15029362ad77 c0b324fa05215f92b4e2226de94e52cd05378adf db7cf36f90fa6a2ef43699443955f0270f560a11 bbb8e0098d44af8ba5f3ebbbb56d990012b08f23 021ed6626deb9fe4161e2cee94a96957d997053f d6477d583dcbf66600743c90dd4b7bc8b3a7048e 4e04febfd4bdc24797edc0b41b7263b2ed7e8815 558d455d71b0267f915150b5ab296af75f5f3579 4366da4ffaec495457f18d0e4746bf8bb02d20fa 969cf83cb8273de17a192490589eb0807a195478 11e773dfb5b2d948ee6f3a40f7dc9b549d6abc81 64db99f7068ca152373be3b9957e56c5c60a2055 50ec34d66a4f5e0969cd2f8d084af73436c5d2eb 7029d8c0c677e4d286ec03b07de692c27053ce98 5b6f20c03ebd3480827aa251c822f8ae8f7731fa 6f838fe0be9beb1eb9b70388834a9f9f3381337e 6c8cb50e4c2818d8e810ab173b6a4f16852622cd 1c28df91ff9ff2b1b46746e3e0c830563d623fcc f641f32df38fd4f0fdba01e09522c6cee8172f3c 62fa59c97945239e049957009fd9ea4971c58797 86dbc392c94f0ddc642e75c6b0a2304ad88e511a 96ce7bd759307bed0c87dba29fb2a0e1f25ca081 008579b56901c0e228ac26e04c1e39ebb34545ca a92055016d5db71f2de1f7a7c02218278111ece8 044f52eca91901da637b50513a5cc86091439879 05d13bcbd59e1e9c255e9cbcb9f3166d3e09793c 8caceba6627c724d2a3a9597f961c8b16f13420e 51a465b17bd4f07b7f351d6425910d534bc6b350 b70039a80b16214aa6d7a5d43fb5665292729a0b 6796db42a4f79a02c2e7ca3ee92067c0ed9815fb 6cf6323c9230e6a2b078f5a9fe1a59356a370f45 5b4a0d087d954a64f17ac255ba54138e3646ed6a,"brandonwillard head_ref_force_pushed 2020-10-21 05:34:58,brandonwillard head_ref_force_pushed 2020-10-21 05:39:19,brandonwillard head_ref_force_pushed 2020-10-21 05:39:37,brandonwillard head_ref_force_pushed 2020-10-21 15:42:55,brandonwillard head_ref_force_pushed 2020-10-21 16:52:32,brandonwillard head_ref_force_pushed 2020-10-21 19:00:32,brandonwillard head_ref_force_pushed 2020-10-22 04:37:04,brandonwillard referenced 2020-10-22 05:57:37,brandonwillard merged 2020-10-22 05:57:37,brandonwillard closed 2020-10-22 05:57:37,brandonwillard head_ref_deleted 2020-10-22 05:57:44",brandonwillard,0,True
56,123,"Revert ""add codecov""",brandonwillard,"Reverts pymc-devs/Theano-PyMC#119

This merge is preventing us from obtaining coverage reports, so I'm reverting it until Coveralls can be configured for this repository.",,,,2020-10-21 16:48:55,2020-10-21 16:49:50,codecov.yml .github/workflows/test.yml .gitignore,4b07c07eac9aaa7a381194c1405054b33accea34,"brandonwillard referenced 2020-10-21 16:49:50,brandonwillard merged 2020-10-21 16:49:50,brandonwillard closed 2020-10-21 16:49:50,brandonwillard head_ref_deleted 2020-10-21 16:49:55",brandonwillard,0,True
57,124,[WIP] Change coverage to codecov,OriolAbril,"This PR changes code coverage provider from coveralls to codecov to add a check on the code coverage of _only_ newly added lines of code. 

For this to work, codecov must be given access to the repo. This can be done from this page: https://github.com/organizations/pymc-devs/settings/installations/3153839 it looks like only by @twiecki. Once permissions are set, codecov should comment on this PR and add a check on the PR. Both the checks and the comment can be further personalized, we should probably merge this only once we are all happy with the codecov setting and seen it can report back to this PR

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [relevant logical changes](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes).
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",testing CI,dfm twiecki brandonwillard,OriolAbril,2020-10-21 21:52:43,2020-10-24 00:22:39,tests/tensor/test_blas.py tests/tensor/nnet/test_nnet.py tests/tensor/test_basic.py tests/gpuarray/test_opt.py setup.cfg doc/extending/unittest.txt tests/tensor/nnet/test_sigm.py tests/typed_list/test_opt.py tests/scalar/test_basic.py tests/typed_list/test_type.py codecov.yml tests/tensor/test_basic_scipy.py tests/tensor/utils.py tests/tensor/test_inplace.py tests/gpuarray/test_basic_ops.py theano/scalar/basic_scipy.py tests/gpuarray/test_linalg.py .github/workflows/test.yml tests/tensor/test_subtensor.py theano/gradient.py .gitignore,aec15fa1a80253c260bf1951d1bf7b1d4df7c665 d1fc552c6d6e21f37049cb4f4a34eb7c615203df 697206e0dc5c322ed981af4c5acfa1963fb32824,"twiecki mentioned 2020-10-21 21:52:44,twiecki subscribed 2020-10-21 21:52:44,OriolAbril convert_to_draft 2020-10-21 21:53:01,OriolAbril ready_for_review 2020-10-22 22:38:48,OriolAbril mentioned 2020-10-23 21:52:47,OriolAbril subscribed 2020-10-23 21:52:47,brandonwillard labeled 2020-10-23 21:58:17,OriolAbril assigned 2020-10-23 21:58:23,brandonwillard connected 2020-10-23 21:58:44,brandonwillard labeled 2020-10-23 22:01:55,brandonwillard review_dismissed 2020-10-24 00:21:58,brandonwillard referenced 2020-10-24 00:22:39,brandonwillard merged 2020-10-24 00:22:39,brandonwillard closed 2020-10-24 00:22:39,OriolAbril head_ref_deleted 2020-10-24 00:34:27",codecov[bot] OriolAbril brandonwillard dfm twiecki,11,True
58,125,Split apart broadcast_shape so that it can work with many arguments,brandonwillard,"This PR fixes a limitation brought about by the use of Python's varargs: `broadcast_shape` is limited in the number of arrays/shapes that can be processed/given.  In this PR, a `broadcast_shape_iter` is introduced, and it takes a collection of arrays/shapes and&mdash;as a result&mdash;doesn't face this restriction.",enhancement,,brandonwillard,2020-10-22 04:55:43,2020-10-22 05:52:42,theano/tensor/extra_ops.py,cc21b746518ec8ad9c67ccc61bd31f7902948c9c,"brandonwillard labeled 2020-10-22 04:55:43,brandonwillard assigned 2020-10-22 04:55:43,brandonwillard referenced 2020-10-22 05:52:42,brandonwillard merged 2020-10-22 05:52:42,brandonwillard closed 2020-10-22 05:52:42,brandonwillard head_ref_deleted 2020-10-22 05:52:46",brandonwillard,0,True
59,128,Rename function_module and scan_module,brandonwillard,"This PR moves `*_module`-named modules to something more appropriate, and performs related refactorings in the process (e.g. create new sub-packages for related modules).

- [x] refactor `theano.compile.function_module`
- [x] refactor `theano.scan_module`",refactor,,brandonwillard,2020-10-24 00:54:32,2020-11-10 03:21:18,theano/scan/c_code/scan_perform.c tests/compile/test_builders.py tests/scan/test_opt.py theano/gof/utils.py theano/scan/__init__.py tests/scan_module/test_scan.py theano/scan/scan_perform.pyx doc/sandbox/sandbox.txt theano/ifelse.py theano/scan/opt.py theano/tensor/nnet/nnet.py doc/tutorial/debug_faq.txt theano/d3viz/d3viz.py doc/extending/scan.txt tests/d3viz/models.py tests/tensor/test_complex.py theano/compile/mode.py theano/compile/function/types.py theano/gof/graph.py theano/scan_module/scan_opt.py doc/library/d3viz/index.ipynb theano/scan/basic.py doc/tutorial/examples.txt tests/sparse/test_basic.py theano/gof/toolbox.py theano/compile/sharedvalue.py tests/compile/function/__init__.py doc/nextml2015/presentation.tex theano/compile/debugmode.py theano/d3viz/formatting.py tests/tensor/signal/old_pool_interface.pkl tests/compile/function/test_types.py tests/gpuarray/test_scan.py tests/scalar/test_basic.py theano/compile/io.py doc/library/compile/opfromgraph.txt theano/compile/__init__.py tests/compile/test_misc.py theano/scan_module/scan.py theano/scan/scan_perform_ext.py theano/scan/views.py theano/gpuarray/opt.py theano/scan_module/scan_op.py tests/tensor/test_raw_random.py theano/tensor/opt.py doc/library/gradient.txt tests/tensor/test_opt.py theano/scan/op.py doc/library/d3viz/index.txt theano/gof/destroyhandler.py theano/gof/opt.py theano/scan_module/scan_utils.py tests/scan/test_utils.py theano/printing.py tests/tensor/test_gc.py theano/sandbox/jaxify.py tests/tensor/test_sharedvar.py theano/compile/builders.py tests/compile/function/test_function.py doc/sandbox/randomnumbers.txt doc/library/compile/function.txt tests/unittest_tools.py theano/compile/function/pfunc.py tests/compile/function/test_pfunc.py tests/scan/test_basic.py tests/scan/test_checkpoints.py theano/scan/checkpoints.py theano/scan/numpy_api_changes.diff theano/gradient.py tests/scan/__init__.py theano/compile/function/__init__.py tests/test_pickle_unpickle_theano_fn.py doc/library/scan.txt theano/__init__.py theano/scan/utils.py tests/compile/test_function_name.py,05d8b5663121930ee3be5a715d5a754cd47ae41b 44137bcfffa36ecd40e0f1aa97bb513b6c50c0fb,"brandonwillard labeled 2020-10-24 00:54:32,brandonwillard milestoned 2020-10-24 00:54:32,brandonwillard assigned 2020-10-24 00:54:32,brandonwillard head_ref_force_pushed 2020-10-24 00:55:02,brandonwillard head_ref_force_pushed 2020-10-24 23:50:21,brandonwillard head_ref_force_pushed 2020-10-25 00:42:28,brandonwillard head_ref_force_pushed 2020-10-25 00:48:57,brandonwillard head_ref_force_pushed 2020-10-25 05:21:51,brandonwillard head_ref_force_pushed 2020-10-25 05:24:08,brandonwillard head_ref_force_pushed 2020-10-30 02:40:29,brandonwillard renamed 2020-11-10 03:15:48,brandonwillard closed 2020-11-10 03:21:18",codecov[bot] brandonwillard,2,False
60,131,Add new RandomVariable Op and implementations,brandonwillard,"This PR adds a more optimizable and robust `Op` for random variables aptly named `RandomVariable`.

- [x] Add `RandomVariable` `Op` and tests
- [ ] Remove `RandomFunction`, its modules, and the functions that depend on it.
- [ ] Create simple ""lift"" optimizations for scalar `RandomVariable`s
- [ ] Add basic canonicalizations for scalar `RandomVariable`s",important,,brandonwillard,2020-10-25 06:12:28,2020-10-30 02:32:35,requirements.txt tests/tensor/random/__init__.py tests/tensor/random/test_random.py theano/tensor/random/basic.py theano/tensor/random/__init__.py theano/tensor/random/op.py,009dfe3ce103c6cb3cc42fe2beb7ff36b121b845,"brandonwillard labeled 2020-10-25 06:12:28,brandonwillard labeled 2020-10-25 06:12:28,brandonwillard assigned 2020-10-25 06:12:28,brandonwillard head_ref_force_pushed 2020-10-25 20:12:45,brandonwillard head_ref_force_pushed 2020-10-26 00:14:45,brandonwillard head_ref_force_pushed 2020-10-26 00:34:44,brandonwillard head_ref_force_pushed 2020-10-28 01:03:01,brandonwillard closed 2020-10-30 02:32:35",codecov[bot] canyon289 brandonwillard,4,False
61,136,Fix copy error in compute_test_value,brandonwillard,"This PR makes `compute_test_value` use `copy.copy` instead of assuming a `.copy` method (and failing).

Closes #135.",bug,,brandonwillard,2020-10-29 21:20:45,2020-10-29 22:20:57,tests/gof/test_compute_test_value.py theano/gof/op.py,8cd91de7385d031e44e23109a64309ab1980a2a3,"brandonwillard labeled 2020-10-29 21:20:46,brandonwillard assigned 2020-10-29 21:20:46,brandonwillard referenced 2020-10-29 22:20:57,brandonwillard merged 2020-10-29 22:20:57,brandonwillard closed 2020-10-29 22:20:57,brandonwillard head_ref_deleted 2020-10-29 22:21:04",codecov[bot] brandonwillard,1,True
62,137,Add new RandomVariable Op and optimizations,brandonwillard,"This PR adds a more optimizable and robust `Op` for random variables aptly named `RandomVariable`.

- [x] Add `RandomVariable` `Op` and tests
  - Broadcastable multivariate normal, Dirichlet, categorical, and multinomial `Op`s (i.e. they support multiple, stacked independent parameter arguments&mdash;with `size` parameter support, as well)
- [x] Remove `RandomFunction`, its modules, and the functions that depend on it.
- [x] Create `DimShuffle` lift optimization for `RandomVariable`s
  - E.g. `normal(mean, std).T` is replaced with `normal(mean.T, std.T)`
- [x] Create `*Subtensor` lift optimization for `RandomVariable`s
  - E.g. `normal(mean, std)[idx]` is replaced with `normal(mean[idx], std[idx])`

(This is also a replacement for #131 that comes from my new fork)",important,,brandonwillard,2020-10-30 02:31:31,2020-12-14 00:46:04,requirements.txt theano/compile/profiling.py tests/compile/test_builders.py tests/gpuarray/test_rng_mrg.py theano/tensor/random/op.py theano/tensor/random/opt.py tests/tensor/test_basic.py tests/sandbox/test_rng_mrg.py theano/gof/graph.py theano/tensor/__init__.py tests/tensor/random/test_op.py theano/tensor/raw_random.py doc/tutorial/examples.txt tests/gof/test_graph.py doc/library/tensor/index.txt doc/nextml2015/presentation.tex tests/test_gradient.py theano/tensor/basic.py doc/library/tensor/random/basic.txt theano/gpuarray/rng_mrg.py theano/tensor/shared_randomstreams.py doc/library/tensor/random/utils.txt tests/gpuarray/test_scan.py tests/gpuarray/test_multinomial.py theano/sandbox/rng_mrg.py tests/tensor/random/test_type.py tests/tensor/test_raw_random.py tests/sandbox/test_multinomial_wo_replacement.py doc/tutorial/loop.txt theano/tensor/random/__init__.py tests/scan/test_basic.py theano/tensor/random/var.py tests/tensor/random/__init__.py tests/tensor/random/test_var.py theano/tensor/random/utils.py tests/misc/test_pkl_utils.py tests/sandbox/test_jax.py theano/tensor/random/basic.py tests/tensor/random/test_utils.py tests/tensor/test_shared_randomstreams.py theano/tensor/random/type.py doc/library/scan.txt tests/tensor/random/test_opt.py theano/__init__.py tests/tensor/random/test_basic.py doc/library/tensor/raw_random.txt,7e219e9c572d765425b7b83bd7b912a8ec2d594f 050513813829c8d5ce5e8200497d3a969bc4e645 46adff86b52b77bd7db40e8d0813db7cc54523dd b51cfd0982bf50b05cdaca5b0b3ed71c30b2dd59 a328dd5df6c2012e5ce055b48783b9f720791355 aad5d35c58708424f2289c9431e74dc48635338a 3635eacd3a297bf24030d500219168d9e9f11885 b83d0a649c366f23fdcbd7901375e839d94f94da abc69153da48c4b1381c3a3989e0b945efcf14d3 3a2556a8ec4b4503b8be5f00f1a0cc6cde68770d,"brandonwillard labeled 2020-10-30 02:31:31,brandonwillard labeled 2020-10-30 02:31:31,brandonwillard assigned 2020-10-30 02:31:31,brandonwillard head_ref_force_pushed 2020-11-02 07:00:29,brandonwillard head_ref_force_pushed 2020-11-02 07:01:33,brandonwillard head_ref_force_pushed 2020-11-02 22:15:01,brandonwillard head_ref_force_pushed 2020-11-03 01:57:17,brandonwillard head_ref_force_pushed 2020-11-03 02:57:41,brandonwillard head_ref_force_pushed 2020-11-05 02:03:32,brandonwillard head_ref_force_pushed 2020-11-06 01:40:44,brandonwillard head_ref_force_pushed 2020-11-08 23:07:04,brandonwillard head_ref_force_pushed 2020-11-08 23:56:07,brandonwillard head_ref_force_pushed 2020-11-09 00:50:33,brandonwillard head_ref_force_pushed 2020-11-09 00:56:03,brandonwillard renamed 2020-11-09 01:28:12,brandonwillard head_ref_force_pushed 2020-11-10 00:28:45,brandonwillard head_ref_force_pushed 2020-11-10 05:09:32,brandonwillard head_ref_force_pushed 2020-11-23 03:23:41,brandonwillard head_ref_force_pushed 2020-11-23 18:30:12,brandonwillard head_ref_force_pushed 2020-11-23 18:33:59,brandonwillard head_ref_force_pushed 2020-11-24 04:05:34,brandonwillard convert_to_draft 2020-11-24 04:31:09,brandonwillard head_ref_force_pushed 2020-11-24 04:58:21,brandonwillard head_ref_force_pushed 2020-11-27 06:09:58,brandonwillard head_ref_force_pushed 2020-11-27 06:16:57,brandonwillard head_ref_force_pushed 2020-11-29 00:02:25,brandonwillard head_ref_force_pushed 2020-12-05 23:32:39,brandonwillard ready_for_review 2020-12-05 23:34:56,brandonwillard head_ref_force_pushed 2020-12-05 23:35:19,brandonwillard head_ref_force_pushed 2020-12-06 05:39:36,brandonwillard head_ref_force_pushed 2020-12-06 18:03:00,brandonwillard head_ref_force_pushed 2020-12-06 23:54:46,brandonwillard head_ref_force_pushed 2020-12-07 19:08:05,brandonwillard head_ref_force_pushed 2020-12-12 23:31:25,brandonwillard head_ref_force_pushed 2020-12-13 01:08:03,brandonwillard referenced 2020-12-14 00:46:04,brandonwillard merged 2020-12-14 00:46:04,brandonwillard closed 2020-12-14 00:46:04,brandonwillard head_ref_deleted 2020-12-14 00:46:08,brandonwillard connected 2020-12-15 21:51:59",codecov[bot] kyleabeauchamp brandonwillard,6,True
63,139,Remove theano.compat and other Python 2.x compatibility code,eigenfoo,"~[WIP, will request review when ready.]~

Closes #24.

I think my commit messages provide a good high-level summary of what this PR does (apologies for the repeated pushes for the test runs - these tests are expensive!).

In the interest of transparency, here is a short list of what this PR has _not_ accomplished:

- I have not replaced the old `%`-style string formatting with `.format()` or f-strings. I can do a follow-up PR for that.
- I have not removed the following Canopy code snippet
  * https://github.com/pymc-devs/Theano-PyMC/blob/2e3f17cbcf1462972c7a0074a8c34568dd8f4fa1/theano/gof/cmodule.py#L1707-L1712
  * It seems that this snippet handles some environment issues with the [Canopy package manager](http://docs.enthought.com/canopy/quick-start/package_manager.html), which provides Python 2.7. I'd be all for removing that code, but didn't feel it was within scope for this PR. I'd be happy to do a follow-up PR, but I just left it alone for now.",,brandonwillard,,2020-11-01 22:15:34,2020-11-02 01:38:16,theano/gof/cc.py tests/gof/test_link.py theano/updates.py theano/compat.py theano/compile/ops.py theano/gof/utils.py tests/compile/test_monitormode.py theano/gpuarray/elemwise.py tests/scan_module/test_scan.py tests/compile/test_function.py tests/tensor/test_basic.py theano/gof/fg.py tests/tensor/test_elemwise.py theano/configdefaults.py theano/misc/elemwise_openmp_speedup.py theano/gof/optdb.py setup.py theano/gof/cmodule.py theano/gof/cutils.py theano/gof/callcache.py theano/configparser.py theano/gof/toolbox.py theano/gpuarray/type.py tests/gpuarray/test_dnn.py theano/compile/debugmode.py tests/compile/test_profiling.py tests/tensor/signal/test_pool.py tests/test_printing.py theano/gof/compiledir.py tests/test_determinism.py theano/utils.py theano/misc/hooks/check_whitespace.py tests/tensor/test_mpi.py theano/misc/pkl_utils.py tests/gpuarray/test_multinomial.py theano/tensor/opt.py tests/gof/test_sched.py tests/tensor/test_opt.py theano/printing.py theano/scan_module/scan_utils.py theano/gof/opt.py theano/scan_module/scan_perform_ext.py tests/test_record.py tests/tensor/test_gc.py tests/tensor/test_sharedvar.py tests/tensor/test_type_other.py theano/gpuarray/nnet.py theano/compile/function.py tests/unittest_tools.py theano/compile/nanguardmode.py tests/tensor/test_subtensor.py theano/gradient.py tests/compile/test_function_module.py theano/misc/check_duplicate_key.py theano/gof/sched.py theano/gof/lazylinker_c.py theano/gpuarray/subtensor.py theano/misc/frozendict.py theano/scalar/basic.py tests/test_pickle_unpickle_theano_fn.py .gitignore theano/compile/function_module.py conda/meta.yaml theano/gof/link.py,0e6f5ddaa211b85c7365473e29970d7124e67699 23fdd862c29e8d1c6c4b07bf6f5b990f1f2cb91a 24f0bdb0ffea47ebb78c96a48ad2ddfeba70e699 d7c32a002121e74f8e60d146e6ca14e8dc1e1bac c41b0f8d05c1eae5308f2a4651f7f93ca196f050 70ec78a1760dcf469e2c20a74e2349e21cd773e8 d522ca3859f55c21712fc5785f2873f5f9d71d5d f2d1483eff51e28d275b45ea0008dad29b16d37d 9860a99a7d997c4ca8884f56589ae05261a612bb 8a42b49f53a8248423fbb1f8d0d894ed7e60d47a 83df68c5e62cf6c806e49110c07b7e51940f7dad 5b3d7c521b8523ac7ab44b42e5a5dd5fe697310b 1ddf0f2810ae0ded0a284a8429e5ed6d4f3ce13a e180a8d958a4436b52a39a46581298451e1fdf58 e79d2382a922efea3240ddd11da63b860af3548b 5b76e98549f47cf5fb5e4acebcadf0f9024c7957 53f452205486b9cdb2bc84a883311286dc8d9c8f 9e4df0202749c0845376ca614ac470149437d001 36dc27886197fa60099bf424f21972f961a3580a d687d0c4aae20b80d9b22ba05b23c9fc89304573 b7e691fb8c911a47ff3365b3731a384d67d407ec 26d33f0020b14632be4195f9967546329029ee64,"eigenfoo ready_for_review 2020-11-02 00:37:07,eigenfoo review_requested 2020-11-02 00:37:25,brandonwillard referenced 2020-11-02 01:38:15,brandonwillard merged 2020-11-02 01:38:16,brandonwillard closed 2020-11-02 01:38:16,eigenfoo head_ref_deleted 2020-11-02 01:38:38,eigenfoo mentioned 2020-11-02 06:55:25,eigenfoo subscribed 2020-11-02 06:55:25",codecov[bot] eigenfoo twiecki brandonwillard,4,True
64,140,Choose operator accepts tuples and lists of scalars,LegrandNico," Use `as_tensor_variable` for all data type insteed of `theano.typed_list.make_list()` in `theano.tensor.basic.Choose` to fix #133.

The `Op` `theano.tensor.basic.Choose` should now handle valid arguments properly (tested for list and tuple of scalars and vector).",,brandonwillard,,2020-11-02 01:49:54,2020-11-18 23:13:30,tests/tensor/test_basic.py theano/tensor/basic.py,7be0eaea9b84a4a1ea9895a08992a3c479db4b74 58ff4eb7239e711b722c07109816380b1654fd61,"twiecki review_requested 2020-11-02 06:53:30,LegrandNico renamed 2020-11-03 01:17:32,LegrandNico renamed 2020-11-04 23:31:31,brandonwillard referenced 2020-11-18 23:13:30,brandonwillard merged 2020-11-18 23:13:30,brandonwillard closed 2020-11-18 23:13:30",codecov[bot] LegrandNico twiecki brandonwillard,22,True
65,144,Run flynt to convert %-formatting to f-strings,eigenfoo,"~[WIP, will request review when ready]~

A follow-up to #139 - I simply used the [`flynt` CLI tool](https://github.com/ikamensh/flynt) to automatically convert %-formatted strings to f-strings. However, not all formatted strings have been converted to f-strings - some strings are tricky to convert, or `flynt` simply fails on them - in which case I've just left the string as-is.

It's important to note that %-formatting are different from f-strings [in meaningful ways](https://github.com/ikamensh/flynt#dangers-of-conversion), so it's important to check the tests.

---

For posterity, here's the output of `flynt`:

```
Running flynt v.0.56

Flynt run has finished. Stats:

Execution time:                            19.170s
Files modified:                            125
Character count reduction:                 2509 (0.03%)

Per expression type:
Old style (`%`) expressions attempted:     846/1483 (57.0%)
`.format(...)` calls attempted:            286/291 (98.3%)
No concatenations attempted.
F-string expressions created:              799
Out of all attempted transforms, 321 resulted in errors.
To find out specific error messages, use --verbose flag.

_-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_.
Please run your tests before committing. Did flynt get a perfect conversion? give it a star at:
~ https://github.com/ikamensh/flynt ~
Thank you for using flynt. Upgrade more projects and recommend it to your colleagues!
```",,brandonwillard,,2020-11-04 02:32:47,2020-11-15 05:23:16,theano/tensor/subtensor.py theano/scan/c_code/scan_perform.c doc/conf.py theano/compile/ops.py theano/gof/utils.py tests/compile/test_builders.py theano/scan/scan_perform.pyx tests/gof/test_compute_test_value.py theano/gof/params_type.py theano/scan/opt.py theano/d3viz/d3viz.py theano/sandbox/jax_linker.py tests/d3viz/models.py theano/scan/basic.py doc/library/d3viz/index.ipynb tests/tensor/nnet/test_corr.py theano/tensor/fft.py tests/sparse/test_basic.py theano/gof/toolbox.py doc/tutorial/examples.txt theano/sandbox/multinomial.py tests/compile/function/__init__.py theano/gpuarray/extra_ops.py theano/tensor/basic.py theano/gof/op.py tests/test_rop.py theano/misc/pkl_utils.py theano/misc/check_multi_gpu.py theano/tensor/extra_ops.py theano/gpuarray/opt.py theano/tensor/nnet/conv.py theano/scan_module/scan_op.py tests/tensor/utils.py tests/tensor/test_raw_random.py tests/tensor/test_blas_c.py theano/sandbox/linalg/ops.py theano/scan/op.py theano/tensor/elemwise.py theano/tensor/nnet/bn.py theano/scalar/basic_scipy.py theano/misc/hooks/reindent.py tests/unittest_tools.py theano/scan/numpy_api_changes.diff tests/compile/function/test_pfunc.py theano/scan/checkpoints.py theano/gradient.py tests/compile/test_ops.py tests/scan/__init__.py tests/sandbox/test_jax.py theano/gof/lazylinker_c.py theano/misc/frozendict.py doc/crei2013/ifelse_switch.py theano/gpuarray/kernel_codegen.py theano/compile/function_module.py theano/gof/link.py theano/gof/cc.py versioneer.py tests/gpuarray/test_extra_ops.py theano/compile/pfunc.py theano/compile/profiling.py theano/gpuarray/elemwise.py theano/_version.py theano/misc/ordered_set.py theano/gof/fg.py theano/tensor/nnet/ctc.py theano/tensor/nnet/corr.py theano/configdefaults.py theano/gpuarray/sort.py theano/tensor/inc_code.py theano/misc/elemwise_openmp_speedup.py theano/compile/function/types.py tests/tensor/test_misc.py theano/tensor/var.py theano/tensor/nnet/neighbours.py theano/gpuarray/type.py tests/tensor/nnet/speed_test_conv.py tests/gpuarray/test_dnn.py theano/d3viz/formatting.py doc/nextml2015/presentation.tex theano/compile/sharedvalue.py theano/typed_list/type.py tests/compile/function/test_types.py tests/gpuarray/test_scan.py bin/theano_cache.py theano/misc/check_blas.py theano/tensor/sort.py theano/compile/io.py theano/tensor/elemwise_cgen.py tests/scalar/test_basic.py doc/library/compile/opfromgraph.txt theano/compile/__init__.py tests/compile/test_misc.py theano/scan/scan_perform_ext.py tests/gof/test_vm.py doc/library/gradient.txt theano/sandbox/jaxify.py theano/tensor/fourier.py tests/tensor/test_gc.py theano/gpuarray/fft.py theano/gpuarray/nnet.py theano/tensor/type.py tests/compile/function/test_function.py tests/scan/test_basic.py theano/gpuarray/__init__.py theano/gpuarray/subtensor.py theano/scalar/basic.py tests/test_pickle_unpickle_theano_fn.py theano/__init__.py tests/compile/test_function_name.py theano/gpuarray/blas.py theano/tensor/nnet/conv3d2d.py theano/scan/__init__.py tests/scan_module/test_scan.py theano/tensor/nnet/nnet.py tests/tensor/test_elemwise.py tests/gof/test_op.py tests/sandbox/test_rng_mrg.py theano/compile/mode.py tests/tensor/nnet/test_corr3d.py theano/tensor/raw_random.py theano/configparser.py tests/gof/test_graph.py doc/scripts/docgen.py theano/compile/debugmode.py tests/tensor/signal/old_pool_interface.pkl theano/sparse/basic.py tests/sandbox/linalg/test_linalg.py theano/gof/compilelock.py theano/tensor/opt.py theano/gpuarray/basic_ops.py tests/tensor/test_opt.py theano/scalar/basic_sympy.py theano/misc/gh_api.py doc/library/d3viz/index.txt theano/gof/opt.py theano/scan_module/scan_utils.py tests/scan/test_checkpoints.py doc/library/compile/function.txt theano/compile/function/pfunc.py tests/gpuarray/run_dnn_conv.py theano/compile/function/__init__.py theano/tensor/nnet/abstract_conv.py theano/tensor/signal/pool.py tests/tensor/test_blas.py tests/scan/test_opt.py theano/ifelse.py doc/sandbox/sandbox.txt tests/tensor/test_basic.py doc/tutorial/debug_faq.txt doc/extending/scan.txt theano/tensor/nnet/sigm.py tests/tensor/test_complex.py theano/gof/graph.py theano/gof/optdb.py theano/gof/cmodule.py tests/tensor/signal/test_pool.py theano/gof/compiledir.py theano/gpuarray/dnn.py theano/misc/hooks/check_whitespace.py theano/tensor/blas.py tests/gpuarray/test_multinomial.py theano/sandbox/rng_mrg.py theano/sparse/type.py theano/misc/elemwise_time_test.py theano/scan_module/scan.py theano/scan/views.py tests/gof/test_cc.py theano/tensor/nlinalg.py theano/typed_list/basic.py theano/gof/destroyhandler.py theano/printing.py tests/tensor/test_extra_ops.py theano/scan_module/scan_perform_ext.py theano/tensor/nnet/corr3d.py tests/scan/test_utils.py theano/compile/builders.py tests/tensor/test_sharedvar.py theano/tensor/io.py theano/breakpoint.py doc/sandbox/randomnumbers.txt theano/gof/type.py theano/sparse/opt.py tests/compile/test_pfunc.py theano/tensor/xlogx.py theano/tensor/slinalg.py theano/raise_op.py doc/library/scan.txt theano/scan/utils.py tests/tensor/nnet/test_conv.py,e67341ee2b02e2c5d1392230d630cf33024e065d b487c00958d3acf76b80709db9df90a6a72d9ed4 57a65c0c7b49d35e9478c5cb8edec217070077c3 0b1e86c4dbdec20796bc5db60995d153a1ff10b8 909464ab5483922530af7bf66123419ddbdf11a6 1ffe6963c030485c37c5eb9c011d7ad167ad98fa 5c835bccce62b5a7dd4e820f28eb90dd4b04bad0 890720d61deb6065da82c46307b9488727baafc4 4ae71e0e6c20927c309b0baadab0210c0428d6c8 ca1db90e49d0d44dd569839670173786dcc2231f b95c97c9f7890dfbe8819474b68fb5103b6c379c ca2d7dc0a19d04018176324dbaa25670943e94e3 27d1f8606e395ffd856246afeb7604550ef61b21 2170b54da761e49744215e4773c9eda9a3a4b0a2 6af8170df12d8da376676dfc2ba8cfff5c576081 325faebaaa731ee0504541ed05de6cd154c807f2 84243ab62af879f625f1868fc332e98a6fc1d69d 90a94e1ca165fb61e0ffc174db74cf022880fccd 098d4c5c305c31ad8989cd9f5df95336e555f7b4,"eigenfoo review_requested 2020-11-04 04:51:38,brandonwillard ready_for_review 2020-11-04 04:54:02,brandonwillard mentioned 2020-11-06 14:21:31,brandonwillard subscribed 2020-11-06 14:21:31,eigenfoo review_requested 2020-11-06 14:22:23,eigenfoo mentioned 2020-11-06 15:18:22,eigenfoo subscribed 2020-11-06 15:18:22,eigenfoo closed 2020-11-15 05:23:16,junpenglao head_ref_deleted 2020-11-19 07:49:52",junpenglao codecov[bot] eigenfoo brandonwillard twiecki,18,False
66,145,Create a BroadcastTo Op for NumPy's broadcast_to function,brandonwillard,"This PR adds a `BroadcastTo` `Op` that, like its corresponding NumPy function `broadcast_to`, creates a view of a broadcasted array.

We should consider optimizations that will automatically substitute this `Op` for more wasteful graphs.  For example, graphs like `z = tt.ones(shape) * a` could be replaced with `z = tt.extra_ops.broadcast_to(a, shape)` as long as `z` isn't later updated in-place (e.g. using `tt.set_subtensor`).

Closes #36.",enhancement,,brandonwillard,2020-11-04 04:30:16,2020-11-04 06:06:56,theano/tensor/extra_ops.py tests/tensor/test_extra_ops.py,2dc1baae85bd4b65ca75a95be8ac0b461e447ad1,"brandonwillard labeled 2020-11-04 04:30:16,brandonwillard labeled 2020-11-04 04:30:16,brandonwillard assigned 2020-11-04 04:30:17,brandonwillard head_ref_force_pushed 2020-11-04 05:09:47,brandonwillard referenced 2020-11-04 06:06:55,brandonwillard merged 2020-11-04 06:06:55,brandonwillard closed 2020-11-04 06:06:56,brandonwillard head_ref_deleted 2020-11-04 06:07:12",codecov[bot] brandonwillard,1,True
67,149,Remove theano.dot,eigenfoo,"~~[WIP, will request review when ready.]~~

Closes #52.

I've discovered what `theano.dot` does - it's there to provide a sparse-agnostic way of multiplying two tensors. I think this PR is well summarized by this table, where the bolded methods implement the ""if-failed-then-try-`rdot`"" logic.

|            | Regular                                       | Sparse       |
|------------|-----------------------------------------------|--------------|
| Previously | **`theano.dot`**, `theano.tensor.dot`, `x.dot(y)` | **`theano.dot`** |
| If merged  | `theano.tensor.dot`, **`x.dot(y)`**             | **`x.dot(y)`**   |

Previously, a user could just use `theano.dot` for the highest-level call. Now, it will be `x.dot(y)`. Functional-minded users might not like this - i.e. some users might prefer calling `foo(x, y)` instead of `x.foo(y)`. More importantly, if this PR is merged, the only way to multiply sparse tensors will unintuitively be with the `.dot()` method, instead of any top-level function.

What do we think?",,brandonwillard,eigenfoo,2020-11-07 23:32:09,2020-11-10 00:03:02,theano/tensor/var.py tests/compile/test_pfunc.py theano/tensor/nlinalg.py tests/sparse/test_basic.py tests/tensor/test_blas.py tests/tensor/test_blas_c.py tests/tensor/test_opt.py theano/tensor/basic.py tests/scan_module/test_scan.py tests/tensor/test_basic.py tests/tensor/test_sharedvar.py theano/__init__.py theano/sparse/basic.py,552aec1d1c587a2e4eff941e3045f61000e0672d c254bb79b707624ab6972c3f576b2136f6a23ab9 c7afdf662d5feca635f221d1c85be70c7c65ca1f 8fe90fe4dac8a963dcc32642b7cdda0120762e12 7666e200b8c040667ef6020dbd796f2c191f5b96 5ecc66857ebc630131e77f0507924799e2f8fb81 a3cbf03e2d302b5ce0d7e7babe957421993c925b 1cce277f6d04d755244b37231a3afdfdd6362562 8f1892e82e0af0d6d4f6a458ba977224b27fc88d 0828edc667a28eff95c9c2f3553056b73afef6ef e331a41c08136de7d32595c3a6a869560c125cb7 191c617cb807674d23eee5d96b245db23d23a319 8651bd76ea6ddd88adcbf9f9c02ec79289ff946a 92257210bce52254e697d9735f3a5766caef79f4 e786c5f53e0a8bcd1ece84077fbfb31ae2cd8e65 107c5edb38ea22190032e5c3c98e79f9efa6cbad ce8cdfb08454ed822a022e2f37446c4afb017b93,"eigenfoo ready_for_review 2020-11-08 02:03:12,eigenfoo review_requested 2020-11-08 02:03:20,eigenfoo assigned 2020-11-08 05:51:45,brandonwillard referenced 2020-11-10 00:03:02,brandonwillard merged 2020-11-10 00:03:02,brandonwillard closed 2020-11-10 00:03:02,eigenfoo head_ref_deleted 2020-11-10 00:11:59",codecov[bot] eigenfoo brandonwillard,8,True
68,150,Change Theano to Aesara,abdalazizrashid,"According to issue #148 the project name has been changed to Aesara. 
Thus All the occurances of Theano has been changed to Aesara.
Except in the fallowing file:
* `doc/omlw2014/omlw_presentation.pdf`
",,eigenfoo,,2020-11-09 17:39:28,2020-11-14 17:45:08,aesara/sandbox/neighbours.py aesara/scalar/sharedvar.py doc/extending/extending_faq.txt doc/crei2013/scan_poly.py aesara/gof/unify.py tests/sparse/test_basic.py aesara/gof/graph.py doc/images/aesara_logo_allwhite_210x70.png tests/tensor/signal/test_conv.py tests/test_rop.py aesara/tensor/slinalg.py aesara/scan_module/scan_op.py tests/gpuarray/test_subtensor.py aesara/tensor/extra_ops.py doc/aesara-full.bib tests/tensor/utils.py tests/gpuarray/test_basic_ops.py aesara/tensor/nnet/bn.py aesara/scalar/basic.py tests/gpuarray/test_pool.py doc/hpcs2011_tutorial/presentation.tex aesara/gpuarray/nnet.py tests/tensor/nnet/test_neighbours.py aesara/gof/__init__.py aesara/gof/opt.py aesara/tensor/io.py aesara/gpuarray/c_code/dnn_pool.c aesara/gpuarray/c_code/magma_inv.c doc/images/aesara_logo_allblue_200x46.png aesara/d3viz/css/d3viz.css aesara/gpuarray/blocksparse.py aesara/gpuarray/c_code/dnn_sptf_gt.c aesara/compile/__init__.py aesara/compile/ops.py aesara/gpuarray/c_code/pool_grad_grad.c aesara/misc/safe_asarray.py doc/hpcs2011_tutorial/pics/aesara_logo.png aesara/gof/destroyhandler.py aesara/sandbox/fourier.py tests/scalar/test_basic.py doc/images/aesara_logo_allblue_63x21.png doc/tutorial/loop_solution_1.py doc/extending/using_params.txt aesara/sparse/type.py aesara/gpuarray/c_code/corr_gemm.c aesara/compile/mode.py aesara/misc/windows.py aesara/tensor/nnet/sigm.py aesara/gpuarray/c_code/pool_max_rop.c aesara/misc/pkl_utils.py aesara/scalar/__init__.py aesara/sparse/sandbox/sp2.py aesara/d3viz/css/d3-context-menu.css aesara/gpuarray/subtensor.py aesara/scan_module/scan_views.py aesara/ifelse.py aesara/gpuarray/dnn.py tests/tensor/nnet/test_nnet.py aesara/gradient.py aesara/gpuarray/c_code/topk_dense_large.cu aesara/gof/cc.py doc/extending/graphstructures.txt aesara/compile/sharedvalue.py aesara/gpuarray/c_code/dnn_rnn_gw.c doc/images/aesara_logo_allblue.svg aesara/scan_module/scan_utils.py aesara/sandbox/conv.py doc/extending/other_ops.txt NEWS.txt aesara/_version.py tests/gpuarray/test_others.py DESCRIPTION.txt aesara/gof/fg.py aesara/misc/do_nightly_build_send doc/hpcs2011_tutorial/logreg_example.py aesara/version.py aesara/compile/sandbox/__init__.py aesara/gpuarray/c_code/cudnn_helper.h doc/omlw2014/logreg.py doc/hpcs2011_tutorial/pycuda_simple.py aesara/tensor/fft.py aesara/sparse/sandbox/__init__.py doc/images/aesara_logo_allblue_200x54.png tests/tensor/test_basic.py aesara/gpuarray/blas.py doc/extending/extending_aesara_solution_1.py tests/gpuarray/test_gemmcorr3d.py aesara/gpuarray/c_code/conv_desc.c doc/bcast.svg tests/tensor/signal/test_pool.py aesara/gpuarray/c_code/dnn_sptf_sampler.c aesara/scan_module/c_code/scan_perform.c aesara/typed_list/type.py aesara/gof/link.py tests/gpuarray/test_multinomial.py aesara/gpuarray/c_code/dnn_dropout_desc.c aesara/gpuarray/c_code/dnn_rnn_gi.c doc/generate_dtype_tensor_table.py doc/extending/apply.svg aesara/d3viz/js/d3viz.js aesara/gof/c_code/lazylinker_c.c aesara/gpuarray/c_code/magma_qr.c aesara/sandbox/solve.py aesara/gpuarray/c_code/topk_dense.cu aesara/d3viz/js/d3-context-menu.js aesara/d3viz/js/d3.v3.min.js aesara/gpuarray/c_code/dnn_softmax.c .gitignore theano/d3viz/html/template.html doc/crei2013/logreg_profile.prof aesara/d3viz/__init__.py doc/conf.py aesara/gof/compilelock.py aesara/scalar/basic_sympy.py tests/tensor/nnet/test_corr.py tests/gof/test_destroyhandler.py aesara/gpuarray/dnn_opt.py aesara/gof/sched.py aesara/gpuarray/opt.py tests/typed_list/test_basic.py aesara/tensor/signal/__init__.py aesara/gpuarray/sort.py aesara/__init__.py doc/tutorial/extending_aesara.txt aesara/tensor/blas.py aesara/printing.py aesara/sandbox/jaxify.py tests/tensor/nnet/test_blocksparse.py aesara/scan_module/__init__.py aesara/tensor/c_code/alt_blas_template.c tests/d3viz/test_d3viz.py aesara/misc/check_duplicate_key.py tests/tensor/test_sort.py aesara/gpuarray/rng_mrg.py aesara/sparse/basic.py aesara/misc/buildbot_filter.py doc/crei2013/gpundarray.txt tests/gpuarray/test_extra_ops.py aesara/typed_list/__init__.py tests/sparse/test_opt.py aesara/d3viz/js/dagre-d3.min.js aesara/sandbox/minimal.py tests/gpuarray/test_opt.py doc/images/aesara_logo_allblue_paths.svg tests/gpuarray/test_dnn.py tests/test_gradient.py doc/.static/version_switch.js doc/cifarSC2011/introduction.txt aesara/gpuarray/c_code/pool_ave_grad.c tests/gpuarray/test_scan.py aesara/compile/function.py aesara/tensor/elemwise.py doc/images/aesara_logo_allblue_350x95.png aesara/gpuarray/c_code/dnn_sptf_grid.c aesara/gpuarray/c_code/dnn_dropout_fwd.c doc/extending/tips.txt aesara/tensor/blas_scipy.py aesara/misc/doubleop.py aesara/scan_module/scan_perform.pyx aesara/gpuarray/c_code/dnn_rnn_desc.c doc/images/aesara-theta-117x117.png tests/sandbox/test_rng_mrg.py doc/environment.yml aesara/misc/do_nightly_build aesara/gpuarray/c_code/blockger.c aesara/gof/callcache.py aesara/scan_module/scan_checkpoints.py aesara/misc/strutil.py .gitattributes aesara/tensor/__init__.py aesara/gof/params_type.py aesara/pathparse.py aesara/compile/debugmode.py aesara/gpuarray/extra_ops.py aesara/tensor/signal/conv.py aesara/d3viz/formatting.py aesara/sandbox/samples_MRG31k3p_12_7_5.txt aesara/gof/toolbox.py aesara/gpuarray/fft.py tests/gpuarray/run_dnn_conv.py doc/tutorial/using_gpu_solution_1.py doc/extending/cop.txt aesara/sparse/sandbox/sp.py tests/tensor/test_shared_randomstreams.py doc/extending/index.txt tests/sparse/test_sp2.py conda/meta.yaml tests/gpuarray/test_elemwise.py tests/tensor/test_blas.py doc/extending/fibby.txt aesara/sandbox/linalg/ops.py aesara/tensor/blas_headers.py aesara/tensor/sharedvar.py doc/cifarSC2011/boot_camp_overview.txt tests/tensor/nnet/test_sigm.py doc/tutorial/profiling_example.py aesara/gpuarray/fp16_help.py aesara/tensor/nnet/c_code/corr3d_gemm.c doc/extending/op.txt doc/tutorial/modes_solution_1.py aesara/breakpoint.py aesara/gpuarray/reduction.py aesara/tensor/c_code/alt_blas_common.h tests/gpuarray/test_neighbours.py aesara/sandbox/blocksparse.py aesara/gpuarray/type.py aesara/sparse/opt.py doc/tutorial/adding_solution_1.py aesara/misc/elemwise_openmp_speedup.py tests/gpuarray/check_dnn_conv.py aesara/misc/check_blas_many.sh doc/crei2013/introduction.txt tests/test_pickle_unpickle_aesara_fn.py tests/gpuarray/test_misc.py tests/tensor/test_fourier.py aesara/updates.py aesara/tensor/blas_c.py aesara/sparse/sharedvar.py aesara/gpuarray/ctc.py aesara/gpuarray/c_code/pool_max_grad.c aesara/gpuarray/opt_util.py aesara/sandbox/linalg/__init__.py aesara/gpuarray/c_code/dnn_fwd.c aesara/sandbox/softsign.py tests/tensor/test_var.py aesara/gpuarray/c_code/ctc_wrapper.c aesara/d3viz/js/graphlib-dot.min.js aesara/sparse/__init__.py tests/tensor/test_blas_c.py tests/gpuarray/test_ctc.py doc/glossary.txt aesara/sandbox/jax_linker.py doc/acknowledgement.txt tests/compile/test_ops.py aesara/tensor/fourier.py EMAIL.txt doc/extending/extending_aesara_c.txt aesara/scan_module/numpy_api_changes.diff aesara/gpuarray/c_code/dnn_conv_base.c doc/crei2013/ifelse_switch.py versioneer.py aesara/misc/check_blas.py aesara/gpuarray/c_code/magma_cholesky.c aesara/tensor/nnet/c_code/ctc_wrapper.c tests/gpuarray/test_rng_mrg.py aesara/gpuarray/c_code/gpuarray_helper.h aesara/tensor/var.py doc/aesara-short.bib doc/hpcs2011_tutorial/double_op.py doc/index.txt doc/hpcs2011_tutorial/simple_example.py aesara/gpuarray/multinomial.py tests/typed_list/test_opt.py doc/images/aesara_logo-200x67.png MANIFEST.in aesara/tensor/nnet/c_code/corr_gemm.c aesara/tensor/sort.py doc/extending/extending_aesara_gpu.txt aesara/d3viz/d3viz.py tests/test_breakpoint.py aesara/misc/cpucount.py aesara/misc/gh_api.py tests/gpuarray/test_type.py aesara/raise_op.py tests/tensor/test_fft.py tests/tensor/test_nlinalg.py tests/tensor/nnet/test_bn.py aesara/tensor/nnet/__init__.py aesara/configparser.py aesara/gpuarray/c_code/dnn_batchnorm.c tests/scan_module/test_scan.py tests/gof/test_opt.py aesara/gof/type.py aesara/tensor/nlinalg.py doc/crei2013/logreg.py aesara/misc/hooks/reindent.py aesara/sandbox/__init__.py aesara/tensor/inplace.py aesara/tensor/shared_randomstreams.py aesara/tensor/nnet/conv3d2d.py tests/test_determinism.py aesara/gpuarray/c_code/corr3d_gemm.c doc/extending/inplace.txt tests/gpuarray/test_reduction.py tests/sandbox/linalg/test_linalg.py aesara/tensor/type_other.py tests/tensor/test_inplace.py aesara/tensor/signal/pool.py doc/dev_start_guide.txt aesara/sparse/utils.py aesara/misc/burn_gpu.py aesara/compile/function_module.py doc/LICENSE.txt aesara/misc/elemwise_time_test.py doc/extending/extending_aesara.txt aesara/compile/builders.py aesara/gpuarray/c_code/magma_svd.c tests/gpuarray/test_blas.py aesara/tensor/opt_uncanonicalize.py aesara/gpuarray/basic_ops.py aesara/tensor/nnet/abstract_conv.py doc/extending/pipeline.txt tests/tensor/test_slinalg.py aesara/tensor/elemwise_cgen.py tests/gpuarray/test_blocksparse.py aesara/tensor/nnet/nnet.py aesara/gof/null_type.py tests/scan_module/test_scan_opt.py Makefile aesara/misc/may_share_memory.py doc/extending/unittest.txt aesara/gpuarray/pool.py aesara/compile/monitormode.py aesara/gpuarray/c_code/dnn_gw.c aesara/gpuarray/c_code/dnn_redux.c aesara/gpuarray/c_code/dimshuffle.c aesara/tensor/nnet/neighbours.py aesara/compile/pfunc.py tests/tensor/test_sharedvar.py doc/nextml2015/aesara_grad.png tests/tensor/nnet/test_opt.py tests/test_ifelse.py aesara/tensor/basic.py CONTRIBUTING.md aesara/misc/ordered_set.py aesara/scan_module/scan_opt.py aesara/gof/compiledir.py aesara/sandbox/multinomial.py doc/citation.txt tests/gpuarray/test_nnet.py tests/compile/test_builders.py aesara/gof/cutils.py aesara/gpuarray/__init__.py aesara/gpuarray/c_code/dnn_batchnorm_inf.c tests/gpuarray/test_fft.py tests/tensor/test_xlogx.py aesara/gpuarray/c_code/dnn_base.c README.rst aesara/gof/sandbox/typeattr.txt aesara/compile/profiling.py aesara/gof/lazylinker_c.py doc/faq.txt tests/tensor/test_basic_scipy.py tests/tensor/test_raw_random.py aesara/gpuarray/c_code/topk_common.cuh aesara/gof/vm.py aesara/misc/check_multi_gpu.py doc/cifarSC2011/gpundarray.txt aesara/gpuarray/kernel_codegen.py aesara/typed_list/opt.py .github/ISSUE_TEMPLATE.md tests/gpuarray/test_linalg.py .github/workflows/pypi.yml tests/tensor/nnet/test_abstract_conv.py aesara/gpuarray/c_code/dnn_gi.c .appveyor.yml aesara/gpuarray/c_code/dnn_batchnorm_base.c aesara/gpuarray/c_code/blockgemv.c aesara/gof/c_code/aesara_mod_helper.h aesara/tensor/c_code/dimshuffle.c .pre-commit-config.yaml doc/crei2013/index.txt tests/tensor/nnet/test_ctc.py aesara/tensor/type.py aesara/tensor/subtensor.py doc/core_development_guide.txt doc/cifarSC2011/aesara.txt aesara/gpuarray/c_code/dnn_rnn_paramsize.c aesara/typed_list/basic.py doc/cifarSC2011/advanced_aesara.txt aesara/tensor/utils.py .mailmap aesara/tensor/xlogx.py aesara/tensor/nnet/conv.py aesara/gpuarray/c_code/dnn_sptf_gi.c NEWS_DEV.txt doc/extending/type.txt doc/extending/optimization.txt aesara/gpuarray/c_code/dnn_rnn_fwd.c tests/gpuarray/test_gemmcorr.py tests/tensor/test_subtensor.py .github/workflows/test.yml aesara/gpuarray/c_code/dnn_softmax_grad.c aesara/scan_module/scan_perform_ext.py aesara/tensor/nnet/corr3d.py aesara/tensor/nnet/opt.py tests/gpuarray/test_abstractconv.py aesara/gpuarray/c_code/dnn_pool_grad.c aesara/tensor/inc_code.py aesara/gpuarray/linalg.py aesara/gpuarray/nerv.py doc/hpcs2011_tutorial/scan_pow.py doc/images/aesara_logo.png tests/sparse/sandbox/test_sp.py aesara/scan_module/scan.py aesara/gpuarray/c_code/magma_eigh.c aesara/scalar/c_code/gamma.c doc/cifarSC2011/pyCUDA.txt aesara/misc/hooks/check_whitespace.py tests/tensor/test_elemwise.py tests/tensor/nnet/test_corr3d.py doc/extending/aesara_vs_c.txt bin/aesara-cache doc/crei2013/scan_pow.py tests/sparse/test_utils.py aesara/tensor/opt.py aesara/gpuarray/elemwise.py aesara/gpuarray/c_code/dnn_batchnorm_grad.c HISTORY.txt doc/scripts/docgen.py tests/tensor/test_blas_scipy.py tests/typed_list/test_type.py aesara/scalar/basic_scipy.py tests/tensor/test_opt.py doc/cifarSC2011/index.txt doc/hpcs2011_tutorial/pycuda_double_op.py tests/compile/test_debugmode.py aesara/compile/nanguardmode.py aesara/gpuarray/neighbours.py aesara/gof/op.py aesara/utils.py tests/sandbox/test_minimal.py aesara/gof/optdb.py aesara/tensor/nnet/ctc.py tests/gof/test_params_type.py tests/test_2nd_order_grads.py tests/gpuarray/test_sort.py aesara/misc/__init__.py tests/tensor/test_opt_uncanonicalize.py aesara/gof/cmodule.py aesara/gof/utils.py aesara/gpuarray/cudnn_defs.py doc/extending/apply2.svg doc/extending/scan.txt tests/tensor/test_complex.py aesara/gpuarray/optdb.py aesara/tensor/nnet/blocksparse.py aesara/tensor/raw_random.py aesara/tensor/nnet/corr.py doc/tutorial/extending_aesara_c.txt aesara/misc/frozendict.py doc/crei2013/aesara.txt aesara/compile/io.py bin/aesara_cache.py aesara/sandbox/rng_mrg.py aesara/configdefaults.py aesara/gpuarray/c_code/pool.c doc/images/aesara_bw_parens_transparent.png tests/tensor/test_extra_ops.py aesara/misc/latence_gpu_transfert.py tests/test_record.py doc/hpcs2011_tutorial/scan_poly.py doc/extending/ctype.txt doc/aesara_installer_for_anaconda.bat tests/tensor/nnet/test_conv.py doc/crei2013/advanced_aesara.txt,90fa750461e91fb6281d494ae86404e2153fd7eb ac11c751a55d4d1b5a2e478178a55d3ff46dad8d 586b369681f15b8b5c0e7ad57b79f25be8edc38e c24cedc7d15ce7edcc660c90bfebd3c32a979e42,"abdalazizrashid head_ref_force_pushed 2020-11-09 18:17:04,abdalazizrashid head_ref_force_pushed 2020-11-09 18:27:10,abdalazizrashid head_ref_force_pushed 2020-11-09 18:35:01,abdalazizrashid head_ref_force_pushed 2020-11-09 18:39:35,abdalazizrashid mentioned 2020-11-09 18:40:33,abdalazizrashid subscribed 2020-11-09 18:40:33,brandonwillard convert_to_draft 2020-11-09 23:56:17,brandonwillard connected 2020-11-09 23:57:34,abdalazizrashid mentioned 2020-11-10 07:17:40,abdalazizrashid subscribed 2020-11-10 07:17:40,eigenfoo closed 2020-11-14 17:45:08,abdalazizrashid mentioned 2020-11-15 06:47:39,abdalazizrashid subscribed 2020-11-15 06:47:39,twiecki mentioned 2020-11-15 14:57:24,twiecki subscribed 2020-11-15 14:57:24,brandonwillard mentioned 2020-11-15 14:57:24,brandonwillard subscribed 2020-11-15 14:57:24,eigenfoo mentioned 2020-11-15 14:57:25,eigenfoo subscribed 2020-11-15 14:57:25,brandonwillard disconnected 2020-11-15 19:18:23",codecov[bot] eigenfoo brandonwillard fonnesbeck abdalazizrashid review-notebook-app[bot] twiecki,15,False
69,152,Rename function_module and scan_module,brandonwillard,"This PR moves `*_module`-named modules to something more appropriate, and performs related refactorings in the process (e.g. create new sub-packages for related modules).

- [x] refactor `theano.compile.function_module`
- [x] refactor `theano.scan_module`

(This PR replaces #128 with a branch on my new fork of this repo.)",refactor,,,2020-11-10 03:20:37,2020-11-10 04:50:32,theano/scan/c_code/scan_perform.c tests/compile/test_builders.py tests/scan/test_opt.py theano/gof/utils.py theano/scan/__init__.py tests/scan_module/test_scan.py theano/scan/scan_perform.pyx doc/sandbox/sandbox.txt theano/ifelse.py theano/scan/opt.py theano/tensor/nnet/nnet.py doc/tutorial/debug_faq.txt theano/d3viz/d3viz.py doc/extending/scan.txt tests/d3viz/models.py tests/tensor/test_complex.py theano/compile/mode.py theano/compile/function/types.py theano/gof/graph.py theano/scan_module/scan_opt.py doc/library/d3viz/index.ipynb theano/scan/basic.py doc/tutorial/examples.txt tests/sparse/test_basic.py theano/gof/toolbox.py theano/compile/sharedvalue.py tests/compile/function/__init__.py doc/nextml2015/presentation.tex theano/compile/debugmode.py theano/d3viz/formatting.py tests/tensor/signal/old_pool_interface.pkl tests/compile/function/test_types.py tests/gpuarray/test_scan.py tests/scalar/test_basic.py theano/compile/io.py doc/library/compile/opfromgraph.txt theano/compile/__init__.py tests/compile/test_misc.py theano/scan_module/scan.py theano/scan/scan_perform_ext.py theano/scan/views.py theano/gpuarray/opt.py theano/scan_module/scan_op.py tests/tensor/test_raw_random.py theano/tensor/opt.py doc/library/gradient.txt tests/tensor/test_opt.py theano/scan/op.py doc/library/d3viz/index.txt theano/gof/destroyhandler.py theano/gof/opt.py theano/scan_module/scan_utils.py tests/scan/test_utils.py theano/printing.py tests/tensor/test_gc.py theano/sandbox/jaxify.py tests/tensor/test_sharedvar.py theano/compile/builders.py tests/compile/function/test_function.py doc/sandbox/randomnumbers.txt doc/library/compile/function.txt tests/unittest_tools.py theano/compile/function/pfunc.py tests/compile/function/test_pfunc.py tests/scan/test_basic.py tests/scan/test_checkpoints.py theano/scan/checkpoints.py theano/scan/numpy_api_changes.diff theano/gradient.py tests/scan/__init__.py theano/compile/function/__init__.py tests/test_pickle_unpickle_theano_fn.py doc/library/scan.txt theano/__init__.py theano/scan/utils.py tests/compile/test_function_name.py,b3cbb0ba0dd402345bc533882a5f1ee3afed9581 8049bb3c18a5d2c0a1f177c4e11e69691290fe88,"brandonwillard labeled 2020-11-10 03:20:37,brandonwillard milestoned 2020-11-10 03:20:37,aesara-devs comment_deleted 2020-11-10 03:30:35,brandonwillard referenced 2020-11-10 04:50:31,brandonwillard merged 2020-11-10 04:50:32,brandonwillard closed 2020-11-10 04:50:32,brandonwillard head_ref_deleted 2020-11-10 04:50:35",codecov[bot] aesara-devs brandonwillard,1,True
70,153,Jax eye implementation,canyon289,"Start implementing eye per the advice here. Going to be asking a lot of questions for the first few PRs


https://github.com/pymc-devs/Theano-PyMC/issues/121

1. Where does `eye` come from in `@jax_funcify.register(Eye)`? Because eye doesn't exist in Theano (or so I think) does it need to be added to Theano?

For example here is the similar method `identity`
https://github.com/pymc-devs/Theano-PyMC/blob/master/theano/sandbox/jaxify.py#L218
https://github.com/pymc-devs/Theano-PyMC/blob/9fcb536ed314bd68adbb3299c69ff419fdf4988d/theano/scalar/basic.py#L2518",,brandonwillard,,2020-11-10 04:10:23,2020-11-14 20:08:26,tests/sandbox/test_jax.py theano/sandbox/jaxify.py,b5a356aa7bf31bd77369b080251f701364f58314 c30d1d7f5b4322e04579bed09805db912fdc227f ebf5f96bb3cd367675e4993300e7d306418988b3 8684af394c096721f22c469b4c6c459979798f00 726457d8f95eab49d71068cf3e776a984137381e 106b3e73cf6c22b9988fae015785a206fcea3c74 df2b90cf470cff9b4db30ef7540f764c5e811b5e 885d2f34ae5f810aae79fe2dae7a8e1f876c77ab 7a021c0a1f40df8e13a331cc498eded3828b6919 15beba406e1cafc0d63b42501b1cd3cd1d92d750 99770ac54b39ebcc94b0e0dbd05bf47d5f1b2c39 2a3f3200ef3390cf4bd63b8418970b4546bb592e 01a3deb58c42f2712fab51d8aaa09fedc3f01459 175b8c74f02e8914a63887596c683b6260fff4fe,"canyon289 head_ref_force_pushed 2020-11-13 03:18:53,canyon289 renamed 2020-11-14 04:46:25,canyon289 head_ref_force_pushed 2020-11-14 04:47:47,canyon289 ready_for_review 2020-11-14 04:47:55,brandonwillard referenced 2020-11-14 20:08:26,brandonwillard merged 2020-11-14 20:08:26,brandonwillard closed 2020-11-14 20:08:26,eigenfoo head_ref_deleted 2020-11-14 20:12:10",codecov[bot] canyon289 eigenfoo brandonwillard,23,True
71,154,Misc. Dot test and interface fixes,brandonwillard,This PR updates some of the `theano.tensor.Dot` tests and allows NumPy-only arguments to `theano.tensor.dot`.  The latter fixes a conflict with PyMC3's usage of `theano.tensor.dot`.,,twiecki,,2020-11-10 20:06:40,2020-11-13 02:27:41,tests/tensor/test_basic.py theano/tensor/basic.py,a1d277bc2437a19f73515df5344e10de7ff3c475 8006954fb3419d30d72288656562519f6b104e0e,"brandonwillard referenced 2020-11-13 02:27:41,brandonwillard merged 2020-11-13 02:27:41,brandonwillard closed 2020-11-13 02:27:41,brandonwillard head_ref_deleted 2020-11-13 02:27:45",codecov[bot] twiecki brandonwillard,1,True
72,155,Add docs to testing function,canyon289,"Docs that are certainly wrong in some way I don't understand, but through the process of this PR will be right for all posterity to read",,brandonwillard,,2020-11-11 03:58:17,2020-11-14 23:05:40,theano/scan/c_code/scan_perform.c tests/compile/test_builders.py theano/compile/ops.py tests/scan/test_opt.py theano/gof/utils.py theano/scan/__init__.py theano/scan/scan_perform.pyx doc/sandbox/sandbox.txt theano/ifelse.py tests/tensor/test_basic.py theano/scan/opt.py doc/tutorial/debug_faq.txt theano/d3viz/d3viz.py theano/tensor/nnet/nnet.py doc/extending/scan.txt tests/d3viz/models.py doc/library/d3viz/index.ipynb tests/tensor/test_complex.py theano/compile/function/types.py theano/compile/mode.py theano/gof/graph.py theano/scan/basic.py doc/tutorial/examples.txt tests/sparse/test_basic.py theano/gof/toolbox.py theano/compile/sharedvalue.py tests/compile/function/__init__.py doc/nextml2015/presentation.tex theano/compile/debugmode.py theano/d3viz/formatting.py theano/tensor/basic.py tests/tensor/signal/old_pool_interface.pkl tests/compile/function/test_types.py tests/gpuarray/test_scan.py tests/scalar/test_basic.py theano/compile/io.py doc/library/compile/opfromgraph.txt theano/compile/__init__.py tests/compile/test_misc.py theano/scan/scan_perform_ext.py theano/scan/views.py theano/gpuarray/opt.py tests/tensor/test_raw_random.py doc/library/gradient.txt theano/tensor/opt.py tests/tensor/test_opt.py theano/scan/op.py doc/library/d3viz/index.txt theano/gof/destroyhandler.py tests/scan/test_utils.py theano/gof/opt.py theano/printing.py theano/sandbox/jaxify.py tests/tensor/test_gc.py tests/tensor/test_sharedvar.py theano/compile/builders.py tests/compile/function/test_function.py doc/sandbox/randomnumbers.txt doc/library/compile/function.txt tests/scan/test_basic.py tests/scan/test_checkpoints.py tests/compile/function/test_pfunc.py tests/unittest_tools.py theano/compile/function/pfunc.py theano/scan/checkpoints.py theano/scan/numpy_api_changes.diff tests/scan/__init__.py tests/compile/test_ops.py theano/gradient.py tests/sandbox/test_jax.py theano/compile/function/__init__.py tests/test_pickle_unpickle_theano_fn.py doc/library/scan.txt theano/__init__.py theano/scan/utils.py tests/compile/test_function_name.py,8ffd866b0a9bc221f19be34519e9eeb31b48d79b d2d7eb0f09ae9cd6c1c4f2504da4af54a3439c5f 60a27be2e977572a643cb1712ebecaf1045945d7 0725d75b09e54dbcf0a07312e3360e794788f00c 3603bc09aa16f806b5e8996da3dbbdc52c5f75ed,"brandonwillard referenced 2020-11-14 23:05:40,brandonwillard merged 2020-11-14 23:05:40,brandonwillard closed 2020-11-14 23:05:40,brandonwillard head_ref_deleted 2020-11-14 23:05:45",codecov[bot] canyon289 brandonwillard,6,True
73,157,Add handling for non-NumPy types in Shape/Shape_i,brandonwillard,"This PR changes the use of `x.shape` to `np.shape` so that `Shape`/`Shape_i` will work when `x` is `None`, a `list`, etc.",enhancement,,brandonwillard,2020-11-13 01:23:25,2020-11-13 02:25:26,theano/compile/ops.py tests/tensor/test_basic.py tests/compile/test_ops.py,5b5b87b25d0fbe3441eefbeaeada150808c1540c 5bc0592c0de638cbb61172864dc4e7b5d7dfc9fa,"brandonwillard labeled 2020-11-13 01:23:25,brandonwillard assigned 2020-11-13 01:23:25,brandonwillard renamed 2020-11-13 01:23:56,brandonwillard head_ref_force_pushed 2020-11-13 01:45:14,brandonwillard referenced 2020-11-13 02:25:26,brandonwillard merged 2020-11-13 02:25:26,brandonwillard closed 2020-11-13 02:25:26,brandonwillard head_ref_deleted 2020-11-13 02:25:31",codecov[bot] brandonwillard,1,True
74,158,Remove Variable.fgraph and Variable.clients properties,brandonwillard,"This PR introduces some major refactoring of the optimizers classes.  Its main goal is to remove the inconsistent graph-specific information from `Variable` instances and put the burden of determining a `Variable`s clients on the `FunctionGraph` object.  `FunctionGraph`s are specifically designed for the purpose of holding useful information about a specific graph, so the task of tracking client mappings (i.e. which terms depend on a given `Variable`) falls squarely within its scope.

In other words, this PR removes the ephemeral fields `Variable.clients` and `Variable.fgraph` and changes the signature of `LocalOptimizer.transform` to include an `fgraph` argument from which one can obtain the clients via `fgraph.clients[v]` for some `Variable` `v`.

With these changes, applying transforms/optimizations will be considerably easier since we'll no longer face ""Variable already owned by a different fgraph"" errors.  In general, we will have removed the main source of unnecessary and complicated side effects due to graph optimization.  This should also pave the way for copy-free optimization (i.e. we won't need to completely copy/clone a graph in order to optimize it).

- [x] Add `fgraph` argument to `LocalOptimizer` methods
- [x] Replace `Variable.clients` with `FunctionGraph.clients`
- [x] Remove `Variable.fgraph`

Closes #100.",important graph rewriting refactor,canyon289 twiecki,brandonwillard,2020-11-13 22:27:40,2020-11-23 17:54:28,tests/gof/test_link.py theano/tensor/subtensor.py theano/tensor/blas_scipy.py theano/compile/ops.py theano/gof/utils.py theano/gpuarray/ctc.py doc/extending/extending_theano.txt theano/gof/vm.py theano/scan/opt.py theano/gof/toolbox.py tests/sparse/test_basic.py theano/tensor/nnet/blocksparse.py tests/gof/test_destroyhandler.py theano/tensor/basic.py theano/gof/op.py tests/gof/test_optdb.py theano/compile/monitormode.py theano/tensor/extra_ops.py theano/gpuarray/opt.py theano/tensor/nnet/conv.py theano/sandbox/linalg/ops.py theano/scan/op.py theano/tensor/elemwise.py theano/tensor/nnet/bn.py tests/compile/test_ops.py doc/hpcs2011_tutorial/presentation.tex tests/record.py theano/sparse/sandbox/sp2.py theano/gof/link.py theano/gof/cc.py theano/compile/profiling.py theano/tensor/nnet/opt.py tests/gpuarray/test_cgpukernelbase.py theano/gof/fg.py theano/tensor/nnet/ctc.py theano/tensor/nnet/corr.py tests/gpuarray/test_opt.py doc/extending/extending_theano_solution_1.py theano/compile/function/types.py theano/tensor/nnet/neighbours.py tests/gpuarray/test_dnn.py theano/d3viz/formatting.py theano/gpuarray/pool.py tests/scalar/test_basic.py theano/tensor/sort.py doc/extending/optimization.txt theano/tensor/fourier.py theano/gpuarray/nnet.py tests/scan/test_basic.py theano/gpuarray/subtensor.py theano/scalar/basic.py theano/gof/__init__.py theano/tensor/nnet/conv3d2d.py tests/compile/test_monitormode.py theano/tensor/opt_uncanonicalize.py tests/gof/test_opt.py theano/tensor/nnet/nnet.py tests/gof/test_op.py tests/gof/test_fg.py theano/compile/mode.py theano/tensor/raw_random.py doc/extending/graphstructures.txt theano/tensor/blas_c.py theano/compile/debugmode.py theano/sparse/basic.py tests/sandbox/linalg/test_linalg.py theano/gof/compilelock.py theano/tensor/opt.py theano/gpuarray/basic_ops.py tests/tensor/test_opt.py theano/gof/opt.py theano/gpuarray/linalg.py theano/compile/function/pfunc.py tests/compile/test_debugmode.py theano/misc/doubleop.py theano/typed_list/opt.py theano/gpuarray/blocksparse.py doc/extending/cop.txt theano/tensor/nnet/abstract_conv.py theano/tensor/signal/pool.py tests/tensor/test_blas.py theano/ifelse.py doc/extending/fibby.txt doc/tutorial/debug_faq.txt theano/tensor/nnet/sigm.py theano/gof/optdb.py theano/gof/graph.py tests/test_printing.py theano/gpuarray/dnn.py theano/gpuarray/rng_mrg.py theano/tensor/blas.py doc/extending/op.txt theano/sandbox/rng_mrg.py theano/tensor/nlinalg.py theano/gpuarray/opt_util.py theano/gof/destroyhandler.py theano/printing.py theano/tensor/nnet/corr3d.py theano/compile/builders.py theano/tensor/io.py theano/breakpoint.py theano/gof/type.py theano/sparse/opt.py theano/tensor/slinalg.py theano/gpuarray/dnn_opt.py theano/scan/utils.py,0b0ad5127576a2cd8d409e23846c2a3e76ccb0a6 b58fa026aea3758967ae2f3988250985eafceee8 9bbaf30a428570a504ed38b85796091fc680ca44 652fa754b2ebf2f877e8ba04ffad9d9d03a41e1d fe70d40b2e659e8a3828cb9325576df9979a1e7c d0e4dfc14ce3557336dff7d0ad27b5f91e8cdc7d 033c51c1397315e8092d9b6fec5bbd556a793ed5 ff3a67f1bab24c3f9b5e48e2fcf4e792c1b80388 1292c242d6106d6cab57761c4c7c9b6d9fb813ed a4eb9873ef84104a3abbd03c09ab8bff4a489fd5 4afee7a7cf289bf19cbbecf424776bb40015efed ad94341076f8a997eb986affc9a5e5d22f9ac360 df09663aa2256c0ace475a4d30c3e937c09f3336 bf41a64576ea567731fe7e504f53fd352d9b19a5 7668d63298799d1b11ad94c5e5803d052a118bc6 825b3071866fdc142e4f5f17cbb731b1dbd5ec27 55ca059aab72d1a3e427795a0b08854699499184 b68042456c1db077c4f022f2b21eb96bbeb663fc 60f3ccfe5a8a92792acd7778d58a344df9e28254 3ebfdafdd87b697851802bb8b498075a458623a1,"brandonwillard labeled 2020-11-13 22:27:40,brandonwillard labeled 2020-11-13 22:27:40,brandonwillard labeled 2020-11-13 22:27:40,brandonwillard milestoned 2020-11-13 22:27:40,brandonwillard assigned 2020-11-13 22:27:40,brandonwillard convert_to_draft 2020-11-14 23:04:02,brandonwillard renamed 2020-11-15 03:08:45,brandonwillard head_ref_force_pushed 2020-11-21 07:51:22,brandonwillard head_ref_force_pushed 2020-11-21 08:12:15,brandonwillard head_ref_force_pushed 2020-11-22 04:19:26,brandonwillard ready_for_review 2020-11-23 01:37:31,brandonwillard head_ref_force_pushed 2020-11-23 01:39:07,brandonwillard head_ref_force_pushed 2020-11-23 03:14:13,brandonwillard referenced 2020-11-23 17:54:28,brandonwillard merged 2020-11-23 17:54:28,brandonwillard closed 2020-11-23 17:54:28,brandonwillard head_ref_deleted 2020-11-23 17:54:33,brandonwillard mentioned 2020-11-23 18:08:56,brandonwillard subscribed 2020-11-23 18:08:56",codecov[bot] canyon289 twiecki brandonwillard,8,True
75,161,Avoid Elemwise fusion for scalar Ops without C implementations,brandonwillard,"This PR fixes an issue involving the fusion of `Elemwise` `Op`s with scalar `Op`s that do not have `Op.c_code` implementations.

There were no *direct* tests for the relevant condition in `local_elemwise_fusion_op` (i.e. the `return` missing from within [here](https://github.com/pymc-devs/Theano-PyMC/blob/0150ddf616353b14a72159b5ac4e7e9f34c03f24/theano/tensor/opt.py#L7694)), so, naturally, this issue went unnoticed.  It's possible&mdash;albeit doubtful&mdash;that there were even any _indirect_ tests for this (whether intentional or not).  

This is yet another great example of how badly we need to refactor the tests (e.g. #141, #23, etc.) and dramatically change the testing standards.  For example, the test added in this PR creates [its own `Op`](https://github.com/pymc-devs/Theano-PyMC/blob/7a55dade02648b27ef5d73fffef08ba45107d62c/tests/tensor/test_opt.py#L2101) that lacks a `c_code` method; had we used an existing `Op` that lacked a `c_code` method (e.g. `theano.tensor.basic.i0`) we would've implicitly added an unnecessary testing dependency/requirement, and, in the somewhat likely event that a `c_code` implementation is given to said `Op`, the entire test would've been silently invalidated.  
Likewise, the same test attempts to force C compilation and explicitly includes the relevant optimizations; however, many tests in that module simply assume that the optimizations they're testing are enabled in the default mode object (e.g. `mode_opt` in `tests.tensor.test_opt`).  This approach is confounded by all the other optimizations enabled in the default/global mode, and it makes all the tests that rely on it brittle and highly dependent on those other unrelated optimizations.

Closes #160.",bug graph rewriting,,brandonwillard,2020-11-15 00:37:53,2020-11-15 03:22:37,theano/tensor/opt.py tests/tensor/test_opt.py,002b7cdd24d15094c8cc39cf7a263aa67b0ce250 3b9dbb06331e15a023b5df000814868d57879125 2de5415d222f652adf8011e44657a81de1a8e7f0,"brandonwillard labeled 2020-11-15 00:37:53,brandonwillard labeled 2020-11-15 00:37:53,brandonwillard assigned 2020-11-15 00:37:54,brandonwillard renamed 2020-11-15 00:38:35,brandonwillard head_ref_force_pushed 2020-11-15 02:36:39,brandonwillard referenced 2020-11-15 03:22:36,brandonwillard merged 2020-11-15 03:22:36,brandonwillard closed 2020-11-15 03:22:37,brandonwillard head_ref_deleted 2020-11-15 03:22:43",codecov[bot] brandonwillard,2,True
76,162,Remove string compat,eigenfoo,Supercedes https://github.com/pymc-devs/Theano-PyMC/pull/144,,,,2020-11-15 05:22:36,2020-11-20 20:08:26,theano/tensor/subtensor.py doc/conf.py theano/compile/ops.py theano/gof/utils.py tests/gof/test_compute_test_value.py theano/gof/params_type.py theano/sandbox/jax_linker.py theano/scan/basic.py tests/tensor/nnet/test_corr.py theano/tensor/fft.py tests/sparse/test_basic.py theano/gof/toolbox.py theano/sandbox/multinomial.py theano/gpuarray/extra_ops.py theano/tensor/basic.py theano/gof/op.py tests/test_rop.py theano/misc/pkl_utils.py theano/misc/check_multi_gpu.py theano/tensor/extra_ops.py theano/gpuarray/opt.py theano/tensor/nnet/conv.py tests/tensor/utils.py theano/sandbox/linalg/ops.py theano/scan/op.py theano/tensor/elemwise.py theano/tensor/nnet/bn.py theano/scalar/basic_scipy.py theano/misc/hooks/reindent.py theano/gradient.py theano/gof/lazylinker_c.py theano/misc/frozendict.py doc/crei2013/ifelse_switch.py theano/gpuarray/kernel_codegen.py theano/gof/link.py theano/gof/cc.py versioneer.py tests/gpuarray/test_extra_ops.py theano/compile/profiling.py theano/gpuarray/elemwise.py theano/tensor/nnet/opt.py theano/misc/ordered_set.py theano/gof/fg.py theano/tensor/nnet/ctc.py theano/tensor/nnet/corr.py theano/configdefaults.py theano/gpuarray/sort.py theano/misc/elemwise_openmp_speedup.py theano/tensor/inc_code.py theano/compile/function/types.py tests/tensor/test_misc.py theano/tensor/var.py theano/compile/sharedvalue.py theano/gpuarray/type.py tests/gpuarray/test_dnn.py tests/tensor/nnet/speed_test_conv.py theano/d3viz/formatting.py theano/tensor/nnet/neighbours.py theano/typed_list/type.py bin/theano_cache.py theano/misc/check_blas.py theano/tensor/sort.py theano/compile/io.py theano/tensor/elemwise_cgen.py theano/scan/scan_perform_ext.py tests/gof/test_vm.py theano/sandbox/jaxify.py theano/tensor/fourier.py theano/gpuarray/fft.py theano/gpuarray/nnet.py theano/tensor/type.py theano/gpuarray/__init__.py theano/gpuarray/subtensor.py theano/scalar/basic.py theano/gpuarray/blas.py theano/tensor/nnet/conv3d2d.py theano/tensor/nnet/nnet.py tests/tensor/test_elemwise.py tests/gof/test_op.py tests/sandbox/test_rng_mrg.py theano/compile/mode.py tests/tensor/nnet/test_corr3d.py theano/tensor/raw_random.py theano/configparser.py tests/gof/test_graph.py doc/scripts/docgen.py theano/misc/safe_asarray.py theano/compile/debugmode.py theano/sparse/basic.py tests/sandbox/linalg/test_linalg.py theano/gof/compilelock.py theano/tensor/opt.py theano/gpuarray/basic_ops.py tests/tensor/test_opt.py theano/scalar/basic_sympy.py theano/misc/gh_api.py theano/gof/opt.py theano/compile/function/pfunc.py tests/gpuarray/run_dnn_conv.py theano/tensor/nnet/abstract_conv.py theano/tensor/signal/pool.py theano/ifelse.py tests/tensor/test_basic.py theano/tensor/nnet/sigm.py theano/gof/graph.py theano/gof/optdb.py theano/gof/cmodule.py tests/tensor/signal/test_pool.py theano/gof/compiledir.py theano/gpuarray/dnn.py theano/misc/hooks/check_whitespace.py theano/tensor/blas.py tests/gpuarray/test_multinomial.py theano/sandbox/rng_mrg.py theano/sparse/type.py theano/misc/elemwise_time_test.py tests/gof/test_cc.py theano/typed_list/basic.py theano/gof/destroyhandler.py theano/printing.py theano/tensor/nnet/corr3d.py theano/compile/builders.py theano/tensor/io.py theano/breakpoint.py theano/sparse/__init__.py theano/gof/type.py theano/sparse/opt.py theano/tensor/slinalg.py theano/tensor/xlogx.py theano/raise_op.py theano/scan/utils.py tests/tensor/nnet/test_conv.py,9bcb6f12dea1510a451b8307d1c0abd1cda93033,"eigenfoo review_requested 2020-11-15 05:51:54,michaelosthege milestoned 2020-11-15 18:49:34,eigenfoo mentioned 2020-11-20 05:41:51,eigenfoo subscribed 2020-11-20 05:41:51,brandonwillard mentioned 2020-11-20 13:19:09,brandonwillard subscribed 2020-11-20 13:19:09,brandonwillard head_ref_force_pushed 2020-11-20 16:40:56,brandonwillard head_ref_force_pushed 2020-11-20 16:46:17,brandonwillard referenced 2020-11-20 20:08:26,brandonwillard merged 2020-11-20 20:08:26,brandonwillard closed 2020-11-20 20:08:26,eigenfoo head_ref_deleted 2020-11-20 20:12:16,brandonwillard mentioned 2020-11-20 20:12:44,brandonwillard subscribed 2020-11-20 20:12:45",codecov[bot] michaelosthege eigenfoo brandonwillard,6,True
77,164,Changed broadcast_like with broadcast_to in opt.py,nitish-awasthi,Fixes #159 ,,brandonwillard,,2020-11-15 07:46:59,2020-12-15 20:11:29,theano/scan/c_code/scan_perform.c theano/scan/scan_perform.pyx tests/tensor/test_type.py theano/ifelse.py tests/gof/test_opt.py theano/gof/fg.py theano/scan/opt.py tests/gof/test_fg.py setup.py theano/tensor/var.py tests/scalar/test_basic.py theano/misc/pkl_utils.py theano/scan/scan_perform_ext.py tests/tensor/utils.py theano/tensor/opt.py tests/scalar/test_type.py theano/gof/opt.py theano/sandbox/jaxify.py tests/gof/utils.py theano/tensor/type.py theano/scan/numpy_api_changes.diff .github/workflows/test.yml tests/sandbox/test_jax.py theano/scalar/basic.py,553d0a079be6214dd9b416a845392cbf975fec11 d346c543958908a121adb6514938f33dc10ec504 a96e59b7d98999c845701be99dc9891d39166967,"brandonwillard mentioned 2020-11-17 04:11:14,brandonwillard subscribed 2020-11-17 04:11:15,brandonwillard convert_to_draft 2020-11-17 04:51:28,nitish-awasthi renamed 2020-11-17 05:20:12,michaelosthege closed 2020-12-15 20:11:29,nitish-awasthi mentioned 2020-12-15 20:11:30,nitish-awasthi subscribed 2020-12-15 20:11:30",codecov[bot] nitish-awasthi michaelosthege brandonwillard,5,False
78,166,Return the correct output for multi-output inputs in a JAXified graph,brandonwillard,"This PR provides a fix for the case in which an intermediate graph input is one of multiple `Op` outputs in a JAX-ified graph.

Closes #165.",bug JAX,,brandonwillard,2020-11-16 01:08:04,2020-11-16 01:57:10,tests/sandbox/test_jax.py theano/sandbox/jaxify.py,459f1f2d0b0e7e233cf5b8eaf83409c26775ab54,"brandonwillard labeled 2020-11-16 01:08:04,brandonwillard labeled 2020-11-16 01:08:05,brandonwillard assigned 2020-11-16 01:08:05,brandonwillard referenced 2020-11-16 01:57:10,brandonwillard merged 2020-11-16 01:57:10,brandonwillard closed 2020-11-16 01:57:10,brandonwillard head_ref_deleted 2020-11-16 01:57:14,brandonwillard mentioned 2020-11-16 14:19:08,brandonwillard subscribed 2020-11-16 14:19:08",codecov[bot] dfm brandonwillard,2,True
79,167,Refactor setup.py,brandonwillard,The PR refactors and updates the `setup.py` file/process.,enhancement important refactor,eigenfoo,brandonwillard,2020-11-16 01:50:43,2020-11-16 03:11:25,setup.py,0dbc00f4c1861b3bbb448253759fb59dfaea1f4a,"brandonwillard labeled 2020-11-16 01:50:43,brandonwillard labeled 2020-11-16 01:50:43,brandonwillard labeled 2020-11-16 01:50:43,brandonwillard milestoned 2020-11-16 01:50:43,brandonwillard assigned 2020-11-16 01:50:44,brandonwillard referenced 2020-11-16 03:11:25,brandonwillard merged 2020-11-16 03:11:25,brandonwillard closed 2020-11-16 03:11:25,brandonwillard head_ref_deleted 2020-11-16 03:11:29",codecov[bot] eigenfoo brandonwillard,1,True
80,168,Update Cython-generated Scan code,brandonwillard,This PR provides a long overdue update to the Cython-generated C code used by `Scan.perform`.,enhancement important,,brandonwillard,2020-11-16 02:06:56,2020-11-16 03:10:41,theano/scan/scan_perform.pyx theano/scan/scan_perform_ext.py theano/scan/numpy_api_changes.diff theano/scan/c_code/scan_perform.c,38de85756f187142c018fd6026a9b4318167909f,"brandonwillard labeled 2020-11-16 02:06:56,brandonwillard labeled 2020-11-16 02:06:56,brandonwillard milestoned 2020-11-16 02:06:56,brandonwillard assigned 2020-11-16 02:06:56,brandonwillard referenced 2020-11-16 03:10:41,brandonwillard merged 2020-11-16 03:10:41,brandonwillard closed 2020-11-16 03:10:41,brandonwillard head_ref_deleted 2020-11-16 03:10:45",codecov[bot] brandonwillard,1,True
81,169,Add ScanOp jaxification,junpenglao,"[WIP] Add a Jax conversion for Scan Op.
Fix #69.

Theano Scan Op API is difficult to work with due to it allows kwargs being a dictionary that additionally defined `taps` (time slices of sequences or outputs), internally `ScanArgs` parse the user inputs (i.e., outer_inputs) into a format that is acceptable to the inner function `fn` (i.e., inner_inputs), and perform additional bookkeeping so that the output is the correct format feeding into the inner function at the next step. The combination of `Scan` kwargs and the `taps` kwargs results in [6 types of different `Scan` variables](http://deeplearning.net/software/theano/extending/scan.html#scan-variables), which we need to slice correctly.  

The Jax conversion in this PR is mostly spell-out these conversion step explicitly. See this gist as a demonstration of some use cases with explicit theano and native Jax Scan implementation: https://gist.github.com/junpenglao/0ec646f11dcec65c0657c64cc9561b46

Current Status:
- [x] Scan jaxification
- [x] Figure out why the output from `theano.sandbox.jaxify.jax_funcify(fgraph)(*inputs)` has the wrong shape
~~- [ ] Implement mit_mot~~",JAX important,brandonwillard,junpenglao,2020-11-16 11:04:54,2020-11-20 03:48:36,tests/sandbox/test_jax.py theano/scan/utils.py theano/sandbox/jaxify.py,bf752d816eb913cd1a65342d63bf979af289978c 0ea343502a8b0c9f9a8cef1f16632d80ed6a128d d222fa16d236c546f619886a8cb46da89871d35e 4fee2746ef844fb00b9b1ceae6bb51d9d7af6869,"junpenglao review_requested 2020-11-16 11:04:56,brandonwillard convert_to_draft 2020-11-16 17:12:20,brandonwillard renamed 2020-11-16 17:12:42,brandonwillard labeled 2020-11-16 17:13:06,brandonwillard labeled 2020-11-16 17:13:06,junpenglao assigned 2020-11-16 17:13:13,junpenglao ready_for_review 2020-11-17 11:09:39,junpenglao review_requested 2020-11-17 11:14:24,brandonwillard mentioned 2020-11-18 07:42:02,brandonwillard subscribed 2020-11-18 07:42:02,junpenglao mentioned 2020-11-18 20:28:52,junpenglao subscribed 2020-11-18 20:28:52,junpenglao review_requested 2020-11-19 21:44:39,brandonwillard referenced 2020-11-20 03:48:36,brandonwillard merged 2020-11-20 03:48:36,brandonwillard closed 2020-11-20 03:48:36,junpenglao head_ref_deleted 2020-11-20 07:42:50",codecov[bot] junpenglao brandonwillard,30,True
82,173,Use isinstance to check types in filter method,brandonwillard,"This PR changes the use of `type(x) == some_type` with `isinstance(x, some_type)` in `TensorType.filter` and `Scalar.filter` so that `ndarray` and `float` subclasses can be used.

Closes #172.",bug enhancement,,brandonwillard,2020-11-16 20:15:48,2020-11-17 00:47:38,theano/tensor/var.py tests/tensor/utils.py theano/tensor/opt.py tests/scalar/test_type.py tests/tensor/test_type.py theano/gof/opt.py theano/ifelse.py theano/scan/opt.py theano/scalar/basic.py tests/scalar/test_basic.py theano/misc/pkl_utils.py theano/tensor/type.py,2507f6208246eb5534b112e88d7830de3e14b8b6 100d62b177533ab43e4794218c87652caad17ef1,"brandonwillard labeled 2020-11-16 20:15:48,brandonwillard labeled 2020-11-16 20:15:48,brandonwillard assigned 2020-11-16 20:15:49,brandonwillard head_ref_force_pushed 2020-11-16 22:18:42,brandonwillard head_ref_force_pushed 2020-11-16 23:02:50,brandonwillard head_ref_force_pushed 2020-11-16 23:26:53,brandonwillard referenced 2020-11-17 00:47:38,brandonwillard merged 2020-11-17 00:47:38,brandonwillard closed 2020-11-17 00:47:38,brandonwillard head_ref_deleted 2020-11-17 00:47:43",codecov[bot] brandonwillard,1,True
83,174,Update conda CI steps,brandonwillard,This PR fixes the current CI issues involving our use of a deprecated `setup-miniconda` action.  It also changes our CI steps so that they use the faster `mamba` instead of `conda`.,bug important CI,,brandonwillard,2020-11-16 21:34:20,2020-11-16 22:17:25,.github/workflows/test.yml,56f03d4143556656d4d342947a887731edac3986 1d05e941461fe0d7e2d7561d3e434406e19abb1b,"brandonwillard labeled 2020-11-16 21:34:20,brandonwillard labeled 2020-11-16 21:34:20,brandonwillard labeled 2020-11-16 21:34:20,brandonwillard assigned 2020-11-16 21:34:20,brandonwillard renamed 2020-11-16 21:44:12,brandonwillard referenced 2020-11-16 22:17:25,brandonwillard merged 2020-11-16 22:17:25,brandonwillard closed 2020-11-16 22:17:25,brandonwillard head_ref_deleted 2020-11-16 22:17:33",codecov[bot] brandonwillard,1,True
84,176,Update FunctionGraph interface,brandonwillard,This PR cleans up the `FunctionGraph` interface and docstrings.  It also adds a lot of missing unit tests.,enhancement graph rewriting,,brandonwillard,2020-11-17 02:04:31,2020-11-17 04:48:52,tests/gof/test_fg.py tests/gof/utils.py theano/gof/fg.py tests/gof/test_opt.py,1cbd5f2e232ff924611a65d107890adca6103e80 bfce7e8e533e4de83375abe87b0e1d5f3d4411b6 d8a82f736a964e91b4ba7f4aaae39ca307b9ec2f,"brandonwillard labeled 2020-11-17 02:04:31,brandonwillard labeled 2020-11-17 02:04:31,brandonwillard milestoned 2020-11-17 02:04:31,brandonwillard assigned 2020-11-17 02:04:31,brandonwillard head_ref_force_pushed 2020-11-17 02:05:06,brandonwillard head_ref_force_pushed 2020-11-17 02:53:43,brandonwillard referenced 2020-11-17 04:48:52,brandonwillard merged 2020-11-17 04:48:52,brandonwillard closed 2020-11-17 04:48:52,brandonwillard head_ref_deleted 2020-11-17 04:48:56,brandonwillard renamed 2020-11-17 04:49:10",codecov[bot] brandonwillard,1,True
85,180,Start moving type definitions,canyon289,"Performing one to make sure this is correct before doing this a bunch more times.

1. Did I do this right for `theano.tensor.basic` for the one instance. If so I'll do the rest

2. For `theano.tensor.basic` the respective type file is `theano.tensor.type` but for `theano.scalar.basic` there is no such `type.py` in the submodule. Additionally the definitions there go through caching logic, so for some of the type definitions if they were moved I believe it would just create another dependency instead of removing one. Is my thinking correct?
https://github.com/pymc-devs/Theano-PyMC/blob/master/theano/scalar/basic.py#L730

Or perhaps maybe we just need to create a `theano.scalar.type` module and move all the associated code over so it mirrors the tensor module?




Fixes https://github.com/pymc-devs/Theano-PyMC/issues/53",,brandonwillard,,2020-11-18 05:05:13,2020-11-22 03:55:06,theano/tensor/subtensor.py tests/gpuarray/test_nnet.py theano/compile/ops.py tests/gof/test_compute_test_value.py tests/d3viz/models.py tests/tensor/nnet/test_corr.py tests/sparse/test_basic.py tests/tensor/signal/test_conv.py tests/tensor/test_mlp.py theano/tensor/basic.py tests/tensor/test_keepdims.py theano/misc/latence_gpu_transfert.py theano/tensor/extra_ops.py tests/tensor/test_raw_random.py tests/tensor/test_blas_c.py theano/sandbox/fourier.py tests/gpuarray/test_basic_ops.py theano/tensor/elemwise.py tests/tensor/nnet/test_blocksparse.py tests/compile/function/test_pfunc.py tests/gpuarray/test_linalg.py theano/gradient.py tests/sandbox/test_jax.py tests/tensor/nnet/test_neighbours.py tests/tensor/test_inc_subtensor.py tests/tensor/test_sort.py tests/tensor/nnet/test_abstract_conv.py tests/gpuarray/test_extra_ops.py tests/sparse/test_opt.py theano/tensor/nnet/ctc.py tests/gpuarray/test_opt.py doc/extending/extending_theano_solution_1.py tests/tensor/test_misc.py tests/gpuarray/test_dnn.py tests/tensor/nnet/speed_test_conv.py tests/test_gradient.py tests/compile/function/test_types.py tests/gpuarray/test_scan.py tests/scalar/test_basic.py tests/compile/test_misc.py doc/tutorial/loop_solution_1.py tests/gof/test_vm.py tests/test_breakpoint.py tests/tensor/test_gc.py tests/sandbox/test_multinomial_wo_replacement.py theano/tensor/type.py tests/compile/function/test_function.py tests/scan/test_basic.py tests/tensor/test_nlinalg.py tests/tensor/test_subtensor.py tests/test_pickle_unpickle_theano_fn.py doc/hpcs2011_tutorial/scan_pow.py tests/compile/test_monitormode.py tests/sparse/sandbox/test_sp.py tests/tensor/nnet/test_nnet.py theano/sandbox/minimal.py theano/tensor/nnet/nnet.py tests/tensor/test_elemwise.py tests/gof/test_op.py tests/sandbox/test_rng_mrg.py tests/tensor/nnet/test_corr3d.py theano/tensor/__init__.py doc/crei2013/scan_pow.py tests/compile/test_profiling.py tests/sandbox/test_multinomial.py theano/sparse/basic.py tests/sandbox/linalg/test_linalg.py tests/gof/test_graph_opt_caching.py theano/tensor/opt.py tests/tensor/test_opt.py doc/hpcs2011_tutorial/pycuda_double_op.py tests/scan/test_checkpoints.py tests/compile/test_debugmode.py tests/compile/test_shared.py tests/tensor/test_shared_randomstreams.py tests/sparse/test_sp2.py tests/tensor/test_slinalg.py tests/gpuarray/test_elemwise.py tests/tensor/test_blas.py tests/gpuarray/test_blocksparse.py tests/tensor/test_basic.py tests/tensor/test_opt_uncanonicalize.py theano/gof/graph.py tests/tensor/signal/test_pool.py tests/test_printing.py tests/tensor/nnet/test_sigm.py tests/gpuarray/test_multinomial.py theano/sandbox/rng_mrg.py tests/gof/test_cc.py theano/tensor/nlinalg.py tests/tensor/test_extra_ops.py tests/tensor/nnet/test_opt.py tests/test_ifelse.py tests/tensor/test_fourier.py tests/tensor/nnet/test_conv.py,fd2f4bc6ecd2580a451b0c39d6af13295f7fa6c7 32056d4f1d11c9253ff5d57453fc6d2d2677ccb9,"canyon289 renamed 2020-11-18 05:05:27,canyon289 mentioned 2020-11-18 13:23:49,canyon289 subscribed 2020-11-18 13:23:49,michaelosthege milestoned 2020-11-18 21:59:04,canyon289 head_ref_force_pushed 2020-11-19 06:04:53,michaelosthege mentioned 2020-11-19 06:14:50,michaelosthege subscribed 2020-11-19 06:14:50,canyon289 head_ref_force_pushed 2020-11-20 16:17:50,canyon289 head_ref_force_pushed 2020-11-20 16:34:17,canyon289 head_ref_force_pushed 2020-11-20 17:22:03,canyon289 closed 2020-11-22 03:55:07",canyon289 michaelosthege brandonwillard,15,False
86,181,"Add notebooks directory for Sandbox, Development and Example notebooks",michaelosthege,"Jupyter notebooks can not only serve as examples, but also as tools to jumpstart development on the codebase.

With a `notebooks/` directory at the root-level of the repo, such notebooks are easy to find (unlike in the PyMC3 repo) and can still be linked into a Sphinx-documentation (using [`nbsphinx_link`](https://github.com/vidartf/nbsphinx-link) as we did [here](https://github.com/michaelosthege/calibr8/blob/master/docs/source/Example_Model_Fitting.nblink)).

### Changes
+ `.vs` cache folder added to gitignore
+ `notebooks/Sandbox*` added to gitignore - this way one can make arbitrary ""Sandbox_MyTestingNotebook.ipynb"" notebooks that are pleasantly gitignored
+ `Dev_ClassGraph.ipynb` is a notebook for visualizing types and their superclasses, while coloring the nodes in the graph according to the modules.
",,,,2020-11-18 08:29:07,2020-11-18 10:26:55,notebooks/Dev_ClassGraph.ipynb .gitignore,4c0df6bb71736d973c7595b4ef7191131684c74e ebbbe1656aed4374fa6b41e626f9d30ddde29592,"michaelosthege mentioned 2020-11-18 10:26:50,michaelosthege subscribed 2020-11-18 10:26:50,twiecki referenced 2020-11-18 10:26:55,twiecki merged 2020-11-18 10:26:55,twiecki closed 2020-11-18 10:26:55,michaelosthege head_ref_deleted 2020-11-18 10:28:17",michaelosthege twiecki brandonwillard,4,True
87,184,Implement a Second Op,junpenglao,Fix #138.,,,,2020-11-19 17:13:07,2020-11-19 17:46:04,tests/sandbox/test_jax.py theano/scan/utils.py theano/sandbox/jaxify.py,94455d1ab0acc9407422a8c21be284efba302e6f 6a559d55adf4d90ca1f51ad04aafc06454da086d 5ac55a0053d03fd79dab470199e51a422a4f312e 51e19116da1a3c6e3ee2e04157d0ce63cb56b4fa 7324a3017b0510f7f47fa0a17686389a71f9808a 7364a0a95883d8a98c8ffa8ef8a31716945e1483,"junpenglao closed 2020-11-19 17:46:04,junpenglao head_ref_deleted 2020-11-19 17:46:13",junpenglao,0,False
88,185,Implement a Jax Second Op,junpenglao,Fix #138,,brandonwillard,,2020-11-19 17:53:44,2020-11-19 19:29:31,tests/sandbox/test_jax.py theano/sandbox/jaxify.py,9b0c0e39a42e787637848c60561f249abe43a5bd 992769c6ec3ec526f5fa0a30838f20962180fcd6 f786ff2cc8efaf1c2aaded4f9696b029c288bb4b,"brandonwillard referenced 2020-11-19 19:29:31,brandonwillard merged 2020-11-19 19:29:31,brandonwillard closed 2020-11-19 19:29:31,junpenglao head_ref_deleted 2020-11-19 21:34:53",codecov[bot] junpenglao dfm brandonwillard,5,True
89,187,Use jax.lax.cond for IfElse Op,eigenfoo,"~~[WIP, will request review when ready.]~~

Closes #178.

cc @dfm @brandonwillard 

The test fails right now, both for the case with `np.array(True)` value, or `tt.dscalar() < 0.5` (with an input value appropriately passed). I've included (the last lines of) the traceback below, and can say that both cases produce similar error messages.

I'm unsure what we want to do here - it still seems to me that the if and else paths must both return the same dtype, which is not the case here. Am I missing something?

<details>
  <summary>Traceback</summary>

```
During handling of the above exception, another exception occurred:

    def test_jax_ifelse():

        import theano.ifelse

        true_vals = np.r_[1, 2, 3]
        false_vals = np.r_[-1, -2, -3]

        x = theano.ifelse.ifelse(np.array(True), true_vals, false_vals)
        x_fg = theano.gof.FunctionGraph([], [x])

>       compare_jax_and_py(x_fg, [])

test_jax.py:473:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
test_jax.py:59: in compare_jax_and_py
    jax_res = theano_jax_fn(*inputs)
../../theano/compile/function/types.py:974: in __call__
    if output_subset is None
../../theano/gof/link.py:702: in streamline_default_f
    raise_with_op(node, thunk)
../../theano/gof/link.py:343: in raise_with_op
    raise exc_value.with_traceback(exc_trace)
../../theano/gof/link.py:698: in streamline_default_f
    thunk()
../../theano/sandbox/jax_linker.py:88: in thunk
    for jax_impl_jit in jax_impl_jits
../../theano/sandbox/jax_linker.py:88: in <listcomp>
    for jax_impl_jit in jax_impl_jits
../../theano-venv/lib/python3.7/site-packages/jax/traceback_util.py:133: in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
../../theano-venv/lib/python3.7/site-packages/jax/api.py:223: in f_jitted
    donated_invars=donated_invars)
../../theano-venv/lib/python3.7/site-packages/jax/core.py:1177: in bind
    return call_bind(self, fun, *args, **params)
../../theano-venv/lib/python3.7/site-packages/jax/core.py:1630: in call_bind
    outs = primitive.impl(fun, *args, **params)
../../theano-venv/lib/python3.7/site-packages/jax/interpreters/xla.py:557: in _xla_call_impl
    *unsafe_map(arg_spec, args))
../../theano-venv/lib/python3.7/site-packages/jax/linear_util.py:251: in memoized_fun
    ans = call(fun, *args)
../../theano-venv/lib/python3.7/site-packages/jax/interpreters/xla.py:638: in _xla_callable
    fun, pvals, instantiate=False, stage_out=True, bottom=True)  # type: ignore
../../theano-venv/lib/python3.7/site-packages/jax/interpreters/partial_eval.py:1272: in trace_to_jaxpr
    jaxpr, (out_pvals, consts, env) = fun.call_wrapped(pvals)
../../theano-venv/lib/python3.7/site-packages/jax/linear_util.py:160: in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
../../theano/sandbox/jaxify.py:180: in jax_func
    return return_func(*func_args)
../../theano/sandbox/jaxify.py:537: in ifelse
    operand=None
../../theano-venv/lib/python3.7/site-packages/jax/_src/lax/control_flow.py:665: in cond
    return _cond(*args, **kwargs)
../../theano-venv/lib/python3.7/site-packages/jax/_src/lax/control_flow.py:695: in _cond
    (true_fun, false_fun), ops_tree, ops_avals)
../../theano-venv/lib/python3.7/site-packages/jax/_src/lax/control_flow.py:2628: in _initial_style_jaxprs_with_common_consts
    _initial_style_open_jaxpr(fun, in_tree, in_avals) for fun in funs])
../../theano-venv/lib/python3.7/site-packages/jax/_src/lax/control_flow.py:2628: in <listcomp>
    _initial_style_open_jaxpr(fun, in_tree, in_avals) for fun in funs])
../../theano-venv/lib/python3.7/site-packages/jax/_src/lax/control_flow.py:2608: in _initial_style_open_jaxpr
    wrapped_fun, in_pvals, instantiate=True, stage_out=False)  # type: ignore
../../theano-venv/lib/python3.7/site-packages/jax/interpreters/partial_eval.py:1272: in trace_to_jaxpr
    jaxpr, (out_pvals, consts, env) = fun.call_wrapped(pvals)
../../theano-venv/lib/python3.7/site-packages/jax/linear_util.py:160: in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
../../theano/sandbox/jaxify.py:535: in <lambda>
    lambda _: jax.lax.cond(n_outs > 1, lambda _: args[:n_outs], lambda _: args[0], operand=None),
../../theano-venv/lib/python3.7/site-packages/jax/_src/lax/control_flow.py:665: in cond
    return _cond(*args, **kwargs)
../../theano-venv/lib/python3.7/site-packages/jax/_src/lax/control_flow.py:701: in _cond
    false_out_tree, false_jaxpr.out_avals)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

what = 'true_fun and false_fun output', tree1 = PyTreeDef(tuple, [*]), avals1 = [ShapedArray(int64[3])], tree2 = *, avals2 = [ShapedArray(int64[3])]

    def _check_tree_and_avals(what, tree1, avals1, tree2, avals2):
      """"""Raises TypeError if (tree1, avals1) does not match (tree2, avals2).

      Corresponding `tree` and `avals` must match in the sense that the number of
      leaves in `tree` must be equal to the length of `avals`. `what` will be
      prepended to details of the mismatch in TypeError.
      """"""
      if tree1 != tree2:
        msg = (""{} must have same type structure, got {} and {}."")
>       raise TypeError(msg.format(what, tree1, tree2))
E       TypeError: true_fun and false_fun output must have same type structure, got PyTreeDef(tuple, [*]) and *.
E       Apply node that caused the error: if{}(TensorConstant{True}, TensorConstant{[1 2 3]}, TensorConstant{[-1 -2 -3]})
E       Toposort index: 0
E       Inputs types: [TensorType(bool, scalar), TensorType(int64, vector), TensorType(int64, vector)]
E       Inputs shapes: []
E       Inputs strides: []
E       Inputs values: []
E       Outputs clients: [['output']]
E
E       Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
E         File ""/Users/george/Theano-PyMC/theano-venv/lib/python3.7/site-packages/pluggy/manager.py"", line 87, in <lambda>
E           firstresult=hook.spec.opts.get(""firstresult"") if hook.spec else False,
E         File ""/Users/george/Theano-PyMC/theano-venv/lib/python3.7/site-packages/pluggy/callers.py"", line 187, in _multicall
E           res = hook_impl.function(*args)
E         File ""/Users/george/Theano-PyMC/theano-venv/lib/python3.7/site-packages/_pytest/python.py"", line 184, in pytest_pyfunc_call
E           result = testfunction(**testargs)
E         File ""/Users/george/Theano-PyMC/tests/sandbox/test_jax.py"", line 470, in test_jax_ifelse
E           x = theano.ifelse.ifelse(np.array(True), true_vals, false_vals)
E         File ""/Users/george/Theano-PyMC/theano/ifelse.py"", line 410, in ifelse
E           rval = new_ifelse(*ins, **dict(return_list=True))
E         File ""/Users/george/Theano-PyMC/theano/gof/op.py"", line 642, in __call__
E           node = self.make_node(*inputs, **kwargs)
E         File ""/Users/george/Theano-PyMC/theano/ifelse.py"", line 197, in make_node
E           return Apply(self, [c] + list(args), [t.type() for t in ts])
E         File ""/Users/george/Theano-PyMC/theano/ifelse.py"", line 197, in <listcomp>
E           return Apply(self, [c] + list(args), [t.type() for t in ts])
E
E       HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
```
</details>",,,,2020-11-20 00:29:54,2020-11-26 03:44:09,theano/tensor/subtensor.py doc/conf.py theano/compile/ops.py theano/gof/utils.py tests/gof/test_compute_test_value.py theano/gof/params_type.py theano/sandbox/jax_linker.py theano/scan/basic.py tests/tensor/nnet/test_corr.py theano/tensor/fft.py tests/sparse/test_basic.py theano/gof/toolbox.py theano/sandbox/multinomial.py theano/gpuarray/extra_ops.py theano/tensor/basic.py theano/gof/op.py tests/test_rop.py theano/misc/pkl_utils.py theano/misc/check_multi_gpu.py theano/tensor/extra_ops.py theano/gpuarray/opt.py theano/tensor/nnet/conv.py tests/tensor/utils.py theano/sandbox/linalg/ops.py theano/scan/op.py theano/tensor/elemwise.py theano/tensor/nnet/bn.py theano/scalar/basic_scipy.py theano/misc/hooks/reindent.py theano/gradient.py tests/sandbox/test_jax.py theano/gof/lazylinker_c.py theano/misc/frozendict.py doc/crei2013/ifelse_switch.py theano/gpuarray/kernel_codegen.py theano/gof/link.py theano/gof/cc.py versioneer.py tests/gpuarray/test_extra_ops.py theano/compile/profiling.py theano/gpuarray/elemwise.py theano/tensor/nnet/opt.py theano/misc/ordered_set.py theano/gof/fg.py theano/tensor/nnet/ctc.py theano/tensor/nnet/corr.py theano/configdefaults.py theano/gpuarray/sort.py theano/misc/elemwise_openmp_speedup.py theano/tensor/inc_code.py theano/compile/function/types.py tests/tensor/test_misc.py theano/tensor/var.py theano/compile/sharedvalue.py theano/gpuarray/type.py tests/gpuarray/test_dnn.py tests/tensor/nnet/speed_test_conv.py theano/d3viz/formatting.py theano/tensor/nnet/neighbours.py theano/typed_list/type.py bin/theano_cache.py theano/misc/check_blas.py theano/tensor/sort.py theano/compile/io.py theano/tensor/elemwise_cgen.py theano/scan/scan_perform_ext.py tests/gof/test_vm.py theano/sandbox/jaxify.py theano/tensor/fourier.py theano/gpuarray/fft.py theano/gpuarray/nnet.py theano/tensor/type.py theano/gpuarray/__init__.py theano/gpuarray/subtensor.py theano/scalar/basic.py theano/gpuarray/blas.py theano/tensor/nnet/conv3d2d.py theano/tensor/nnet/nnet.py tests/tensor/test_elemwise.py tests/gof/test_op.py notebooks/Dev_ClassGraph.ipynb tests/sandbox/test_rng_mrg.py theano/compile/mode.py tests/tensor/nnet/test_corr3d.py theano/tensor/raw_random.py theano/configparser.py tests/gof/test_graph.py doc/scripts/docgen.py theano/misc/safe_asarray.py theano/compile/debugmode.py theano/sparse/basic.py tests/sandbox/linalg/test_linalg.py theano/gof/compilelock.py theano/tensor/opt.py theano/gpuarray/basic_ops.py tests/tensor/test_opt.py theano/scalar/basic_sympy.py theano/misc/gh_api.py theano/gof/opt.py theano/compile/function/pfunc.py tests/gpuarray/run_dnn_conv.py theano/tensor/nnet/abstract_conv.py theano/tensor/signal/pool.py theano/ifelse.py tests/tensor/test_basic.py theano/tensor/nnet/sigm.py theano/gof/graph.py theano/gof/optdb.py theano/gof/cmodule.py tests/tensor/signal/test_pool.py theano/gof/compiledir.py theano/gpuarray/dnn.py theano/misc/hooks/check_whitespace.py theano/tensor/blas.py tests/gpuarray/test_multinomial.py theano/sandbox/rng_mrg.py theano/sparse/type.py theano/misc/elemwise_time_test.py tests/gof/test_cc.py theano/typed_list/basic.py theano/gof/destroyhandler.py theano/printing.py theano/tensor/nnet/corr3d.py theano/compile/builders.py theano/tensor/io.py theano/breakpoint.py theano/sparse/__init__.py theano/gof/type.py theano/sparse/opt.py theano/tensor/slinalg.py theano/tensor/xlogx.py theano/raise_op.py theano/scan/utils.py .gitignore tests/tensor/nnet/test_conv.py,f17d19d11c987bc55e84c9b3c6ede313be815c48 f715620d0c6085fc91ceebddd81f31749c9efa15 68d6392c97bc69e19737b827879d474e803058cc 438d6554f696e5ed238c2cdea37f713a3c301de2,"dfm mentioned 2020-11-20 00:29:54,dfm subscribed 2020-11-20 00:29:54,brandonwillard mentioned 2020-11-20 00:29:54,brandonwillard subscribed 2020-11-20 00:29:54,eigenfoo ready_for_review 2020-11-21 16:35:24,eigenfoo review_requested 2020-11-21 16:35:33,twiecki milestoned 2020-11-24 08:26:05,brandonwillard referenced 2020-11-26 03:44:09,brandonwillard merged 2020-11-26 03:44:09,brandonwillard closed 2020-11-26 03:44:09",codecov[bot] eigenfoo brandonwillard dfm twiecki,8,True
90,191,Reconfigure codecov to reduce false alarm rate.,twiecki,,CI,brandonwillard,,2020-11-21 17:34:05,2020-11-26 03:38:17,codecov.yml .github/workflows/test.yml,ee2fe2cbcd98c9a80c3884f887564a920757aab3 c38737eb7dfb7130a087e23dfcfdd261c0066fb2,"OriolAbril mentioned 2020-11-25 17:54:47,OriolAbril subscribed 2020-11-25 17:54:47,dfm mentioned 2020-11-25 18:48:36,dfm subscribed 2020-11-25 18:48:36,brandonwillard connected 2020-11-25 20:31:49,brandonwillard labeled 2020-11-25 22:17:01,brandonwillard referenced 2020-11-26 03:38:17,brandonwillard merged 2020-11-26 03:38:17,brandonwillard closed 2020-11-26 03:38:17",MarcoGorelli codecov[bot] OriolAbril brandonwillard dfm twiecki,8,True
91,193,Rename ReplacementDidntRemovedError to ReplacementDidNotRemoveError,brandonwillard,This PR fixes the odd grammar of `ReplacementDidntRemovedError` by changing it to `ReplacementDidNotRemoveError`.,refactor,,brandonwillard,2020-11-23 01:53:58,2020-11-23 03:07:37,theano/tensor/blas.py theano/gof/toolbox.py theano/gof/__init__.py,7064f08a295d6e766ebaeb8752d970365734385d,"brandonwillard assigned 2020-11-23 01:53:58,brandonwillard labeled 2020-11-23 02:03:24,brandonwillard milestoned 2020-11-23 02:03:26,brandonwillard referenced 2020-11-23 03:07:37,brandonwillard merged 2020-11-23 03:07:37,brandonwillard closed 2020-11-23 03:07:37,brandonwillard head_ref_deleted 2020-11-23 03:08:06",codecov[bot] brandonwillard,1,True
92,194,Update print warnings to use warnings.warn,brandonwillard,"This PR removes redundant ""WARNING"" and ""DEPRECATION"" strings and replaces them with `warning.warn` invocations, and, for deprecations, sets the category&mdash;or raises&mdash;a `DeprecationWarning`.
",enhancement,twiecki,,2020-11-23 02:01:51,2020-12-04 06:31:03,theano/tensor/signal/pool.py theano/sandbox/softsign.py theano/gof/utils.py theano/scan/opt.py theano/tensor/nnet/nnet.py tests/tensor/test_basic.py theano/scan/basic.py theano/compile/mode.py theano/tensor/raw_random.py theano/gof/cmodule.py theano/gof/toolbox.py theano/compile/debugmode.py theano/tensor/basic.py theano/sandbox/conv.py theano/sparse/basic.py theano/tensor/nnet/conv.py theano/tensor/opt.py tests/tensor/test_blas_c.py theano/sandbox/blocksparse.py theano/tensor/type.py theano/sparse/__init__.py tests/gof/test_utils.py theano/gpuarray/__init__.py theano/gradient.py theano/scan/utils.py theano/gof/link.py,f5cd48f50a9d98be4dfa803475d4bec15f6a9e0d e2dd22c4d8d08799e6f58add8e3b7b4573cecc80 d0f80b0bf27f0c0c28792a785752083a8a81e4ef 87e28b28cd7d735ba99ab8a8acbf363bfa047e0d 8e24e782d37891980739488f4ae1c509a76a8636 696f2fc6102f13bb887e89db4fa1e808b880f206,"brandonwillard labeled 2020-11-23 02:02:01,brandonwillard milestoned 2020-11-23 02:02:11,brandonwillard head_ref_force_pushed 2020-11-23 03:18:32,brandonwillard head_ref_force_pushed 2020-12-04 05:38:52,brandonwillard referenced 2020-12-04 06:31:03,brandonwillard merged 2020-12-04 06:31:03,brandonwillard closed 2020-12-04 06:31:03,brandonwillard head_ref_deleted 2020-12-04 06:31:07",codecov[bot] twiecki brandonwillard,4,True
93,195,Use super() in TopoOptimizer and OpKeyOptimizer,brandonwillard,This PR changes `TopoOptimizer` and `OpKeyOptimizer` so that they use `super().__init__` instead of explicit parent class references.,,,brandonwillard,2020-11-23 02:06:51,2020-11-23 03:07:59,theano/gof/opt.py,fb0638ebe7710ac5cb74c6cc398bc6d336c1bd6c,"brandonwillard milestoned 2020-11-23 02:06:51,brandonwillard assigned 2020-11-23 02:06:52,brandonwillard referenced 2020-11-23 03:07:59,brandonwillard merged 2020-11-23 03:07:59,brandonwillard closed 2020-11-23 03:07:59,brandonwillard head_ref_deleted 2020-11-23 03:08:03",codecov[bot] brandonwillard,1,True
94,196,Refactor tests.tensor.nnet optimization tests,brandonwillard,"This PR removes irrelevant function evaluations and C compilation from `TestCrossentropyCategorical1Hot`.
",refactor,,brandonwillard,2020-11-23 02:13:54,2020-11-23 03:10:14,tests/tensor/nnet/test_nnet.py,306d91baa26ad032832b13ca7ce1523e3acce7c8 ce1b02e754c65a4678ac8b7ea14f68efa858f087,"brandonwillard labeled 2020-11-23 02:13:54,brandonwillard milestoned 2020-11-23 02:13:54,brandonwillard assigned 2020-11-23 02:13:54,brandonwillard head_ref_force_pushed 2020-11-23 02:14:13,brandonwillard referenced 2020-11-23 03:10:14,brandonwillard merged 2020-11-23 03:10:14,brandonwillard closed 2020-11-23 03:10:14,brandonwillard head_ref_deleted 2020-11-23 03:10:21",codecov[bot] brandonwillard,1,True
95,199,Fix JAX conversion for AdvancedIncSubtensor1,brandonwillard,"This PR fixes the JAX conversion for `theano.tensor.inc_subtensor` when the `Op` is `AdvancedIncSubtensor1`.  It also verifies the `Op`s in all JAX `*Subtensor*` tests.

Closes #198.",bug JAX,twiecki,brandonwillard,2020-11-24 19:43:12,2020-11-24 20:49:19,tests/sandbox/test_jax.py theano/sandbox/jaxify.py,904796bd31622b825de0cc054679520680bb4476,"brandonwillard labeled 2020-11-24 19:43:12,brandonwillard labeled 2020-11-24 19:43:12,brandonwillard assigned 2020-11-24 19:43:13,brandonwillard head_ref_force_pushed 2020-11-24 19:44:51,brandonwillard referenced 2020-11-24 20:49:19,brandonwillard merged 2020-11-24 20:49:19,brandonwillard closed 2020-11-24 20:49:19,brandonwillard head_ref_deleted 2020-11-24 20:49:23",codecov[bot] twiecki brandonwillard,3,True
96,201,Refactor config code,michaelosthege,"### Changes
+ 16/32/64 are no longer supported as aliases for float16/float32/float64
+ removal of already deprecated config options
+ API of the `ConfigParam` was changed - it is however only used by `configdefaults`. I refactored the `ConfigParam` and related types such that they all support...
  + an `apply` function that casts or modifies parameter values upon assignment (e.g. replacement of `~` with user home dir)
  + a `validate` function that checks if a parameter value is valid (e.g. checking the availability of a GPU device)

### ToDo-List
+ [x] ~not importing other parts of the codebase~ deferred to follow-up PR (see [comment](https://github.com/pymc-devs/Theano-PyMC/pull/201#issuecomment-737776450))
  + [x] dependency on `theano.Mode` was replaced with an `__mro__` inspection
  + [x] ~`theano.gof` dependency is still there because the config tries to invoke it to learn about compilation flags.~ deferred to follow-up PR (see [comment](https://github.com/pymc-devs/Theano-PyMC/pull/201#issuecomment-737776450))
+ [x] tests for contextual changes of parameters
+ [x] get rid of dot-based section delimiters - replace with double underscore delimiters (`HISTORY.rst` was left unchanged)
+ [x] refactor `configdefaults` such that things are done via functions and not at import-time",refactor,,,2020-11-28 15:21:56,2020-12-04 06:25:51,theano/tensor/subtensor.py tests/gpuarray/test_nnet.py doc/tutorial/nan_tutorial.txt theano/gof/utils.py doc/extending/extending_theano.txt theano/gpuarray/ctc.py theano/gof/vm.py theano/scan/opt.py theano/scan/basic.py tests/tensor/nnet/test_corr.py tests/sparse/test_basic.py theano/gof/toolbox.py theano/tensor/basic.py doc/faq.txt theano/misc/pkl_utils.py theano/gpuarray/opt.py tests/tensor/utils.py tests/tensor/test_blas_c.py theano/scan/op.py doc/library/gpuarray/ctc.txt tests/unittest_tools.py tests/gof/test_utils.py tests/gpuarray/test_linalg.py theano/compile/nanguardmode.py doc/acknowledgement.txt doc/extending/extending_theano_c.txt theano/tensor/blas_headers.py tests/tensor/nnet/test_abstract_conv.py doc/library/config.txt theano/gof/link.py conftest.py theano/gof/cc.py doc/library/gpuarray/dnn.txt tests/sparse/test_opt.py theano/compile/profiling.py theano/tensor/nnet/opt.py theano/tensor/nnet/ctc.py theano/tensor/nnet/corr.py theano/configdefaults.py tests/gpuarray/test_opt.py theano/compile/function/types.py theano/gpuarray/type.py doc/nextml2015/presentation.tex tests/gpuarray/test_dnn.py tests/gpuarray/test_pickle.py theano/misc/check_blas.py doc/tutorial/profiling.txt doc/tutorial/loop_solution_1.py tests/gpuarray/test_type.py doc/library/tensor/nnet/conv.txt tests/scan/test_basic.py tests/tensor/test_subtensor.py .github/workflows/test.yml tests/test_config.py theano/gpuarray/__init__.py theano/scalar/basic.py theano/__init__.py theano/gof/__init__.py tests/tensor/nnet/test_nnet.py theano/tensor/nnet/nnet.py tests/tensor/nnet/test_corr3d.py doc/tutorial/using_gpu.txt theano/configparser.py theano/tensor/blas_c.py theano/compile/debugmode.py tests/compile/test_profiling.py theano/tensor/signal/conv.py doc/library/gpuarray/linalg.txt doc/troubleshooting.txt tests/gof/test_types.py tests/gpuarray/test_reduction.py theano/gof/compilelock.py theano/tensor/opt.py tests/tensor/test_opt.py tests/gof/test_lazy.py theano/gof/opt.py theano/misc/check_blas_many.sh theano/gpuarray/linalg.py tests/compile/test_debugmode.py doc/internal/how_to_release.txt doc/library/tensor/nnet/ctc.txt doc/extending/pipeline.txt theano/tensor/nnet/abstract_conv.py tests/tensor/test_blas.py theano/tensor/c_code/alt_blas_common.h theano/tensor/nnet/sigm.py theano/gof/optdb.py doc/library/compile/debugmode.txt theano/gof/cmodule.py doc/extending/unittest.txt theano/gpuarray/dnn.py tests/tensor/nnet/test_sigm.py theano/tensor/blas.py theano/misc/do_nightly_build theano/misc/cpucount.py theano/tensor/nnet/corr3d.py doc/tutorial/loop.txt theano/gof/type.py tests/gpuarray/check_dnn_conv.py theano/sparse/opt.py doc/library/scan.txt,92155d4d4867dd84b0b99a1b923aebe87089fe74 4f31b596046333fa1dca44583f720a198cb9738a dde33dc507987fe18ab3f93ca389b2bf4cc2765c cbc0a10210ed212a1f9597644ce8a24fe49e006c 99f646cef849a836b479e19c925fda10d4a89951 7acf2a73433022f1e15cd7ca143d3fae0e96cee4 85be0722fbdaa4265db0440bc8990b0e85a40ed1 b546eae9dadd1eda318800629803f93a14864705 6aa3ba4a82f875e7a4d4e9da6ffb6100f935d041 d72eed704dcf10013cf8fe7b5a200edc4ec12dcf 3e57181e1e5558284b37d8d7c0a1fca208831452 9cb14643afad5e4ca7fa41cbf64dbabfcf55be37 ed5bc1b07cadd9ac34709ec2cc9f0b358c003703 8cce5c55b585629007bc4f732f6df2049ae67eec,"michaelosthege labeled 2020-11-28 16:01:29,michaelosthege milestoned 2020-11-28 16:01:31,brandonwillard mentioned 2020-11-28 18:56:41,brandonwillard subscribed 2020-11-28 18:56:41,brandonwillard mentioned 2020-12-03 09:23:49,brandonwillard subscribed 2020-12-03 09:23:49,brandonwillard head_ref_force_pushed 2020-12-04 04:45:56,brandonwillard head_ref_force_pushed 2020-12-04 05:11:08,brandonwillard referenced 2020-12-04 06:25:51,brandonwillard merged 2020-12-04 06:25:51,brandonwillard closed 2020-12-04 06:25:51,michaelosthege head_ref_deleted 2020-12-04 12:33:45",codecov[bot] michaelosthege brandonwillard,9,True
97,204,Remove Notes section from clip,MarcoGorelli,"Looks like in 7ef9e747ef17126a46a2a21d55dd7b5881ebd188 the following was added
```diff
+    :note: When `x` is equal to the boundaries, the output is considered
+        to be `x`, so at these points, the gradient will flow through `x`,
+        not through `min` nor `max`.
```
and then in 47bf74270d83f518f2fcf37bfcf93b0fc0db6aba it was changed to
```
Notes
-----
```
which causes a problem when building the PyMC3 docs, see https://github.com/pymc-devs/pymc3/issues/4276#issuecomment-736681131

With the following change, and then installing Theano-PyMC3 locally in my pymc3-dev-py38 environment, the PyMC3 docs build successfully",,twiecki,,2020-12-01 17:19:52,2020-12-01 19:55:51,theano/tensor/basic.py,c45aeb30998d0c73cef445ba151d23683fdb81f4,"twiecki referenced 2020-12-01 19:55:51,twiecki merged 2020-12-01 19:55:51,twiecki closed 2020-12-01 19:55:51,MarcoGorelli mentioned 2020-12-01 19:55:58,MarcoGorelli subscribed 2020-12-01 19:55:58,MarcoGorelli head_ref_deleted 2020-12-02 09:05:00",codecov[bot] twiecki MarcoGorelli,2,True
98,206,Fix mkl warning in default_blas_ldflags,brandonwillard,"This PR fixes a logger bug in `default_blas_ldflags`.

Closes #205.",bug,,brandonwillard,2020-12-02 00:34:59,2020-12-02 04:03:41,tests/test_config.py theano/configdefaults.py,d2517a421340f7ac7d67b36dc0145225a1130370,"brandonwillard labeled 2020-12-02 00:34:59,brandonwillard assigned 2020-12-02 00:35:00,brandonwillard head_ref_force_pushed 2020-12-02 00:36:19,brandonwillard head_ref_force_pushed 2020-12-02 00:44:17,brandonwillard head_ref_force_pushed 2020-12-02 02:54:32,brandonwillard head_ref_force_pushed 2020-12-02 03:15:21,brandonwillard referenced 2020-12-02 04:03:41,brandonwillard merged 2020-12-02 04:03:41,brandonwillard closed 2020-12-02 04:03:41,brandonwillard head_ref_deleted 2020-12-02 04:03:46",codecov[bot] brandonwillard,1,True
99,207,[WIP] Add py38 to testing matrix,canyon289,"WIP PR

Pretty sure this package fails on py38. Been running into this issue locally but now its affecting the ArviZ testing suite. Not sure what to do about it yet but putting up this PR to validate


https://dev.azure.com/ArviZ/ArviZ/_build/results?buildId=3642&view=logs&j=af9a1d3a-ff8f-5483-6823-86518c773a9b&t=fd8e2ff6-2de2-5933-42ea-542f233b6a4d&l=97

![image](https://user-images.githubusercontent.com/7213793/100821174-afdde300-3404-11eb-873a-31db18698bce.png)
",,,,2020-12-02 02:40:51,2020-12-02 03:27:44,.github/workflows/test.yml,66db206ad5e72088143ba4abab6d0024809e90a0,"canyon289 closed 2020-12-02 03:27:44,brandonwillard mentioned 2020-12-02 03:27:45,brandonwillard subscribed 2020-12-02 03:27:45",codecov[bot] canyon289 brandonwillard,3,False
100,208,"fix up pre-commit, run in CI, fail-fast",MarcoGorelli,,,brandonwillard,,2020-12-04 16:00:39,2020-12-06 22:53:43,.pre-commit-config.yaml .github/workflows/test.yml setup.cfg,9ff9afe798918efeeddcb3689982c83b79194fa4,"MarcoGorelli head_ref_force_pushed 2020-12-04 16:01:22,MarcoGorelli head_ref_force_pushed 2020-12-04 16:05:31,MarcoGorelli head_ref_force_pushed 2020-12-04 16:28:45,MarcoGorelli renamed 2020-12-05 11:41:42,MarcoGorelli head_ref_force_pushed 2020-12-06 10:10:41,brandonwillard referenced 2020-12-06 22:53:43,brandonwillard merged 2020-12-06 22:53:43,brandonwillard closed 2020-12-06 22:53:43,MarcoGorelli head_ref_deleted 2020-12-07 06:59:53",codecov[bot] brandonwillard MarcoGorelli,21,True
101,211,Update README.rst,rpgoldman,"Provide pointer to working docs.

",,ColCarroll,,2020-12-05 17:30:59,2020-12-05 19:32:32,README.rst,8e23184744aac9dcadf1dd5a9de6ecee26ccde5a,"brandonwillard connected 2020-12-05 19:30:42,brandonwillard referenced 2020-12-05 19:32:31,brandonwillard merged 2020-12-05 19:32:32,brandonwillard closed 2020-12-05 19:32:32",rpgoldman ColCarroll brandonwillard,1,True
102,212,Fix JAX list index error in Scan conversion,brandonwillard,This PR fixes a new `jax` list index error that occurs during the `Scan` `Op` conversion.,bug JAX,,brandonwillard,2020-12-05 19:53:52,2020-12-05 20:43:22,theano/sandbox/jaxify.py,4338ad51cd608d4e14ba3d5eb3946ff5f6cea140,"brandonwillard assigned 2020-12-05 19:53:59,brandonwillard labeled 2020-12-05 19:54:07,brandonwillard labeled 2020-12-05 19:54:07,brandonwillard referenced 2020-12-05 20:43:21,brandonwillard merged 2020-12-05 20:43:21,brandonwillard closed 2020-12-05 20:43:22,brandonwillard head_ref_deleted 2020-12-05 20:43:26",codecov[bot] brandonwillard,1,True
103,213,Fix CI failure due to missing coverage when tests are skipped,brandonwillard,This PR fixes inappropriate errors resulting from an attempt to upload missing coverage files (e.g. [here](https://github.com/pymc-devs/Theano-PyMC/pull/211/checks?check_run_id=1504079234)).,bug CI,,brandonwillard,2020-12-05 20:19:27,2020-12-05 23:13:33,.github/workflows/test.yml,7ed4fa1f0404e4bbc3d75876a925a88f3e50f34e,"brandonwillard assigned 2020-12-05 20:19:34,brandonwillard labeled 2020-12-05 20:19:42,brandonwillard labeled 2020-12-05 20:19:42,brandonwillard head_ref_force_pushed 2020-12-05 20:21:54,brandonwillard head_ref_force_pushed 2020-12-05 20:22:33,brandonwillard head_ref_force_pushed 2020-12-05 20:51:28,brandonwillard head_ref_force_pushed 2020-12-05 20:59:53,brandonwillard head_ref_force_pushed 2020-12-05 21:00:13,brandonwillard head_ref_force_pushed 2020-12-05 21:12:03,brandonwillard head_ref_force_pushed 2020-12-05 22:02:42,brandonwillard head_ref_force_pushed 2020-12-05 22:09:21,brandonwillard head_ref_force_pushed 2020-12-05 22:17:31,brandonwillard referenced 2020-12-05 23:13:33,brandonwillard merged 2020-12-05 23:13:33,brandonwillard closed 2020-12-05 23:13:33,brandonwillard head_ref_deleted 2020-12-05 23:13:38",codecov[bot] brandonwillard,1,True
104,214,Get rid of singleton design and most module-level variables,michaelosthege,"In both `configparser.py` and `configdefaults.py` several module-level variables were created and in some cases also used from other parts of the codebase.
These module-level globals are not good practice and stand in the way of creating an orthogonal instance of the `TheanoConfigParser` for testing.

While doing this PR I finally understood what the `__get__`/`__set__`-based design is about: The `ConfigParam` objects are assigned as attributes on the `config:TheanoConfigParser` variable and behave like properties.

I managed to refactor all the variables/function into methods on the `TheanoConfigParser`. This way, one can now do the following:

```python
with theano.config.change_flags(...):
    # do stuff

theano.config.get_config_hash()
theano.config.config_print(...)
```

For testing, it would be great to make all instances of `TheanoConfigParser` independent of one another (in contrast to the original singleton design) and orthogonalize the tests.
But because the properties are assigned to the type, this seems impossible unless we switch from property-based `theano.config.floatX` to something else. (For example `theano.config[""floatX""]`, but possibly also attributes?).

I'm opening this as draft to get some early feedback. And also to see which tests fail..",refactor,,,2020-12-06 22:34:49,2020-12-09 19:25:11,theano/gof/cc.py theano/tensor/subtensor.py tests/tensor/test_blas.py tests/compile/test_builders.py tests/gpuarray/test_rng_mrg.py tests/tensor/test_type.py tests/gof/test_compute_test_value.py tests/tensor/nnet/test_nnet.py theano/gof/vm.py tests/gof/test_opt.py tests/tensor/test_basic.py tests/gof/test_op.py tests/sandbox/test_rng_mrg.py theano/configdefaults.py tests/gpuarray/test_opt.py tests/gof/test_fg.py theano/compile/function/types.py tests/tensor/_test_mpi_roundtrip.py theano/configparser.py tests/test_gradient.py theano/compile/debugmode.py tests/gof/test_destroyhandler.py theano/tensor/basic.py theano/utils.py tests/tensor/test_mpi.py tests/gpuarray/test_subtensor.py tests/gof/test_types.py theano/sandbox/rng_mrg.py tests/tensor/utils.py tests/scalar/test_type.py tests/tensor/test_blas_c.py tests/tensor/test_opt.py tests/tensor/test_extra_ops.py theano/tensor/elemwise.py theano/compile/builders.py theano/tensor/nnet/bn.py tests/scan/test_basic.py theano/gof/type.py tests/tensor/test_nlinalg.py tests/compile/test_debugmode.py tests/tensor/test_subtensor.py .github/workflows/test.yml tests/test_config.py tests/compile/test_ops.py tests/sandbox/test_jax.py tests/tensor/nnet/test_neighbours.py tests/tensor/nnet/test_abstract_conv.py theano/scalar/basic.py theano/__init__.py,069b58aceb6f9d4cfb7db24b7d3f72da568d9d7b 101ec0960705daf924d0593816e015822007ae12 3ff717fbd21cb92e36bcdb3dcd3966391467d318 f7898c4372b39b1329d74ebd2665587be3d661f9 0e47020a21a554f2836f2a02ed298430295dab57 505988e58597f11afcc0bdc72c7cf7097f250a70 9b2ad15f9a78e29982ed82c3a673550deb4c732b 936554c14b05d4ff8ecf116ab205c2d18a8b067e d248e219ed17a8622c24ada7870ee16f56b4acac 5bad1040ebe07c757ec38e96205af93645162b9b c84494b86a53c150ed32c38f83ed8b3861c407af 755f385a6095e36e8957e46aa1a1d0f2699b6e06 082d02f0aa4103d69f6dd0f4ef1c0486d2994e04,"michaelosthege labeled 2020-12-06 22:35:06,michaelosthege head_ref_force_pushed 2020-12-07 11:06:25,brandonwillard mentioned 2020-12-07 12:24:52,brandonwillard subscribed 2020-12-07 12:24:52,brandonwillard mentioned 2020-12-08 18:43:13,brandonwillard subscribed 2020-12-08 18:43:13,michaelosthege ready_for_review 2020-12-08 19:12:08,michaelosthege renamed 2020-12-08 19:12:24,brandonwillard head_ref_force_pushed 2020-12-09 05:10:15,brandonwillard referenced 2020-12-09 19:25:11,brandonwillard merged 2020-12-09 19:25:11,brandonwillard closed 2020-12-09 19:25:11,michaelosthege head_ref_deleted 2020-12-09 22:33:48",codecov[bot] michaelosthege brandonwillard,6,True
105,217,Remove Python 2 style int division,LegrandNico,"This PR drops support for Python 2 style int division in `scalar` and `tensor` (#202). It removes functions choosing division type from data type. The division (`int_div` or `true_div`) type should now be explicitly provided or will use the default Python 3 type.

* remove `int_division` parameter from `configdefault.py`
* remove `int_or_true_div()` and `div_proxy` from `theano.scalar.basic.py`, only use `int_div` or `true_div` directly.",,michaelosthege twiecki brandonwillard,,2020-12-08 00:23:35,2020-12-14 09:43:26,theano/gof/cc.py theano/tensor/subtensor.py tests/tensor/test_blas.py tests/compile/test_builders.py tests/gpuarray/test_rng_mrg.py tests/tensor/test_type.py tests/gof/test_compute_test_value.py tests/tensor/nnet/test_nnet.py theano/gof/vm.py tests/tensor/test_basic.py tests/gof/test_opt.py tests/gof/test_op.py tests/sandbox/test_rng_mrg.py theano/configdefaults.py tests/gpuarray/test_opt.py tests/gof/test_fg.py theano/compile/function/types.py tests/tensor/_test_mpi_roundtrip.py theano/configparser.py tests/test_gradient.py theano/compile/debugmode.py theano/tensor/basic.py tests/gof/test_destroyhandler.py theano/utils.py tests/tensor/test_mpi.py tests/scalar/test_basic.py tests/gpuarray/test_subtensor.py tests/gof/test_types.py theano/sandbox/rng_mrg.py tests/tensor/utils.py tests/scalar/test_type.py tests/tensor/test_blas_c.py tests/tensor/test_opt.py tests/tensor/test_extra_ops.py theano/sandbox/jaxify.py theano/tensor/elemwise.py theano/compile/builders.py theano/tensor/nnet/bn.py tests/scan/test_basic.py theano/gof/type.py tests/tensor/test_nlinalg.py tests/compile/test_debugmode.py tests/tensor/test_subtensor.py .github/workflows/test.yml tests/test_config.py tests/compile/test_ops.py tests/sandbox/test_jax.py tests/tensor/nnet/test_neighbours.py tests/tensor/nnet/test_abstract_conv.py theano/scalar/basic.py theano/__init__.py,cdf908dcd209d6b6f8a820cbd2a84bf5024c4338 b134b80c4b44d425a637f8130fc86ab1ba9dc4ae cbea8256be2fbd48aa8f91aa001d3d890edaae2a 56f06a51d412734c1f170da323d6e3570ab53425 7820b3b3c37a9ab7e6042aed8a437f59e32d22b6 021ed90ed4c2d0a1cb75dc6cf45878bd56ed2ea1 1a3848f800c2fedd19e44f9cde2b8c34b51b2110,"LegrandNico review_dismissed 2020-12-08 23:29:15,twiecki referenced 2020-12-14 09:43:26,twiecki merged 2020-12-14 09:43:26,twiecki closed 2020-12-14 09:43:27",codecov[bot] LegrandNico brandonwillard michaelosthege twiecki,9,True
106,218,Fix 215,dfm,Fixes #215 ,,twiecki brandonwillard,,2020-12-08 16:38:12,2020-12-12 18:24:34,tests/sandbox/test_jax.py theano/sandbox/jaxify.py,abde1a16401c616823fa54a7621544fa7fc828e6,"dfm convert_to_draft 2020-12-08 16:42:05,dfm ready_for_review 2020-12-08 19:00:39,twiecki referenced 2020-12-12 18:24:34,twiecki merged 2020-12-12 18:24:34,twiecki closed 2020-12-12 18:24:35",junpenglao codecov[bot] brandonwillard dfm twiecki,7,True
107,219,"Move JAX linker to new ""link"" module",michaelosthege,"closes #188

Possible module structure:
```
theano.link           # PerformLinker and superclasses should go on this level
theano.link.jax
theano.link.c
theano.link.fortran   # just kidding, but you get the idea
...
```

Alternative placements:
+ `theano.gof.link` IMHO the `gof` module is already too big and should instead focus on graph stuff(?)
+ `theano.compile.link`, but also the `compile` module is still a bit messy

@brandonwillard let me know where to put the files. (I can then (try to) refactor other linking stuff into the new destination module. Presumably on a follow-up PR?)",refactor,twiecki brandonwillard,,2020-12-12 16:16:54,2020-12-14 12:42:44,requirements.txt theano/compile/profiling.py tests/compile/test_builders.py tests/gpuarray/test_rng_mrg.py theano/tensor/random/op.py theano/tensor/random/opt.py theano/link/jax/jax_linker.py tests/tensor/test_basic.py tests/sandbox/test_rng_mrg.py theano/configdefaults.py theano/link/jax/jax_dispatch.py theano/compile/mode.py theano/gof/graph.py theano/tensor/__init__.py tests/tensor/random/test_op.py theano/tensor/raw_random.py doc/tutorial/examples.txt doc/library/tensor/index.txt tests/gof/test_graph.py doc/nextml2015/presentation.tex tests/test_gradient.py theano/tensor/basic.py doc/library/tensor/random/basic.txt theano/gpuarray/rng_mrg.py theano/tensor/shared_randomstreams.py doc/library/tensor/random/utils.txt tests/gpuarray/test_scan.py tests/scalar/test_basic.py tests/gpuarray/test_multinomial.py theano/sandbox/rng_mrg.py tests/tensor/random/test_type.py theano/link/__init__.py tests/tensor/test_raw_random.py theano/link/jax/__init__.py tests/sandbox/test_multinomial_wo_replacement.py doc/tutorial/loop.txt theano/tensor/random/__init__.py tests/scan/test_basic.py theano/tensor/random/var.py tests/tensor/random/__init__.py tests/tensor/random/test_var.py theano/tensor/random/utils.py tests/sandbox/test_jax.py tests/misc/test_pkl_utils.py theano/tensor/random/basic.py tests/tensor/random/test_utils.py tests/link/test_jax.py tests/tensor/test_shared_randomstreams.py theano/tensor/random/type.py theano/scalar/basic.py doc/library/scan.txt tests/tensor/random/test_opt.py theano/__init__.py tests/tensor/random/test_basic.py doc/library/tensor/raw_random.txt,2a25c3beda8f4807282991d84d96ecb301370c01 43d7b4db7d3230994d34870ed4e9c943664717cc 28ccc02cfd55d5fbb557aaf6658f13dbdad91bbc 88668acd09bd1a124b85a239cfc1f2fa9ff37785,"brandonwillard mentioned 2020-12-12 16:16:54,brandonwillard subscribed 2020-12-12 16:16:54,michaelosthege review_requested 2020-12-12 16:17:03,michaelosthege labeled 2020-12-12 16:17:34,michaelosthege milestoned 2020-12-12 16:17:44,michaelosthege head_ref_force_pushed 2020-12-12 19:41:12,twiecki referenced 2020-12-14 12:42:44,twiecki merged 2020-12-14 12:42:44,twiecki closed 2020-12-14 12:42:44,michaelosthege head_ref_deleted 2020-12-14 13:18:39",codecov[bot] michaelosthege twiecki brandonwillard,4,True
108,221,Clean config importing,michaelosthege,"This PR continues refactoring of the config, with the ultimate goal of not importing any Theano modules from `configdefaults`.

## Changes
+ `theano.misc.windows` is merged into `theano.utils`
+ `theano.utils.decode` functions were removed (they just wrapped around `str.decode` for no good reason)
+ `scan`-related config parameters are now registered by the `scan` module itself
+ Warning about unused config flags is now a method on the `config` object. It is called from the main Theano `__init__.py` after all submodules were imported (giving them the chance to register config parameters)
+ The registration of two config parameters was moved to `theano.gof.cmodule` because it depends on functions defined there (caused the cyclic import).",refactor,twiecki brandonwillard,,2020-12-14 14:21:05,2020-12-15 22:34:38,theano/gof/cmodule.py theano/configparser.py tests/test_config.py tests/gof/test_cmodule.py theano/scan/__init__.py theano/utils.py tests/tensor/test_mpi.py tests/gof/test_compiledir.py theano/configdefaults.py theano/misc/windows.py theano/misc/elemwise_openmp_speedup.py theano/__init__.py,a4ca0cba2e28cb5feaea2b1e8546bf15d54a3eeb aaf82d6abd039a6829f7ab661b2a439f7ff63189 8b96d5f420578dfedca130e86bd34c956991e9a2 35513e07f2665019f03516f0ef446699fafc7e0f 57864f52dd715ed0272e5a9bf6de3ee71e08246d ec994f6297406e90d29b0e4df01f5517c1ad4a4b,"twiecki mentioned 2020-12-14 16:12:40,twiecki subscribed 2020-12-14 16:12:40,michaelosthege review_dismissed 2020-12-14 18:28:28,michaelosthege renamed 2020-12-14 18:31:07,michaelosthege mentioned 2020-12-14 18:31:16,michaelosthege subscribed 2020-12-14 18:31:16,michaelosthege labeled 2020-12-14 18:31:18,dfm mentioned 2020-12-14 18:32:25,dfm subscribed 2020-12-14 18:32:25,michaelosthege mentioned 2020-12-14 18:33:30,michaelosthege subscribed 2020-12-14 18:33:30,michaelosthege review_requested 2020-12-14 19:28:30,michaelosthege milestoned 2020-12-15 20:05:50,brandonwillard head_ref_force_pushed 2020-12-15 22:32:35,brandonwillard referenced 2020-12-15 22:34:38,brandonwillard merged 2020-12-15 22:34:38,brandonwillard closed 2020-12-15 22:34:38,michaelosthege head_ref_deleted 2020-12-15 22:40:08",codecov[bot] brandonwillard dfm michaelosthege twiecki,5,True
109,227,Rename scalar Minimum and Maximum Ops,michaelosthege,"I'm not so sure if this is a good idea.

Maybe the other scalar Ops like `Add` should also be renamed?",refactor,twiecki brandonwillard,,2020-12-16 12:43:40,2021-01-03 00:13:03,tests/gpuarray/test_elemwise.py theano/gpuarray/opt.py theano/compile/profiling.py theano/tensor/opt.py tests/test_printing.py tests/tensor/test_opt.py theano/gpuarray/elemwise.py theano/tensor/basic.py theano/tensor/opt_uncanonicalize.py theano/tensor/utils.py tests/tensor/nnet/test_nnet.py theano/tensor/inplace.py theano/tensor/elemwise.py theano/utils.py tests/tensor/test_elemwise.py theano/scalar/basic.py theano/gpuarray/dnn_opt.py,df86d23827fbb5500b2b6c77d36e9abc57aab339 fd90a0a6c787d77b2d9dbf26b6cac9b4e1667094 67905ebe1336a59cd3929a25c3d05cbad119ee19 1e94648082c7086f40f311cc6e4660653ea921d9 216b3096e90b1e73562c749220106a301acfaf04,"michaelosthege labeled 2020-12-16 12:43:40,michaelosthege review_requested 2020-12-16 12:43:40,brandonwillard mentioned 2020-12-26 08:28:24,brandonwillard subscribed 2020-12-26 08:28:24,brandonwillard head_ref_force_pushed 2021-01-02 21:03:36,brandonwillard head_ref_force_pushed 2021-01-02 23:23:19,brandonwillard referenced 2021-01-03 00:13:03,brandonwillard merged 2021-01-03 00:13:03,brandonwillard closed 2021-01-03 00:13:03",codecov[bot] michaelosthege twiecki brandonwillard,5,True
110,228,Move linkers to link module,michaelosthege,"Base linker types are going into `theano.link.basic`.

Type annotations on the linkers could help a lot with such refactoring. I suspect they would be relatively clear cut here.",refactor,brandonwillard,,2020-12-16 23:00:37,2020-12-22 02:33:58,theano/gof/cc.py tests/gof/test_link.py doc/extending/pipeline.txt tests/gpuarray/test_elemwise.py tests/link/test_cc.py theano/link/vm.py theano/scan/scan_perform.pyx theano/tensor/random/op.py theano/link/c/cutils.py theano/link/jax/jax_linker.py theano/gof/vm.py tests/tensor/test_opt_uncanonicalize.py tests/tensor/test_basic.py tests/tensor/test_elemwise.py theano/link/c/__init__.py theano/tensor/nnet/ctc.py theano/link/c/vm.py theano/link/c/exceptions.py theano/link/c/basic.py doc/sandbox/debugging_with_stepmode.txt theano/compile/function/types.py theano/compile/mode.py theano/link/c/cc.py theano/link/c/cmodule.py theano/link/basic.py tests/scalar/test_basic_sympy.py theano/link/c/cvm.py theano/compile/sharedvalue.py theano/tensor/blas_c.py theano/compile/debugmode.py theano/gpuarray/dnn.py tests/link/test_link.py theano/gof/op.py theano/utils.py tests/compile/test_modes.py theano/link/c/c_code/lazylinker_c.c bin/theano_cache.py tests/scalar/test_basic.py theano/compile/io.py theano/compile/monitormode.py tests/link/test_vm.py theano/scan/scan_perform_ext.py tests/tensor/random/test_type.py tests/gof/test_cc.py theano/link/__init__.py theano/gpuarray/opt.py theano/tensor/nnet/conv.py theano/gpuarray/basic_ops.py theano/scan/op.py theano/__init__.py theano/tensor/elemwise.py theano/link/debugging.py tests/link/test_cmodule.py tests/test_ifelse.py theano/link/utils.py theano/compile/nanguardmode.py theano/link/c/lazylinker_c.py tests/record.py theano/link/c/c_code/theano_mod_helper.h theano/tensor/blas_headers.py tests/link/test_lazy.py tests/tensor/nnet/test_conv.py theano/gof/__init__.py theano/gof/link.py,0a24d3764a82d3c85fa9a2f9dff41ca06670bf8d 27448332546cc7152ccaf3145d9368248ab29d78 233feaf51c1c9cf3b6b305af3dc4482202714f19 1d5236be0b554594fd06ec33a6311a3bb0bee1aa e6af67eb3e32aabbad6e980b61040ab7a1e3f35e 71f727daf264fdd7f6f61af5fbfa2250ed5d0bf5 5cc5290dc9f2c22d3db4762a58af43f24f0c58f7 cb05c1614410e82eb1bdb39cfbc19c9dc0755fff 785101c5f44814c5349ba31192c9f9a35e6f80b0 0e3a8128e7fe109fd8bd7fdb85054c732098fc6b 900d752c50f1718cb800aed5c7c43eb26c803e07 fb6b86259d50ab9620c6ac28025230024d070c53 8bf588af38338d3b42ae86ab3ccb9e5b819cc033 5bb459cfd3df46e5da65d92f0ce5cb5d6cd6a7ea 8049c3ed13afd78f810d0b43931b44437f0ec1cc b079a36c3dd294866712227f7e1066b9293e41ac 28b2c6f47eb17f14264e83f51007f5ce586ebc0b,"michaelosthege labeled 2020-12-16 23:00:38,michaelosthege head_ref_force_pushed 2020-12-18 23:15:55,michaelosthege renamed 2020-12-19 19:07:28,michaelosthege milestoned 2020-12-19 21:13:12,michaelosthege head_ref_force_pushed 2020-12-20 15:30:47,michaelosthege head_ref_force_pushed 2020-12-20 15:45:02,brandonwillard head_ref_force_pushed 2020-12-20 21:46:54,brandonwillard head_ref_force_pushed 2020-12-21 01:49:23,brandonwillard head_ref_force_pushed 2020-12-21 03:01:32,brandonwillard head_ref_force_pushed 2020-12-21 04:16:01,brandonwillard referenced 2020-12-22 02:33:57,brandonwillard merged 2020-12-22 02:33:57,brandonwillard closed 2020-12-22 02:33:58,michaelosthege head_ref_deleted 2020-12-22 09:26:46",codecov[bot] michaelosthege twiecki brandonwillard,4,True
111,232,Don't warn repeatedly for same un-optimize-able op.,rpgoldman,"Fix for issue #23.

Keep a set of names of ops for which ""can't optimize"" warnings have already been issued. Check that set (and update it, if necessary) before issuing a warning to avoid warning floods.


**Thank your for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [relevant logical changes](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes).
+ [ ] There are tests covering the changes introduced in the PR.
+ [ ] Remove whitespace reformatting or factor into separate commit.
+ [ ] (Possibly) pull out repeated code into function.
",,twiecki brandonwillard,,2020-12-19 21:55:55,2021-01-02 20:39:51,theano/tensor/opt.py theano/compile/debugmode.py theano/utils.py,f4356a191ef0850117703b4f841237266e41439e,"rpgoldman renamed 2020-12-19 21:56:08,rpgoldman head_ref_force_pushed 2020-12-19 22:10:55,rpgoldman review_dismissed 2020-12-20 14:48:47,rpgoldman head_ref_force_pushed 2020-12-20 14:48:47,rpgoldman head_ref_force_pushed 2020-12-20 14:56:58,rpgoldman head_ref_force_pushed 2020-12-20 15:03:46,rpgoldman mentioned 2020-12-27 10:59:08,rpgoldman subscribed 2020-12-27 10:59:08,brandonwillard mentioned 2020-12-27 11:00:05,brandonwillard subscribed 2020-12-27 11:00:05,michaelosthege milestoned 2020-12-27 16:11:22,rpgoldman head_ref_force_pushed 2020-12-28 20:14:35,rpgoldman head_ref_force_pushed 2020-12-28 20:18:36,michaelosthege head_ref_force_pushed 2020-12-31 15:05:42,rpgoldman mentioned 2020-12-31 15:06:27,rpgoldman subscribed 2020-12-31 15:06:27,michaelosthege head_ref_force_pushed 2020-12-31 16:39:22,michaelosthege review_dismissed 2020-12-31 17:32:25,michaelosthege head_ref_force_pushed 2020-12-31 17:32:25,rpgoldman review_dismissed 2020-12-31 19:37:07,rpgoldman renamed 2020-12-31 19:37:41,rpgoldman head_ref_force_pushed 2021-01-02 17:51:11,brandonwillard mentioned 2021-01-02 17:51:37,brandonwillard subscribed 2021-01-02 17:51:37,brandonwillard head_ref_force_pushed 2021-01-02 19:09:56,brandonwillard referenced 2021-01-02 20:39:51,brandonwillard merged 2021-01-02 20:39:51,brandonwillard closed 2021-01-02 20:39:51,rpgoldman head_ref_deleted 2021-01-03 00:10:34",rpgoldman codecov[bot] brandonwillard michaelosthege twiecki,15,True
112,236,Merge PureOp and Op,michaelosthege,"Note: The `PureType` and `Type` follow a similar pattern.

All `Op`s now have the C-related methods (only tests and scan used the PureOp directly).

The C-related methods on `Op` are not called from elsewhere. Maybe they could be dispatched into the `Op` type already?

The tests passed locally. I'm open to suggestions what else can/should be refactored next.",refactor,twiecki,,2020-12-20 22:27:40,2020-12-27 11:00:22,theano/tensor/subtensor.py tests/link/test_cc.py theano/tensor/nnet/conv3d2d.py tests/gof/test_params_type.py doc/extending/extending_theano_gpu.txt theano/compile/ops.py theano/gpuarray/elemwise.py tests/gof/test_compute_test_value.py theano/gpuarray/ctc.py doc/extending/extending_theano.txt doc/extending/fibby.txt doc/cifarSC2011/pyCUDA.txt tests/tensor/test_basic.py theano/link/c/basic.py theano/tensor/nnet/ctc.py tests/gof/test_op.py theano/sandbox/minimal.py theano/tensor/nnet/corr.py theano/tensor/nnet/nnet.py theano/gof/graph.py doc/extending/extending_theano_solution_1.py doc/tutorial/using_gpu.txt theano/tensor/fft.py doc/hpcs2011_tutorial/double_op.py tests/sparse/test_basic.py theano/sandbox/multinomial.py theano/tensor/nnet/neighbours.py theano/tensor/blas_c.py tests/test_gradient.py theano/compile/debugmode.py theano/tensor/basic.py theano/gpuarray/dnn.py doc/library/tensor/random/basic.txt theano/gof/op.py theano/tensor/blas.py theano/tensor/extra_ops.py doc/extending/op.txt tests/gof/test_types.py theano/sparse/basic.py theano/sandbox/rng_mrg.py tests/link/test_vm.py doc/sandbox/ccodegen.txt theano/gpuarray/reduction.py theano/tensor/nlinalg.py doc/extending/using_params.txt theano/tensor/opt.py theano/gpuarray/basic_ops.py theano/scan/op.py tests/tensor/test_opt.py doc/glossary.txt theano/typed_list/basic.py doc/dev_start_guide.txt theano/gof/opt.py theano/link/c/interface.py theano/tensor/elemwise.py theano/tensor/fourier.py theano/tensor/nnet/corr3d.py theano/gpuarray/fft.py theano/tensor/io.py doc/hpcs2011_tutorial/pycuda_double_op.py theano/gof/type.py theano/gpuarray/linalg.py tests/compile/test_debugmode.py theano/misc/doubleop.py theano/sparse/opt.py tests/test_ifelse.py theano/raise_op.py doc/hpcs2011_tutorial/presentation.tex theano/gpuarray/blocksparse.py theano/sparse/sandbox/sp2.py doc/extending/cop.txt doc/extending/extending_theano_c.txt theano/gpuarray/subtensor.py theano/scalar/basic.py theano/gof/__init__.py theano/gpuarray/blas.py,2a3925b0f5d771c75f28eec5740bc4606ffd92c2 870d12de9bfeb8ef420451e25c5058926475a3b4 d2b74d4845eb99c85f3e033a417fa7d9a4a9af63 1cbb802bede696220f29dd4ab6608ee15504a824,"michaelosthege labeled 2020-12-20 22:27:41,brandonwillard head_ref_force_pushed 2020-12-23 01:21:01,brandonwillard head_ref_force_pushed 2020-12-23 05:28:31,brandonwillard head_ref_force_pushed 2020-12-23 05:29:02,brandonwillard head_ref_force_pushed 2020-12-23 07:35:15,brandonwillard mentioned 2020-12-25 12:16:20,brandonwillard subscribed 2020-12-25 12:16:20,michaelosthege milestoned 2020-12-26 08:26:52,michaelosthege head_ref_force_pushed 2020-12-26 11:49:30,twiecki referenced 2020-12-27 11:00:21,twiecki merged 2020-12-27 11:00:22,twiecki closed 2020-12-27 11:00:22,michaelosthege head_ref_deleted 2020-12-27 11:01:00",codecov[bot] michaelosthege twiecki brandonwillard,5,True
113,239,Add softmax to jaxify list,kyleabeauchamp,This PR adds the softmax function to the list of jaxified functions.  Should eventually fix https://github.com/pymc-devs/pymc3/issues/4358 once pymc3 bumps its theano version.,,AlexAndorra,,2020-12-25 07:11:27,2020-12-25 18:56:08,theano/link/jax/jax_dispatch.py tests/link/test_jax.py,58b9bf7eb3102cf03468c5765f124104389d1410 3f8230245fba19d07b06d23080e24e750322c607,"kyleabeauchamp mentioned 2020-12-25 10:31:45,kyleabeauchamp subscribed 2020-12-25 10:31:45,michaelosthege milestoned 2020-12-25 11:46:12,kyleabeauchamp review_dismissed 2020-12-25 16:32:56,brandonwillard referenced 2020-12-25 18:56:08,brandonwillard merged 2020-12-25 18:56:08,brandonwillard closed 2020-12-25 18:56:08",kyleabeauchamp codecov[bot] brandonwillard michaelosthege twiecki AlexAndorra,3,True
114,241,"Removed Container, Linker and other classes from theano package",ionuttamas,"Fixes comments made on #233.

",,twiecki,,2020-12-26 08:34:30,2020-12-30 14:05:06,theano/tensor/subtensor.py theano/link/vm.py tests/compile/test_builders.py theano/compile/ops.py theano/gof/utils.py tests/gof/test_compute_test_value.py doc/extending/extending_theano.txt theano/gpuarray/ctc.py theano/scan/opt.py theano/link/jax/jax_dispatch.py theano/scan/basic.py tests/sparse/test_basic.py tests/tensor/_test_mpi_roundtrip.py theano/gof/toolbox.py theano/sandbox/multinomial.py theano/tensor/basic.py tests/gof/test_destroyhandler.py tests/link/test_link.py theano/gof/op.py theano/misc/pkl_utils.py theano/tensor/extra_ops.py theano/gpuarray/opt.py tests/tensor/test_basic_scipy.py tests/tensor/utils.py tests/tensor/test_blas_c.py theano/scan/op.py theano/tensor/elemwise.py theano/tensor/nnet/bn.py theano/scalar/basic_scipy.py tests/unittest_tools.py tests/compile/function/test_pfunc.py tests/gpuarray/test_linalg.py theano/compile/nanguardmode.py theano/gradient.py tests/compile/test_ops.py theano/link/c/lazylinker_c.py tests/tensor/nnet/test_neighbours.py theano/misc/check_duplicate_key.py theano/tensor/blas_headers.py tests/tensor/nnet/test_abstract_conv.py theano/tensor/random/op.py tests/sparse/test_opt.py theano/compile/profiling.py tests/gpuarray/test_rng_mrg.py theano/tensor/nnet/opt.py theano/tensor/random/opt.py theano/link/c/basic.py theano/gof/fg.py theano/tensor/nnet/ctc.py theano/tensor/nnet/corr.py tests/gpuarray/test_opt.py theano/misc/elemwise_openmp_speedup.py doc/sandbox/debugging_with_stepmode.txt theano/compile/function/types.py theano/tensor/var.py theano/gpuarray/type.py tests/test_gradient.py tests/gpuarray/test_pickle.py theano/misc/burn_gpu.py tests/tensor/test_mpi.py tests/compile/function/test_types.py theano/misc/check_blas.py theano/tensor/sort.py theano/tensor/elemwise_cgen.py theano/scan/scan_perform_ext.py tests/tensor/test_gc.py tests/sandbox/test_multinomial_wo_replacement.py theano/tensor/type.py tests/gpuarray/test_type.py tests/scan/test_basic.py tests/tensor/test_nlinalg.py tests/gpuarray/test_gemmcorr.py tests/tensor/test_subtensor.py doc/sandbox/logistic_regression_example.txt theano/gpuarray/__init__.py theano/tensor/sharedvar.py theano/scalar/basic.py theano/__init__.py theano/link/c/cmodule.py tests/tensor/test_type.py tests/misc/test_may_share_memory.py tests/tensor/nnet/test_nnet.py tests/gof/test_opt.py theano/tensor/nnet/nnet.py tests/tensor/test_elemwise.py tests/gof/test_op.py tests/sandbox/test_rng_mrg.py tests/gof/test_fg.py theano/compile/mode.py theano/link/basic.py theano/link/c/cvm.py theano/misc/safe_asarray.py theano/tensor/blas_c.py theano/compile/debugmode.py theano/tensor/signal/conv.py tests/test_determinism.py tests/sandbox/test_multinomial.py theano/sparse/basic.py tests/sandbox/linalg/test_linalg.py theano/gof/compilelock.py tests/tensor/test_inplace.py theano/tensor/opt.py tests/tensor/test_opt.py theano/gpuarray/basic_ops.py theano/gof/opt.py theano/compile/function/pfunc.py tests/compile/test_debugmode.py tests/compile/test_shared.py tests/gpuarray/test_blas.py tests/sparse/test_sp2.py tests/tensor/test_slinalg.py theano/tensor/nnet/abstract_conv.py tests/tensor/test_blas.py tests/scan/test_opt.py theano/link/c/cutils.py theano/ifelse.py tests/tensor/test_basic.py tests/tensor/test_opt_uncanonicalize.py theano/tensor/nnet/sigm.py theano/gof/graph.py theano/gof/optdb.py tests/gpuarray/test_gemmcorr3d.py theano/gof/compiledir.py theano/gpuarray/dnn.py tests/tensor/nnet/test_sigm.py theano/tensor/blas.py tests/gpuarray/test_multinomial.py theano/sandbox/rng_mrg.py tests/link/test_vm.py theano/misc/elemwise_time_test.py tests/scalar/test_type.py theano/typed_list/basic.py tests/tensor/test_extra_ops.py theano/gof/destroyhandler.py theano/printing.py theano/tensor/nnet/corr3d.py theano/compile/builders.py theano/gof/type.py theano/sparse/opt.py theano/link/utils.py tests/tensor/test_casting.py theano/tensor/random/basic.py theano/scan/utils.py,d25ce98d8743bec3d616c234cbc525e74d2060ac aadf0b208d175c69621e04e7dbb6ecff0331cef4,"michaelosthege milestoned 2020-12-26 08:35:41,ionuttamas head_ref_force_pushed 2020-12-26 22:36:48,ionuttamas mentioned 2020-12-27 15:35:47,ionuttamas subscribed 2020-12-27 15:35:47,ionuttamas head_ref_force_pushed 2020-12-27 21:51:47,ionuttamas mentioned 2020-12-28 09:14:44,ionuttamas subscribed 2020-12-28 09:14:44,michaelosthege mentioned 2020-12-28 09:17:50,michaelosthege subscribed 2020-12-28 09:17:50,ionuttamas mentioned 2020-12-28 11:34:58,ionuttamas subscribed 2020-12-28 11:34:58,michaelosthege mentioned 2020-12-28 11:34:58,michaelosthege subscribed 2020-12-28 11:34:58,ionuttamas head_ref_force_pushed 2020-12-28 22:33:02,ionuttamas head_ref_force_pushed 2020-12-28 22:43:35,ionuttamas head_ref_force_pushed 2020-12-28 23:02:36,michaelosthege mentioned 2020-12-29 06:56:08,michaelosthege subscribed 2020-12-29 06:56:08,michaelosthege mentioned 2020-12-29 13:41:23,michaelosthege subscribed 2020-12-29 13:41:23,ionuttamas head_ref_force_pushed 2020-12-29 20:28:45,twiecki review_dismissed 2020-12-30 14:04:34,twiecki referenced 2020-12-30 14:05:06,twiecki merged 2020-12-30 14:05:06,twiecki closed 2020-12-30 14:05:07,ionuttamas mentioned 2020-12-30 14:05:16,ionuttamas subscribed 2020-12-30 14:05:16,brandonwillard referenced 2020-12-30 20:04:18,brandonwillard referenced 2020-12-30 21:05:09",codecov[bot] brandonwillard ionuttamas michaelosthege twiecki,10,True
115,242,Fix pickleability of config,michaelosthege,"I checked out the branch from https://github.com/pymc-devs/pymc3/pull/4382 to test pickleability of the config.
All locally defined functions and also `del param` were problematic.

I moved lambdas and local functions to the module level and prefixed them with `_`.

The bitwidth functions were a bit unnecessary. I placed them into `utils` as constants, because they just depend on the standard library.

closes #240

@kyleabeauchamp if you run into more incompatibilities, feel free to commit to this branch!",,twiecki brandonwillard,,2020-12-26 14:32:14,2020-12-27 10:20:25,tests/compile/function/test_pfunc.py tests/test_config.py theano/configdefaults.py tests/compile/test_shared.py tests/tensor/test_extra_ops.py theano/utils.py tests/tensor/test_basic.py theano/link/c/cmodule.py theano/tensor/extra_ops.py,c7951362c3c9da4a28e63a116495340b9d158baf 1a29b231b3e230642324fb5c0a6754d0b321dc82 f3bfebffd470039024559d2e0c15f4d786409f1c,"michaelosthege milestoned 2020-12-26 14:32:14,kyleabeauchamp mentioned 2020-12-26 14:32:15,kyleabeauchamp subscribed 2020-12-26 14:32:15,michaelosthege head_ref_force_pushed 2020-12-26 14:58:36,michaelosthege head_ref_force_pushed 2020-12-26 15:16:40,michaelosthege review_requested 2020-12-26 16:38:07,twiecki referenced 2020-12-27 10:20:24,twiecki merged 2020-12-27 10:20:24,twiecki closed 2020-12-27 10:20:25,michaelosthege mentioned 2020-12-27 10:20:44,michaelosthege subscribed 2020-12-27 10:20:44,michaelosthege head_ref_deleted 2020-12-27 10:38:37",kyleabeauchamp codecov[bot] brandonwillard michaelosthege twiecki,4,True
116,244,Always import config from configdefaults directly,michaelosthege,"A small step towards not importing theano from within the codebase.

closes #234",refactor,MarcoGorelli,,2020-12-27 15:23:37,2020-12-30 14:01:36,theano/tensor/subtensor.py theano/link/vm.py tests/compile/test_builders.py theano/gof/utils.py tests/gof/test_compute_test_value.py doc/extending/extending_theano.txt theano/gpuarray/ctc.py theano/scan/opt.py theano/link/jax/jax_dispatch.py theano/scan/basic.py tests/sparse/test_basic.py tests/tensor/_test_mpi_roundtrip.py theano/gof/toolbox.py theano/sandbox/multinomial.py tests/gof/test_destroyhandler.py theano/gof/op.py theano/misc/pkl_utils.py theano/gpuarray/opt.py tests/tensor/test_basic_scipy.py tests/tensor/utils.py theano/scan/op.py theano/tensor/elemwise.py theano/tensor/nnet/bn.py theano/scalar/basic_scipy.py tests/unittest_tools.py tests/compile/function/test_pfunc.py tests/gpuarray/test_linalg.py theano/compile/nanguardmode.py theano/gradient.py tests/compile/test_ops.py theano/link/c/lazylinker_c.py tests/tensor/nnet/test_neighbours.py theano/misc/check_duplicate_key.py theano/tensor/blas_headers.py tests/tensor/nnet/test_abstract_conv.py theano/tensor/random/op.py tests/sparse/test_opt.py theano/compile/profiling.py tests/gpuarray/test_rng_mrg.py theano/tensor/nnet/opt.py theano/tensor/random/opt.py theano/link/c/basic.py theano/gof/fg.py theano/tensor/nnet/ctc.py theano/tensor/nnet/corr.py tests/gpuarray/test_opt.py theano/misc/elemwise_openmp_speedup.py doc/sandbox/debugging_with_stepmode.txt theano/compile/function/types.py theano/tensor/var.py tests/test_gradient.py tests/gpuarray/test_pickle.py theano/misc/burn_gpu.py tests/compile/function/test_types.py tests/tensor/test_mpi.py theano/misc/check_blas.py theano/tensor/elemwise_cgen.py theano/scan/scan_perform_ext.py tests/sandbox/test_multinomial_wo_replacement.py tests/gpuarray/test_type.py theano/tensor/type.py tests/scan/test_basic.py tests/tensor/test_nlinalg.py tests/gpuarray/test_gemmcorr.py tests/tensor/test_subtensor.py theano/gpuarray/__init__.py theano/scalar/basic.py theano/link/c/cmodule.py tests/tensor/test_type.py tests/tensor/nnet/test_nnet.py tests/gof/test_opt.py theano/tensor/nnet/nnet.py tests/tensor/test_elemwise.py tests/gof/test_op.py tests/sandbox/test_rng_mrg.py tests/gof/test_fg.py theano/compile/mode.py theano/link/basic.py theano/link/c/cvm.py theano/misc/safe_asarray.py theano/tensor/blas_c.py theano/compile/debugmode.py theano/tensor/signal/conv.py tests/test_determinism.py tests/sandbox/test_multinomial.py theano/sparse/basic.py tests/sandbox/linalg/test_linalg.py theano/gof/compilelock.py theano/tensor/opt.py theano/gpuarray/basic_ops.py theano/gof/opt.py theano/compile/function/pfunc.py tests/compile/test_debugmode.py tests/gpuarray/test_blas.py tests/sparse/test_sp2.py tests/tensor/test_slinalg.py theano/tensor/nnet/abstract_conv.py tests/scan/test_opt.py theano/link/c/cutils.py theano/ifelse.py tests/tensor/test_opt_uncanonicalize.py theano/tensor/nnet/sigm.py theano/gof/graph.py theano/gof/optdb.py tests/gpuarray/test_gemmcorr3d.py theano/gof/compiledir.py theano/gpuarray/dnn.py tests/tensor/nnet/test_sigm.py theano/tensor/blas.py tests/gpuarray/test_multinomial.py theano/sandbox/rng_mrg.py tests/link/test_vm.py theano/misc/elemwise_time_test.py tests/scalar/test_type.py theano/typed_list/basic.py tests/tensor/test_extra_ops.py theano/gof/destroyhandler.py theano/printing.py theano/tensor/nnet/corr3d.py theano/compile/builders.py theano/gof/type.py theano/sparse/opt.py theano/link/utils.py theano/tensor/random/basic.py theano/scan/utils.py,5cd30d2802679a1bebab827bd68afee5294e7273,"michaelosthege labeled 2020-12-27 15:23:37,michaelosthege milestoned 2020-12-27 15:23:37,michaelosthege review_requested 2020-12-27 16:21:15,michaelosthege head_ref_force_pushed 2020-12-29 13:34:25,twiecki referenced 2020-12-30 14:01:36,twiecki merged 2020-12-30 14:01:36,twiecki closed 2020-12-30 14:01:36,michaelosthege head_ref_deleted 2020-12-30 18:12:54",codecov[bot] michaelosthege twiecki MarcoGorelli,2,True
117,245,Clean up compiledir locking mechanism,michaelosthege,"While orienting myself, I noticed that `theano.gof.compiledir` was not used anywhere.
I pushed this PR already to see if tests run through after its removal.",refactor,brandonwillard,,2020-12-27 19:51:18,2021-01-02 20:43:03,doc/extending/pipeline.txt requirements.txt tests/test_config.py tests/compile/test_compilelock.py theano/link/c/lazylinker_c.py theano/link/c/cutils.py theano/link/c/basic.py bin/theano_cache.py theano/compile/compilelock.py theano/link/c/cmodule.py theano/compile/function/types.py setup.py theano/compile/compiledir.py theano/scan/scan_perform_ext.py,92a4c2770850e0ad2b8d5fe02bfcf67786b85a91 8e1cec0208536b2b6b27fcf23acb78c157ca6a95 677befb824335103c021350e5070c7abef555598 32189bd88dcfeac5a9fc061a1f2b5c7cb4829427 207a87a59233ee1b73ff6e709b4be7dbcdccd8f5 753981d57a753f4fbb8f4dd3fce03910843ac82f 8bec80c767b12678586b9fae076c3927a6e0c947,"michaelosthege labeled 2020-12-27 19:51:18,brandonwillard convert_to_draft 2020-12-27 20:02:06,brandonwillard renamed 2020-12-27 20:07:26,brandonwillard renamed 2020-12-27 20:07:46,michaelosthege head_ref_force_pushed 2020-12-27 21:55:04,michaelosthege head_ref_force_pushed 2020-12-27 22:37:42,michaelosthege head_ref_force_pushed 2020-12-27 22:45:02,michaelosthege head_ref_force_pushed 2020-12-27 22:55:28,michaelosthege renamed 2020-12-28 18:16:55,michaelosthege milestoned 2020-12-28 20:39:02,michaelosthege ready_for_review 2020-12-28 22:21:39,brandonwillard head_ref_force_pushed 2020-12-28 23:48:38,michaelosthege head_ref_force_pushed 2020-12-29 11:21:03,michaelosthege head_ref_force_pushed 2020-12-29 11:28:34,michaelosthege head_ref_force_pushed 2020-12-29 11:38:15,michaelosthege head_ref_force_pushed 2020-12-29 13:05:29,michaelosthege head_ref_force_pushed 2020-12-31 12:04:04,brandonwillard head_ref_force_pushed 2020-12-31 20:42:30,brandonwillard head_ref_force_pushed 2020-12-31 21:10:50,brandonwillard review_requested 2020-12-31 23:25:20,brandonwillard head_ref_force_pushed 2020-12-31 23:34:10,michaelosthege review_dismissed 2021-01-01 11:45:02,michaelosthege head_ref_force_pushed 2021-01-01 11:45:02,brandonwillard mentioned 2021-01-01 11:51:08,brandonwillard subscribed 2021-01-01 11:51:08,brandonwillard head_ref_force_pushed 2021-01-02 18:36:27,brandonwillard review_requested 2021-01-02 18:54:01,brandonwillard referenced 2021-01-02 20:43:03,brandonwillard merged 2021-01-02 20:43:03,brandonwillard closed 2021-01-02 20:43:03,michaelosthege head_ref_deleted 2021-01-02 22:44:26",codecov[bot] michaelosthege twiecki brandonwillard,13,True
118,246,Rename and rearrange imports,canyon289,"Removing an unnecessary rename and rearranging some imports.

As for why I opened this PR, I did actually spend 5 minutes finding the docs for the `@dispatch` decorator before finding the import and seeing its been aliased. Even though its small I think it will help folks reading the codebase figure out what's going on a little faster.

Also saying this in light of this add docs issue Thomas opened.
https://github.com/pymc-devs/Theano-PyMC/issues/230

",,michaelosthege twiecki,,2020-12-28 05:16:07,2020-12-29 08:59:20,theano/link/jax/jax_dispatch.py,6af55bd2cf6740ba2c19365a244863ab53e49cf0,"canyon289 mentioned 2020-12-28 15:09:15,canyon289 subscribed 2020-12-28 15:09:15,michaelosthege milestoned 2020-12-28 18:16:06,twiecki referenced 2020-12-29 08:59:20,twiecki merged 2020-12-29 08:59:20,twiecki closed 2020-12-29 08:59:20,canyon289 mentioned 2020-12-29 08:59:28,canyon289 subscribed 2020-12-29 08:59:28",codecov[bot] canyon289 michaelosthege twiecki,5,True
119,247,Update PR template,brandonwillard,"Update the PR template to add a note about unwanted ""fix"" commits and `pre-commit`.",,,brandonwillard,2020-12-28 22:51:09,2020-12-28 22:54:04,.github/PULL_REQUEST_TEMPLATE.md,a9d83a5b0ac6d8d3d597d263f0781eb6450dd1e0,"brandonwillard assigned 2020-12-28 22:51:09,brandonwillard head_ref_force_pushed 2020-12-28 22:53:07,brandonwillard referenced 2020-12-28 22:54:03,brandonwillard merged 2020-12-28 22:54:03,brandonwillard closed 2020-12-28 22:54:04,brandonwillard head_ref_deleted 2020-12-28 22:54:06",brandonwillard,0,True
120,248,Jax ops doc,canyon289,"Draft notebook to address https://github.com/pymc-devs/Theano-PyMC/issues/230

Could use a double check for tone and concept correctness. If those two are good I'll sweep through for grammar and spelling.

",,brandonwillard,,2020-12-29 05:07:41,2021-01-04 19:53:28,notebooks/JaxOps.ipynb,061552538a04aa6064f617d41c8a7c7a9698d812 edad6f3ad7e616e604894fbdf290dd3e3c242d33 85721c4873a646fee270ece1f85cd23656d6001f,"canyon289 head_ref_force_pushed 2020-12-29 05:08:39,canyon289 mentioned 2020-12-29 08:50:17,canyon289 subscribed 2020-12-29 08:50:17,canyon289 head_ref_force_pushed 2020-12-30 05:28:43,canyon289 mentioned 2020-12-31 08:26:59,canyon289 subscribed 2020-12-31 08:26:59,twiecki closed 2021-01-04 19:53:28",canyon289 twiecki brandonwillard,10,False
121,250,Fix invalid imports order introduced by #241,brandonwillard,This PR fixes code style failures introduced by #241 and a typo in the PR template.,bug important,twiecki,brandonwillard,2020-12-30 20:06:47,2020-12-30 21:05:08,tests/compile/function/test_pfunc.py .github/PULL_REQUEST_TEMPLATE.md tests/scan/test_basic.py tests/tensor/utils.py,2a85b08a9e21526f5b288267c926ff00e23507c2 3dcd064aebc36e26b849e51a87f8939ea62faa02,"brandonwillard assigned 2020-12-30 20:06:58,brandonwillard labeled 2020-12-30 20:07:05,brandonwillard labeled 2020-12-30 20:07:10,brandonwillard referenced 2020-12-30 21:05:08,brandonwillard merged 2020-12-30 21:05:08,brandonwillard closed 2020-12-30 21:05:08,brandonwillard head_ref_deleted 2020-12-30 21:05:12",codecov[bot] twiecki brandonwillard,1,True
122,251,Fix typo in normal RandomVariable's default arguments,brandonwillard,This PR fixes a typo that sets the `normal` `RandomVariable`'s default scale to `1.1`.,bug important,,brandonwillard,2020-12-30 23:30:55,2020-12-31 00:20:34,theano/tensor/random/basic.py,8225e698ceb1a86dabf0b24794f4a842a7ee3041,"brandonwillard labeled 2020-12-30 23:30:55,brandonwillard labeled 2020-12-30 23:30:55,brandonwillard assigned 2020-12-30 23:30:56,brandonwillard referenced 2020-12-31 00:20:34,brandonwillard merged 2020-12-31 00:20:34,brandonwillard closed 2020-12-31 00:20:34,brandonwillard head_ref_deleted 2020-12-31 00:20:37",codecov[bot] brandonwillard,1,True
123,252,Allow RandomVariable float dtypes to be set dynamically,brandonwillard,"This PR allows `RandomVariable.dtype` to take the value `""floatX""`, which is converted to `theano.config.floatX` when the node is created.  With this change, many `RandomVariable.dtype` values are no longer fixed at class creation, so one can modify the value of `theano.config.floatX` and immediately produce `RandomVariable`s with the new `dtype` values.",enhancement,,brandonwillard,2020-12-31 00:28:39,2020-12-31 03:46:48,tests/scan/test_basic.py theano/tensor/random/basic.py tests/tensor/random/test_op.py theano/tensor/random/op.py,fd92df37fc4f3c9c2f0835d90288d666697a71c4 97a648c07d7a957fe17fe4bc49486666c33f352b,"brandonwillard labeled 2020-12-31 00:28:39,brandonwillard assigned 2020-12-31 00:28:39,brandonwillard head_ref_force_pushed 2020-12-31 01:24:36,brandonwillard referenced 2020-12-31 03:46:48,brandonwillard merged 2020-12-31 03:46:48,brandonwillard closed 2020-12-31 03:46:49,brandonwillard head_ref_deleted 2020-12-31 03:46:55",codecov[bot] kyleabeauchamp brandonwillard,4,True
124,253,Add JAX Ops documentation,canyon289,"Opening PR here with another branch so I can preserve history in case I need to make edits on that branch, but meet the single logical change structure

Will close https://github.com/pymc-devs/Theano-PyMC/pull/248 after this is merged",,twiecki,,2020-12-31 21:01:44,2021-01-04 19:53:28,doc/JaxOps.rst,d6ca70910c275e99fa2e33aecaa661680ed7986b c17805420e2de207ff1c75a36c56a955b4152b81,"canyon289 head_ref_force_pushed 2020-12-31 22:15:23,twiecki referenced 2021-01-04 19:53:28,twiecki merged 2021-01-04 19:53:28,twiecki closed 2021-01-04 19:53:28,canyon289 mentioned 2021-01-04 19:53:40,canyon289 subscribed 2021-01-04 19:53:40,canyon289 head_ref_deleted 2021-01-04 20:57:28,brandonwillard connected 2021-03-11 17:23:43,brandonwillard renamed 2021-03-11 17:24:45",canyon289 twiecki brandonwillard,3,True
125,254,Preempt missing CVM and fall back to non-C VM in VMLinker.make_vm,brandonwillard,"This PR prevents `VMLinker.make_vm` from failing when `CVM` is not available&mdash;or is simply disabled via `theano.config.cxx = """"`&mdash;by using the `VM` that would've been chosen with `use_cloop = False`.",bug important,,brandonwillard,2021-01-01 00:15:10,2021-01-01 04:58:31,theano/link/vm.py tests/link/test_vm.py,b09f9ed9115f005cfa74c0e61a4d37887e08bf78,"brandonwillard labeled 2021-01-01 00:15:10,brandonwillard labeled 2021-01-01 00:15:10,brandonwillard assigned 2021-01-01 00:15:10,brandonwillard head_ref_force_pushed 2021-01-01 02:50:40,brandonwillard referenced 2021-01-01 04:58:31,brandonwillard merged 2021-01-01 04:58:31,brandonwillard closed 2021-01-01 04:58:31,brandonwillard head_ref_deleted 2021-11-10 20:31:39",codecov[bot] brandonwillard,1,True
126,255,Refactor theano.gof.utils,brandonwillard,"This PR moves, removes, and renames some of the functions in `theano.gof.utils`, as well as some minor import fixes encountered along the way.  

The main goal of these `theano.gof.utils` refactorings is to remove unnecessary dependencies between `theano.gof` and modules in other sub-packages that do not deal much&mdash;or at all&mdash;with the graph objects defined in `theano.gof`.  Also, `theano.gof.utils` contains objects that are themselves mostly unrelated to the graph objects, and those should be in `theano.utils` (e.g. unnecessary list manipulation functions, generic and outdated hashing functions, etc.)",refactor,,brandonwillard,2021-01-01 02:02:01,2021-01-01 05:08:21,theano/tensor/subtensor.py theano/gof/utils.py theano/tensor/utils.py theano/gof/params_type.py theano/link/jax/jax_linker.py theano/link/c/basic.py theano/gof/fg.py theano/gof/graph.py theano/gof/unify.py theano/tensor/type_other.py theano/tensor/var.py theano/link/basic.py theano/configparser.py theano/compile/debugmode.py theano/gof/compiledir.py theano/gof/op.py theano/typed_list/type.py theano/utils.py theano/tensor/blas.py bin/theano_cache.py theano/sparse/utils.py theano/scalar/basic_sympy.py theano/gof/opt.py theano/tensor/elemwise.py theano/tensor/type.py theano/gof/type.py tests/gof/test_utils.py theano/scalar/basic.py theano/link/c/cmodule.py theano/gof/__init__.py,8a46fddda3c3259ed3f45a6c78616428d4e1ebbd 1cbc7b9445ffe8246963347fa64c63d61b17a289 1bc58c953b9b41e1baa2455904607b249b48b6d7 2553814c4de3e65cc27603768f5edec2d09948e7 773d195b64fa832621d0d1a730727956ef0da555 0f68fca7b198f284c6432fd0749e1fb1342cdca2 7bc7fb759ada62e5c6c0bb85ffd28ee8af091336 ec7e6b7e889abf0e29f942488d8bfecebb8d6c42 86cba9f346de7ad1965f6a3c06526fd948c51fd6 39a7473f37f9d254997d7ffd127db1d0b0c673ea 7dfc3aed7c82dd30733ceb539c1381bac9c70590 233339297ff80bc676c8d9018529dff6373e92bb 16910398e84d28199551035ad2c0a4dbdff2d758 56956bc5535baf6214232b88e27d261714e83ee4,"brandonwillard labeled 2021-01-01 02:02:01,brandonwillard milestoned 2021-01-01 02:02:01,brandonwillard assigned 2021-01-01 02:02:01,brandonwillard referenced 2021-01-01 05:08:21,brandonwillard merged 2021-01-01 05:08:21,brandonwillard closed 2021-01-01 05:08:21,brandonwillard head_ref_deleted 2021-01-01 05:08:25",codecov[bot] brandonwillard,1,True
127,256,[Updated] Docs - Add Ops to the Docs Index,CloudChaoszero,"# Description

Orginally, this PR was designated for something else related to the docs

> Feature request on just testing out a potential solution to autosummary malformed in the PyMC [Api/Math docs](https://docs.pymc.io/api/math.html) issue, Pymc3 Issue 3871.

However, this PR is now updated to include the `Op` from gof to the documentation index.

# Test

```
sphinx-build -b html -d _build/doctrees   . _build/html
cd _build/html && python -m http.server
```
![Screen Shot 2020-12-31 at 7 28 19 PM](https://user-images.githubusercontent.com/19514362/103433000-649f2780-4b9e-11eb-8548-b4f76c10199d.png)
",,michaelosthege twiecki,,2021-01-01 03:34:38,2021-01-08 13:46:34,,,"CloudChaoszero head_ref_force_pushed 2021-01-01 05:58:35,CloudChaoszero mentioned 2021-01-01 10:15:24,CloudChaoszero subscribed 2021-01-01 10:15:25,CloudChaoszero mentioned 2021-01-01 10:19:39,CloudChaoszero subscribed 2021-01-01 10:19:39,twiecki mentioned 2021-01-01 11:05:04,twiecki subscribed 2021-01-01 11:05:04,CloudChaoszero mentioned 2021-01-01 11:05:04,CloudChaoszero subscribed 2021-01-01 11:05:04,michaelosthege mentioned 2021-01-01 11:15:05,michaelosthege subscribed 2021-01-01 11:15:05,CloudChaoszero review_dismissed 2021-01-01 11:16:46,CloudChaoszero head_ref_force_pushed 2021-01-01 11:16:46,twiecki mentioned 2021-01-01 11:17:25,twiecki subscribed 2021-01-01 11:17:26,CloudChaoszero mentioned 2021-01-01 11:22:09,CloudChaoszero subscribed 2021-01-01 11:22:09,CloudChaoszero head_ref_force_pushed 2021-01-01 11:39:57,brandonwillard mentioned 2021-01-01 11:43:03,brandonwillard subscribed 2021-01-01 11:43:03,michaelosthege mentioned 2021-01-01 11:43:04,michaelosthege subscribed 2021-01-01 11:43:04,CloudChaoszero head_ref_force_pushed 2021-01-02 04:20:43,michaelosthege mentioned 2021-01-02 04:25:12,michaelosthege subscribed 2021-01-02 04:25:12,MarcoGorelli mentioned 2021-01-02 04:25:12,MarcoGorelli subscribed 2021-01-02 04:25:12,CloudChaoszero mentioned 2021-01-02 10:37:49,CloudChaoszero subscribed 2021-01-02 10:37:49,CloudChaoszero renamed 2021-01-02 10:43:55,michaelosthege mentioned 2021-01-02 10:46:27,michaelosthege subscribed 2021-01-02 10:46:27,CloudChaoszero head_ref_force_pushed 2021-01-08 09:56:26,michaelosthege mentioned 2021-01-08 09:57:18,michaelosthege subscribed 2021-01-08 09:57:18,CloudChaoszero mentioned 2021-01-08 09:57:18,CloudChaoszero subscribed 2021-01-08 09:57:18,CloudChaoszero review_requested 2021-01-08 09:57:29,michaelosthege closed 2021-01-08 13:46:34,michaelosthege head_ref_force_pushed 2021-01-08 13:46:34,CloudChaoszero mentioned 2021-01-08 13:49:09,CloudChaoszero subscribed 2021-01-08 13:49:09",CloudChaoszero MarcoGorelli codecov[bot] brandonwillard michaelosthege twiecki,16,False
128,259,Convert theano.gof.graph graph walking functions to generators,brandonwillard,This PR converts `theano.gof.graph` graph-walking functions to generators.  There will also be a lot of general `theano.gof.graph` refactorings in this PR.,enhancement important graph rewriting refactor,,brandonwillard,2021-01-03 00:59:20,2021-01-03 20:49:51,theano/gof/toolbox.py tests/gof/test_graph.py tests/test_gradient.py theano/compile/debugmode.py theano/d3viz/formatting.py theano/scan/op.py theano/printing.py theano/gof/opt.py tests/tensor/test_extra_ops.py theano/link/c/basic.py theano/gof/fg.py theano/scan/opt.py tests/tensor/test_elemwise.py theano/scan/utils.py theano/gof/graph.py theano/compile/function/types.py,bd57354314a904efddb1a2d85970ce23fa937ba6 1529cefd5354ead0f9f85fdffc71c5e3b85efa28 8488dad7b71094b381486f04b005d75f74d014c6 25dbccb26808625cef4cf1f0810398b6e8ebf965,"brandonwillard labeled 2021-01-03 00:59:20,brandonwillard labeled 2021-01-03 00:59:20,brandonwillard labeled 2021-01-03 00:59:20,brandonwillard labeled 2021-01-03 00:59:20,brandonwillard milestoned 2021-01-03 00:59:20,brandonwillard assigned 2021-01-03 00:59:20,brandonwillard convert_to_draft 2021-01-03 00:59:29,brandonwillard head_ref_force_pushed 2021-01-03 00:59:52,brandonwillard head_ref_force_pushed 2021-01-03 01:00:16,brandonwillard head_ref_force_pushed 2021-01-03 03:41:07,brandonwillard head_ref_force_pushed 2021-01-03 04:16:16,brandonwillard head_ref_force_pushed 2021-01-03 04:32:23,brandonwillard head_ref_force_pushed 2021-01-03 04:34:04,brandonwillard connected 2021-01-03 05:31:39,brandonwillard ready_for_review 2021-01-03 20:24:15,brandonwillard referenced 2021-01-03 20:49:51,brandonwillard merged 2021-01-03 20:49:51,brandonwillard closed 2021-01-03 20:49:52,brandonwillard head_ref_deleted 2021-01-03 20:51:46",codecov[bot] twiecki brandonwillard,3,True
129,261,Rename theano.gof objects,brandonwillard,"This PR introduces a few new important refactorings in `theano.gof`.  Most are renamings of basic classes and utility functions that clarify their purpose/use (e.g. `theano.gof.graph.inputs` is renamed to `theano.gof.graph.graph_inputs` so that it's use doesn't clash with ubiquitous local variables also named `inputs`).

More importantly, this PR includes a rename of `Type` to `CType`, which involves some important `CLinker` changes.  Those changes also improve the clarity of `CLinker`'s code by removing a lot of ambiguous logic (e.g. `try` statements) that allow objects to forego an ultimately required C code-generating interface.",important refactor C-backend,michaelosthege twiecki,,2021-01-03 20:58:22,2021-01-09 18:57:42,theano/graph/fg.py theano/tensor/subtensor.py theano/link/vm.py tests/gpuarray/test_nnet.py theano/scan/c_code/scan_perform.c tests/compile/test_builders.py theano/compile/ops.py theano/gof/utils.py tests/sandbox/multinomial_test_graph.pkl theano/scan/scan_perform.pyx tests/gof/test_compute_test_value.py doc/extending/extending_theano.txt theano/gof/params_type.py theano/gpuarray/ctc.py theano/graph/utils.py theano/scan/opt.py theano/link/jax/jax_linker.py theano/gpuarray/multinomial.py theano/scan/basic.py theano/link/jax/jax_dispatch.py doc/library/graph/toolbox.txt theano/tensor/type_other.py theano/tensor/fft.py theano/gof/toolbox.py tests/sparse/test_basic.py doc/library/graph/op.txt tests/tensor/_test_mpi_roundtrip.py theano/sandbox/multinomial.py tests/tensor/test_var.py theano/gpuarray/extra_ops.py theano/tensor/nnet/blocksparse.py tests/tensor/test_mlp.py theano/tensor/basic.py tests/gof/test_destroyhandler.py tests/link/test_link.py theano/gof/op.py tests/test_rop.py theano/misc/pkl_utils.py theano/tensor/extra_ops.py theano/gpuarray/opt.py theano/tensor/nnet/conv.py theano/graph/toolbox.py tests/tensor/utils.py theano/scan/op.py theano/gpuarray/neighbours.py doc/glossary.txt theano/sandbox/fourier.py theano/sandbox/linalg/ops.py tests/graph/test_compute_test_value.py tests/gpuarray/test_basic_ops.py theano/gpuarray/optdb.py theano/tensor/elemwise.py theano/tensor/nnet/bn.py theano/scalar/basic_scipy.py tests/compile/function/test_pfunc.py tests/tensor/test_utils.py doc/library/index.txt theano/graph/callcache.py theano/compile/nanguardmode.py theano/gradient.py tests/compile/test_ops.py doc/hpcs2011_tutorial/presentation.tex theano/graph/type.py theano/sparse/sandbox/sp2.py tests/tensor/test_sort.py tests/graph/test_types.py doc/extending/extending_theano_c.txt tests/tensor/random/test_utils.py tests/tensor/nnet/test_abstract_conv.py tests/graph/test_opt.py theano/tensor/random/op.py theano/compile/profiling.py theano/tensor/random/opt.py theano/gpuarray/elemwise.py theano/tensor/nnet/opt.py theano/tensor/utils.py tests/gpuarray/test_cgpukernelbase.py tests/graph/c_code/test_quadratic_function.c theano/link/c/basic.py theano/gof/fg.py tests/graph/c_code/test_cenum.h theano/tensor/nnet/ctc.py theano/tensor/nnet/corr.py theano/gpuarray/sort.py tests/gpuarray/test_opt.py tests/graph/test_params_type.py doc/extending/extending_theano_solution_1.py theano/compile/function/types.py tests/graph/test_op.py doc/hpcs2011_tutorial/double_op.py tests/tensor/test_io.py theano/tensor/var.py theano/graph/op.py theano/tensor/nnet/neighbours.py theano/gpuarray/type.py tests/test_gradient.py theano/d3viz/formatting.py theano/gpuarray/pool.py doc/library/gof/fgraph.txt theano/compile/sharedvalue.py doc/JaxOps.rst theano/graph/sched.py theano/typed_list/type.py doc/library/graph/type.txt tests/compile/function/test_types.py tests/gpuarray/test_scan.py tests/scalar/test_basic.py tests/link/c/test_basic.py theano/tensor/sort.py tests/tensor/test_mpi.py theano/graph/destroyhandler.py theano/compile/__init__.py theano/scan/scan_perform_ext.py tests/link/c/__init__.py doc/extending/using_params.txt doc/extending/type.txt doc/extending/optimization.txt tests/graph/test_sched.py theano/tensor/fourier.py doc/library/graph/params_type.txt theano/gpuarray/nnet.py tests/tensor/test_type_other.py theano/tensor/type.py theano/gpuarray/fft.py tests/gof/test_toolbox.py tests/scan/test_basic.py tests/tensor/test_subtensor.py tests/graph/test_basic.py theano/gpuarray/subtensor.py tests/link/test_jax.py theano/tensor/random/type.py theano/graph/optdb.py theano/scalar/basic.py theano/gof/null_type.py theano/__init__.py theano/link/c/cmodule.py theano/sparse/sandbox/sp.py theano/gof/__init__.py theano/gpuarray/blas.py tests/link/test_cc.py theano/tensor/nnet/conv3d2d.py theano/tensor/opt_uncanonicalize.py theano/graph/sandbox/typeattr.txt tests/tensor/nnet/test_nnet.py theano/sandbox/minimal.py doc/cifarSC2011/pyCUDA.txt theano/tensor/nnet/nnet.py tests/tensor/test_elemwise.py tests/gof/test_op.py theano/graph/basic.py theano/compile/mode.py doc/tutorial/using_gpu.txt doc/extending/graphstructures.txt theano/link/basic.py tests/gof/test_graph.py theano/tensor/blas_c.py theano/compile/debugmode.py tests/test_determinism.py doc/troubleshooting.txt doc/extending/inplace.txt tests/graph/test_graph_opt_caching.py theano/sparse/basic.py tests/gof/test_types.py theano/gpuarray/cudnn_defs.py tests/tensor/nnet/test_conv3d2d.py theano/gpuarray/reduction.py theano/tensor/opt.py theano/gpuarray/basic_ops.py tests/tensor/test_opt.py theano/scalar/basic_sympy.py theano/graph/unify.py doc/dev_start_guide.txt theano/gof/opt.py doc/library/graph/utils.txt theano/graph/params_type.py doc/extending/other_ops.txt doc/hpcs2011_tutorial/pycuda_double_op.py theano/compile/compiledir.py theano/gpuarray/linalg.py theano/compile/function/pfunc.py tests/compile/test_debugmode.py theano/misc/doubleop.py theano/typed_list/opt.py theano/graph/null_type.py theano/graph/__init__.py tests/graph/test_toolbox.py theano/gpuarray/blocksparse.py tests/tensor/test_merge.py tests/graph/test_fg.py theano/compile/function/__init__.py doc/extending/cop.txt theano/tensor/random/utils.py tests/tensor/random/test_opt.py theano/graph/opt.py tests/tensor/random/test_basic.py doc/extending/pipeline.txt tests/gpuarray/test_elemwise.py theano/tensor/nnet/abstract_conv.py theano/tensor/signal/pool.py tests/gof/test_params_type.py tests/tensor/test_blas.py doc/extending/extending_theano_gpu.txt doc/library/graph/graph.txt theano/ifelse.py doc/sandbox/sandbox.txt doc/extending/fibby.txt tests/tensor/test_basic.py tests/tensor/test_opt_uncanonicalize.py doc/tutorial/debug_faq.txt theano/tensor/nnet/sigm.py doc/library/graph/index.txt theano/gof/graph.py doc/library/compile/debugmode.txt theano/gof/optdb.py tests/graph/utils.py tests/scalar/test_basic_sympy.py setup.cfg tests/graph/test_utils.py theano/gpuarray/dnn.py tests/tensor/nnet/test_sigm.py theano/gpuarray/rng_mrg.py theano/utils.py theano/tensor/blas.py doc/extending/op.txt theano/sandbox/rng_mrg.py theano/sparse/type.py tests/link/test_vm.py theano/tensor/nlinalg.py tests/link/c/test_cmodule.py theano/gpuarray/opt_util.py tests/compile/test_mode.py tests/graph/test_optdb.py theano/typed_list/basic.py tests/tensor/test_extra_ops.py theano/printing.py theano/gof/destroyhandler.py tests/graph/test_destroyhandler.py theano/link/c/interface.py theano/tensor/nnet/corr3d.py theano/compile/builders.py doc/library/graph/fgraph.txt theano/tensor/io.py tests/tensor/nnet/test_opt.py theano/breakpoint.py theano/gof/type.py doc/extending/ctype.txt theano/sparse/opt.py tests/test_ifelse.py theano/tensor/slinalg.py theano/link/utils.py theano/raise_op.py doc/tutorial/adding.txt theano/scan/utils.py tests/graph/__init__.py theano/gpuarray/dnn_opt.py,8223f0c7212b1e6c38be5223f138616b4c95aa7e 172e729eefedff0fa06602e7f0f0a574d1052725 f3d150a21e8c0c5dd58a95d58707fc2f042d0780 d261604f2f0a4e509f7a0b7184364f0365b4f1ec d766d0eab37e93c0518dbd3b0ea3cf3bd3bfda81 b682b30fcfbd95eaa727bfbaf7cea64c85664f48 7fe52ee5fd0f032a2669f93dc088c5fc549a3dea 49f277f273ef783b009440d1837ea59bbd167169 b91495d6129b58ebde838bd83a7268b4d37d3941 40b9dcf10b53c02ec6fdb5c377406c9ad0aee071 8caa9f9e8d6ff42d2f9196ddba7e4a6f2ad5c61b a86d64a6e1bd32aad374cce890bf0ea5898485af b8c747f79c7bbc58ba365bd12f527c68fb8bb871 bfe58453d524e7381946afee1b93daa3dede068f f25c648d4fbf0d0b3306a349ecf213ba8bbb0e05 c94c60197e1c288814b64d5c8e8737d9e82f67e4,"brandonwillard labeled 2021-01-03 20:58:22,brandonwillard labeled 2021-01-03 20:58:22,brandonwillard labeled 2021-01-03 20:58:22,brandonwillard milestoned 2021-01-03 20:58:22,brandonwillard review_requested 2021-01-03 20:58:28,brandonwillard head_ref_force_pushed 2021-01-03 21:02:51,brandonwillard head_ref_force_pushed 2021-01-06 07:28:19,brandonwillard head_ref_force_pushed 2021-01-06 18:58:02,brandonwillard head_ref_force_pushed 2021-01-06 20:07:12,brandonwillard head_ref_force_pushed 2021-01-06 22:09:09,brandonwillard head_ref_force_pushed 2021-01-06 22:26:10,brandonwillard head_ref_force_pushed 2021-01-07 08:58:34,brandonwillard connected 2021-01-09 06:48:00,brandonwillard head_ref_force_pushed 2021-01-09 07:37:47,brandonwillard review_requested 2021-01-09 07:38:14,brandonwillard review_requested 2021-01-09 07:38:17,brandonwillard referenced 2021-01-09 18:57:42,brandonwillard merged 2021-01-09 18:57:42,brandonwillard closed 2021-01-09 18:57:42,brandonwillard head_ref_deleted 2021-01-09 18:57:47",codecov[bot] michaelosthege twiecki brandonwillard,8,True
130,262,Implement improved numerically-stable softplus,ricardoV94,"This PR alters the Softplus Op to use the numerically stable approximation described by [Machler 2012](https://cran.r-project.org/web/packages/Rmpfr/vignettes/log1mexp-note.pdf).

It is also computationally efficient in that it uses safe and fast altenatives to the good default `log1p(exp(x))`:

1. `exp(x)` in the range `[-inf, -37]` (not used previously)
2. `log1p(exp(x))` in the range `[-37, 18]` (previously used in the range `[-30, 30]` in Python or `[-inf/underflow, 14/16]` in `c_code`)
2. `x + np.exp(-x)` in the range `[18, 33.3]` (not used previously)
3. `x` in the range `[33.3, +inf]` (previously used in the range `[30, +inf]` in Python or `[14/16, +inf]` in `c_code`)

The previous 64-bit `c_code` cutoff at `16.0` for when to use the approximation `log1p(x) = x` was a bit too eager (according to Machler, and my unittests below) and the rational for it was not clear either (the op was described as having the goal of numerical stabilization and not speedup). In addition, the Python version was not doing the same thing as the C counterpart.

According to my tests, there was no issue with the (also unexplained) 32-bit cutoff of `14.0`.

When it comes to unittests, the only thing that was checking for precision seems to have been the `TestSoftplus` in `test.sigm.py` via `verify_grad` which is not sensitive enough to detect the reduction in error introduced by this PR. It can, however, detect when very wrong cutoffs or obviously wrong approximations are used in the `c_code` so it is a good sanity check that the current PR is not breaking anything.

**Edit: Added specific accuracy unittests, which would fail with the previous 64-bit `c_code` implementation**

The 32bit wouldn't fail in the previous implementation due to its limited range, but I think it is better to keep the same implementation for simplicity sake. It is a bit more conservative/inefficient than needed, but not less accurate!

***

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [x] There are tests covering the changes introduced in the PR.

Closes #260 ",,michaelosthege twiecki brandonwillard,,2021-01-04 17:34:01,2021-01-06 15:54:58,theano/tensor/nnet/sigm.py tests/tensor/nnet/test_sigm.py,c319e1f61986800e6813601346263765e6262dd3 65930a5633a28dbb7a318a507366f0f21d673183 36eb19e53705d428679c2a58191680f2ba276472 bc9156d598bbdbda4f6eda2b1aaeaf2785076d56,"ricardoV94 convert_to_draft 2021-01-04 17:40:48,ricardoV94 ready_for_review 2021-01-04 17:48:35,ricardoV94 review_requested 2021-01-05 08:47:09,ricardoV94 review_dismissed 2021-01-06 13:24:26,twiecki referenced 2021-01-06 15:54:58,twiecki merged 2021-01-06 15:54:58,twiecki closed 2021-01-06 15:54:58,ricardoV94 mentioned 2021-01-06 15:55:06,ricardoV94 subscribed 2021-01-06 15:55:07,ricardoV94 head_ref_deleted 2021-01-22 10:58:21",codecov[bot] brandonwillard ricardoV94 michaelosthege twiecki,11,True
131,263,Add filelock to conda dependency.,twiecki,Conda-forge builds failed because of this.,,michaelosthege brandonwillard,,2021-01-04 19:29:27,2021-01-04 19:53:53,conda/meta.yaml,93227575e14f139978c34d0a2df74f1a5bb70266,"twiecki referenced 2021-01-04 19:53:52,twiecki merged 2021-01-04 19:53:52,twiecki closed 2021-01-04 19:53:53,twiecki head_ref_deleted 2021-01-04 19:53:56",michaelosthege twiecki brandonwillard,0,True
132,264,Remove numpy seterr config settings,michaelosthege,"By default Theano sets `numpy.seterr(all=""ignore"")`.
The numpy default is `divide='warn', over='warn', under='ignore', invalid='warn'`.

The config settings are import-time constants and don't add anything over interacting with [`numpy.seterr`](https://numpy.org/doc/stable/reference/generated/numpy.seterr.html?highlight=seterr) directly.

If we want to maintain the default behaviour (`all=""ignore""`), we can keep that one setting but still remove the others.",,brandonwillard,,2021-01-05 21:30:47,2021-01-05 22:49:18,theano/configdefaults.py doc/library/config.txt theano/__init__.py,ed1c7d6ca375972edf95219b30fca64fc15dbd60,"michaelosthege review_requested 2021-01-05 22:22:00,michaelosthege referenced 2021-01-05 22:49:18,michaelosthege merged 2021-01-05 22:49:18,michaelosthege closed 2021-01-05 22:49:18,michaelosthege head_ref_deleted 2021-01-05 22:49:39",codecov[bot] michaelosthege brandonwillard,1,True
133,265,Restrict mamba/conda updates to CPython,brandonwillard,This PR adds `conda`/`mamba` options that limit aggressive updates during CI builds.,bug important,michaelosthege,brandonwillard,2021-01-06 00:16:37,2021-01-06 03:50:11,.github/workflows/test.yml,7eabab9d65081cd9de401abbcec0aa88482e2a95,"brandonwillard labeled 2021-01-06 00:16:37,brandonwillard labeled 2021-01-06 00:16:37,brandonwillard assigned 2021-01-06 00:16:38,brandonwillard review_dismissed 2021-01-06 00:26:19,brandonwillard head_ref_force_pushed 2021-01-06 00:26:19,brandonwillard head_ref_force_pushed 2021-01-06 01:45:15,brandonwillard head_ref_force_pushed 2021-01-06 01:55:34,brandonwillard head_ref_force_pushed 2021-01-06 02:01:07,brandonwillard head_ref_force_pushed 2021-01-06 02:09:02,brandonwillard renamed 2021-01-06 02:09:20,brandonwillard referenced 2021-01-06 03:50:11,brandonwillard merged 2021-01-06 03:50:11,brandonwillard closed 2021-01-06 03:50:11,brandonwillard head_ref_deleted 2021-01-06 03:50:17",codecov[bot] michaelosthege brandonwillard,3,True
134,266,Add gof OP documentation and surface to index,michaelosthege,"This is a replacement of #256 where I messed up with a force push.

The commit includes @CloudChaoszero as the author, so this should be fine.",documentation,brandonwillard,,2021-01-08 14:04:00,2021-01-08 16:59:07,doc/conf.py doc/library/gof/op.txt doc/library/gof/index.txt,fc0a9a48a99ffce4afe6147e8bce43c70f716cef,"michaelosthege labeled 2021-01-08 14:04:00,CloudChaoszero mentioned 2021-01-08 14:04:00,CloudChaoszero subscribed 2021-01-08 14:04:00,michaelosthege milestoned 2021-01-08 14:19:46,brandonwillard mentioned 2021-01-08 16:36:20,brandonwillard subscribed 2021-01-08 16:36:20,michaelosthege referenced 2021-01-08 16:59:07,michaelosthege merged 2021-01-08 16:59:07,michaelosthege closed 2021-01-08 16:59:07,michaelosthege head_ref_deleted 2021-01-08 16:59:12",michaelosthege CloudChaoszero brandonwillard,3,True
135,268,Refactor tensor imports,brandonwillard,"This PR performs multiple `theano.tensor`-related refactorings in order to remove both unnecessarily complicated and circular dependencies, as well as generally organize and break apart some of the largest modules.  This work should make it much easier to finish #233, #235, #142, #130, #96.

- [x] Move `TensorType` definitions to `theano.tensor.type` (i.e. where `TensorType` itself is defined).
  - This effectively makes the `theano.tensor.type` module independent of `theano.tensor.basic`, which removes some large and superfluous dependencies between modules.
- [x] Move the math `Op`s in `theano.tensor.basic` into a new `theano.tensor.math` module, effectively leaving only the tensor manipulation, creation, and casting `Op`s in `theano.tensor.basic`.
- [x] Move shape `Op`s out of `theano.compile`.
  - These create some weird and unnecessary dependencies between `theano.tensor` modules and `theano.compile`.  Plus, tensors are the only things with shapes in this library, so why would fundamental shape `Op`s be defined elsewhere?
- [x] Add `__all__`s to `*` imported modules (e.g. `theano.tensor.basic`).
  - This helps prevent the use of indirect imports via `__init__.py`s.
- [x] Move exceptions into their own modules (e.g. `NotScalarConstantError`).
  - One should need to load `theano.tensor.basic`&mdash;and others&mdash;in order to catch exceptions.
- [x] Rename `theano.tensor.nnet.nnet` to `theano.tensor.nnet.basic`.
- [x] Move `theano.scan.utils.clone` to somewhere in `theano.graph`.
  - It's a widely used graph utility function that has nothing (explicitly) to do with `Scan`.
- [x] Move `theano.tensor.basic.bached_dot` to `theano.tensor.blas`
  - `batched_dot` is a helper function for `theano.tensor.blas.BatchedDot`, so it should be defined in the same module.
- [x] Separate math-related optimizations from basic tensor optimizations in `theano.tensor.opt` (same with its corresponding test module).
  - This module is unnecessarily huge and needs to be split up.  It might even make sense to break it into _three_ distinct optimization modules (perhaps in a new `ops` sub-package).
- [x] Move `theano.tensor.basic.[addbroadcast, unbroadcast, patternbroadcast]` to wherever their underlying `Op`s are located (i.e. after the `theano.compile.ops` refactoring above).
- [x] Move `theano.sparse_grad`
  - There doesn't seem to be a reason for this to be defined in `theano.__init__`.  It would make more sense in `theano.sparse`.
- [x] Move `tests.tensor.nnet.test_nnet` sigmoid and softplus tests to `test_sigm`.
- [x] Move `theano.tensor.nnet.[conv2d, conv2d_transpose]` to `theano.tensor.nnet.abstract_conv`.
- [x] Move `theano.pathparse` to `theano.gpuarray`, since that's the only place it's used.
- [x] Rename `theano.tensor.nnet.bn` to `batchnorm`.
- [x] Move `theano.tensor.inc_code` into `theano.tensor.subtensor`, since that's the only place it's used.
- [x] Move `theano.tensor.opt.MakeVector` to `theano.tensor.basic`.",important refactor,,brandonwillard,2021-01-13 22:00:51,2021-01-27 11:05:18,theano/tensor/subtensor.py theano/misc/do_nightly_build_send theano/tensor/blas_scipy.py tests/gpuarray/test_nnet.py tests/compile/test_builders.py theano/compile/ops.py doc/extending/extending_theano.txt theano/gpuarray/ctc.py theano/scan/opt.py doc/library/sparse/index.txt theano/gpuarray/multinomial.py tests/d3viz/models.py theano/misc/strutil.py theano/scan/basic.py theano/link/jax/jax_dispatch.py tests/tensor/nnet/test_corr.py theano/tensor/fft.py theano/tensor/type_other.py doc/tutorial/examples.txt tests/sparse/test_basic.py tests/tensor/_test_mpi_roundtrip.py doc/library/tensor/basic.txt theano/sandbox/multinomial.py tests/tensor/test_var.py tests/gpuarray/test_fft.py doc/cifarSC2011/advanced_theano.txt tests/tensor/signal/test_conv.py theano/tensor/basic.py tests/tensor/test_mlp.py tests/tensor/test_keepdims.py tests/link/test_link.py doc/tutorial/aliasing.txt theano/misc/latence_gpu_transfert.py tests/test_rop.py tests/gpuarray/test_subtensor.py doc/faq.txt theano/misc/pkl_utils.py theano/tensor/extra_ops.py tests/tensor/test_basic_opt.py tests/typed_list/test_basic.py theano/gpuarray/opt.py theano/tensor/nnet/conv.py tests/tensor/test_basic_scipy.py tests/tensor/utils.py tests/tensor/test_blas_c.py theano/sandbox/linalg/ops.py theano/gpuarray/neighbours.py doc/glossary.txt theano/sandbox/fourier.py tests/graph/test_compute_test_value.py theano/scan/op.py tests/gpuarray/test_basic_ops.py tests/tensor/test_shape.py theano/tensor/elemwise.py tests/gpuarray/test_ctc.py tests/tensor/nnet/test_batchnorm.py tests/tensor/nnet/test_blocksparse.py theano/tensor/nnet/bn.py theano/misc/hooks/reindent.py tests/unittest_tools.py tests/compile/function/test_pfunc.py tests/tensor/test_utils.py theano/scan/checkpoints.py doc/library/index.txt doc/proposals/pfunc.txt tests/gpuarray/test_linalg.py theano/gradient.py tests/compile/test_ops.py tests/gpuarray/test_pool.py theano/compile/nanguardmode.py doc/library/tensor/math_opt.txt tests/tensor/nnet/test_neighbours.py tests/tensor/test_inc_subtensor.py tests/tensor/random/test_utils.py tests/graph/test_types.py doc/extending/extending_theano_c.txt tests/tensor/test_sort.py theano/sparse/sandbox/sp2.py tests/tensor/nnet/test_abstract_conv.py tests/record.py tests/graph/test_opt.py theano/tensor/random/op.py doc/library/gpuarray/dnn.txt tests/gpuarray/test_extra_ops.py tests/sparse/test_opt.py theano/compile/profiling.py tests/gpuarray/test_rng_mrg.py theano/gpuarray/elemwise.py theano/tensor/random/opt.py theano/tensor/nnet/opt.py tests/gpuarray/test_cgpukernelbase.py theano/tensor/utils.py theano/tensor/nnet/ctc.py tests/graph/test_params_type.py theano/configdefaults.py tests/gpuarray/test_opt.py theano/tensor/inc_code.py doc/extending/extending_theano_solution_1.py tests/tensor/random/test_op.py tests/graph/test_op.py tests/tensor/test_misc.py tests/tensor/test_io.py theano/tensor/var.py theano/graph/op.py theano/tensor/nnet/neighbours.py theano/gpuarray/type.py doc/nextml2015/presentation.tex tests/gpuarray/test_dnn.py tests/tensor/nnet/speed_test_conv.py tests/test_gradient.py theano/gpuarray/pool.py theano/graph/sched.py doc/cifarSC2011/introduction.txt tests/typed_list/test_opt.py theano/misc/burn_gpu.py tests/compile/function/test_types.py tests/compile/test_modes.py tests/gpuarray/test_scan.py tests/link/c/test_basic.py tests/scalar/test_basic.py tests/tensor/test_mpi.py theano/tensor/sort.py theano/misc/check_blas.py theano/compile/__init__.py tests/compile/test_misc.py tests/tensor/test_math_opt.py doc/extending/using_params.txt doc/library/gradient.txt tests/test_breakpoint.py tests/graph/test_sched.py doc/extending/optimization.txt theano/tensor/fourier.py tests/tensor/test_gc.py doc/library/tensor/basic_opt.txt doc/introduction.txt tests/sandbox/test_multinomial_wo_replacement.py tests/tensor/test_type_other.py tests/gpuarray/test_type.py theano/gpuarray/fft.py doc/tutorial/shape_info.txt tests/compile/function/test_function.py theano/tensor/type.py tests/scan/test_basic.py tests/tensor/test_fft.py tests/tensor/test_nlinalg.py theano/tensor/nnet/batchnorm.py tests/tensor/nnet/test_bn.py tests/tensor/test_subtensor.py tests/test_config.py .github/workflows/test.yml theano/tensor/sharedvar.py tests/graph/test_basic.py tests/link/test_jax.py theano/gpuarray/subtensor.py tests/test_pickle_unpickle_theano_fn.py theano/scalar/basic.py theano/sparse/sandbox/sp.py theano/__init__.py tests/gpuarray/test_abstractconv.py theano/gpuarray/blas.py doc/optimizations.txt theano/tensor/nnet/conv3d2d.py theano/scan/__init__.py tests/compile/test_monitormode.py tests/sparse/sandbox/test_sp.py theano/tensor/opt_uncanonicalize.py tests/tensor/test_type.py tests/tensor/nnet/test_nnet.py theano/sandbox/minimal.py theano/tensor/exceptions.py theano/tensor/nnet/nnet.py tests/tensor/test_elemwise.py tests/sandbox/test_rng_mrg.py theano/graph/basic.py tests/tensor/nnet/test_corr3d.py doc/tutorial/using_gpu.txt theano/tensor/__init__.py doc/extending/graphstructures.txt tests/test_updates.py theano/tensor/nnet/__init__.py theano/tensor/blas_c.py theano/tensor/math_opt.py theano/compile/debugmode.py tests/compile/test_profiling.py doc/tutorial/modes.txt theano/tensor/signal/conv.py doc/tutorial/gradients.txt tests/tensor/nnet/test_basic.py doc/library/tensor/nnet/nnet.txt tests/test_determinism.py tests/sandbox/test_multinomial.py tests/graph/test_graph_opt_caching.py doc/extending/inplace.txt tests/tensor/test_math.py theano/sparse/basic.py tests/tensor/test_blas_scipy.py tests/gpuarray/rnn_support.py tests/sandbox/linalg/test_linalg.py tests/tensor/nnet/test_conv3d2d.py tests/gpuarray/test_reduction.py tests/typed_list/test_type.py theano/assert_op.py theano/tensor/opt.py tests/tensor/test_inplace.py tests/tensor/test_opt.py theano/gpuarray/basic_ops.py theano/misc/gh_api.py theano/graph/params_type.py doc/extending/other_ops.txt tests/scan/test_checkpoints.py tests/test_dictionary_output.py theano/gpuarray/linalg.py tests/compile/test_debugmode.py theano/compile/function/pfunc.py tests/graph/test_toolbox.py theano/gpuarray/blocksparse.py theano/tensor/random/utils.py tests/compile/test_shared.py tests/gpuarray/test_blas.py tests/sandbox/test_minimal.py tests/sparse/test_sp2.py theano/graph/opt.py tests/tensor/random/test_opt.py theano/gpuarray/pathparse.py theano/tensor/basic_opt.py tests/tensor/random/test_basic.py tests/tensor/test_slinalg.py theano/tensor/nnet/abstract_conv.py tests/gpuarray/test_elemwise.py theano/tensor/signal/pool.py tests/tensor/test_blas.py tests/gpuarray/test_blocksparse.py tests/test_2nd_order_grads.py tests/scan/test_opt.py theano/tensor/math.py theano/ifelse.py doc/sandbox/sandbox.txt doc/extending/fibby.txt tests/tensor/test_basic.py tests/diverse_tests.py tests/tensor/test_opt_uncanonicalize.py doc/library/tensor/nnet/basic.txt theano/tensor/nnet/sigm.py tests/tensor/test_complex.py theano/misc/may_share_memory.py doc/library/compile/debugmode.txt doc/tutorial/conditions.txt tests/disturb_mem.py setup.cfg tests/tensor/signal/test_pool.py doc/extending/unittest.txt tests/graph/test_utils.py tests/test_printing.py theano/gpuarray/dnn.py theano/tensor/nnet/blocksparse.py tests/tensor/nnet/test_sigm.py theano/gpuarray/rng_mrg.py theano/misc/hooks/check_whitespace.py theano/tensor/blas.py theano/misc/do_nightly_build theano/misc/buildbot_filter.py doc/extending/op.txt tests/gpuarray/test_multinomial.py theano/sandbox/rng_mrg.py tests/link/test_vm.py theano/misc/elemwise_time_test.py theano/tensor/nlinalg.py doc/library/printing.txt tests/compile/test_mode.py tests/link/c/test_cmodule.py theano/gpuarray/opt_util.py theano/typed_list/basic.py tests/tensor/test_extra_ops.py tests/scan/test_utils.py theano/printing.py tests/test_record.py tests/tensor/test_sharedvar.py theano/compile/builders.py tests/tensor/nnet/test_opt.py theano/tensor/io.py doc/tutorial/loop.txt theano/breakpoint.py theano/sparse/__init__.py doc/extending/ctype.txt tests/gpuarray/check_dnn_conv.py theano/sparse/opt.py tests/test_ifelse.py theano/tensor/slinalg.py theano/tensor/xlogx.py doc/crei2013/introduction.txt tests/tensor/test_casting.py theano/tensor/nnet/basic.py tests/misc/test_pkl_utils.py tests/gpuarray/test_misc.py tests/tensor/test_fourier.py theano/tensor/shape.py theano/scan/utils.py doc/library/scan.txt theano/gpuarray/dnn_opt.py tests/compile/test_nanguardmode.py tests/tensor/nnet/test_conv.py,561c3fa8ca9b5489c02131d38f14911c993b57d9 3d2768760bb917b34df84a3c919f3edc582d2f89 0dc11ae7aecf5ce8473a58d55dbc70ce2fa27ec2 32de282496126a373fb0e598bea9c3e9ed52709d 9032e4e4b923fdb3c0b4d0fccb9fd4beb77bcfaa 99a069b79421dbb31e1f84e7336cded73712ee0d 7dc496f577edb0e10b47a482db048513b5f82aed a9261626e9faf22f1d4912b43311f6062963f75f 186181aba79da1fee7fb110c5125e787ad07a6ce 5b553e2ebe2b638826976082a465e67328505123 68861024939105aa5d07e21d104b36d516b31449 f7ce6ae561bba03f424f6e2f2e6ea3daeaa49a57 1bcc50dbf2a614f0c44668a097fa5eead4dc5e8d 3ff0170c3a5f2be50fdc91b18dfdbb42fb8777da fc768d134f16734c4bd0b28c49a7084c177705fe 321475c1c55b1c827af84909117eaf7185d925ca be2123768d83812873bcad46ab3025bc5e501a01 2f0e5e5cb2cf09e868bde0d399ee0bb686ac6cf6 7642997ef31846dec0841336fbbdb987a26f7912 96a34bed4aa497e92feae86adfb4b007f2d881df d97636db9dbd0814701aedb1e7863a996e72e67e cdd8b7fe42510cc412d0e3e797f27d9c608eeb95 55ad76a68fbe5e680dfcd34b13a1f2a8806097a9 0facbd6dcbd6f4b88a3c81fc892a7efc37667470 e2fdf9e0d051efcbe33d4ccdd98719135789b548 5a84a9262e2170189d76b3c12a33b565cd0ca030 0031605f535973b1a55e7e5573cc028840b02470 62d9132b573658b3481f2e463c7561a3da463dca,"brandonwillard labeled 2021-01-13 22:00:51,brandonwillard labeled 2021-01-13 22:00:51,brandonwillard assigned 2021-01-13 22:00:51,brandonwillard head_ref_force_pushed 2021-01-13 22:09:52,brandonwillard head_ref_force_pushed 2021-01-13 22:33:00,brandonwillard head_ref_force_pushed 2021-01-14 02:42:44,brandonwillard head_ref_force_pushed 2021-01-14 02:52:41,brandonwillard head_ref_force_pushed 2021-01-14 03:18:56,brandonwillard head_ref_force_pushed 2021-01-14 03:53:10,brandonwillard head_ref_force_pushed 2021-01-14 04:25:22,brandonwillard head_ref_force_pushed 2021-01-14 04:39:13,brandonwillard head_ref_force_pushed 2021-01-14 04:50:31,brandonwillard head_ref_force_pushed 2021-01-14 04:59:57,brandonwillard head_ref_force_pushed 2021-01-14 05:44:38,brandonwillard head_ref_force_pushed 2021-01-14 05:54:18,brandonwillard head_ref_force_pushed 2021-01-15 00:49:07,brandonwillard head_ref_force_pushed 2021-01-15 02:10:13,brandonwillard head_ref_force_pushed 2021-01-17 06:29:42,brandonwillard head_ref_force_pushed 2021-01-17 21:32:47,brandonwillard head_ref_force_pushed 2021-01-17 21:37:25,brandonwillard head_ref_force_pushed 2021-01-17 22:15:00,brandonwillard head_ref_force_pushed 2021-01-18 00:03:34,brandonwillard head_ref_force_pushed 2021-01-18 17:14:09,brandonwillard head_ref_force_pushed 2021-01-18 17:36:04,brandonwillard head_ref_force_pushed 2021-01-18 18:01:20,brandonwillard head_ref_force_pushed 2021-01-18 21:01:58,brandonwillard head_ref_force_pushed 2021-01-19 04:55:13,brandonwillard head_ref_force_pushed 2021-01-20 06:16:10,brandonwillard head_ref_force_pushed 2021-01-21 03:20:22,brandonwillard head_ref_force_pushed 2021-01-21 03:33:12,brandonwillard head_ref_force_pushed 2021-01-21 04:10:17,brandonwillard head_ref_force_pushed 2021-01-21 04:46:51,brandonwillard head_ref_force_pushed 2021-01-21 05:27:53,brandonwillard head_ref_force_pushed 2021-01-23 01:08:16,brandonwillard mentioned 2021-01-24 10:00:40,brandonwillard subscribed 2021-01-24 10:00:40,michaelosthege milestoned 2021-01-26 18:10:04,brandonwillard head_ref_force_pushed 2021-01-27 03:59:46,brandonwillard head_ref_force_pushed 2021-01-27 04:03:39,brandonwillard head_ref_force_pushed 2021-01-27 04:09:03,twiecki referenced 2021-01-27 11:05:18,twiecki merged 2021-01-27 11:05:18,twiecki closed 2021-01-27 11:05:19,brandonwillard head_ref_deleted 2021-01-27 20:19:10",codecov[bot] michaelosthege twiecki brandonwillard,8,True
136,271,Use broadcasted output shape in local_useless_switch optimization,brandonwillard,"Closes #270
",bug important graph rewriting,,brandonwillard,2021-01-16 01:18:31,2021-01-16 03:39:12,theano/tensor/opt.py tests/tensor/test_opt.py,8d18237f24c9650dfa43ff47ac3bd3adbbe723ec,"brandonwillard labeled 2021-01-16 01:18:31,brandonwillard labeled 2021-01-16 01:18:31,brandonwillard labeled 2021-01-16 01:18:31,brandonwillard assigned 2021-01-16 01:18:32,brandonwillard renamed 2021-01-16 01:18:55,brandonwillard head_ref_force_pushed 2021-01-16 01:19:09,brandonwillard head_ref_force_pushed 2021-01-16 01:21:21,brandonwillard head_ref_force_pushed 2021-01-16 01:22:59,brandonwillard head_ref_force_pushed 2021-01-16 02:02:02,brandonwillard referenced 2021-01-16 03:39:12,brandonwillard merged 2021-01-16 03:39:12,brandonwillard closed 2021-01-16 03:39:12,brandonwillard head_ref_deleted 2021-01-16 03:39:17",codecov[bot] brandonwillard,1,True
137,272,Add type hints + docstrings details to theano.link.basics.py,LegrandNico,"This PR adds type hints and detail docstrings for the whole `theano.link.basic.py` file. It could help to fix #229 and contribute to #200.

Runing mypy on this file (using `mypy ./theano/link/basic.py --ignore-missing-imports --follow-imports=skip`) will return no error. The only exception occurs l.606 with:
```python
f.thunk_groups = thunk_groups
```
which looks like an inappropriate variable assignment that should be fixed separately.",,michaelosthege brandonwillard,,2021-01-17 01:47:28,2021-02-13 12:24:58,aesara/link/basic.py,61c811a60c34e727bd65d0cb8c07a45dcc479d9b f6e4ca4fae9058f23b29c2551967da94e6b3063c 7e0db2f920bdd32742b64c3c2b79f75fb4246ad0,"LegrandNico mentioned 2021-01-31 10:21:32,LegrandNico subscribed 2021-01-31 10:21:32,LegrandNico mentioned 2021-02-11 19:36:04,LegrandNico subscribed 2021-02-11 19:36:04,brandonwillard review_requested 2021-02-13 07:10:43,michaelosthege referenced 2021-02-13 12:24:58,michaelosthege merged 2021-02-13 12:24:58,michaelosthege closed 2021-02-13 12:24:58",codecov[bot] LegrandNico michaelosthege brandonwillard,41,True
138,277,Add prefixes to optimization warnings.,rpgoldman,These prefixes -- applied to warnings where optimization is impossible because there is no C implementation -- are required to enable the logger to filter out redundant warnings.,,michaelosthege,,2021-01-21 23:27:49,2021-01-22 09:26:10,theano/tensor/opt.py,a2cc80f45b468467430a6fdb47706b7cd7859f1e,"rpgoldman review_requested 2021-01-21 23:27:49,michaelosthege referenced 2021-01-22 09:26:10,michaelosthege merged 2021-01-22 09:26:10,michaelosthege closed 2021-01-22 09:26:10",codecov[bot] rpgoldman michaelosthege,1,True
139,278,Fix a bug involving thread local memory initialization,brandonwillard,This PR fixes a bug that causes `lock_ctx` to access thread local memory `local_mem._threads` when it isn't initialized.,bug important,michaelosthege,brandonwillard,2021-01-22 22:10:31,2021-01-22 23:20:51,tests/compile/test_compilelock.py theano/compile/compilelock.py,a629648bc19a20ef959a62858b3a4cce398e0bd4,"brandonwillard labeled 2021-01-22 22:10:31,brandonwillard labeled 2021-01-22 22:10:31,brandonwillard assigned 2021-01-22 22:10:31,brandonwillard review_requested 2021-01-22 22:17:38,brandonwillard referenced 2021-01-22 23:20:51,brandonwillard merged 2021-01-22 23:20:51,brandonwillard closed 2021-01-22 23:20:51,brandonwillard head_ref_deleted 2021-01-22 23:20:57",codecov[bot] michaelosthege brandonwillard,3,True
140,279,Update contact information,canyon289,Making a minor change to the doc to remove reference to a mailing list and group that I doubt anyone here checks,,brandonwillard,,2021-01-23 23:14:16,2021-01-24 06:00:32,doc/introduction.txt,56ce1ee553a53566073c47201797ae6756db5b7c 028de8100241021fbce8b82849b6fa82dfb422c4 15ed3b507c118cebc17c82d97b0d60e32b2ad83d,"canyon289 head_ref_force_pushed 2021-01-24 04:02:19,brandonwillard referenced 2021-01-24 06:00:32,brandonwillard merged 2021-01-24 06:00:32,brandonwillard closed 2021-01-24 06:00:32,brandonwillard head_ref_deleted 2021-01-24 06:00:40",canyon289 brandonwillard,6,True
141,284,Rename Theano to Aesara,brandonwillard,"This PR replaces nearly all references to Theano with the new name Aesara.  Some references to old Theano versions and outdated information was also removed. 

Note: we will need to rename this repository before the link changes are valid.

Closes #148.",important,michaelosthege OriolAbril,brandonwillard,2021-01-28 02:58:38,2021-01-29 05:56:23,aesara/sandbox/neighbours.py aesara/link/c/cmodule.py aesara/scalar/sharedvar.py doc/tutorial/examples.txt tests/sparse/test_basic.py doc/library/tensor/basic.txt tests/test_rop.py aesara/tensor/slinalg.py aesara/tensor/extra_ops.py aesara/scan/scan_perform_ext.py tests/gpuarray/test_basic_ops.py aesara/scalar/basic.py tests/gpuarray/test_pool.py aesara/graph/params_type.py aesara/gpuarray/nnet.py tests/tensor/nnet/test_neighbours.py aesara/tensor/io.py aesara/gpuarray/c_code/dnn_pool.c aesara/gpuarray/c_code/magma_inv.c aesara/d3viz/css/d3viz.css aesara/gpuarray/blocksparse.py aesara/gpuarray/c_code/dnn_sptf_gt.c aesara/compile/__init__.py aesara/compile/ops.py aesara/gpuarray/c_code/pool_grad_grad.c aesara/misc/safe_asarray.py aesara/sandbox/fourier.py doc/tutorial/loop_solution_1.py aesara/sparse/type.py aesara/gpuarray/c_code/corr_gemm.c aesara/compile/mode.py aesara/tensor/nnet/sigm.py aesara/gpuarray/c_code/pool_max_rop.c aesara/misc/pkl_utils.py aesara/scalar/__init__.py aesara/sparse/sandbox/sp2.py tests/link/test_jax.py aesara/d3viz/css/d3-context-menu.css aesara/gpuarray/subtensor.py aesara/ifelse.py aesara/gpuarray/dnn.py aesara/gradient.py aesara/gpuarray/c_code/topk_dense_large.cu aesara/compile/function/__init__.py doc/extending/graphstructures.txt aesara/compile/sharedvalue.py doc/tutorial/gradients.txt aesara/gpuarray/c_code/dnn_rnn_gw.c doc/library/compile/io.txt NEWS.txt aesara/_version.py doc/library/gpuarray/fft.txt DESCRIPTION.txt aesara/version.py aesara/gpuarray/c_code/cudnn_helper.h tests/tensor/random/test_basic.py aesara/tensor/fft.py aesara/sparse/sandbox/__init__.py tests/tensor/test_basic.py aesara/gpuarray/blas.py doc/extending/extending_aesara_solution_1.py doc/library/tensor/nnet/basic.txt aesara/scan/views.py aesara/link/vm.py aesara/tensor/random/opt.py aesara/gpuarray/c_code/conv_desc.c tests/tensor/signal/test_pool.py aesara/gpuarray/c_code/dnn_sptf_sampler.c aesara/typed_list/type.py aesara/link/__init__.py aesara/gpuarray/c_code/dnn_dropout_desc.c doc/library/printing.txt aesara/gpuarray/c_code/dnn_rnn_gi.c aesara/d3viz/html/template.html aesara/compile/function/pfunc.py aesara/d3viz/js/d3viz.js tests/scan/test_utils.py aesara/gpuarray/c_code/magma_qr.c aesara/sandbox/solve.py aesara/gpuarray/c_code/topk_dense.cu doc/tutorial/loop.txt aesara/scan/utils.py aesara/d3viz/js/d3-context-menu.js aesara/d3viz/js/d3.v3.min.js aesara/gpuarray/c_code/dnn_softmax.c doc/cifarSC2011/pics/logreg_pydotprint_prediction.png aesara/graph/basic.py .gitignore aesara/d3viz/__init__.py doc/conf.py doc/cifarSC2011/pics/logreg_pydotprint_predict.png aesara/link/c/c_code/aesara_mod_helper.h aesara/scalar/basic_sympy.py tests/tensor/nnet/test_corr.py aesara/gpuarray/dnn_opt.py aesara/gpuarray/opt.py tests/tensor/test_basic_opt.py aesara/link/utils.py aesara/tensor/signal/__init__.py aesara/gpuarray/sort.py aesara/__init__.py aesara/tensor/blas.py aesara/printing.py aesara/link/c/cutils.py tests/tensor/nnet/test_blocksparse.py aesara/tensor/c_code/alt_blas_template.c aesara/misc/check_duplicate_key.py aesara/gpuarray/rng_mrg.py aesara/sparse/basic.py conftest.py doc/crei2013/gpundarray.txt aesara/typed_list/__init__.py tests/gpuarray/test_cgpukernelbase.py aesara/d3viz/js/dagre-d3.min.js aesara/sandbox/minimal.py tests/gpuarray/test_opt.py tests/tensor/random/test_op.py tests/gpuarray/test_dnn.py tests/gpuarray/test_pickle.py tests/test_gradient.py doc/.static/version_switch.js doc/JaxOps.rst doc/cifarSC2011/introduction.txt aesara/gpuarray/c_code/pool_ave_grad.c aesara/link/c/interface.py tests/gpuarray/GpuArray.pkl tests/gpuarray/test_scan.py aesara/tensor/elemwise.py doc/introduction.txt aesara/gpuarray/c_code/dnn_sptf_grid.c tests/scan/test_basic.py aesara/gpuarray/c_code/dnn_dropout_fwd.c doc/sandbox/logistic_regression_example.txt aesara/graph/sched.py aesara/link/jax/jax_linker.py doc/extending/tips.txt aesara/tensor/blas_scipy.py aesara/tensor/random/__init__.py aesara/misc/doubleop.py aesara/gpuarray/c_code/dnn_rnn_desc.c aesara/graph/optdb.py aesara/gpuarray/c_code/blockger.c aesara/tensor/math.py aesara/graph/toolbox.py aesara/scan/scan_perform.pyx .gitattributes aesara/tensor/__init__.py aesara/tensor/nnet/basic.py aesara/compile/debugmode.py aesara/gpuarray/extra_ops.py aesara/tensor/signal/conv.py aesara/d3viz/formatting.py aesara/sandbox/samples_MRG31k3p_12_7_5.txt aesara/gpuarray/fft.py doc/tutorial/using_gpu_solution_1.py aesara/sparse/sandbox/sp.py tests/tensor/random/test_opt.py conda/meta.yaml aesara/link/c/basic.py tests/gpuarray/test_elemwise.py tests/tensor/test_blas.py tests/scan/test_opt.py doc/extending/fibby.txt doc/tutorial/debug_faq.txt aesara/sandbox/linalg/ops.py aesara/tensor/blas_headers.py aesara/tensor/sharedvar.py doc/cifarSC2011/boot_camp_overview.txt tests/tensor/nnet/test_sigm.py aesara/gpuarray/fp16_help.py aesara/tensor/nnet/c_code/corr3d_gemm.c doc/crei2013/advanced_theano.txt doc/tutorial/modes_solution_1.py aesara/breakpoint.py aesara/gpuarray/reduction.py aesara/link/c/c_code/lazylinker_c.c aesara/tensor/c_code/alt_blas_common.h doc/tutorial/index.txt aesara/gpuarray/type.py aesara/sparse/opt.py aesara/misc/elemwise_openmp_speedup.py aesara/misc/check_blas_many.sh doc/cifarSC2011/theano.txt doc/tutorial/adding.txt aesara/graph/op.py aesara/updates.py doc/library/scan.txt aesara/tensor/blas_c.py aesara/graph/callcache.py tests/compile/test_nanguardmode.py aesara/compile/compilelock.py aesara/sparse/sharedvar.py aesara/tensor/shape.py doc/cifarSC2011/pics/logreg_pydotprint_train.png aesara/gpuarray/ctc.py aesara/gpuarray/c_code/pool_max_grad.c aesara/gpuarray/opt_util.py aesara/sandbox/linalg/__init__.py tests/d3viz/models.py aesara/gpuarray/c_code/dnn_fwd.c doc/library/tensor/fft.txt doc/tutorial/aliasing.txt tests/tensor/test_mlp.py aesara/gpuarray/c_code/ctc_wrapper.c aesara/compile/function/types.py aesara/d3viz/js/graphlib-dot.min.js aesara/scan/opt.py aesara/sparse/__init__.py tests/tensor/test_blas_c.py doc/glossary.txt tests/graph/test_compute_test_value.py tests/tensor/test_utils.py doc/library/compile/nanguardmode.txt aesara/tensor/random/type.py doc/acknowledgement.txt EMAIL.txt aesara/tensor/fourier.py aesara/gpuarray/c_code/dnn_conv_base.c aesara/misc/check_blas.py aesara/gpuarray/c_code/magma_cholesky.c aesara/tensor/nnet/c_code/ctc_wrapper.c tests/gpuarray/test_rng_mrg.py aesara/gpuarray/c_code/gpuarray_helper.h aesara/tensor/random/op.py aesara/tensor/var.py tests/graph/test_op.py aesara/gpuarray/multinomial.py tests/typed_list/test_opt.py aesara/tensor/basic_opt.py MANIFEST.in aesara/compile/compiledir.py aesara/tensor/nnet/c_code/corr_gemm.c tests/tensor/test_math_opt.py aesara/tensor/sort.py aesara/d3viz/d3viz.py aesara/tensor/random/basic.py aesara/raise_op.py doc/tutorial/broadcasting.txt aesara/link/c/__init__.py aesara/tensor/nnet/__init__.py doc/tutorial/printing_drawing.txt aesara/configparser.py aesara/gpuarray/c_code/dnn_batchnorm.c aesara/graph/unify.py aesara/tensor/nlinalg.py aesara/sandbox/__init__.py aesara/tensor/inplace.py tests/compile/test_profiling.py tests/tensor/nnet/test_basic.py aesara/tensor/nnet/conv3d2d.py aesara/gpuarray/c_code/corr3d_gemm.c tests/gpuarray/test_reduction.py tests/sandbox/linalg/test_linalg.py aesara/link/basic.py aesara/tensor/nnet/batchnorm.py aesara/tensor/type_other.py aesara/tensor/signal/pool.py aesara/sparse/utils.py aesara/misc/burn_gpu.py doc/LICENSE.txt aesara/misc/elemwise_time_test.py aesara/compile/builders.py aesara/gpuarray/c_code/magma_svd.c aesara/tensor/opt_uncanonicalize.py aesara/gpuarray/basic_ops.py aesara/tensor/nnet/abstract_conv.py tests/tensor/test_slinalg.py aesara/tensor/math_opt.py aesara/link/c/cvm.py aesara/scan/basic.py aesara/tensor/elemwise_cgen.py aesara/graph/type.py Makefile aesara/graph/null_type.py aesara/misc/may_share_memory.py aesara/gpuarray/pool.py aesara/graph/utils.py aesara/compile/monitormode.py aesara/gpuarray/c_code/dnn_gw.c aesara/graph/sandbox/typeattr.txt aesara/gpuarray/c_code/dimshuffle.c aesara/tensor/nnet/neighbours.py aesara/link/c/exceptions.py tests/tensor/test_sharedvar.py aesara/scan/checkpoints.py tests/test_ifelse.py aesara/tensor/basic.py CONTRIBUTING.md aesara/misc/ordered_set.py aesara/sandbox/multinomial.py doc/citation.txt tests/gpuarray/test_nnet.py aesara/link/jax/__init__.py doc/library/d3viz/index.ipynb aesara/graph/__init__.py aesara/gpuarray/__init__.py aesara/gpuarray/c_code/dnn_batchnorm_inf.c doc/cifarSC2011/advanced_theano.txt aesara/graph/fg.py README.rst aesara/gpuarray/c_code/dnn_base.c aesara/compile/profiling.py tests/tensor/test_basic_scipy.py aesara/gpuarray/c_code/topk_common.cuh aesara/misc/check_multi_gpu.py tests/tensor/nnet/test_batchnorm.py doc/cifarSC2011/gpundarray.txt aesara/gpuarray/kernel_codegen.py aesara/typed_list/opt.py .github/ISSUE_TEMPLATE.md aesara/scan/c_code/scan_perform.c tests/compile/function/test_pfunc.py .github/workflows/pypi.yml aesara/tensor/random/var.py tests/graph/test_types.py tests/tensor/nnet/test_abstract_conv.py aesara/gpuarray/c_code/dnn_gi.c .appveyor.yml aesara/gpuarray/c_code/dnn_batchnorm_base.c aesara/gpuarray/pathparse.py aesara/gpuarray/c_code/blockgemv.c aesara/tensor/c_code/dimshuffle.c .pre-commit-config.yaml aesara/assert_op.py tests/tensor/nnet/test_ctc.py tests/graph/test_params_type.py aesara/tensor/type.py aesara/graph/opt.py aesara/tensor/subtensor.py doc/core_development_guide.txt aesara/gpuarray/c_code/dnn_rnn_paramsize.c tests/compile/function/test_types.py aesara/typed_list/basic.py .mailmap aesara/tensor/utils.py aesara/tensor/xlogx.py aesara/tensor/nnet/conv.py NEWS_DEV.txt aesara/gpuarray/c_code/dnn_sptf_gi.c aesara/tensor/exceptions.py aesara/gpuarray/c_code/dnn_rnn_fwd.c aesara/tensor/random/utils.py tests/tensor/test_subtensor.py .github/workflows/test.yml tests/graph/test_basic.py aesara/gpuarray/c_code/dnn_softmax_grad.c aesara/tensor/nnet/corr3d.py aesara/tensor/nnet/opt.py aesara/gpuarray/c_code/dnn_pool_grad.c aesara/gpuarray/linalg.py aesara/graph/destroyhandler.py aesara/gpuarray/c_code/magma_eigh.c aesara/scalar/c_code/gamma.c doc/cifarSC2011/pyCUDA.txt tests/tensor/test_elemwise.py tests/tensor/nnet/test_corr3d.py doc/tutorial/using_gpu.txt bin/aesara-cache HISTORY.txt aesara/gpuarray/c_code/dnn_batchnorm_grad.c aesara/gpuarray/elemwise.py doc/tutorial/modes.txt tests/tensor/test_math.py tests/tensor/test_blas_scipy.py aesara/scan/op.py aesara/scalar/basic_scipy.py doc/library/d3viz/index.txt doc/cifarSC2011/index.txt tests/compile/test_debugmode.py aesara/compile/nanguardmode.py tests/tensor/test_merge.py aesara/gpuarray/neighbours.py aesara/utils.py aesara/tensor/nnet/ctc.py aesara/link/c/lazylinker_c.py aesara/scan/__init__.py aesara/misc/__init__.py tests/tensor/test_opt_uncanonicalize.py aesara/gpuarray/cudnn_defs.py doc/library/compile/debugmode.txt aesara/gpuarray/optdb.py aesara/tensor/nnet/blocksparse.py doc/tutorial/conditions.txt tests/test_printing.py aesara/tensor/nnet/corr.py bin/theano-cache aesara/misc/frozendict.py aesara/compile/io.py bin/aesara_cache.py aesara/sandbox/rng_mrg.py aesara/configdefaults.py aesara/gpuarray/c_code/pool.c tests/tensor/test_extra_ops.py aesara/link/jax/jax_dispatch.py aesara/misc/latence_gpu_transfert.py doc/aesara_installer_for_anaconda.bat tests/tensor/nnet/test_conv.py aesara/gpuarray/c_code/dnn_redux.c,f09a9505ec4fcf77c14dfd4f8498b441c6b9cbeb 65367907f13dbffb1f1e4823e6836c81ff9fb6fd f74d10f34f369288376ce94393c0fe11d8318eaf,"brandonwillard labeled 2021-01-28 02:58:38,brandonwillard assigned 2021-01-28 02:58:39,brandonwillard head_ref_force_pushed 2021-01-28 03:15:50,brandonwillard head_ref_force_pushed 2021-01-28 05:36:11,brandonwillard head_ref_force_pushed 2021-01-28 06:42:57,brandonwillard review_dismissed 2021-01-28 16:47:04,brandonwillard head_ref_force_pushed 2021-01-28 16:47:04,OriolAbril mentioned 2021-01-28 19:46:18,OriolAbril subscribed 2021-01-28 19:46:18,brandonwillard connected 2021-01-29 01:12:13,brandonwillard referenced 2021-01-29 05:56:22,brandonwillard merged 2021-01-29 05:56:22,brandonwillard closed 2021-01-29 05:56:23,brandonwillard head_ref_deleted 2021-01-29 05:56:26",codecov[bot] OriolAbril brandonwillard fonnesbeck hvasbath dfm michaelosthege twiecki,21,True
142,285,Update coverage badge in README,brandonwillard,This PR updates the coverage badge to point to Codecov.,,,brandonwillard,2021-01-29 16:46:34,2021-01-29 17:12:21,README.rst doc/index.txt,f73a25355a9af68f1ba1c25d78ef3589d8282660 95e45e090835f6a4bf265fe1f7f8d8c761869cc8,"brandonwillard assigned 2021-01-29 16:46:34,brandonwillard referenced 2021-01-29 17:12:21,brandonwillard merged 2021-01-29 17:12:21,brandonwillard closed 2021-01-29 17:12:21,brandonwillard head_ref_deleted 2021-01-29 17:14:06",brandonwillard,0,True
143,286,Fix a link in README and add example usage,brandonwillard,This PR fixes a bad documentation link in the README and adds a simple illustrative example of Aesara.,,michaelosthege,brandonwillard,2021-01-29 20:23:03,2021-01-29 23:14:06,README.rst doc/introduction.txt,3a1f4eb757fd32f7bb33f7f50deb4494cd1c0442,"brandonwillard assigned 2021-01-29 20:23:03,brandonwillard head_ref_force_pushed 2021-01-29 20:24:37,brandonwillard review_requested 2021-01-29 21:52:06,brandonwillard review_requested 2021-01-29 21:52:06,brandonwillard review_requested 2021-01-29 21:52:15,brandonwillard referenced 2021-01-29 23:14:06,brandonwillard merged 2021-01-29 23:14:06,brandonwillard closed 2021-01-29 23:14:06,brandonwillard head_ref_deleted 2021-01-29 23:14:10",michaelosthege brandonwillard,0,True
144,288,Use `broadcast_to` instead of `broadcast_like`,eigenfoo,"Closes #159. WIP.

Two questions:

1. Changing `broadcast_like` to `broadcast_to` in `aesara/tensor/math_opt.py` gives me a lot of `BadOptimization` and `AssertionErrors`, which I'm not knowledgeable enough to debug - can someone help me understand what's happening?
2. ~I've also changed `broadcast_like` to `broadcast_to` in `aesara/tensor/basic_opt.py` - is this something we want to do?~",,brandonwillard,,2021-01-30 18:12:44,2022-10-14 14:51:47,aesara/tensor/math_opt.py aesara/tensor/basic.py aesara/tensor/basic_opt.py aesara/tensor/extra_ops.py tests/tensor/test_math_opt.py,2b652e1f96ee6ab58405ec87e21f39397f2511e8 18c9b2ca51c5cc0ffcc668641ab16e42cdaa5a8c 08d381a69db00c7ebfa59886b5c88e6a74c36514 7be1a7587704083fc9d84a199e6b4dc82065b8d0 3ff5f21e7806daa55e0585ca6bf453485a647a96 988f9764f7fb0f50e4799636a9aedc776a5f8989 d4d7f9569eebb295175dc47e2e45d3cf73240957 4373ffbbbadd7dfadc2bfb45d3d29fe721795e32 a8bd45a13b4c93d0da347a469b4d2ca743db4282 c4c4d0e6894300603cea1099584a7b473e4b9f16,"eigenfoo head_ref_force_pushed 2021-01-30 22:04:31,brandonwillard mentioned 2021-01-30 22:09:45,brandonwillard subscribed 2021-01-30 22:09:45,eigenfoo head_ref_force_pushed 2021-01-30 22:24:41,brandonwillard mentioned 2021-02-07 17:26:10,brandonwillard subscribed 2021-02-07 17:26:10,brandonwillard mentioned 2021-02-12 04:52:55,brandonwillard subscribed 2021-02-12 04:52:56,brandonwillard mentioned 2021-02-14 02:44:18,brandonwillard subscribed 2021-02-14 02:44:18,brandonwillard head_ref_force_pushed 2021-02-18 02:51:07,brandonwillard renamed 2021-08-01 23:09:03,ricardoV94 head_ref_force_pushed 2022-05-11 07:31:52,ricardoV94 head_ref_force_pushed 2022-05-11 07:41:45,ricardoV94 head_ref_force_pushed 2022-05-11 07:46:03,ricardoV94 head_ref_force_pushed 2022-05-11 08:02:36,rlouf closed 2022-10-14 14:51:47,rlouf head_ref_deleted 2022-10-14 14:51:47",rlouf ricardoV94 eigenfoo brandonwillard,19,False
145,290,Replace C assertions with NAN in `gamma.c` and add tests for valid inputs,ricardoV94,"Closes #224 

I am not sure if it's as simple as this... Still researching a bit. I haven't found a single C example that explicitly returns NAN, so I might be doing something wrong. The code works on my machine though.

***

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [x] There are tests covering the changes introduced in the PR.
",,brandonwillard,,2021-02-01 09:57:57,2021-02-08 21:32:30,tests/tensor/test_basic_scipy.py tests/scalar/test_basic_scipy.py aesara/scalar/c_code/gamma.c tests/tensor/test_math.py aesara/tensor/inplace.py,fdb5c5783b6fd5621c1495482be54761374d416a 1399e146869aff63dc018c6bee12960034dd56dc a800e835851348885b6ba3f9a67323d699c8630b ef24e461489b0bc7e6894d2cab4ad4dc348f2301 f0e6717e8b7d9c8fef83fac89ad71fb163015c93 a2dec7d808b0f0b527875fbfd7fc937440c8618b fe6eaa31b37a40db527f96dafe4abf1f7e2dcf8a 2b3d30f8beb603fa150b8ff6b4eddcd822c6dc36 52f788d0b404d0689b0236a5cfe8ce0bded52896 b62e4af513893e3736c06901980f74a8ea25fe64,"dfm mentioned 2021-02-03 07:59:55,dfm subscribed 2021-02-03 07:59:55,ricardoV94 review_requested 2021-02-08 11:50:10,ricardoV94 renamed 2021-02-08 17:56:55,ricardoV94 renamed 2021-02-08 17:57:10,brandonwillard referenced 2021-02-08 21:32:30,brandonwillard merged 2021-02-08 21:32:30,brandonwillard closed 2021-02-08 21:32:30,ricardoV94 head_ref_deleted 2021-02-09 07:44:33",codecov[bot] ricardoV94 dfm brandonwillard,28,True
146,292,Make CI aware of C source file changes,brandonwillard,This PR prevents CI from skipping tests when only C source files have been changed.,important CI,ricardoV94,brandonwillard,2021-02-02 17:23:52,2021-02-02 18:15:48,.github/workflows/test.yml,3893c9c88fb74840953110b9e7632515223db374,"brandonwillard labeled 2021-02-02 17:23:52,brandonwillard labeled 2021-02-02 17:23:52,brandonwillard assigned 2021-02-02 17:23:52,brandonwillard head_ref_force_pushed 2021-02-02 17:29:14,brandonwillard review_dismissed 2021-02-02 18:10:32,brandonwillard head_ref_force_pushed 2021-02-02 18:12:03,brandonwillard referenced 2021-02-02 18:15:48,brandonwillard merged 2021-02-02 18:15:48,brandonwillard closed 2021-02-02 18:15:48,brandonwillard head_ref_deleted 2021-02-02 18:15:52",codecov[bot] ricardoV94 brandonwillard,1,True
147,294,Fix input validation bugs in local_grad_log_erfc_neg,brandonwillard,This PR removes some duplicated tests and closes #291.,bug,,brandonwillard,2021-02-06 00:37:45,2021-02-06 01:44:26,aesara/tensor/math_opt.py tests/tensor/test_basic_opt.py tests/tensor/test_math_opt.py,fdb921125c1e6959be7abbd76504cf69d38b1915 46cb2fcc0ec08b6d66d77d00bd53b0e02e83542f caa06c2bcbe874dbeebadb2882369926c9bac228,"brandonwillard labeled 2021-02-06 00:37:45,brandonwillard assigned 2021-02-06 00:37:45,brandonwillard renamed 2021-02-06 00:38:17,brandonwillard referenced 2021-02-06 01:44:26,brandonwillard merged 2021-02-06 01:44:26,brandonwillard closed 2021-02-06 01:44:26,brandonwillard head_ref_deleted 2021-02-06 01:44:30",codecov[bot] brandonwillard,1,True
148,296,Adding JAX conversions for RandomFunction/RandomVariable Ops,kc611,"Fixes #146 

This PR adds the Jax conversion for `RandomVariable`.
",JAX,brandonwillard,kc611,2021-02-06 05:18:39,2021-03-12 09:40:46,tests/tensor/random/test_type.py aesara/tensor/random/type.py aesara/link/jax/jax_linker.py aesara/link/jax/jax_dispatch.py tests/link/test_jax.py,b42439d9886cafd731d9d78c4196c641d77d8ee2 6f574c80ded97d9cce31a3ff1e6f406795e1555b cc9c38f893626a4868d50670fd2fda0596ec31a3 9fd7ea76f255ace4e0174b7d186ea116e1438e3c,"brandonwillard mentioned 2021-02-07 11:41:59,brandonwillard subscribed 2021-02-07 11:41:59,kc611 head_ref_force_pushed 2021-02-09 10:16:49,brandonwillard mentioned 2021-02-11 14:46:58,brandonwillard subscribed 2021-02-11 14:46:58,brandonwillard head_ref_force_pushed 2021-02-13 06:57:21,brandonwillard labeled 2021-02-13 07:05:45,kc611 head_ref_force_pushed 2021-02-14 12:51:30,brandonwillard head_ref_force_pushed 2021-02-24 01:05:19,kc611 assigned 2021-02-25 18:02:04,kc611 head_ref_force_pushed 2021-02-26 12:57:28,kc611 review_requested 2021-02-27 17:47:24,kc611 head_ref_force_pushed 2021-02-27 18:54:07,brandonwillard ready_for_review 2021-03-07 16:05:57,brandonwillard mentioned 2021-03-10 06:26:54,brandonwillard subscribed 2021-03-10 06:26:54,brandonwillard head_ref_force_pushed 2021-03-12 01:50:25,twiecki referenced 2021-03-12 09:40:45,twiecki merged 2021-03-12 09:40:45,twiecki closed 2021-03-12 09:40:46,kc611 mentioned 2021-03-12 09:40:59,kc611 subscribed 2021-03-12 09:40:59",codecov[bot] kc611 twiecki brandonwillard,29,True
149,297,Simplification and refactoring of CAReduce,kc611,"Fixes #276 

The simplifications to be done are as follows (as pointed out in the issue):
- [x] `Op.perform` actually for-loops through the reduction dimensions, see [here](https://github.com/pymc-devs/aesara/blob/b379b0f2eb309c8e6e1a081974fd93129a83d354/theano/tensor/elemwise.py#L1443)
- [x]  Use of hard-coded logic for specific self.scalar_op, [here](https://github.com/pymc-devs/aesara/blob/b379b0f2eb309c8e6e1a081974fd93129a83d354/theano/tensor/elemwise.py#L1345)
- [x]  Use of hard-coded logic for `identity` generation in C, [here](https://github.com/pymc-devs/aesara/blob/b379b0f2eb309c8e6e1a081974fd93129a83d354/theano/tensor/elemwise.py#L1573)",,brandonwillard,,2021-02-06 13:32:09,2021-02-18 18:49:52,aesara/tensor/math_opt.py aesara/gpuarray/elemwise.py aesara/tensor/math.py aesara/tensor/elemwise.py tests/tensor/test_elemwise.py aesara/scalar/basic.py,a75bdda54f3df8c6054d97ba4af39127e8b5ee64,"kc611 renamed 2021-02-06 13:32:36,brandonwillard convert_to_draft 2021-02-06 21:42:15,brandonwillard renamed 2021-02-06 21:42:24,kc611 head_ref_force_pushed 2021-02-08 15:40:55,kc611 head_ref_force_pushed 2021-02-08 18:09:19,kc611 ready_for_review 2021-02-08 19:17:58,kc611 review_requested 2021-02-11 10:04:10,kc611 review_requested 2021-02-12 14:52:10,brandonwillard head_ref_force_pushed 2021-02-13 02:33:25,brandonwillard head_ref_force_pushed 2021-02-13 02:45:39,brandonwillard head_ref_force_pushed 2021-02-13 02:47:38,brandonwillard head_ref_force_pushed 2021-02-13 03:16:50,brandonwillard head_ref_force_pushed 2021-02-13 04:19:07,michaelosthege referenced 2021-02-18 18:49:52,michaelosthege merged 2021-02-18 18:49:52,michaelosthege closed 2021-02-18 18:49:52",codecov[bot] kc611 michaelosthege brandonwillard,12,True
150,298,Minor FunctionGraph Updates and Misc,brandonwillard,"This PR makes some minor updates to `FunctionGraph` (e.g. make a copy of the `outputs` list argument, add a new option to import missing input variables), as well as a few other minor refactoring/clean-up changes.

This PR also exposes `aesara.printing.debugprint` at `aesara` package scope as `dprint`.  In other words, `debugprint` is now available as `aesara.dprint`.

Closes #298",enhancement,,brandonwillard,2021-02-11 04:10:09,2021-02-11 05:08:28,tests/compile/test_debugmode.py aesara/graph/opt.py aesara/__init__.py tests/graph/test_fg.py tests/graph/test_destroyhandler.py aesara/graph/fg.py tests/compile/function/test_types.py aesara/graph/toolbox.py aesara/tensor/type.py,c45b508e6dec5ae67cb0c540b80e2ea0a059d6b5 e43618eff37b1fa751e69b8ee9018792f710593f df297e79ccc785a1f75491e216aa3ac9f99a012b 225f71d8839ec53d574d3c3e8b8099322886f637 e1a7f2b2c4be2b01c596b6fab38205ca4ab84192 ffd8646b3b8498c622922b2dd175b7ea6f821979 678a21bcc8ac30f80eaf2f2ecb3481b707b8d8af 8995c9ef57163458b458316ddf15df48966f65be 31519e56816d2b881b7f90202b71e59043514932,"brandonwillard labeled 2021-02-11 04:10:09,brandonwillard assigned 2021-02-11 04:10:09,brandonwillard referenced 2021-02-11 05:08:28,brandonwillard merged 2021-02-11 05:08:28,brandonwillard closed 2021-02-11 05:08:28,brandonwillard head_ref_deleted 2021-02-11 05:08:31",codecov[bot] brandonwillard,1,True
151,300,Replace Theano abbreviations,brandonwillard,"This PR replaces some Theano-based abbreviations.
",,twiecki,brandonwillard,2021-02-13 20:11:39,2021-02-13 23:22:42,aesara/tensor/math_opt.py tests/sparse/test_opt.py tests/tensor/test_blas.py tests/compile/test_builders.py tests/scan/test_opt.py aesara/assert_op.py aesara/gpuarray/dnn.py tests/tensor/test_basic.py tests/tensor/test_opt_uncanonicalize.py tests/tensor/test_elemwise.py aesara/sandbox/linalg/ops.py tests/sandbox/test_rng_mrg.py aesara/tensor/random/opt.py tests/sparse/test_basic.py tests/gpuarray/test_dnn.py tests/tensor/signal/test_pool.py tests/tensor/nnet/test_basic.py tests/test_gradient.py aesara/tensor/math.py tests/tensor/test_keepdims.py tests/tensor/test_mlp.py tests/test_rop.py tests/compile/function/test_types.py tests/gpuarray/test_scan.py aesara/tensor/basic_opt.py tests/gpuarray/test_subtensor.py tests/tensor/test_math.py aesara/tensor/extra_ops.py tests/gpuarray/test_reduction.py tests/tensor/test_basic_opt.py tests/tensor/test_math_opt.py tests/compile/test_misc.py aesara/tensor/nnet/basic.py aesara/tensor/nnet/batchnorm.py aesara/tensor/elemwise.py aesara/tensor/blas.py tests/tensor/test_extra_ops.py aesara/link/jax/jax_dispatch.py tests/tensor/nnet/test_batchnorm.py tests/compile/function/test_function.py tests/unittest_tools.py tests/scan/test_basic.py tests/compile/function/test_pfunc.py tests/tensor/test_subtensor.py aesara/tensor/basic.py aesara/compile/nanguardmode.py aesara/sparse/sandbox/sp.py tests/link/test_jax.py tests/tensor/nnet/test_abstract_conv.py tests/tensor/random/test_opt.py aesara/sparse/basic.py tests/tensor/random/test_basic.py aesara/tensor/nnet/abstract_conv.py,72c5ebcd6393ddf76655fd060102c7deaabe4ccd e7d9e51982e8157c713d126b3babdf18166b44e8 fa93da0a8277e9b5592d9b2292327ea259063496,"brandonwillard assigned 2021-02-13 20:11:39,brandonwillard head_ref_force_pushed 2021-02-13 21:03:59,brandonwillard head_ref_force_pushed 2021-02-13 21:12:55,brandonwillard referenced 2021-02-13 23:22:42,brandonwillard merged 2021-02-13 23:22:42,brandonwillard closed 2021-02-13 23:22:42,brandonwillard head_ref_deleted 2021-02-13 23:22:44",codecov[bot] twiecki brandonwillard,1,True
152,301,Simplify the constant folding API,brandonwillard,This PR simplifies the constant folding API by removing the unnecessary `COp.python_constant_folding` method.,enhancement refactor,,brandonwillard,2021-02-13 22:55:05,2021-02-14 00:01:42,aesara/gpuarray/elemwise.py aesara/tensor/elemwise.py doc/extending/cop.txt aesara/tensor/basic_opt.py tests/tensor/test_basic_opt.py,190507c821ad42dd585b4d2d3257a638f7b9a489 4b5e5ecc18320c0d75caf9104138bad716599164,"brandonwillard labeled 2021-02-13 22:55:05,brandonwillard labeled 2021-02-13 22:55:05,brandonwillard assigned 2021-02-13 22:55:05,brandonwillard referenced 2021-02-14 00:01:42,brandonwillard merged 2021-02-14 00:01:42,brandonwillard closed 2021-02-14 00:01:42,brandonwillard head_ref_deleted 2021-02-14 00:01:45",codecov[bot] brandonwillard,1,True
153,302,Convert as_tensor_variable to a singledispatch function,brandonwillard,"This PR converts `as_tensor_variable` to a `functools.singledispatch` function.  Aside from clarifying the logic and simplifying the implementation, this change should make it much easier to improve and (locally) customize conversion operations.

I might take a pass at #96 while I'm at it.",enhancement,,brandonwillard,2021-02-14 05:47:26,2021-02-15 18:12:31,tests/test_ifelse.py aesara/tensor/basic.py aesara/ifelse.py aesara/tensor/type.py tests/tensor/test_basic.py aesara/gradient.py aesara/gpuarray/type.py aesara/tensor/__init__.py,ca56e7fbe2ce04ff5dde52af3ae2cf616684221e 2d802bf454cd8134916cc0201bdfc63cc1424803,"brandonwillard labeled 2021-02-14 05:47:26,brandonwillard assigned 2021-02-14 05:47:27,brandonwillard head_ref_force_pushed 2021-02-14 06:51:16,brandonwillard head_ref_force_pushed 2021-02-14 07:10:57,brandonwillard head_ref_force_pushed 2021-02-14 07:43:04,brandonwillard head_ref_force_pushed 2021-02-14 09:14:12,brandonwillard head_ref_force_pushed 2021-02-15 03:37:38,brandonwillard head_ref_force_pushed 2021-02-15 03:50:29,brandonwillard referenced 2021-02-15 18:12:31,brandonwillard merged 2021-02-15 18:12:31,brandonwillard closed 2021-02-15 18:12:31,brandonwillard head_ref_deleted 2021-02-15 18:12:40",codecov[bot] brandonwillard,1,True
154,303,Make sparse tensor types extend the existing tensor types,brandonwillard,"This PR refactors the sparse tensor type structure so that sparse types extend the existing tensor types.  A new meta type is used to construct a `DenseTensorType` that can be used to distinguish dense from sparse `TensorType`s.  

Closes #142.

- [x] Create a `DenseTensorVariable` (using the same approach as `DenseTensorType`)
- [x] Update more optimizations so that they exclude `SparseTensor`s
- [ ] Convert sparse to dense when used with some `Op`s (e.g. `Elemwise`, `CAReduce`)",enhancement important refactor sparse tensors,michaelosthege twiecki,brandonwillard,2021-02-14 06:49:45,2022-03-23 22:03:57,tests/sparse/test_basic.py aesara/graph/opt.py aesara/tensor/basic.py tests/tensor/test_var.py aesara/tensor/math.py aesara/tensor/blas.py aesara/sparse/type.py aesara/graph/fg.py aesara/graph/toolbox.py aesara/tensor/var.py tests/tensor/test_sharedvar.py aesara/tensor/type.py aesara/sparse/basic.py aesara/graph/optdb.py,5f4e4e12b1836b7112a1c46ab9ae04d14562f9f9 fcf23d60dd547ae687ba4f39578b572326e1ec1d,"brandonwillard labeled 2021-02-14 06:49:45,brandonwillard labeled 2021-02-14 06:49:45,brandonwillard assigned 2021-02-14 06:49:45,brandonwillard convert_to_draft 2021-02-14 07:11:24,brandonwillard head_ref_force_pushed 2021-02-14 07:54:36,brandonwillard head_ref_force_pushed 2021-02-14 09:24:23,brandonwillard head_ref_force_pushed 2021-02-15 02:47:28,brandonwillard head_ref_force_pushed 2021-02-15 02:49:58,brandonwillard head_ref_force_pushed 2021-02-15 02:57:42,brandonwillard head_ref_force_pushed 2021-02-15 03:40:44,brandonwillard ready_for_review 2021-02-15 04:55:09,brandonwillard review_requested 2021-02-15 04:55:38,brandonwillard review_requested 2021-02-15 04:55:38,brandonwillard review_dismissed 2021-02-15 18:16:54,brandonwillard head_ref_force_pushed 2021-02-15 18:16:54,brandonwillard convert_to_draft 2021-02-17 02:31:45,brandonwillard labeled 2022-01-12 21:00:48,brandonwillard labeled 2022-01-12 21:00:55,brandonwillard milestoned 2022-01-12 21:03:55,brandonwillard closed 2022-03-23 22:03:57",codecov[bot] michaelosthege twiecki brandonwillard,19,False
155,304,Refactor 'import aesara' into explicit imports across the codebase,CloudChaoszero,"Start of #235 

# Removal of circular dependencies in Aesara

Remove circular dependencies in the codebase by first starting to replace `import` ~theano~ `aesara ` with modular imports, such as the following:


```
import aesara

if aesara.config.xyz:
    # do something

class MyOp(aesara.Op):
    # ...
```


Ideally, we want:

```
from aesara.configdefaults import config
from aesara.gof.op import Op

if config.xyz:
    # do something

class MyOp(Op):
    # ...
```


## Tests

My pytest commands are the following

```
pytest tests/compile
pytest tests/d3viz/models.py
pytest tests/d3viz/test_d3viz.py
pytest tests/d3viz/test_formatting.py
pytest tests/link/c/test_cmodule.py
pytest tests/link/c/test_basic.py
pytest tests/test_breakpoint.py
pytest tests/test_determinism.py
pytest tests/test_dictionary_output.py
```",,michaelosthege brandonwillard,,2021-02-15 03:22:29,2021-05-26 10:08:23,tests/compile/test_builders.py aesara/link/c/cmodule.py tests/compile/test_monitormode.py tests/d3viz/models.py tests/compile/test_profiling.py tests/test_determinism.py tests/compile/function/test_types.py tests/compile/test_modes.py tests/link/c/test_basic.py tests/d3viz/test_formatting.py aesara/compile/compiledir.py tests/compile/test_mode.py tests/link/c/test_cmodule.py tests/test_breakpoint.py tests/compile/function/test_function.py tests/test_dictionary_output.py tests/compile/function/test_pfunc.py tests/compile/test_debugmode.py tests/d3viz/test_d3viz.py aesara/compile/builders.py tests/compile/test_shared.py tests/compile/test_nanguardmode.py,6ab415fb18a5e599319ae8f4ab6b36ef9a65e458,"CloudChaoszero renamed 2021-02-15 22:48:16,CloudChaoszero ready_for_review 2021-02-15 22:49:41,CloudChaoszero renamed 2021-02-21 05:03:10,CloudChaoszero head_ref_force_pushed 2021-02-21 06:36:07,CloudChaoszero review_requested 2021-02-21 07:48:35,CloudChaoszero mentioned 2021-03-07 18:19:26,CloudChaoszero subscribed 2021-03-07 18:19:26,CloudChaoszero review_requested 2021-03-14 09:38:20,CloudChaoszero review_requested 2021-03-14 09:38:22,michaelosthege renamed 2021-03-14 13:21:25,michaelosthege renamed 2021-03-14 13:21:36,brandonwillard mentioned 2021-03-15 04:39:53,brandonwillard subscribed 2021-03-15 04:39:53,CloudChaoszero review_requested 2021-03-15 04:39:58,CloudChaoszero head_ref_force_pushed 2021-03-31 03:33:24,brandonwillard mentioned 2021-03-31 04:29:48,brandonwillard subscribed 2021-03-31 04:29:48,brandonwillard mentioned 2021-04-05 00:55:48,brandonwillard subscribed 2021-04-05 00:55:48,CloudChaoszero head_ref_force_pushed 2021-05-23 08:54:09,brandonwillard mentioned 2021-05-23 09:00:47,brandonwillard subscribed 2021-05-23 09:00:47,michaelosthege mentioned 2021-05-23 09:00:48,michaelosthege subscribed 2021-05-23 09:00:48,CloudChaoszero head_ref_force_pushed 2021-05-23 09:15:13,CloudChaoszero mentioned 2021-05-26 08:15:46,CloudChaoszero subscribed 2021-05-26 08:15:46,CloudChaoszero review_dismissed 2021-05-26 08:54:17,CloudChaoszero head_ref_force_pushed 2021-05-26 08:54:17,twiecki mentioned 2021-05-26 08:57:39,twiecki subscribed 2021-05-26 08:57:39,twiecki referenced 2021-05-26 10:08:23,twiecki merged 2021-05-26 10:08:23,twiecki closed 2021-05-26 10:08:23,CloudChaoszero mentioned 2021-05-26 10:08:32,CloudChaoszero subscribed 2021-05-26 10:08:32",CloudChaoszero codecov[bot] brandonwillard ricardoV94 michaelosthege twiecki,37,True
156,305,Fix Split.__str__ and adjust its error messages,brandonwillard,This PR fixes the `Split` `Op`'s broken `__str__` method and simplifies some of its error messages/handling.,,,brandonwillard,2021-02-18 00:46:11,2021-02-18 18:33:04,aesara/tensor/basic.py,42240710c18d5dcffce8e0b097ae4a40224f5e4e,"brandonwillard assigned 2021-02-18 00:46:12,brandonwillard head_ref_force_pushed 2021-02-18 02:53:14,brandonwillard referenced 2021-02-18 18:33:04,brandonwillard merged 2021-02-18 18:33:04,brandonwillard closed 2021-02-18 18:33:04,brandonwillard head_ref_deleted 2021-02-18 18:33:15",codecov[bot] brandonwillard,1,True
157,307,Fix aesara.gpuarray access that fails on Windows,brandonwillard,This PR fixes an issue in Windows that's caused by an invalid attribute access on `aesara.gpuarray.pathparse` during loading of `aesara.gpuarray.dnn`.  It also changes and removes similar `aesara.gpuarray` invocations.,bug,,brandonwillard,2021-02-26 03:17:09,2021-02-26 04:13:37,aesara/scan/opt.py aesara/misc/check_blas.py aesara/gpuarray/dnn.py,011c8233a5ef4d1f069a44afbc9125971b85e94c,"brandonwillard labeled 2021-02-26 03:17:10,brandonwillard assigned 2021-02-26 03:17:10,brandonwillard referenced 2021-02-26 04:13:37,brandonwillard merged 2021-02-26 04:13:37,brandonwillard closed 2021-02-26 04:13:37,brandonwillard head_ref_deleted 2021-02-26 04:13:40",brandonwillard,0,True
158,308,Remove assert_shape function (fix #269),hs2361,"This PR is to fix #269. The `assert_shape` function has been removed, and now a direct `AssertionError` is raised instead.However, the tests in `tests/tensor/nnet/test_abstract_conv.py` will fail, because of the tests do not expect an AssertionError to be raised.

+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [ ] There are tests covering the changes introduced in the PR.",,brandonwillard,,2021-02-27 17:48:58,2021-09-17 03:21:00,tests/tensor/nnet/test_abstract_conv.py aesara/tensor/nnet/abstract_conv.py,cd40f70230883a36af5ae1c8cc86e746f94b3ea6,"hs2361 subscribed 2021-03-06 03:19:53,hs2361 head_ref_force_pushed 2021-03-07 04:58:19,brandonwillard closed 2021-09-17 03:21:00",hs2361 brandonwillard,4,False
159,310,set tidelift,OriolAbril,"Set configuration files for tidelift.

I am not completely sure Tidelift will pan out and end up being a source of income but
it is a possibility and it is extremely low maintenance. I still have not had to do anything
regarding pymc3 subscription which already has a couple subscribers (not enough to get paid though)
Overall I think it's worth it.
",,brandonwillard,,2021-03-01 18:08:33,2021-03-01 22:20:31,.github/FUNDING.yml .github/SECURITY.md,5b97512ee8265fb0cab15be4dbed72bb490c077d c6b8580f97be3eca959dc88d909fcb6c5a2ee5f9 2ea2f11aa976f85da42cb8cceb22e6516247a5c8,"OriolAbril review_dismissed 2021-03-01 21:11:20,brandonwillard referenced 2021-03-01 22:20:31,brandonwillard merged 2021-03-01 22:20:31,brandonwillard closed 2021-03-01 22:20:31,OriolAbril head_ref_deleted 2021-03-01 22:21:02",codecov[bot] OriolAbril brandonwillard,2,True
160,311,Change aesara.graph.basic.Node to pydot.Node in aesara.printing,brandonwillard,"This PR fixes a reference to the wrong `Node` type in `aesara.printing`.

Closes #309.",bug,,brandonwillard,2021-03-01 22:18:37,2021-03-01 23:29:49,aesara/printing.py,9e4ebd067c56a6c399a542ead6ee36fb4962ee05,"brandonwillard assigned 2021-03-01 22:18:38,brandonwillard labeled 2021-03-01 22:19:15,brandonwillard referenced 2021-03-01 23:29:49,brandonwillard merged 2021-03-01 23:29:49,brandonwillard closed 2021-03-01 23:29:49,brandonwillard head_ref_deleted 2021-03-01 23:29:54",codecov[bot] brandonwillard,1,True
161,316,Fix type hint errors (n errors: 386->272),LegrandNico,"This PR will fix 114 errors raised by MyPy (going from a total of 386 to 272) when running on the main folder with:

```console
mypy ./aesara/ --ignore-missing-imports --follow-imports=skip
```

This will contribute to #200.  No functional changes on the codebase are made, type hints are just declared more explicitly or skipped when needed. ",,michaelosthege,,2021-03-04 01:46:51,2021-03-08 08:13:03,aesara/link/utils.py aesara/tensor/nnet/corr.py aesara/gpuarray/dnn.py aesara/graph/unify.py aesara/link/c/interface.py aesara/tensor/nnet/corr3d.py aesara/scalar/basic.py aesara/sparse/basic.py aesara/tensor/__init__.py,69ec0ebd1c3c1865595b3cb625eb15c0c325844f,"LegrandNico renamed 2021-03-04 01:59:05,twiecki referenced 2021-03-08 08:13:03,twiecki merged 2021-03-08 08:13:03,twiecki closed 2021-03-08 08:13:03,LegrandNico mentioned 2021-03-08 08:13:18,LegrandNico subscribed 2021-03-08 08:13:18",codecov[bot] twiecki LegrandNico michaelosthege,2,True
162,317,Add C code for Erfcx ,ricardoV94,"Mentioned in #267 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,twiecki brandonwillard,brandonwillard,2021-03-04 09:43:26,2021-03-10 06:25:59,aesara/scalar/basic_scipy.py aesara/tensor/basic.py aesara/tensor/elemwise.py aesara/sandbox/linalg/__init__.py aesara/link/jax/jax_dispatch.py tests/link/test_jax.py tests/tensor/test_basic.py aesara/scalar/c_code/Faddeeva.cc aesara/tensor/nlinalg.py aesara/scalar/c_code/Faddeeva.hh aesara/scalar/c_code/Faddeeva.h aesara/sandbox/linalg/ops.py aesara/scalar/basic.py aesara/tensor/extra_ops.py tests/tensor/test_nlinalg.py,7d85d51e8014bfc49a862d47dc39703028a1af70 0e483300b3952373e0198d0bf236a3665d5331a4 cc64c47f606b7e4230aaf77564973ed87b674ca6 9d30418804c47f2db4c5224d701c96bd12f78382 9c3f37ccf8dd68866a7bc6b559857438b6a93ce4 50d2e3244523fb209b9466e5aa65b5af3c5d75a9 e3930d72edc19b068e91cf5516d49da53b3a8ee9 cdb8010f32c9b53de47996d5ca0d0e4a6284c329 c634ff9304dea61737e5661d14dc11e80c31488e,"dfm mentioned 2021-03-05 13:51:34,dfm subscribed 2021-03-05 13:51:34,twiecki mentioned 2021-03-05 15:30:55,twiecki subscribed 2021-03-05 15:30:55,ricardoV94 mentioned 2021-03-05 15:30:55,ricardoV94 subscribed 2021-03-05 15:30:55,ricardoV94 ready_for_review 2021-03-08 11:57:34,brandonwillard assigned 2021-03-08 13:23:58,twiecki referenced 2021-03-10 06:25:59,twiecki merged 2021-03-10 06:25:59,twiecki closed 2021-03-10 06:25:59,ricardoV94 mentioned 2021-03-10 06:26:12,ricardoV94 subscribed 2021-03-10 06:26:12,ricardoV94 head_ref_deleted 2021-03-19 15:26:37",codecov[bot] brandonwillard ricardoV94 dfm twiecki,42,True
163,319,Remove deprecated aesara.tensor.nlinalg.AllocDiag,brandonwillard,"This PR removes the deprecated (and duplicated) `aesara.tensor.nlinalg.AllocDiag`.

Closes #313.",,,brandonwillard,2021-03-04 23:42:29,2021-03-05 00:31:09,aesara/tensor/basic.py aesara/sandbox/linalg/__init__.py aesara/link/jax/jax_dispatch.py tests/link/test_jax.py tests/tensor/test_basic.py aesara/tensor/nlinalg.py aesara/sandbox/linalg/ops.py aesara/tensor/extra_ops.py tests/tensor/test_nlinalg.py,ac24889f3873adc05d5e2a368075af04c35f929c,"brandonwillard assigned 2021-03-04 23:42:29,brandonwillard referenced 2021-03-05 00:31:09,brandonwillard merged 2021-03-05 00:31:09,brandonwillard closed 2021-03-05 00:31:09,brandonwillard head_ref_deleted 2021-03-05 00:31:15",codecov[bot] brandonwillard,1,True
164,321,Added Laplace and Wald RV,kc611,This PR adds a few of the missing RandomVariables required to build the new distributions in Pymc3. ,,twiecki,,2021-03-07 16:08:40,2021-03-10 06:28:20,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,0c2a089eb29fd778c5b79f15aa46c234416a2d63 f3070285519ef3e425859faa95a5fd6f76e0aef5,"kc611 renamed 2021-03-09 11:15:42,twiecki referenced 2021-03-10 06:28:19,twiecki merged 2021-03-10 06:28:19,twiecki closed 2021-03-10 06:28:20,kc611 mentioned 2021-03-10 06:28:29,kc611 subscribed 2021-03-10 06:28:29",codecov[bot] kc611 twiecki brandonwillard,6,True
165,334,Fix type hint errors (272->167),LegrandNico,"Fix various type hints errors without adding functional changes to the codebase. 
For some cases, I had to explicitly declare all possible class attributes and initialize them with empty strings as default (e.g `__name__`).
This will contribute to #200.",typing,michaelosthege,,2021-03-12 17:10:39,2021-03-16 10:13:40,aesara/sandbox/multinomial.py aesara/link/c/basic.py aesara/configparser.py aesara/tensor/shape.py aesara/link/c/cmodule.py aesara/graph/unify.py aesara/tensor/nlinalg.py aesara/graph/optdb.py aesara/tensor/nnet/blocksparse.py aesara/graph/utils.py aesara/compile/ops.py aesara/link/c/interface.py aesara/compile/profiling.py aesara/compile/function/types.py aesara/tensor/__init__.py aesara/link/utils.py aesara/tensor/elemwise.py aesara/tensor/blas.py aesara/compile/mode.py aesara/scalar/basic.py aesara/_version.py aesara/tensor/basic.py aesara/misc/check_duplicate_key.py aesara/graph/basic.py aesara/graph/op.py aesara/utils.py aesara/gpuarray/basic_ops.py aesara/gpuarray/pathparse.py,f2551040d63cb5d63fa0bb8a0c7ec5b09db604cb,"LegrandNico renamed 2021-03-12 17:27:15,twiecki referenced 2021-03-16 10:13:40,twiecki merged 2021-03-16 10:13:40,twiecki closed 2021-03-16 10:13:40,LegrandNico mentioned 2021-03-16 10:13:48,LegrandNico subscribed 2021-03-16 10:13:48,brandonwillard labeled 2022-04-07 22:17:30",twiecki LegrandNico michaelosthege brandonwillard,6,True
166,336,Python updates for Elemwise broadcasting,brandonwillard,This PR addresses the `Elemwise` broadcasting issue in #335 from the Python implementation side.  It also includes a few minor fixes and updates the the C compilation process.,,,brandonwillard,2021-03-13 23:34:26,2021-03-18 16:02:51,aesara/link/utils.py aesara/link/c/basic.py tests/test_ifelse.py tests/link/c/test_cmodule.py aesara/tensor/elemwise.py aesara/link/c/cmodule.py tests/compile/test_compilelock.py tests/tensor/test_type.py tests/link/c/test_basic.py aesara/link/c/exceptions.py tests/tensor/test_elemwise.py aesara/tensor/random/basic.py aesara/compile/compilelock.py tests/link/test_vm.py,3d77895f8cff7205154f07ba5092a40268b615a6 bad3c098fe7c09d3972321982094988472d44bc2 965ff4b2e02dc5526989b0b26492e07221bebb46 7e0eca7c658ed6285870a986a1696f933d695852 357eb634e411a415f8354dc87975ce0733058306 6fc57613e319b23dde39e89365b3afdf52ea11ea 30a68f5c6357d82322d9f84cc2ae5706292c66d6 5063327a7d89b38966b9aaad111e9053c064fa3c 309f1a9242d00d9e8973eebdc7fb822c47a586b5 62a17c9cd7785fe4e198e66f14bb2c7320489dde,"brandonwillard assigned 2021-03-13 23:34:26,brandonwillard head_ref_force_pushed 2021-03-14 02:19:40,brandonwillard head_ref_force_pushed 2021-03-14 02:22:06,brandonwillard head_ref_force_pushed 2021-03-14 05:00:09,brandonwillard head_ref_force_pushed 2021-03-16 19:00:09,brandonwillard referenced 2021-03-18 16:02:51,brandonwillard merged 2021-03-18 16:02:51,brandonwillard closed 2021-03-18 16:02:51,brandonwillard head_ref_deleted 2021-03-18 16:02:56",codecov[bot] brandonwillard,1,True
167,341,Fix typos in GammaRV and HalfCauchyRV,ricardoV94,,,brandonwillard,,2021-03-17 09:17:58,2021-03-17 18:41:24,aesara/tensor/random/basic.py,64a855189cbfe540c010cde891882e1be508ee19,"brandonwillard referenced 2021-03-17 18:41:23,brandonwillard merged 2021-03-17 18:41:24,brandonwillard closed 2021-03-17 18:41:24,ricardoV94 head_ref_deleted 2021-04-05 16:58:40",codecov[bot] ricardoV94 brandonwillard,5,True
168,343,Add logsoftmax and fix for jax_funcify_join,aseyboldt,"Add a LogSoftmax implementation for `jax_funcify`.

Also, this adds a jax tensor conversion for `jax_funcify_Join`. I'm not sure this is the best solution, it might also not be needed if optimizations are used. Without this change this fails:

```python
import pymc3 as pm
import aesara.tensor as aet
import aesara
import pymc3.sampling_jax
import numpy as np

with pm.Model() as model:
    a = pm.Normal('a', shape=(13, 3, 5))
    b = pm.Normal('b', shape=(17, 5, 7))
    pm.Normal('c', mu=aet.tensordot(a, b, axes=(2, 1)), shape=(13, 3, 17, 7))

with model:
    # fails with attribute access tuple.ndim
    trace = pymc3.sampling_jax.sample_numpyro_nuts()

# this doesn't fail, the join gets optimized away I think
func = model.logp_dlogp_function(mode=aesara.compile.mode.JAX)
func.set_extra_values({})
x = np.random.randn(func.size)

%%timeit
val, grad = func(x)
jax.device_get(grad)
```
cc @brandonwillard @OriolAbril 

closes: #340 and closes #339",,OriolAbril brandonwillard,OriolAbril,2021-03-17 18:05:37,2021-03-20 17:37:38,tests/link/test_jax.py aesara/link/jax/jax_dispatch.py,182c957857bd3906ae784f680cd0ece5be4bbff1 166ef9dd539dc41803cb6b54789d37da98671f1a 6843dfe3e89491611bb406e63940f483833c546a 1b356e40964e9aa600338859202e423772cf1de2 2844cfe9639286ca9f92f79f53ab046679500967,"brandonwillard mentioned 2021-03-17 18:05:37,brandonwillard subscribed 2021-03-17 18:05:37,OriolAbril mentioned 2021-03-17 18:05:37,OriolAbril subscribed 2021-03-17 18:05:37,brandonwillard convert_to_draft 2021-03-17 18:54:34,OriolAbril mentioned 2021-03-18 08:24:01,OriolAbril subscribed 2021-03-18 08:24:01,OriolAbril assigned 2021-03-18 12:28:58,OriolAbril review_dismissed 2021-03-19 19:40:05,OriolAbril head_ref_force_pushed 2021-03-19 19:40:05,brandonwillard mentioned 2021-03-19 20:02:34,brandonwillard subscribed 2021-03-19 20:02:35,brandonwillard mentioned 2021-03-20 02:14:08,brandonwillard subscribed 2021-03-20 02:14:08,brandonwillard ready_for_review 2021-03-20 02:14:44,brandonwillard referenced 2021-03-20 17:37:38,brandonwillard merged 2021-03-20 17:37:38,brandonwillard closed 2021-03-20 17:37:38",codecov[bot] OriolAbril brandonwillard aseyboldt twiecki,5,True
169,344,Fix scan optimization bugs,brandonwillard,"This PR fixes a bug in the `Scan` optimizations that involve (re)creating nodes with an `Op` and another node's inputs.  Simply put, **do not create nodes using `Op.__call__` and a list of inputs obtained via `node.inputs`**.  Inputs obtained from a node via `node.inputs` can be used with `Op.make_node`, but not `Op.__call__`, because the latter is allowed to be a more flexible interface to `Op.make_node`.",bug important,,brandonwillard,2021-03-18 05:23:08,2021-03-18 17:22:13,aesara/scan/opt.py aesara/graph/basic.py,e66de2d1a0066f64bde2513781d8d50c3ded0441 9ba1257484bf853a14916cf2f20ef11cf37c3bfb,"brandonwillard labeled 2021-03-18 05:23:08,brandonwillard labeled 2021-03-18 05:23:08,brandonwillard assigned 2021-03-18 05:23:08,brandonwillard head_ref_force_pushed 2021-03-18 15:41:28,brandonwillard referenced 2021-03-18 17:22:12,brandonwillard merged 2021-03-18 17:22:12,brandonwillard closed 2021-03-18 17:22:13,brandonwillard head_ref_deleted 2021-03-18 17:22:17",codecov[bot] brandonwillard,1,True
170,347,Change reference count assertion to warning,jeffreyenos,"This PR partially addresses the reference count assertion failure mentioned by @aseyboldt in #345.

In certain circumstances the reference count for `node_n_inputs` differs before and after the construction of a `CVM` object in `VMLinker`, causing an assertion to fail. So far this issue has only been seen in the context of compiling graphs in parallel with Dask.

The issue is difficult to reproduce, and it's unclear whether there is actually a leak. (@aseyboldt has a hypothesis that the issue is due to [Dask profiling](https://github.com/dask/distributed/blob/main/distributed/profile.py).) So I've changed the assertion to a warning.",,,,2021-03-23 18:50:53,2021-03-23 22:01:21,aesara/link/vm.py,07085fee1fda31cb4802e91378b8ad56c1ee99e4,"aseyboldt mentioned 2021-03-23 18:50:54,aseyboldt subscribed 2021-03-23 18:50:54,brandonwillard referenced 2021-03-23 22:01:21,brandonwillard merged 2021-03-23 22:01:21,brandonwillard closed 2021-03-23 22:01:21",codecov[bot] aseyboldt jeffreyenos brandonwillard,1,True
171,348,Fix rebroadcast clients bug,brandonwillard,This PR fixes an attribute access error in certain calls to `aesara.tensor.basic.patternbroadcast`.,bug,,brandonwillard,2021-03-25 04:15:19,2021-03-25 05:08:51,tests/tensor/test_basic.py tests/tensor/test_basic_opt.py aesara/tensor/basic_opt.py tests/compile/test_ops.py,32fe550cd384c646e8ce5e268c7b6ef702a86498 b13eef605bbe1c652a10dfba5d246b2904175b0a,"brandonwillard labeled 2021-03-25 04:15:19,brandonwillard assigned 2021-03-25 04:15:20,brandonwillard referenced 2021-03-25 04:24:46,brandonwillard referenced 2021-03-25 05:08:51,brandonwillard merged 2021-03-25 05:08:51,brandonwillard closed 2021-03-25 05:08:51,brandonwillard head_ref_deleted 2021-03-25 05:08:54,brandonwillard referenced 2021-03-25 05:40:13,michaelosthege referenced 2021-03-26 17:48:21,brandonwillard referenced 2021-03-27 04:42:27,brandonwillard referenced 2021-03-27 06:57:57,brandonwillard referenced 2021-03-27 07:14:39,brandonwillard referenced 2021-03-27 07:46:01,brandonwillard referenced 2021-03-27 08:02:46,brandonwillard referenced 2021-03-27 08:11:41,brandonwillard referenced 2021-03-27 08:55:47,michaelosthege referenced 2021-03-28 12:20:03,michaelosthege referenced 2021-03-28 12:38:36,brandonwillard referenced 2021-03-29 17:38:54,brandonwillard referenced 2021-03-29 17:45:58,twiecki referenced 2021-06-05 14:16:50,zoj613 referenced 2021-06-13 18:59:23",zoj613 codecov[bot] brandonwillard michaelosthege twiecki,1,True
172,349,Fix test exclusion in setup.py,mgorny,"The ""tests.*"" exclusion only excludes test subpackages from being
installed, while ""tests"" itself is still installed.  List it explicitly
to exclude it as well.

(presuming most of the points below don't apply as I only modify `setup.py`)

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,brandonwillard,,2021-03-25 07:20:29,2021-03-25 21:00:35,setup.py,2224514b0dbb6bb752fe2d8201e0d3f133526c55,"brandonwillard referenced 2021-03-25 21:00:35,brandonwillard merged 2021-03-25 21:00:35,brandonwillard closed 2021-03-25 21:00:35",codecov[bot] brandonwillard mgorny,2,True
173,350,Add type hints and apply mypy fix for function attributes where needed,LegrandNico,"This PR adds various type hints to increase type coverage. It also fixes the mypy errors raised by the use of function attributes, using the workaround described [here](https://github.com/python/mypy/issues/2087#issuecomment-769266912). 

It will contribute to #200.

Several of the remaining errors returned by mypy are related to inconsistent type inherited from core classes (e.g `Variable`) and I think this is the next thing to be fixed if we want to solve the rest. I saw what is proposed in #134, but I think I will need a bit more guidance for the next step.",typing,ricardoV94 eigenfoo michaelosthege,,2021-03-26 22:32:48,2021-06-14 21:55:02,aesara/tensor/nnet/ctc.py aesara/configparser.py aesara/tensor/shape.py aesara/link/c/lazylinker_c.py aesara/link/c/cmodule.py aesara/gpuarray/dnn.py aesara/gpuarray/cudnn_defs.py aesara/tensor/var.py aesara/tensor/blas_headers.py aesara/compile/function/__init__.py setup.py aesara/gpuarray/__init__.py aesara/gpuarray/elemwise.py aesara/compile/sharedvalue.py aesara/graph/fg.py aesara/link/c/interface.py aesara/compile/io.py aesara/compile/function/types.py aesara/tensor/__init__.py aesara/link/utils.py aesara/sandbox/rng_mrg.py aesara/scan/scan_perform_ext.py aesara/tensor/elemwise.py aesara/tensor/blas.py .coveragerc aesara/scalar/basic.py aesara/_version.py aesara/tensor/basic.py aesara/graph/basic.py aesara/graph/op.py aesara/tensor/blas_c.py aesara/graph/callcache.py aesara/compile/compilelock.py,27ded2248492f5ed7952805fb266c1bb6f6a88dd 0f9871cbab0610dae43af16184ab2fc954cbe1ca 342c960d08d83d86eb513bbfde6213c2b4bc4372 fe304e66bcaf6dad4fac66af7575dfce5b2cebd5 9b4aa8286c239dbd7432928d0a9449beaa7e8be5 c7d37318f59cedb5b9f2264b4a41918058f3fe94,"LegrandNico mentioned 2021-04-25 07:57:07,LegrandNico subscribed 2021-04-25 07:57:07,michaelosthege review_requested 2021-04-28 15:07:32,LegrandNico review_dismissed 2021-05-08 10:18:32,LegrandNico closed 2021-06-14 21:55:03,LegrandNico head_ref_deleted 2021-06-14 21:55:03,brandonwillard labeled 2022-04-07 22:17:30",codecov[bot] LegrandNico eigenfoo brandonwillard ricardoV94 michaelosthege,26,False
174,351,Fix two `RandomVariable` issues,brandonwillard,This PR adds broadcasting to `MultinomialRV` and fixes a size issue in `CategoricalRV`.,bug,,brandonwillard,2021-03-26 22:49:32,2021-03-26 23:42:31,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,80bf5511d46fdfdc6b7d013b8305ffc0f7b415e2 2c37b8bd2f58eb719d8eefaafc9e1e2d52627c26,"brandonwillard labeled 2021-03-26 22:49:32,brandonwillard assigned 2021-03-26 22:49:32,brandonwillard referenced 2021-03-26 23:42:31,brandonwillard merged 2021-03-26 23:42:31,brandonwillard closed 2021-03-26 23:42:31,brandonwillard head_ref_deleted 2021-03-26 23:42:34",brandonwillard,0,True
175,353,Random Variable rearrange,canyon289,"Rearranging distributions in alphabetical order (roughly right in draft state) to make it easier to navigate. Wont be offended if this we close this PR without merging if its not useful.

There should not be any changes to the code other than rearrangement



Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [X] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,brandonwillard,,2021-03-29 03:51:20,2021-04-25 07:52:46,aesara/_version.py aesara/tensor/random/basic.py,981b06a8dfdde4b3c15318c653f0bfc8860cafe2 6d5395fb4c9ccfeaf931902b01173443a5aacd15 7b0313595dca79b3078957207d2bd35ecaac1c2b,"canyon289 ready_for_review 2021-03-29 03:52:58,michaelosthege closed 2021-04-25 07:52:46,michaelosthege mentioned 2021-04-25 14:08:20,michaelosthege subscribed 2021-04-25 14:08:20",codecov[bot] brandonwillard ricardoV94 canyon289 michaelosthege,10,False
176,354,Added Gumbel RV,fonnesbeck,"No tests yet.

Also added .vscode/ to .gitignore.
",,michaelosthege brandonwillard,,2021-03-29 16:27:32,2021-04-02 01:21:39,aesara/tensor/random/basic.py tests/tensor/random/test_basic.py .gitignore,1568405de75ca48d6ea7e01e005c8b68249a345e,"brandonwillard head_ref_force_pushed 2021-04-01 19:59:14,brandonwillard head_ref_force_pushed 2021-04-01 20:27:02,brandonwillard head_ref_force_pushed 2021-04-02 00:09:15,brandonwillard head_ref_force_pushed 2021-04-02 01:19:01,brandonwillard referenced 2021-04-02 01:21:39,brandonwillard merged 2021-04-02 01:21:39,brandonwillard closed 2021-04-02 01:21:39",codecov[bot] brandonwillard fonnesbeck ricardoV94 michaelosthege,8,True
177,356,Added Pareto RV,fonnesbeck,Includes test.,,,,2021-03-31 03:17:04,2021-04-02 01:16:07,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,0c08fb2fcb5e7ff61da4afed81559e2c8a53f9f5,"brandonwillard head_ref_force_pushed 2021-04-01 20:24:18,brandonwillard head_ref_force_pushed 2021-04-02 00:09:25,brandonwillard referenced 2021-04-02 01:16:07,brandonwillard merged 2021-04-02 01:16:07,brandonwillard closed 2021-04-02 01:16:07",fonnesbeck codecov[bot] brandonwillard,1,True
178,357,Fix a few broken links in doc/tutorial/numpy.txt,ivanistheone,"Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [ ] There are tests covering the changes introduced in the PR.
",,brandonwillard,,2021-04-01 03:30:27,2021-04-01 03:37:28,doc/tutorial/numpy.txt,008d609c5d1ba2bc94e37a8f14999f65dc3ddab1,"brandonwillard referenced 2021-04-01 03:37:28,brandonwillard merged 2021-04-01 03:37:28,brandonwillard closed 2021-04-01 03:37:28",ivanistheone brandonwillard,0,True
179,358,"xfail JAX tests after mandatory ""omnistaging"" update",brandonwillard,"This PR `xfail`s tests that will no longer pass now that JAX's ""omnistaging"" can no longer be disabled.",JAX important,,brandonwillard,2021-04-01 21:13:36,2021-04-02 00:07:55,requirements.txt tests/link/test_jax.py aesara/link/jax/jax_dispatch.py,39e8e70be48018e667a5760c3bc5d60770bd8936,"brandonwillard labeled 2021-04-01 21:13:36,brandonwillard labeled 2021-04-01 21:13:36,brandonwillard assigned 2021-04-01 21:13:36,brandonwillard referenced 2021-04-02 00:07:55,brandonwillard merged 2021-04-02 00:07:55,brandonwillard closed 2021-04-02 00:07:55,brandonwillard head_ref_deleted 2021-04-02 00:07:58",brandonwillard,0,True
180,359,Add missing NumPy functions to `aesara.tensor` at package-level and further `FunctionGraph` improvements,brandonwillard,"This PR provides adds missing NumPy functions to `aesara.tensor` at package-level and provides better `FunctionGraph` options (e.g. optional `inputs`, allows one to provide and update a list of replacements, etc.)",,,brandonwillard,2021-04-01 23:36:07,2021-04-07 18:58:20,tests/graph/utils.py tests/graph/test_fg.py tests/tensor/test_extra_ops.py aesara/graph/fg.py aesara/tensor/extra_ops.py aesara/tensor/__init__.py,f88de23d464063d9e76ebe2c585e73bce42e93cc 06d7b9ae792a1de7570fe785a33e8c456b6c8f2c,"brandonwillard assigned 2021-04-01 23:36:07,brandonwillard head_ref_force_pushed 2021-04-02 00:08:47,brandonwillard head_ref_force_pushed 2021-04-02 01:22:46,brandonwillard renamed 2021-04-07 18:55:44,brandonwillard head_ref_force_pushed 2021-04-07 18:58:01,brandonwillard referenced 2021-04-07 18:58:20,brandonwillard merged 2021-04-07 18:58:20,brandonwillard closed 2021-04-07 18:58:20,brandonwillard head_ref_deleted 2021-04-07 18:58:27",codecov[bot] brandonwillard,1,True
181,363,Add missing numpy random variables,ricardoV94,"Adding the following RandomVariables still missing from `numpy.random`:

-  Geometric
-  HyperGeometric
-  Logistic
-  LogNormal
-  Triangular
-  Weibull
-  VonMises

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,brandonwillard,,2021-04-05 17:29:02,2021-04-08 12:29:59,tests/graph/utils.py tests/graph/test_fg.py tests/tensor/test_extra_ops.py aesara/graph/fg.py aesara/tensor/random/basic.py aesara/tensor/extra_ops.py tests/tensor/random/test_basic.py aesara/tensor/__init__.py,09917331bb489b34ed0a3eb610ce03572e834870 b02ef002a052226240088483baa9f1899f1479db e2130890deb0060664c769cfff9c91131ce0b31a 9a23c1314b13b1816e2c8f340395f44b6ed9466f 2661fc039e48e517d86f68bf44daa3bb1885fed6 3c819bb0deec9e4fdc6220762d9c30f289e1de2e b0a44789d21a48fcb01c210d85997753643ba1cf c1d3596f55ada936a28c0087516da95d384670a3,"ricardoV94 head_ref_force_pushed 2021-04-05 18:51:56,ricardoV94 review_dismissed 2021-04-06 07:42:18,ricardoV94 head_ref_force_pushed 2021-04-06 07:42:18,ricardoV94 ready_for_review 2021-04-06 07:47:52,ricardoV94 head_ref_force_pushed 2021-04-06 07:53:42,ricardoV94 head_ref_force_pushed 2021-04-07 06:47:37,ricardoV94 head_ref_force_pushed 2021-04-07 06:49:41,ricardoV94 review_requested 2021-04-07 06:50:03,ricardoV94 referenced 2021-04-08 12:29:59,ricardoV94 merged 2021-04-08 12:29:59,ricardoV94 closed 2021-04-08 12:29:59,ricardoV94 head_ref_deleted 2021-04-08 12:30:08",codecov[bot] ricardoV94 brandonwillard,7,True
182,364,Add local log - exp optimization,ricardoV94,"It seems there were no automatic rewrites to remove `log(exp(x))` or `exp(log(x))` expressions. Or at least I couldn't get them to show up when playing with optimizations.

Stealing some of @brandonwillard code from the Discourse:
```python
def optimize_graphs(*graphs, verbose=False):
    inputs = list(at_inputs(graphs))
    graphs = list(graphs)
    fgraph = FunctionGraph(inputs, graphs, clone=False)
    canonicalize_opt = optdb.query(Query(include=['fast_run']))
    with config.change_flags(optimizer_verbose=verbose):
        canonicalize_opt(fgraph)
    print(aesara.pp(fgraph.outputs[0]))

x = at.vector('x')
optimize_graphs(at.log(at.exp(x)))  # x
optimize_graphs(at.exp(at.log(x)))  # x
```
While in master it prints:
```python
optimize_graphs(at.log(at.exp(x)))  # Elemwise{Composite{log(exp(i0))}}[(0, 0)](x)
optimize_graphs(at.exp(at.log(x)))  # Elemwise{Composite{exp(log(i0))}}[(0, 0)](x)
```

Would it be as simple as this? Obviously it would require tests, but I wanted to first check whether I am missing something obvious... and also check how many tests this breaks.
***

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",graph rewriting,brandonwillard,,2021-04-08 11:33:25,2021-04-16 04:52:22,aesara/tensor/math_opt.py tests/tensor/test_math_opt.py,c23b303c9e7cd67955c498d511a51f1279bb4d41,"brandonwillard mentioned 2021-04-08 11:33:25,brandonwillard subscribed 2021-04-08 11:33:25,ricardoV94 head_ref_force_pushed 2021-04-09 06:31:36,ricardoV94 renamed 2021-04-09 06:32:11,ricardoV94 head_ref_force_pushed 2021-04-12 08:22:51,ricardoV94 review_requested 2021-04-12 09:34:27,ricardoV94 head_ref_force_pushed 2021-04-12 10:52:24,ricardoV94 head_ref_force_pushed 2021-04-13 07:46:49,ricardoV94 head_ref_force_pushed 2021-04-13 07:49:59,ricardoV94 review_requested 2021-04-13 09:01:53,brandonwillard labeled 2021-04-16 04:52:13,brandonwillard referenced 2021-04-16 04:52:22,brandonwillard merged 2021-04-16 04:52:22,brandonwillard closed 2021-04-16 04:52:22,ricardoV94 head_ref_deleted 2021-04-23 14:49:15",codecov[bot] ricardoV94 twiecki brandonwillard,18,True
183,365,Numba backend,aseyboldt,"Very far from feature complete, but maybe a start...

![image](https://user-images.githubusercontent.com/1882397/114099666-7a219d00-98c3-11eb-989d-1a2e68a8965d.png)

cc @brandonwillard @kc611",enhancement important Numba,kc611,,2021-04-08 21:41:56,2021-04-14 04:07:04,aesara/link/numba/dispatch.py tests/link/numba/test_link.py aesara/link/numba/__init__.py aesara/link/numba/naming.py aesara/link/numba/numba_linker.py aesara/link/numba/linker.py tests/link/numba/test_numba_link.py aesara/link/numba/numba_dispatch.py,199a624d27c6d715756e9f344fcde305de6c5c69 43c4fb3ed5b7a0a54db1af7ed01eb35ee5a06977 bd63d9050b4e8bffeb8f7a0270ab84bafd91ecbc a927cc20798f8ae707bdb4c77c897fec69d60e00 373cfbfb92e69e757e6c29e033f188b39f03b530 98a44b414178daa30160e614ad0d9bded87e424d b67cbad81b2bc72dbb4c9d419db98261d1382b24 f2ce314335a48a98a8ea279d7e44d8f327ce1c77,"brandonwillard mentioned 2021-04-08 21:41:56,brandonwillard subscribed 2021-04-08 21:41:56,kc611 mentioned 2021-04-08 21:41:56,kc611 subscribed 2021-04-08 21:41:56,brandonwillard labeled 2021-04-08 23:15:58,brandonwillard labeled 2021-04-08 23:15:58,brandonwillard labeled 2021-04-08 23:15:58,brandonwillard connected 2021-04-08 23:18:52,brandonwillard connected 2021-04-08 23:18:52,brandonwillard review_requested 2021-04-08 23:19:23,brandonwillard head_ref_force_pushed 2021-04-09 06:29:06,brandonwillard renamed 2021-04-09 07:02:09,brandonwillard head_ref_force_pushed 2021-04-11 05:49:32,brandonwillard head_ref_force_pushed 2021-04-11 05:58:19,aseyboldt mentioned 2021-04-11 05:59:55,aseyboldt subscribed 2021-04-11 05:59:55,brandonwillard head_ref_force_pushed 2021-04-11 06:53:50,brandonwillard head_ref_force_pushed 2021-04-11 06:56:00,aseyboldt head_ref_force_pushed 2021-04-11 11:38:21,brandonwillard mentioned 2021-04-11 11:39:45,brandonwillard subscribed 2021-04-11 11:39:45,brandonwillard mentioned 2021-04-11 16:56:26,brandonwillard subscribed 2021-04-11 16:56:26,brandonwillard closed 2021-04-14 04:07:04,kc611 mentioned 2021-04-14 04:07:04,kc611 subscribed 2021-04-14 04:07:04",aseyboldt kc611 brandonwillard,12,False
184,366,Add default op str,brandonwillard,This PR adds a default `Op.__str__` and cleans up a `*Subtensor*`-to-indices helper function.,,,brandonwillard,2021-04-09 05:42:20,2021-04-11 01:34:47,aesara/tensor/subtensor.py aesara/graph/op.py doc/library/config.txt aesara/link/jax/jax_dispatch.py,df6409609e709c3fd58bbaa4f6b1e4aef1943a1f 3d3df1c8b3a0e0fd845045beb01fb5bc8ae90d4f df74e02e71a2a9984a63f63e5d27e201e1b2bd06,"brandonwillard assigned 2021-04-09 05:42:20,brandonwillard referenced 2021-04-11 01:34:47,brandonwillard merged 2021-04-11 01:34:47,brandonwillard closed 2021-04-11 01:34:47,brandonwillard head_ref_deleted 2021-04-11 01:34:50",codecov[bot] brandonwillard,1,True
185,367,Make SpecifyShape work for scalar shapes too,michaelosthege,Also match exception messages in the tests.,bug,brandonwillard,,2021-04-10 23:37:30,2021-04-11 19:16:54,aesara/tensor/shape.py tests/tensor/test_shape.py,ecadbf29a6b59de7048189a253a3e01f388ea6ab,"michaelosthege labeled 2021-04-10 23:37:30,michaelosthege milestoned 2021-04-10 23:37:30,michaelosthege head_ref_force_pushed 2021-04-11 14:17:17,michaelosthege head_ref_force_pushed 2021-04-11 16:16:43,michaelosthege ready_for_review 2021-04-11 19:15:55,michaelosthege referenced 2021-04-11 19:16:54,michaelosthege merged 2021-04-11 19:16:54,michaelosthege closed 2021-04-11 19:16:54,michaelosthege head_ref_deleted 2021-04-11 19:16:58",codecov[bot] michaelosthege brandonwillard,9,True
186,368,Prevent in-place updates to `BroadcastTo`,brandonwillard,"This PR makes `Op.view_map` and `Op.destroy_map` default class-level variables.  It also prevents `BroadcastTo` output from being changed in-place, which can lead to bugs/errors.",bug important refactor,,brandonwillard,2021-04-11 00:58:39,2021-04-11 01:47:42,aesara/graph/destroyhandler.py aesara/link/vm.py aesara/graph/opt.py aesara/graph/fg.py aesara/compile/profiling.py aesara/graph/toolbox.py doc/extending/inplace.txt aesara/tensor/extra_ops.py aesara/compile/function/types.py aesara/link/utils.py aesara/scan/opt.py aesara/scan/op.py tests/compile/test_mode.py aesara/compile/debugmode.py aesara/d3viz/formatting.py aesara/printing.py tests/tensor/test_extra_ops.py doc/extending/extending_aesara.txt aesara/graph/op.py,3cf259594e294a380f44b7ee419b7b06a23d71f0 1bb26e0f2709066db8df81240329575595ec125e 752bddede5038f383bcdcf1038746eb0f2b6b841 26811afe1e78a525fa1e916f076aed2a6163ec2f,"brandonwillard labeled 2021-04-11 00:58:39,brandonwillard labeled 2021-04-11 00:58:39,brandonwillard labeled 2021-04-11 00:58:39,brandonwillard assigned 2021-04-11 00:58:39,brandonwillard renamed 2021-04-11 01:12:55,brandonwillard referenced 2021-04-11 01:47:42,brandonwillard merged 2021-04-11 01:47:42,brandonwillard closed 2021-04-11 01:47:42,brandonwillard head_ref_deleted 2021-04-11 01:47:45",brandonwillard,0,True
187,370,Add a dtype option to aesara.tensor.as_tensor_variable,brandonwillard,This PR adds a dtype option to `as_tensor_variable`.  Closes #369.,enhancement,,brandonwillard,2021-04-11 19:14:40,2021-04-12 04:16:03,tests/tensor/test_basic.py aesara/tensor/basic.py aesara/tensor/__init__.py,998e48d3935be8e73711d9feaabb3b9e949a32f7,"brandonwillard assigned 2021-04-11 19:14:40,brandonwillard labeled 2021-04-11 19:33:55,brandonwillard head_ref_force_pushed 2021-04-11 19:46:52,brandonwillard referenced 2021-04-12 04:16:03,brandonwillard merged 2021-04-12 04:16:03,brandonwillard closed 2021-04-12 04:16:03,brandonwillard head_ref_deleted 2021-04-12 04:16:06",codecov[bot] brandonwillard,2,True
188,371,Use flat AST-generated functions for JAX `FunctionGraph` conversion,brandonwillard,"This PR changes the JAX translation process so that it converts `FunctionGraph`s into flattened AST-generated functions instead of nested functions.  The resulting code and JAXified functions are much simpler than the previous implementation's.

Here's an example:
```python
import inspect

import aesara.tensor as at

from aesara.link.jax.dispatch import jax_funcify
from aesara.graph.fg import FunctionGraph


x = at.vector(""x"")
y = at.vector(""y"")

out = at.exp(x**2 + x * y + 1)

out_fg = FunctionGraph([x, y], [out])

jax_fn = jax_funcify(out_fg)
```
```python
>>> print(inspect.getsource(jax_fn))

def jax_funcified_fgraph(x, y):
    auto_31 = dimshuffle(auto_30)
    auto_32 = elemwise(x, y)
    auto_34 = dimshuffle1(auto_33)
    auto_35 = power(x, auto_34)
    auto_36 = elemwise1(auto_35, auto_32)
    auto_37 = elemwise2(auto_36, auto_31)
    auto_38 = exp(auto_37)
    return (auto_38,)
```
This implementation uses the same basic idea as the prototype in #365, with the key differences being that it is very streamlined, requires minimal changes to be used with a simple `Linker` base class, and it generates the source _first_ then the AST from that.  Because of this, it requires no external libraries and produces easily debuggable functions.


This change addresses concerns over potential recomputation of outputs that are referenced more than once in a graph, or that are one of many outputs of a single `Apply` node.  A test has also been added to this PR that directly confirms such outputs are always reused and never recomputed (in both cases).

~Local tests replacing the `Elemwise` JAXification with `jax.vmap` also appear to work, so, now, we should seriously consider using `jax.vmap` in at least some cases (e.g. for `Composite` functions).~  This PR now contains a commit that uses `jax.numpy.vectorize` for `Elemwise` `Op`s with `Composite` scalar `Op`s.
",enhancement JAX important,,brandonwillard,2021-04-12 00:18:17,2021-04-14 04:00:06,aesara/link/utils.py aesara/link/basic.py aesara/link/jax/jax_linker.py setup.cfg aesara/link/jax/__init__.py doc/JaxOps.rst aesara/link/jax/jax_dispatch.py tests/link/test_jax.py aesara/link/jax/dispatch.py aesara/link/jax/linker.py,c5bb6e34bc12760a4ef6ff71f268813010188aac d866d8e16a2e3d65a7840bc3d3cf8eca05845046 0a6ea4da03343d250b0a671a80e5436b8754c5e9 536e2279d77bd8f222af6333d68486b5e7269ce0 ae2009cbf3e7d69f889ec3619b9068743cd5d66d,"brandonwillard labeled 2021-04-12 00:18:17,brandonwillard review_requested 2021-04-12 00:18:17,brandonwillard assigned 2021-04-12 00:18:17,brandonwillard renamed 2021-04-12 00:18:52,brandonwillard head_ref_force_pushed 2021-04-12 03:13:49,brandonwillard head_ref_force_pushed 2021-04-12 03:15:15,brandonwillard ready_for_review 2021-04-12 03:15:20,brandonwillard review_requested 2021-04-12 03:15:32,brandonwillard head_ref_force_pushed 2021-04-12 03:33:30,brandonwillard head_ref_force_pushed 2021-04-12 03:34:09,brandonwillard labeled 2021-04-12 03:39:48,brandonwillard head_ref_force_pushed 2021-04-12 04:11:48,brandonwillard head_ref_force_pushed 2021-04-12 04:17:13,brandonwillard renamed 2021-04-12 04:17:37,brandonwillard head_ref_force_pushed 2021-04-12 04:24:56,brandonwillard head_ref_force_pushed 2021-04-12 04:34:42,brandonwillard labeled 2021-04-12 04:38:38,brandonwillard head_ref_force_pushed 2021-04-12 05:11:52,brandonwillard head_ref_force_pushed 2021-04-12 05:18:39,brandonwillard head_ref_force_pushed 2021-04-12 20:15:41,brandonwillard referenced 2021-04-14 04:00:06,brandonwillard merged 2021-04-14 04:00:06,brandonwillard closed 2021-04-14 04:00:06,brandonwillard connected 2021-05-19 23:15:12,brandonwillard head_ref_deleted 2021-11-10 20:31:16",codecov[bot] brandonwillard,1,True
189,372,Added `JITLinker`-based `NumbaLinker` ,kc611,"Adds a `NumbaLinker` based upon the new `JitLinker` class.

Based upon machinery from https://github.com/pymc-devs/aesara/pull/365 and https://github.com/pymc-devs/aesara/pull/371
",important Numba,brandonwillard,,2021-04-14 04:25:18,2021-04-17 21:56:25,requirements.txt aesara/link/utils.py aesara/link/numba/dispatch.py aesara/link/numba/__init__.py aesara/link/numba/linker.py tests/link/test_numba.py,8e69ea1aa037d63aebb4e0837344685faf74c4b9 8f2f471426f3d50005837ebcdbdcc40d39fc2581 636cf019c991cc7fce2a0c1f5744585158514f2b 6008ccbb3eed29b2aa671e8c767b5c064066ea82 f5755c5e6ae4daa1b4acbc8a74bfa5495b35cc39 87489784f9b57657f07e2fc0c69408495c4791cd d21220e17bdba4d647917beb0a229c57bc9ca38d 7465f7f8d68dd715e59f3a7595f94347d0df4238 3a333c9cdea39ebae89ecf8add52443d226a4102,"kc611 head_ref_force_pushed 2021-04-14 04:33:10,kc611 mentioned 2021-04-14 05:05:07,kc611 subscribed 2021-04-14 05:05:07,kc611 mentioned 2021-04-14 05:21:40,kc611 subscribed 2021-04-14 05:21:40,brandonwillard labeled 2021-04-14 05:30:55,brandonwillard labeled 2021-04-14 05:30:55,brandonwillard renamed 2021-04-14 05:32:20,brandonwillard renamed 2021-04-14 05:33:27,aseyboldt mentioned 2021-04-14 10:10:45,aseyboldt subscribed 2021-04-14 10:10:46,brandonwillard head_ref_force_pushed 2021-04-14 15:40:48,brandonwillard head_ref_force_pushed 2021-04-14 15:41:17,brandonwillard head_ref_force_pushed 2021-04-14 18:39:13,brandonwillard head_ref_force_pushed 2021-04-14 19:13:09,brandonwillard head_ref_force_pushed 2021-04-17 20:54:25,brandonwillard referenced 2021-04-17 21:56:25,brandonwillard merged 2021-04-17 21:56:25,brandonwillard closed 2021-04-17 21:56:25",codecov[bot] kc611 brandonwillard aseyboldt twiecki,7,True
190,374,Fix `nan` comparison in `Scalar.filter` and simplify `TensorType.values_eq`,brandonwillard,"This PR fixes an issue with `Scalar(""float32"").filter(np.single(""nan""))` failing when `aesara.config = ""float64""`.",bug,twiecki,brandonwillard,2021-04-16 04:48:04,2021-04-16 06:49:44,aesara/scalar/basic.py tests/scalar/test_type.py,4529cffc82fe66e0b7933a50ec6ad1b1aaa3078a,"brandonwillard labeled 2021-04-16 04:48:04,brandonwillard assigned 2021-04-16 04:48:04,brandonwillard renamed 2021-04-16 04:48:22,brandonwillard head_ref_force_pushed 2021-04-16 05:41:39,brandonwillard head_ref_force_pushed 2021-04-16 05:42:13,twiecki referenced 2021-04-16 06:49:44,twiecki merged 2021-04-16 06:49:44,twiecki closed 2021-04-16 06:49:44,brandonwillard head_ref_deleted 2021-11-10 20:31:21",codecov[bot] twiecki brandonwillard,1,True
191,380,Implement `*IncSubtensor*` translations for Numba,brandonwillard,This PR adds full `*IncSubtensor*` (e.g. `x[indices] = y`) support to our Numba backend.,Numba,,brandonwillard,2021-04-18 00:10:46,2021-04-18 01:18:07,tests/link/test_numba.py aesara/link/numba/dispatch.py,4249c126891bb295e3d8cc16831b33a483ca2512,"brandonwillard labeled 2021-04-18 00:10:46,brandonwillard assigned 2021-04-18 00:10:46,brandonwillard referenced 2021-04-18 01:18:06,brandonwillard merged 2021-04-18 01:18:06,brandonwillard closed 2021-04-18 01:18:07,brandonwillard head_ref_deleted 2021-04-18 01:25:02",codecov[bot] brandonwillard,1,True
192,382,Allow `AdvancedIncSubtensor` to be in-placed,brandonwillard,This PR enables the in-place feature of `AdvancedIncSubtensor`.  Closes #381.,enhancement important,,brandonwillard,2021-04-18 00:38:49,2021-04-18 03:44:44,aesara/tensor/subtensor.py tests/tensor/test_subtensor.py tests/tensor/test_basic_opt.py aesara/tensor/basic_opt.py,03d92df322319f43f59200c87675845bf7e5b98c,"brandonwillard labeled 2021-04-18 00:38:49,brandonwillard labeled 2021-04-18 00:38:49,brandonwillard assigned 2021-04-18 00:38:49,brandonwillard head_ref_force_pushed 2021-04-18 01:24:51,brandonwillard head_ref_force_pushed 2021-04-18 01:26:55,brandonwillard head_ref_force_pushed 2021-04-18 01:29:29,brandonwillard referenced 2021-04-18 03:44:44,brandonwillard merged 2021-04-18 03:44:44,brandonwillard closed 2021-04-18 03:44:44,brandonwillard head_ref_deleted 2021-04-18 03:44:48",codecov[bot] brandonwillard,1,True
193,383,Add a `tests.link.test_utils` module,brandonwillard,This PR adds the missing `tests.link.test_utils` module.  This module contains tests for `fgraph_to_python`.,important,,brandonwillard,2021-04-18 00:49:31,2021-04-18 01:54:38,tests/link/test_utils.py,804e1e2baed2112f727f8f9a4ca4cb14aa9b54cd,"brandonwillard labeled 2021-04-18 00:49:31,brandonwillard assigned 2021-04-18 00:49:31,brandonwillard renamed 2021-04-18 01:18:18,brandonwillard referenced 2021-04-18 01:54:38,brandonwillard merged 2021-04-18 01:54:38,brandonwillard closed 2021-04-18 01:54:38,brandonwillard head_ref_deleted 2021-04-18 01:54:40",codecov[bot] brandonwillard,1,True
194,384,Pass storage map during conversions,brandonwillard,"This PR cleans up some of the object naming used during Python function generation in the JAX and Numba backends.  It also exposes an enclosing `FunctionGraph`'s storage map for use by the subsequently called conversion functions (e.g. in `aesara.link.utils.fgraph_to_python`).  This can be used&mdash;for example&mdash;when a `FunctionGraph` contains another `FunctionGraph` that needs access to pre-""allocated"" storage for&mdash;say&mdash;shared variables.",enhancement JAX Numba,,brandonwillard,2021-04-19 22:08:17,2021-04-20 18:35:54,aesara/link/utils.py aesara/link/numba/dispatch.py aesara/link/numba/linker.py aesara/link/jax/dispatch.py aesara/link/jax/linker.py tests/link/test_utils.py,71ee983becd858e577489c6503b2352f4a9be858 12e240b00af6e9d47c469847f5a58ac343b83e66 c3657bffb85e90830779c5b98690434dd3b4769e 0d5bccd321f1f55fca08e56ace7ed78c504c8641 f0af93a4487e7667bcaa69b869356716e433e9f7,"brandonwillard labeled 2021-04-19 22:08:17,brandonwillard labeled 2021-04-19 22:08:17,brandonwillard labeled 2021-04-19 22:08:17,brandonwillard assigned 2021-04-19 22:08:17,brandonwillard head_ref_force_pushed 2021-04-20 01:04:29,brandonwillard referenced 2021-04-20 18:35:54,brandonwillard merged 2021-04-20 18:35:54,brandonwillard closed 2021-04-20 18:35:54,brandonwillard head_ref_deleted 2021-04-20 18:35:58",codecov[bot] brandonwillard,1,True
195,385,Added tests for Numba ScalarOps,kc611,"
This PR should cover most of the `ScalarOps` from `basic.py`",,michaelosthege brandonwillard,,2021-04-22 14:05:32,2021-06-25 22:04:19,tests/link/test_numba.py,4a6d0afaf68c9613f07c743b6a67b67424dbf4cb,"kc611 head_ref_force_pushed 2021-04-22 14:18:18,kc611 review_dismissed 2021-04-26 17:37:20,kc611 head_ref_force_pushed 2021-04-27 10:36:05,kc611 head_ref_force_pushed 2021-04-27 10:41:31,brandonwillard closed 2021-06-25 22:04:19",codecov[bot] kc611 michaelosthege brandonwillard,7,False
196,386,Update MultinomialRV docstring to match new broadcasting behavior,michaelosthege,"In ce9c17f3c39b2ae09cb4b4bb8ad0d06ae66d8fd6 the RV was changed such that `p` can be multi-dimensional instead of just 1-dimensional.
Since then the support length is determined by the **last** dimension of `p`.",documentation,canyon289 twiecki,,2021-04-24 20:50:38,2021-04-26 13:07:14,aesara/tensor/random/basic.py,31cac41d6263927081a9e2a148591c3f7b30cbf2 3caaf600b993359d52137ba65f3094b1140e84ea,"michaelosthege labeled 2021-04-24 20:50:38,ricardoV94 subscribed 2021-04-25 05:41:59,michaelosthege review_requested 2021-04-25 07:47:31,twiecki referenced 2021-04-26 13:07:14,twiecki merged 2021-04-26 13:07:14,twiecki closed 2021-04-26 13:07:14,twiecki head_ref_deleted 2021-04-26 13:07:17,michaelosthege mentioned 2021-04-26 13:07:29,michaelosthege subscribed 2021-04-26 13:07:29",codecov[bot] ricardoV94 canyon289 michaelosthege twiecki,10,True
197,388,Add Numba conversions for shape and dimension manipulation `Op`s,brandonwillard,This PR adds Numba conversions for basic shape and dimension manipulation `Op`s.,important Numba,michaelosthege,brandonwillard,2021-04-28 02:23:08,2021-05-02 20:26:07,requirements.txt tests/graph/utils.py aesara/tensor/basic.py aesara/link/numba/dispatch.py tests/graph/test_fg.py aesara/graph/fg.py tests/link/test_numba.py tests/tensor/test_basic.py aesara/scalar/basic.py,3a8d629c73ba6267ea8c57df288660aff444e88d 01d0f46a57ed842c67498d0142260707cef11c9e 50cdc3568a688c719fcacd9005aa4f2145964f19 d710e99ebcfc2bbc8d05a53c751ec65c2944abd0 dcd0b08bb349643c5da7f095602222308cd208ee 4b9062426e3ee80a434a73d2cf9d553fd69cbf4f f7c5633f14e1ee0a7d25cc7b0ec32c31f3f5a564 5e2c0dfd9911478c7ba55dc76aa2e53474703a30 2c01eef65fd187e1ebf754dae43f6d6f8db563fa 17bed4ed093c144e30077e7f4604ffa2cf61ccbe,"brandonwillard labeled 2021-04-28 02:23:08,brandonwillard labeled 2021-04-28 02:23:08,brandonwillard assigned 2021-04-28 02:23:08,brandonwillard convert_to_draft 2021-04-28 15:25:31,brandonwillard head_ref_force_pushed 2021-04-28 19:06:42,brandonwillard head_ref_force_pushed 2021-04-28 19:07:21,brandonwillard head_ref_force_pushed 2021-04-28 20:15:48,brandonwillard head_ref_force_pushed 2021-04-29 01:34:41,brandonwillard head_ref_force_pushed 2021-04-29 01:44:08,brandonwillard head_ref_force_pushed 2021-04-29 02:30:39,brandonwillard head_ref_force_pushed 2021-04-29 02:50:37,brandonwillard head_ref_force_pushed 2021-04-29 18:25:42,brandonwillard ready_for_review 2021-04-29 18:27:11,brandonwillard head_ref_force_pushed 2021-04-30 02:23:38,brandonwillard head_ref_force_pushed 2021-04-30 02:24:03,brandonwillard head_ref_force_pushed 2021-04-30 02:37:49,brandonwillard head_ref_force_pushed 2021-05-02 18:01:16,brandonwillard referenced 2021-05-02 20:26:06,brandonwillard merged 2021-05-02 20:26:07,brandonwillard closed 2021-05-02 20:26:07,brandonwillard head_ref_deleted 2021-05-02 20:26:10",codecov[bot] michaelosthege twiecki brandonwillard,5,True
198,391,Implement Numba conversion for `CAReduce` `Op`s,brandonwillard,This PR implements Numba conversions for `CAReduce` `Op`s (i.e. this PR adds a type of `ufunc.reduce` support for our vectorized Numba functions).,important Numba,,brandonwillard,2021-05-03 01:06:50,2021-05-03 22:54:09,tests/link/test_numba.py aesara/link/numba/dispatch.py,23fb97c819ae669a0ebcb3b9f58289911eee248e 9fc27c47ede4102a4e27aded061e993ced71c935 69e3c405d4c5a7959f366373c9dfef4dae21ec20 b41e0568a2d4a42f90986bb0e5ad4e1d81a433bf cf2e78d8f6475ad9e26155b4890bfe0790d4a8d9 6be05cbd990885d31792c7759af56e01740bb29d 9459193efa9ece68141e6d2d815890dec8d3da50 9d2acca1cb72eec0c4598fb3a7ddae9c226271e4,"brandonwillard labeled 2021-05-03 01:06:50,brandonwillard labeled 2021-05-03 01:06:50,brandonwillard assigned 2021-05-03 01:06:50,brandonwillard head_ref_force_pushed 2021-05-03 01:24:54,brandonwillard head_ref_force_pushed 2021-05-03 02:06:56,brandonwillard head_ref_force_pushed 2021-05-03 21:49:32,brandonwillard referenced 2021-05-03 22:54:08,brandonwillard merged 2021-05-03 22:54:09,brandonwillard closed 2021-05-03 22:54:09,brandonwillard head_ref_deleted 2021-05-03 22:54:13",codecov[bot] brandonwillard,1,True
199,392,Add Numba conversions for the `Op`s in `aesara.tensor.extra_ops`,brandonwillard,This PR adds Numba conversions for the `Op`s in `aesara.tensor.extra ops`.,important Numba,,brandonwillard,2021-05-05 18:37:18,2021-05-07 01:05:59,aesara/link/numba/dispatch.py tests/tensor/test_extra_ops.py tests/link/test_numba.py aesara/link/jax/dispatch.py aesara/tensor/extra_ops.py,ef6298136d7eaad93ca87f27785d23be0e038eff 4dc4059ab30595821908b2dafedc4bc5f0ad4ab2 ea092a2363d6d1d84f46d28163dc4e8caee405dc 28f4776748dd0ea25a06adba19a5ca167ea5cc52,"brandonwillard labeled 2021-05-05 18:37:18,brandonwillard labeled 2021-05-05 18:37:18,brandonwillard assigned 2021-05-05 18:37:19,brandonwillard head_ref_force_pushed 2021-05-05 20:33:17,brandonwillard head_ref_force_pushed 2021-05-06 03:31:49,brandonwillard ready_for_review 2021-05-06 03:32:02,brandonwillard renamed 2021-05-06 03:32:19,brandonwillard head_ref_force_pushed 2021-05-06 03:54:36,brandonwillard head_ref_force_pushed 2021-05-06 04:04:22,brandonwillard head_ref_force_pushed 2021-05-06 15:33:46,brandonwillard head_ref_force_pushed 2021-05-06 17:22:15,brandonwillard head_ref_force_pushed 2021-05-06 23:51:18,brandonwillard referenced 2021-05-07 01:05:59,brandonwillard merged 2021-05-07 01:05:59,brandonwillard closed 2021-05-07 01:05:59,brandonwillard head_ref_deleted 2021-05-07 01:06:02",codecov[bot] brandonwillard,2,True
200,393,Update `jax.jit` args,brandonwillard,This PR updates our calls to `jax.jit` per recent JAX updates that make `static_argnums` a keyword-only argument.,JAX,twiecki,brandonwillard,2021-05-05 19:17:30,2021-05-05 20:25:21,aesara/link/jax/linker.py aesara/link/jax/dispatch.py,66b9b1dda3c69f9284a0edcab69e392061c781d5 fd605b14b721186131140bc1e15cf7f9d9ee9b49,"brandonwillard labeled 2021-05-05 19:17:30,brandonwillard assigned 2021-05-05 19:17:31,brandonwillard referenced 2021-05-05 20:25:21,brandonwillard merged 2021-05-05 20:25:21,brandonwillard closed 2021-05-05 20:25:21,brandonwillard head_ref_deleted 2021-05-05 20:25:24",codecov[bot] twiecki brandonwillard,1,True
201,394,Add a generic Numba conversion function for `Op.perform` implementations,brandonwillard,"This PR employs Numba's object mode to enable the use of arbitrary `Op.perform`s when a custom Numba implementation isn't available.  

In other words, this addition brings all Python `Op` implementations into a JITed Numba function and effectively demonstrates how Numba's evaluation machinery can replace the Python + C system currently provided by Aesara. ",important Numba,,brandonwillard,2021-05-06 04:55:11,2021-05-06 15:25:56,tests/link/test_numba.py aesara/link/numba/dispatch.py,1de7b25143ec4181e61ffcc0db6adcf384c488eb,"brandonwillard labeled 2021-05-06 04:55:11,brandonwillard labeled 2021-05-06 04:55:11,brandonwillard assigned 2021-05-06 04:55:12,brandonwillard referenced 2021-05-06 15:25:56,brandonwillard merged 2021-05-06 15:25:56,brandonwillard closed 2021-05-06 15:25:56,brandonwillard head_ref_deleted 2021-05-06 15:25:59,brandonwillard connected 2021-05-19 23:16:13",codecov[bot] twiecki brandonwillard,4,True
202,396,Add missing f-string in configparser exception,michaelosthege,"The exception is relevant for all config variables, but was missing the `f` on its f-string.",bug,twiecki,michaelosthege,2021-05-06 11:22:47,2021-05-06 12:37:37,aesara/configparser.py,423127fdbc87dbb0b0a236891c35221d731c15b6,"michaelosthege labeled 2021-05-06 11:22:47,michaelosthege review_requested 2021-05-06 11:22:47,michaelosthege assigned 2021-05-06 11:22:47,michaelosthege referenced 2021-05-06 12:37:37,michaelosthege merged 2021-05-06 12:37:37,michaelosthege closed 2021-05-06 12:37:37,michaelosthege head_ref_deleted 2021-05-06 12:37:40",codecov[bot] michaelosthege twiecki,1,True
203,397,Add Numba conversions for math `Op`s,brandonwillard,This PR adds Numba conversions for some basic math `Op`s.,important Numba,twiecki,brandonwillard,2021-05-07 01:09:09,2021-05-10 00:26:47,tests/gpuarray/test_linalg.py aesara/link/numba/dispatch.py tests/link/test_numba.py aesara/link/jax/dispatch.py aesara/tensor/nlinalg.py aesara/gpuarray/opt.py,ec322da243f9e77ddf43ee1a726b0cae3584e427 69a97c5fdf6ee63bdaad24a2f7061e7c288d361a cd3a9694d033722142fc524014cbca904ed1b095 f219d0cf034f531a0f5ee5cd2601045d9a0972f2,"brandonwillard labeled 2021-05-07 01:09:09,brandonwillard labeled 2021-05-07 01:09:09,brandonwillard assigned 2021-05-07 01:09:09,brandonwillard head_ref_force_pushed 2021-05-07 01:10:15,brandonwillard head_ref_force_pushed 2021-05-07 02:25:33,brandonwillard head_ref_force_pushed 2021-05-07 04:58:59,brandonwillard head_ref_force_pushed 2021-05-07 18:33:08,brandonwillard head_ref_force_pushed 2021-05-07 18:36:48,brandonwillard head_ref_force_pushed 2021-05-08 21:01:05,brandonwillard head_ref_force_pushed 2021-05-08 21:10:45,brandonwillard head_ref_force_pushed 2021-05-08 21:27:34,brandonwillard head_ref_force_pushed 2021-05-09 19:58:43,brandonwillard head_ref_force_pushed 2021-05-09 20:19:43,brandonwillard head_ref_force_pushed 2021-05-09 20:35:45,brandonwillard head_ref_force_pushed 2021-05-09 20:53:34,brandonwillard head_ref_force_pushed 2021-05-09 21:04:59,brandonwillard head_ref_force_pushed 2021-05-09 21:05:13,brandonwillard ready_for_review 2021-05-09 21:15:39,brandonwillard head_ref_force_pushed 2021-05-09 21:47:45,brandonwillard head_ref_force_pushed 2021-05-09 23:22:44,brandonwillard referenced 2021-05-10 00:26:47,brandonwillard merged 2021-05-10 00:26:47,brandonwillard closed 2021-05-10 00:26:48,brandonwillard head_ref_deleted 2021-05-10 00:26:53",codecov[bot] twiecki brandonwillard,10,True
204,398,Move Sigmoid and Softplus from `tt.nnet.sigm`,ricardoV94,"This PR moves the `Sigmoid` and `Softplus` scalar and tensor ops (and opts) from the `tensor.nnet` module into the ""expected"" places. It also adds an alias `tt.expit` to `tt.sigmoid` which is the name used in `scipy`. Closes #378

I tried to split the PR in commits that are easy to review (i.e., code changes separate from file moving).

Some decisions that might be debatable:
1. I left the `UltraFastSigmoid` and `HardSigmoid` special ops (and opts) untouched in `tensor.nnet.sigm.py`, do we want to make these first class ops as well?
2. I replaced the custom `Sigmoid` python implementation with `scipy.special.expit`. The Python version was also out of sync  with the c-code following #32. It seems there was a general struggle with `scipy.special` in the theano codebase, so I am not sure if this could create issues... 
3. I removed the function to generate the docs plots from `Sigmoid`. If anything the function should be within the specialized ops, no? It might break the docs however: https://aesara.readthedocs.io/en/latest/library/tensor/nnet/basic.html?highlight=sigmoid#aesara.tensor.nnet.basic.sigmoid 
4. I tweaked the jax translation of the `Softplus` to be more in line with python/code following #262 
5. Added inplace version of the `Softplus` op and tests for it.

Still missing: 
1. Deprecation warning. Not sure how this should be done.
2. Any changes needed for the documentation, or is it pretty much automated?

***

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,twiecki,,2021-05-07 15:16:19,2021-05-09 11:07:59,aesara/tensor/nnet/__init__.py aesara/tensor/math_opt.py tests/tensor/test_blas.py tests/compile/test_builders.py tests/scan/test_opt.py tests/link/test_numba.py tests/d3viz/models.py aesara/tensor/inplace.py aesara/tensor/math.py tests/test_gradient.py tests/tensor/nnet/test_basic.py tests/tensor/nnet/test_sigm.py aesara/compile/profiling.py aesara/tensor/basic_opt.py tests/tensor/test_math.py tests/gpuarray/rnn_support.py tests/tensor/test_basic_opt.py tests/tensor/test_math_opt.py tests/compile/test_misc.py aesara/tensor/nnet/basic.py aesara/scalar/basic_scipy.py tests/tensor/test_basic_scipy.py aesara/tensor/nnet/sigm.py tests/scan/test_basic.py tests/link/test_jax.py aesara/link/jax/dispatch.py aesara/sparse/basic.py,7aa6e184ff0fb5ce6f45c51ffc374816482c1dc5 048660ccae0fea81450093d1ba8f158fcf8b732b 378d39399081330cc3b8ab135d3a5a8d7c78ee45 cbad5f8ed76abc5f575ed2802dd9a57bb3ef0b24 0fc8dae7bce94f19f92c44a2a14b20be5a09b848 840dbb15271612c3beedbeb532b9b71508764592,"ricardoV94 head_ref_force_pushed 2021-05-07 16:06:02,twiecki referenced 2021-05-09 11:07:59,twiecki merged 2021-05-09 11:07:59,twiecki closed 2021-05-09 11:07:59,ricardoV94 mentioned 2021-05-09 11:08:13,ricardoV94 subscribed 2021-05-09 11:08:13,ricardoV94 head_ref_deleted 2021-05-09 14:43:07",codecov[bot] ricardoV94 twiecki,3,True
205,403,Added Numba RV conversion,kc611,"
From what I gather :

 `_helperlib` stores a seperate state `ptr` value for Numba library. So during `RandomState` typification, we can sync this internal Numba state with Numpy's `RandomVariable` state. (However I'm not too sure that this will work every time.).

As for RandomVariable, it would be as simple as jitting the original Numpy function, as Numba has direct support for most of Numpy's `.random` methods. However Numba's implementations don't support `size` arguments. A simple way to overcome this would be looping over an empty array. However that's inefficient and I'm sure there are other better ways to do that. (Suggestions?)",important Numba,twiecki brandonwillard,,2021-05-11 12:20:40,2021-06-25 22:52:39,aesara/link/numba/linker.py tests/link/test_numba.py aesara/link/numba/dispatch.py,fcf784ee071f693d679be9e13d5a8c1adda803ca,"kc611 connected 2021-05-11 12:21:09,kc611 review_requested 2021-05-11 12:23:01,kc611 renamed 2021-05-12 13:59:28,kc611 head_ref_force_pushed 2021-05-15 08:35:29,kc611 head_ref_force_pushed 2021-05-15 08:38:33,kc611 head_ref_force_pushed 2021-05-15 09:00:02,kc611 mentioned 2021-05-15 14:15:12,kc611 subscribed 2021-05-15 14:15:12,kc611 head_ref_force_pushed 2021-05-16 04:46:06,brandonwillard head_ref_force_pushed 2021-05-16 19:16:24,brandonwillard head_ref_force_pushed 2021-05-16 19:43:46,brandonwillard labeled 2021-05-23 02:40:52,brandonwillard labeled 2021-05-23 02:40:52,kc611 head_ref_force_pushed 2021-05-29 14:17:49,kc611 head_ref_force_pushed 2021-06-04 10:12:31,kc611 ready_for_review 2021-06-04 10:46:19,kc611 convert_to_draft 2021-06-04 10:49:19,brandonwillard head_ref_force_pushed 2021-06-04 22:32:20,brandonwillard head_ref_force_pushed 2021-06-04 22:45:39,brandonwillard head_ref_force_pushed 2021-06-04 22:57:54,brandonwillard head_ref_force_pushed 2021-06-04 23:03:42,brandonwillard head_ref_force_pushed 2021-06-12 00:06:22,brandonwillard head_ref_force_pushed 2021-06-12 00:17:28,brandonwillard head_ref_force_pushed 2021-06-12 00:25:58,kc611 ready_for_review 2021-06-17 17:32:58,brandonwillard head_ref_force_pushed 2021-06-25 21:27:13,brandonwillard referenced 2021-06-25 22:52:38,brandonwillard merged 2021-06-25 22:52:38,brandonwillard closed 2021-06-25 22:52:39",codecov[bot] kc611 twiecki brandonwillard,37,True
206,405,Create a Numba compilation mode,brandonwillard,"This PR creates a Numba compilation mode that can be used with `aesara.function` (i.e. `aesara.function(..., mode=""NUMBA"")`).",important Numba,,,2021-05-11 22:23:34,2021-05-12 00:00:38,aesara/link/numba/dispatch.py aesara/link/numba/__init__.py aesara/link/numba/linker.py aesara/configdefaults.py aesara/compile/__init__.py aesara/compile/mode.py tests/link/test_numba.py README.rst,3419169a19b39e0a6496451e2f216ad1f16abea0 eefef855ff4a8d5ac38be7dd603027d00dc1422a 4186f705fa18832b451828cf3bd7db6240205e79 758f94d20cbf2f6e5ff42abf725fca99623ebc97,"brandonwillard head_ref_force_pushed 2021-05-11 22:27:55,brandonwillard labeled 2021-05-11 22:28:37,brandonwillard labeled 2021-05-11 22:28:37,brandonwillard head_ref_force_pushed 2021-05-11 22:47:46,brandonwillard head_ref_force_pushed 2021-05-11 22:55:56,brandonwillard referenced 2021-05-12 00:00:38,brandonwillard merged 2021-05-12 00:00:38,brandonwillard closed 2021-05-12 00:00:38,brandonwillard head_ref_deleted 2021-05-12 00:00:41",codecov[bot] brandonwillard,1,True
207,408,Explicitly add gcc dll directory on Python 3.8+ on Windows,hectormz,"This PR addresses a change in how DLLs in Python 3.8+ on Windows are resolved (Non-Anaconda). DLL folders need to be explicitly specified/added.

This PR closes #407

There may be a better place for this chunk of code to be put, but this solves the errors for me.",,twiecki,,2021-05-13 03:59:08,2021-05-13 07:51:17,aesara/link/c/cmodule.py,9f2aa0bb53d4c8a1456f35265c86a81bbe917af0,"twiecki referenced 2021-05-13 07:51:16,twiecki merged 2021-05-13 07:51:16,twiecki closed 2021-05-13 07:51:17,hectormz mentioned 2021-05-13 07:51:23,hectormz subscribed 2021-05-13 07:51:23,hectormz head_ref_deleted 2021-05-17 17:02:48",codecov[bot] twiecki hectormz,2,True
208,410,Fixing a typo in a page heading,mrtommyb,"Changed Developper -> Developer in scan documentation.
",,twiecki,,2021-05-13 14:24:58,2021-05-13 14:54:22,doc/extending/scan.txt,f89ec456b6c047be743ec655f2d041eb62e5e1c1 3593d58aa714e8d471f9c2f13aa4051e0f8a2053,"twiecki referenced 2021-05-13 14:54:22,twiecki merged 2021-05-13 14:54:22,twiecki closed 2021-05-13 14:54:22,mrtommyb mentioned 2021-05-13 14:54:28,mrtommyb subscribed 2021-05-13 14:54:28",mrtommyb twiecki,2,True
209,413,Simplify `Reshape`'s`tuple` creation during Numba conversion,brandonwillard,This PR simplifies the Numba `Reshape` conversion by using `to_fixed_tuple` instead of manually constructing a `tuple` using `create_tuple_creator`.,enhancement Numba,twiecki,brandonwillard,2021-05-15 18:59:20,2021-05-15 22:17:39,tests/link/test_numba.py aesara/link/numba/dispatch.py,3fd8d7caa71352ebeb603edc842cf0d30338a25b,"brandonwillard labeled 2021-05-15 18:59:20,brandonwillard labeled 2021-05-15 18:59:20,brandonwillard assigned 2021-05-15 18:59:20,brandonwillard head_ref_force_pushed 2021-05-15 19:20:20,brandonwillard referenced 2021-05-15 22:17:39,brandonwillard merged 2021-05-15 22:17:39,brandonwillard closed 2021-05-15 22:17:39,brandonwillard head_ref_deleted 2021-05-15 22:17:41",codecov[bot] twiecki brandonwillard,1,True
210,414,Added ChiSquaredRV (r.f. PyMC3 PR #4695),larryshamalama,"This PR adds a ChiSquaredRV class by addressing the ongoing refactoring of PyMC3 distributions [here](https://github.com/pymc-devs/pymc3/issues/4686). This PR is also a follow-up to [this](https://github.com/pymc-devs/pymc3/pull/4695) PR.

Still in the process of learning about the codebase, so please let me know if anything is wrong!",,ricardoV94 twiecki,,2021-05-16 16:31:17,2021-05-18 09:46:33,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,8a2339fe4d3ef4f891966ba54d4929ba831a376f 4aebb966d94cf07dd3bf567c91efcd13bb73ddb0 530ee2636f6ad6beb52d5a1a4aa227a0e9880603,"ricardoV94 referenced 2021-05-18 09:46:33,ricardoV94 merged 2021-05-18 09:46:33,ricardoV94 closed 2021-05-18 09:46:33,larryshamalama mentioned 2021-05-18 09:48:47,larryshamalama subscribed 2021-05-18 09:48:47,larryshamalama head_ref_deleted 2021-05-18 12:22:10",codecov[bot] larryshamalama ricardoV94 twiecki,3,True
211,417,add _str_impl and _repr_impl to Variable,Spaak,"See the discussion [here](https://github.com/pymc-devs/pymc3/pull/4692#issuecomment-842969904); this PR will allow patching of `str(var)` and `repr(var)` by children/instances of `Variable` without having to dynamically patch the type.
",,brandonwillard,,2021-05-18 09:24:59,2021-05-20 08:23:06,aesara/graph/basic.py,97a7a5ec0a76a357307222719fb3655376de16b9 9d250f8d313b719448a38971f97816a52804f5f0,"twiecki mentioned 2021-05-19 09:10:10,twiecki subscribed 2021-05-19 09:10:10,brandonwillard mentioned 2021-05-19 09:10:10,brandonwillard subscribed 2021-05-19 09:10:10,twiecki mentioned 2021-05-20 00:06:49,twiecki subscribed 2021-05-20 00:06:49,Spaak mentioned 2021-05-20 00:06:49,Spaak subscribed 2021-05-20 00:06:49,Spaak closed 2021-05-20 08:23:06,brandonwillard mentioned 2021-05-20 08:23:06,brandonwillard subscribed 2021-05-20 08:23:06",codecov[bot] brandonwillard michaelosthege twiecki Spaak,7,False
212,418,Fix `lift_rv_shapes` when `size` is empty and parameters are broadcasted,brandonwillard,This PR adds a fix for `lift_rv_shapes` when `size` is empty and parameters are broadcasted.,,,brandonwillard,2021-05-18 17:32:16,2021-05-18 19:55:41,aesara/tensor/random/opt.py aesara/tensor/random/utils.py aesara/tensor/random/op.py tests/tensor/random/test_opt.py,b00efbdc5490e243aaa56b3ad26c906e48c31f89 3908202f94639ef61b996705526cf7dedd73463a,"brandonwillard assigned 2021-05-18 17:32:17,brandonwillard referenced 2021-05-18 19:55:41,brandonwillard merged 2021-05-18 19:55:41,brandonwillard closed 2021-05-18 19:55:41,brandonwillard head_ref_deleted 2021-05-18 19:55:44",codecov[bot] brandonwillard,1,True
213,419,Fix `AttributeError` in Cython version of `Scan`'s exception handling,brandonwillard,This PR fixes an `AttributeError` in the exception handling of `Scan`'s Cython implementation.,bug,,brandonwillard,2021-05-19 01:16:23,2021-05-19 02:37:28,aesara/scan/scan_perform_ext.py aesara/scan/scan_perform.pyx aesara/scan/c_code/scan_perform.c tests/scan/test_basic.py,f448f1175fab9fa4fb3b82b5904294d038719488,"brandonwillard labeled 2021-05-19 01:16:23,brandonwillard assigned 2021-05-19 01:16:23,brandonwillard referenced 2021-05-19 02:37:28,brandonwillard merged 2021-05-19 02:37:28,brandonwillard closed 2021-05-19 02:37:28,brandonwillard head_ref_deleted 2021-05-19 02:37:34",codecov[bot] brandonwillard,1,True
214,420,Introduce Generator in RandomVariable,kc611,This PR will serve as the entry point of Numpy's new `Generator` API for use in `RandomVariable` class.,important,brandonwillard,kc611,2021-05-19 13:30:05,2021-06-25 16:47:04,tests/gpuarray/test_nnet.py tests/d3viz/models.py setup.py tests/sparse/test_basic.py tests/tensor/test_xlogx.py tests/tensor/signal/test_conv.py tests/tensor/test_mlp.py tests/test_rop.py tests/tensor/test_basic_opt.py tests/typed_list/test_basic.py tests/tensor/utils.py tests/tensor/test_blas_c.py tests/tensor/test_shape.py tests/gpuarray/test_basic_ops.py tests/tensor/nnet/test_batchnorm.py tests/tensor/nnet/test_blocksparse.py tests/unittest_tools.py tests/compile/function/test_pfunc.py aesara/tensor/random/type.py tests/gpuarray/test_linalg.py tests/d3viz/test_d3viz.py tests/gpuarray/test_pool.py aesara/tensor/random/var.py tests/tensor/random/test_utils.py tests/tensor/test_sort.py tests/tensor/nnet/test_abstract_conv.py aesara/link/jax/dispatch.py tests/gpuarray/test_rng_mrg.py aesara/tensor/random/op.py tests/gpuarray/test_opt.py tests/test_gradient.py tests/tensor/nnet/speed_test_conv.py tests/gpuarray/test_dnn.py tests/typed_list/test_opt.py tests/gpuarray/test_scan.py tests/tensor/test_math_opt.py tests/compile/test_misc.py aesara/tensor/random/basic.py tests/scan/test_basic.py aesara/tensor/random/utils.py tests/tensor/test_nlinalg.py tests/tensor/test_subtensor.py tests/link/test_jax.py tests/sparse/sandbox/test_sp.py tests/link/test_numba.py tests/tensor/test_elemwise.py tests/sandbox/test_rng_mrg.py aesara/gradient.py tests/tensor/nnet/test_basic.py tests/tensor/test_math.py tests/d3viz/test_formatting.py tests/sandbox/linalg/test_linalg.py tests/typed_list/test_type.py tests/compile/test_debugmode.py aesara/compile/nanguardmode.py tests/sandbox/test_minimal.py tests/tensor/random/test_opt.py tests/tensor/random/test_basic.py tests/tensor/test_slinalg.py tests/tensor/test_blas.py tests/gpuarray/test_blocksparse.py tests/scan/test_opt.py tests/tensor/test_basic.py tests/diverse_tests.py tests/tensor/test_opt_uncanonicalize.py tests/tensor/test_complex.py aesara/link/jax/linker.py tests/tensor/signal/test_pool.py aesara/compile/monitormode.py aesara/sandbox/rng_mrg.py tests/tensor/random/test_type.py tests/tensor/test_extra_ops.py tests/tensor/test_sharedvar.py tests/gpuarray/check_dnn_conv.py tests/test_ifelse.py aesara/tensor/basic.py tests/tensor/random/test_var.py tests/tensor/test_fourier.py tests/tensor/test_math_scipy.py,e2af2b94836c6c24c355f2cde95b2440958580aa 08597552beb4db9799abfd51035acbd4c805edf7 438a536256254927a797d50c09098efce79bfdac 38d3e047cb92a1fcf1be8e9b0b3507a61b21c4d3 34bea48a030fe682d94a155fa1ff25ff1d897cad 1e43902b1b0fa82467785a0b0faac905a4bf5564,"kc611 assigned 2021-05-19 16:19:06,brandonwillard labeled 2021-05-19 16:19:11,brandonwillard connected 2021-05-19 16:24:10,kc611 head_ref_force_pushed 2021-05-26 17:32:20,kc611 head_ref_force_pushed 2021-05-26 17:40:17,kc611 head_ref_force_pushed 2021-05-26 17:44:17,kc611 head_ref_force_pushed 2021-05-27 13:34:25,kc611 head_ref_force_pushed 2021-05-29 10:04:37,brandonwillard mentioned 2021-05-29 14:07:07,brandonwillard subscribed 2021-05-29 14:07:07,kc611 head_ref_force_pushed 2021-05-30 12:01:33,kc611 review_requested 2021-06-01 11:47:57,kc611 head_ref_force_pushed 2021-06-02 17:00:23,kc611 head_ref_force_pushed 2021-06-02 17:04:13,brandonwillard head_ref_force_pushed 2021-06-04 20:26:58,brandonwillard head_ref_force_pushed 2021-06-04 20:54:54,kc611 head_ref_force_pushed 2021-06-06 07:32:48,kc611 ready_for_review 2021-06-06 19:21:36,kc611 review_requested 2021-06-06 19:21:46,brandonwillard head_ref_force_pushed 2021-06-20 17:47:58,brandonwillard head_ref_force_pushed 2021-06-20 18:03:42,brandonwillard head_ref_force_pushed 2021-06-20 18:31:02,brandonwillard head_ref_force_pushed 2021-06-20 18:50:29,brandonwillard head_ref_force_pushed 2021-06-20 22:33:35,brandonwillard head_ref_force_pushed 2021-06-20 22:36:21,brandonwillard head_ref_force_pushed 2021-06-21 00:28:13,brandonwillard review_dismissed 2021-06-21 23:40:25,brandonwillard head_ref_force_pushed 2021-06-21 23:40:25,brandonwillard head_ref_force_pushed 2021-06-23 17:59:36,kc611 mentioned 2021-06-24 18:07:24,kc611 subscribed 2021-06-24 18:07:24,brandonwillard head_ref_force_pushed 2021-06-25 01:54:04,brandonwillard head_ref_force_pushed 2021-06-25 05:14:41,brandonwillard referenced 2021-06-25 16:47:04,brandonwillard merged 2021-06-25 16:47:04,brandonwillard closed 2021-06-25 16:47:04",codecov[bot] kc611 brandonwillard,22,True
215,422,Revert `FunctionGraph` `Variable` replacement warning,brandonwillard,Closes https://github.com/pymc-devs/aesara/issues/338,enhancement,,brandonwillard,2021-05-19 23:13:16,2021-05-20 00:07:15,aesara/graph/fg.py,8d06c933dd2b645d38c5ebba10d59914f7b0ed1f,"brandonwillard labeled 2021-05-19 23:13:16,brandonwillard assigned 2021-05-19 23:13:16,brandonwillard referenced 2021-05-20 00:07:15,brandonwillard merged 2021-05-20 00:07:15,brandonwillard closed 2021-05-20 00:07:15,brandonwillard head_ref_deleted 2021-05-20 00:07:18",codecov[bot] brandonwillard,1,True
216,429,Fix typos in codebase,hectormz,"This PR fixes typos in `aesara` with the help of [codespell](https://github.com/codespell-project/codespell).

There was no Issue preceding this PR. There are may be other typos still in the `aesara` that `codespell` didn't pick up, or I was unsure of.

Most typos are in comments and docs, but there are a few in variable names",documentation,michaelosthege ColCarroll,,2021-05-21 00:35:36,2021-06-07 08:21:59,aesara/sandbox/multinomial.py doc/extending/jax_op.rst aesara/tensor/shape.py aesara/link/c/cmodule.py tests/sparse/test_basic.py doc/faq.rst doc/extending/extending_aesara.rst tests/tensor/test_mlp.py doc/extending/extending_aesara_c.rst aesara/graph/fg.py tests/test_rop.py aesara/tensor/slinalg.py aesara/compile/profiling.py doc/extending/cop.rst aesara/tensor/extra_ops.py aesara/compile/function/types.py aesara/scan/opt.py doc/extending/unittest.rst aesara/tensor/blas.py aesara/printing.py tests/gpuarray/test_basic_ops.py tests/tensor/nnet/test_blocksparse.py aesara/gpuarray/kernel_codegen.py aesara/scalar/basic.py aesara/scan/c_code/scan_perform.c doc/extending/scan.rst tests/compile/function/test_pfunc.py tests/tensor/test_utils.py aesara/graph/params_type.py tests/tensor/nnet/test_neighbours.py aesara/tensor/fourier.py tests/graph/test_types.py aesara/sparse/basic.py doc/index.rst versioneer.py doc/pylintrc aesara/misc/check_blas.py aesara/graph/features.py aesara/tensor/var.py tests/gpuarray/test_opt.py aesara/tensor/type.py doc/dev_start_guide.rst tests/graph/test_op.py aesara/graph/opt.py tests/gpuarray/test_dnn.py tests/test_gradient.py aesara/compile/ops.py aesara/link/c/interface.py tests/compile/function/test_types.py tests/gpuarray/test_scan.py aesara/tensor/basic_opt.py aesara/tensor/nnet/c_code/corr_gemm.c aesara/tensor/nnet/conv.py aesara/tensor/sort.py doc/extending/using_params.rst aesara/gpuarray/c_code/dnn_rnn_fwd.c tests/tensor/test_gc.py tests/scan/test_basic.py tests/tensor/test_nlinalg.py aesara/sparse/sandbox/sp2.py aesara/tensor/nnet/corr3d.py aesara/tensor/nnet/opt.py tests/gpuarray/test_abstractconv.py aesara/gpuarray/subtensor.py doc/extending/op.rst aesara/configparser.py doc/extending/ctype.rst aesara/graph/destroyhandler.py aesara/ifelse.py aesara/gpuarray/dnn.py doc/library/tensor/nnet/ctc.rst aesara/gradient.py tests/sparse/test_utils.py doc/extending/type.rst aesara/gpuarray/elemwise.py aesara/tensor/math.py aesara/gpuarray/c_code/dnn_rnn_gw.c aesara/scan/scan_perform.pyx tests/gpuarray/test_reduction.py aesara/link/basic.py tests/typed_list/test_type.py aesara/scan/op.py aesara/tensor/nnet/basic.py aesara/tensor/nnet/batchnorm.py aesara/tensor/type_other.py aesara/compile/debugmode.py aesara/d3viz/formatting.py aesara/_version.py aesara/gpuarray/fft.py aesara/sparse/sandbox/sp.py aesara/gpuarray/basic_ops.py doc/tutorial/nan_tutorial.rst aesara/tensor/nnet/abstract_conv.py tests/tensor/test_slinalg.py aesara/link/c/basic.py aesara/tensor/nnet/ctc.py aesara/tensor/math_opt.py aesara/scan/basic.py aesara/tensor/elemwise_cgen.py tests/gpuarray/test_blocksparse.py aesara/scan/__init__.py tests/scan/test_opt.py aesara/tensor/fft.py aesara/graph/type.py tests/tensor/test_basic.py aesara/gpuarray/blas.py aesara/sandbox/linalg/ops.py doc/extending/inplace.rst aesara/link/vm.py aesara/tensor/nnet/corr.py aesara/typed_list/type.py aesara/graph/sandbox/typeattr.txt aesara/tensor/nnet/c_code/corr3d_gemm.c aesara/tensor/nnet/neighbours.py tests/link/test_vm.py aesara/link/c/c_code/lazylinker_c.c aesara/gpuarray/c_code/dnn_rnn_gi.c aesara/configdefaults.py aesara/d3viz/js/d3viz.js aesara/compile/function/pfunc.py tests/tensor/test_sharedvar.py aesara/gpuarray/type.py aesara/scan/checkpoints.py doc/extending/optimization.rst aesara/tensor/basic.py CONTRIBUTING.md doc/tutorial/debug_faq.rst aesara/graph/basic.py tests/gpuarray/test_misc.py doc/library/d3viz/examples/d3viz/js/d3viz.js aesara/misc/ordered_set.py aesara/tensor/blas_c.py tests/tensor/nnet/test_conv.py doc/sandbox/how_to_make_ops.rst tests/tensor/test_math_scipy.py,581fedaf9afe0c9a70168582e167cf2ab557fce2 863669d925b5ee788047d36f2e552ef0265b28bf 71b33c41dbfdec894c6ea2301a8ffad7c17cb2dc c5653d81b05355e24e1a2ed6bf6e21eaef95e742 25cdac99d9ec74c359d203dbb14c7d8e229a68a9 0e93da798b0a0612f1c4079dfc1ee1d37b63e980 18f55c742d6ee7bb13a3a39c5e6e1b6a8b8eda2e,"hectormz review_dismissed 2021-05-21 00:58:17,hectormz review_dismissed 2021-05-26 13:45:28,hectormz head_ref_force_pushed 2021-05-26 13:45:28,ColCarroll mentioned 2021-05-26 13:46:56,ColCarroll subscribed 2021-05-26 13:46:56,brandonwillard head_ref_force_pushed 2021-06-06 22:10:40,brandonwillard head_ref_force_pushed 2021-06-06 22:23:45,brandonwillard labeled 2021-06-06 22:28:30,brandonwillard mentioned 2021-06-06 23:19:47,brandonwillard subscribed 2021-06-06 23:19:48,twiecki referenced 2021-06-07 08:21:59,twiecki merged 2021-06-07 08:21:59,twiecki closed 2021-06-07 08:21:59,hectormz mentioned 2021-06-07 08:22:06,hectormz subscribed 2021-06-07 08:22:06,brandonwillard mentioned 2021-06-07 09:26:20,brandonwillard subscribed 2021-06-07 09:26:20,hectormz head_ref_deleted 2022-05-05 01:03:41",codecov[bot] brandonwillard ColCarroll michaelosthege twiecki hectormz,9,True
217,433,Add `atleast_Nd` and `expand_dims` functions,brandonwillard,This PR adds some simple shape-related functions that mirror NumPy's.,enhancement,,brandonwillard,2021-05-22 20:19:45,2021-05-23 02:39:15,aesara/tensor/basic.py tests/tensor/test_extra_ops.py tests/tensor/test_basic.py aesara/tensor/extra_ops.py aesara/tensor/__init__.py,5b5174cde8172af0125f64489678a20baab97cbe bd689237edb1e27f1869b756d1df0355b5ef4f25,"brandonwillard labeled 2021-05-22 20:19:45,brandonwillard assigned 2021-05-22 20:19:45,brandonwillard head_ref_force_pushed 2021-05-22 20:26:10,brandonwillard head_ref_force_pushed 2021-05-22 22:28:24,brandonwillard head_ref_force_pushed 2021-05-23 01:08:59,brandonwillard referenced 2021-05-23 02:39:15,brandonwillard merged 2021-05-23 02:39:15,brandonwillard closed 2021-05-23 02:39:15,brandonwillard head_ref_deleted 2021-05-23 02:39:17",codecov[bot] brandonwillard,1,True
218,434,Minor optimization updates,brandonwillard,This PR provides some minor updates to the optimization modules and utilities.,enhancement graph rewriting,,brandonwillard,2021-05-22 21:06:31,2021-05-22 23:42:02,aesara/graph/features.py aesara/graph/destroyhandler.py aesara/ifelse.py aesara/graph/type.py doc/library/graph/index.txt aesara/graph/opt.py tests/graph/test_opt_utils.py setup.cfg aesara/graph/fg.py aesara/graph/toolbox.py aesara/tensor/basic_opt.py aesara/gpuarray/opt.py aesara/compile/function/types.py tests/tensor/test_math_opt.py aesara/link/basic.py aesara/scan/opt.py aesara/scan/op.py tests/compile/test_mode.py aesara/tensor/blas.py aesara/compile/debugmode.py doc/extending/optimization.txt tests/graph/test_destroyhandler.py tests/graph/test_features.py doc/library/graph/fgraph.txt doc/library/graph/features.txt tests/compile/test_debugmode.py tests/tensor/test_subtensor.py aesara/graph/op.py aesara/graph/opt_utils.py,852ce031c500ad18771dfebb14154541ea4a4243 278e08749922c1b633f5545d6068ad585d9a6641 0132926b21b7d084dd270ff0f2efd91f991747aa 251f82e0ea3fde79ee51f01f23436f709a1a79f8,"brandonwillard labeled 2021-05-22 21:06:31,brandonwillard labeled 2021-05-22 21:06:32,brandonwillard assigned 2021-05-22 21:06:32,brandonwillard head_ref_force_pushed 2021-05-22 21:09:46,brandonwillard referenced 2021-05-22 23:42:02,brandonwillard merged 2021-05-22 23:42:02,brandonwillard closed 2021-05-22 23:42:02,brandonwillard head_ref_deleted 2021-05-22 23:42:10",codecov[bot] brandonwillard,1,True
219,435,Misc. `aesara.graph.optdb` updates,brandonwillard,This PR renames `DB` and `Query` to `OptimizationDB` and `OptimizationQuery` and provides other updates to `aesara.graph.optdb`.,enhancement refactor,twiecki,brandonwillard,2021-05-23 01:05:07,2021-05-23 23:18:59,tests/graph/test_optdb.py tests/tensor/test_extra_ops.py doc/extending/optimization.txt aesara/compile/mode.py tests/link/test_jax.py tests/link/test_numba.py tests/tensor/random/test_utils.py aesara/graph/opt_utils.py tests/tensor/random/test_opt.py tests/tensor/test_math_opt.py tests/tensor/test_basic_opt.py aesara/graph/optdb.py aesara/gpuarray/optdb.py,ad66349afd069daf05c789ed906d932ba15b0e1e cd60e9d87fd98194375e18e97cde5efd9e74c841,"brandonwillard labeled 2021-05-23 01:05:07,brandonwillard labeled 2021-05-23 01:05:07,brandonwillard assigned 2021-05-23 01:05:07,brandonwillard head_ref_force_pushed 2021-05-23 01:25:20,brandonwillard head_ref_force_pushed 2021-05-23 20:01:58,brandonwillard review_dismissed 2021-05-23 21:27:44,brandonwillard head_ref_force_pushed 2021-05-23 21:27:44,brandonwillard referenced 2021-05-23 23:18:59,brandonwillard merged 2021-05-23 23:18:59,brandonwillard closed 2021-05-23 23:18:59,brandonwillard head_ref_deleted 2021-05-23 23:19:15",codecov[bot] twiecki brandonwillard,1,True
220,436,Misc. `aesara.tensor.random` updates,brandonwillard,"This PR provides multiple `aesara.tensor.random` updates (e.g. removes the unnecessary `Observed` `Op`, exposes `RandomVariable`s via `aesara.tensor.random`, etc.).  It also allows the use of `numpy.dtype` instances (e.g. `numpy.int64`) as `dtype` arguments during tensor and scalar construction, as well as `aesara.tensor.cast`.",enhancement,ricardoV94,brandonwillard,2021-05-23 21:20:27,2021-05-23 23:25:33,aesara/tensor/basic.py aesara/link/numba/dispatch.py tests/scalar/test_type.py tests/tensor/test_type.py aesara/tensor/type.py aesara/tensor/random/__init__.py tests/tensor/test_basic.py aesara/tensor/random/op.py aesara/tensor/random/basic.py aesara/scalar/basic.py tests/tensor/random/test_op.py aesara/tensor/__init__.py,ccede9b34b1b1a6d73c417b456da82c8fb2618d1 de523f7b65fa5fb251f5cd1b99450a208d6dc48f 6f69844ec2f66af71b40babc75c60c0b6d4688b2 eea61268afde6f3dee5a1bf9ac6639fc40ebd96b 9903bd42c79b11d167af92ff79b6031c0e1b1b8f,"brandonwillard labeled 2021-05-23 21:20:27,brandonwillard assigned 2021-05-23 21:20:27,brandonwillard connected 2021-05-23 21:30:04,brandonwillard connected 2021-05-23 21:30:15,brandonwillard review_dismissed 2021-05-23 22:17:22,brandonwillard referenced 2021-05-23 23:25:33,brandonwillard merged 2021-05-23 23:25:33,brandonwillard closed 2021-05-23 23:25:33,brandonwillard head_ref_deleted 2021-05-23 23:25:37",codecov[bot] ricardoV94 brandonwillard,2,True
221,437,Misc. doc updates,brandonwillard,This PR renames `.txt` documentation files to `.rst` and performs some other minor updates.,documentation enhancement,ricardoV94,brandonwillard,2021-05-23 21:53:17,2021-05-24 18:37:43,doc/internal/dev_start_guide.rst doc/extending/jax_op.rst doc/conf.py doc/library/tensor/signal/conv.rst doc/tutorial/numpy.rst doc/library/graph/type.rst doc/library/sparse/sandbox.rst doc/library/tensor/nnet/neighbours.rst doc/library/gpuarray/ctc.rst doc/tutorial/profiling.rst doc/faq.rst doc/library/tensor/random/basic.rst doc/citation.rst doc/extending/extending_aesara.rst doc/sandbox/performance.rst doc/extending/extending_aesara_c.rst doc/library/compile/index.rst doc/install.rst doc/extending/cop.rst doc/tutorial/sparse.rst doc/tutorial/extending_aesara.rst doc/tutorial/examples.rst doc/extending/unittest.rst doc/requirements.rst doc/extending/extending_faq.rst doc/tutorial/gradients.rst doc/library/compile/opfromgraph.rst doc/library/index.rst doc/library/printing.rst doc/library/typed_list.rst doc/library/tensor/signal/index.rst doc/library/graph/op.rst doc/sandbox/index.rst doc/sandbox/index2.rst doc/extending/scan.rst doc/library/gpuarray/op.rst doc/library/tensor/basic.rst doc/library/tensor/signal/downsample.rst doc/extending/fibby.rst doc/library/tensor/random/utils.rst doc/tutorial/multi_cores.rst doc/library/graph/features.rst doc/tutorial/using_multi_gpu.rst doc/index.rst doc/sandbox/randomnumbers.rst doc/library/tensor/nnet/bn.rst requirements-rtd.txt doc/library/gradient.rst doc/sandbox/sandbox.rst doc/extending/graphstructures.rst doc/optimizations.rst doc/dev_start_guide.rst doc/library/config.rst doc/library/tensor/io.rst doc/library/tensor/nlinalg.rst doc/tutorial/adding.rst doc/library/graph/params_type.rst doc/library/compile/nanguardmode.rst doc/sandbox/ccodegen.rst doc/install_windows.rst doc/library/graph/fgraph.rst doc/library/compile/io.rst doc/library/sandbox/linalg.rst doc/library/sandbox/neighbours.rst doc/sandbox/sparse.rst doc/tutorial/modes.rst doc/tutorial/using_gpu.rst doc/library/tensor/index.rst doc/tutorial/extending_aesara_c.rst doc/library/gpuarray/fft.rst doc/extending/extending_aesara_gpu.rst doc/tutorial/loading_and_saving.rst doc/extending/tips.rst doc/extending/using_params.rst doc/library/sandbox/rng_mrg.rst doc/tutorial/faq_tutorial.rst doc/tutorial/shape_info.rst doc/sandbox/function.rst doc/library/compile/function.rst doc/introduction.rst doc/tutorial/aliasing.rst doc/tutorial/loop.rst doc/sandbox/functional.rst doc/sandbox/interactive_debugger.rst doc/library/gpuarray/index.rst doc/library/scan.rst doc/links.rst doc/library/tensor/extra_ops.rst doc/library/gpuarray/type.rst doc/extending/op.rst doc/internal/python.rst doc/library/tensor/basic_opt.rst doc/library/gpuarray/extra.rst doc/extending/ctype.rst doc/library/compile/profilemode.rst doc/library/tensor/nnet/ctc.rst doc/library/graph/utils.rst doc/library/tensor/math_opt.rst doc/troubleshooting.rst doc/tutorial/conditions.rst doc/install_ubuntu.rst doc/extending/type.rst doc/library/tensor/nnet/blocksparse.rst doc/library/gpuarray/linalg.rst doc/updating.rst doc/extending/pipeline.rst doc/library/tensor/nnet/conv.rst doc/library/tensor/nnet/index.rst doc/library/tensor/signal/pool.rst doc/library/tensor/random/index.rst doc/library/sparse/index.rst doc/sandbox/tensoroptools.rst doc/internal/how_to_release.rst doc/glossary.rst doc/tutorial/python.rst doc/sandbox/elemwise_compiler.rst doc/sandbox/compilation.rst doc/library/tensor/nnet/basic.rst doc/NEWS.txt doc/library/compile/ops.rst doc/library/tensor/slinalg.rst doc/library/misc/pkl_utils.rst doc/library/scalar/index.rst doc/extending/index.rst doc/library/sandbox/index.rst doc/library/tests.rst doc/extending/aesara_vs_c.rst doc/sandbox/software.rst doc/tutorial/nan_tutorial.rst doc/library/gpuarray/dnn.rst doc/library/graph/graph.rst doc/extending/other_ops.rst doc/library/graph/index.rst doc/library/d3viz/index.rst doc/sandbox/debugging_with_stepmode.rst doc/extending/inplace.rst doc/library/compile/shared.rst doc/sandbox/logistic_regression_example.rst doc/library/compile/mode.rst doc/install_centos6.rst doc/acknowledgement.rst doc/library/compile/debugmode.rst doc/tutorial/printing_drawing.rst doc/library/tensor/utils.rst doc/install_macos.rst doc/tutorial/symbolic_graphs.rst doc/core_development_guide.rst doc/tutorial/broadcasting.rst doc/extending/optimization.rst doc/internal/metadocumentation.rst doc/sandbox/rethinkccodegen.rst doc/tutorial/debug_faq.rst doc/internal/index.rst doc/library/tensor/fft.rst doc/library/tensor/elemwise.rst doc/tutorial/conv_arithmetic.rst doc/tutorial/index.rst doc/sandbox/how_to_make_ops.rst,3d346f0c5482959402f12b0e20bd739b247835c9 0f430e12e3190a3d28c07fcc3cf36b62d16adb9c 6a0437d61eef5527bad559a22e6c367b07c84233 c8c6e4a0d329032829f5c5a31bb9ef0b561017d4 0ea72155cc9ca615d1822d0d5419b714843e61d8 1f5097dcb76da739912bd1ac48e55cec17235c52,"brandonwillard labeled 2021-05-23 21:53:18,brandonwillard labeled 2021-05-23 21:53:18,brandonwillard assigned 2021-05-23 21:53:18,brandonwillard head_ref_force_pushed 2021-05-23 23:25:17,brandonwillard head_ref_force_pushed 2021-05-23 23:26:11,brandonwillard head_ref_force_pushed 2021-05-23 23:28:14,brandonwillard head_ref_force_pushed 2021-05-24 18:27:32,brandonwillard referenced 2021-05-24 18:37:43,brandonwillard merged 2021-05-24 18:37:43,brandonwillard closed 2021-05-24 18:37:43,brandonwillard head_ref_deleted 2021-05-24 18:37:46",ricardoV94 brandonwillard,2,True
222,439,Rename `inv` to `reciprocal`,brandonwillard,Closes #438,enhancement,michaelosthege,brandonwillard,2021-05-24 19:00:58,2021-05-24 23:48:38,doc/library/tensor/basic.rst aesara/tensor/math_opt.py aesara/tensor/nnet/batchnorm.py tests/tensor/utils.py aesara/tensor/math.py tests/gpuarray/test_dnn.py tests/tensor/test_inplace.py aesara/gpuarray/dnn.py aesara/compile/profiling.py doc/optimizations.rst tests/scalar/test_basic.py tests/tensor/nnet/test_batchnorm.py aesara/scalar/basic.py tests/tensor/test_math.py aesara/tensor/inplace.py tests/tensor/test_basic_opt.py tests/tensor/test_math_opt.py,cfe4b77dc9cdfe3e2458b35c280b6bbba8f83490 f8a73b5932248e73f46f0ae13d72677f94e0ea8b,"brandonwillard labeled 2021-05-24 19:00:58,brandonwillard assigned 2021-05-24 19:00:58,brandonwillard head_ref_force_pushed 2021-05-24 19:01:41,brandonwillard head_ref_force_pushed 2021-05-24 19:22:29,brandonwillard head_ref_force_pushed 2021-05-24 22:28:21,brandonwillard referenced 2021-05-24 23:48:38,brandonwillard merged 2021-05-24 23:48:38,brandonwillard closed 2021-05-24 23:48:38,brandonwillard head_ref_deleted 2021-05-24 23:48:41",codecov[bot] michaelosthege brandonwillard,3,True
223,443,Lift broadcast-only `DimShuffle`s through `RandomVariable` `Op`s,brandonwillard,This PR adds a missing case to `local_dimshuffle_rv_lift` that lifts broadcast-only `DimShuffle`s through `RandomVariable` `Op`s.,enhancement graph rewriting,,brandonwillard,2021-05-24 23:53:45,2021-05-25 03:25:34,aesara/tensor/random/opt.py tests/tensor/random/test_opt.py,53867ec8cb7639fe0233a25806feed9106c59b13 5706321a992190bce161df40bd5da0bbc8496283 27c1d24ded3e1d2af6f0b4331c4a130f5999a0f8,"brandonwillard labeled 2021-05-24 23:53:45,brandonwillard labeled 2021-05-24 23:53:45,brandonwillard assigned 2021-05-24 23:53:45,brandonwillard head_ref_force_pushed 2021-05-25 00:07:07,brandonwillard head_ref_force_pushed 2021-05-25 00:10:46,brandonwillard head_ref_force_pushed 2021-05-25 01:10:41,brandonwillard head_ref_force_pushed 2021-05-25 01:11:02,brandonwillard referenced 2021-05-25 03:25:34,brandonwillard merged 2021-05-25 03:25:34,brandonwillard closed 2021-05-25 03:25:34,brandonwillard head_ref_deleted 2021-05-25 03:25:37",codecov[bot] brandonwillard,1,True
224,445,Rename scalar/basic_scipy to scalar/math,fanshi118,"**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [ ] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",refactor,ricardoV94,,2021-05-27 14:54:06,2021-06-01 17:32:26,aesara/tensor/random/opt.py aesara/link/numba/dispatch.py aesara/gpuarray/elemwise.py aesara/compile/builders.py tests/compile/test_builders.py aesara/scalar/__init__.py tests/link/test_numba.py doc/library/d3viz/index.rst tests/d3viz/models.py aesara/scalar/math.py doc/library/scan.rst tests/scalar/test_math.py doc/library/tensor/nnet/basic.rst doc/library/d3viz/index.ipynb aesara/tensor/random/op.py aesara/gpuarray/opt.py tests/tensor/random/test_op.py tests/tensor/test_math_opt.py,04289cba36cfe58b879076ccd732284a4a7e3f2a 2030ed3f6f0e497d50d60509d92282d83c7bffa1 0281fc068a7f4f2d0b458314d1ca974c1543e54f,"fanshi118 ready_for_review 2021-05-27 14:54:55,fanshi mentioned 2021-05-27 16:32:50,fanshi subscribed 2021-05-27 16:32:50,fanshi118 head_ref_force_pushed 2021-05-27 19:12:32,fanshi mentioned 2021-05-27 19:16:20,fanshi subscribed 2021-05-27 19:16:20,fanshi118 review_requested 2021-05-27 19:55:22,ricardoV94 head_ref_force_pushed 2021-05-29 19:29:57,brandonwillard labeled 2021-05-29 19:31:30,brandonwillard connected 2021-05-29 19:32:00,fanshi118 mentioned 2021-05-29 19:32:35,fanshi118 subscribed 2021-05-29 19:32:35,ricardoV94 review_dismissed 2021-05-29 19:39:43,ricardoV94 head_ref_force_pushed 2021-05-29 19:39:43,fanshi118 mentioned 2021-06-01 15:02:36,fanshi118 subscribed 2021-06-01 15:02:36,ricardoV94 referenced 2021-06-01 17:32:26,ricardoV94 merged 2021-06-01 17:32:26,ricardoV94 closed 2021-06-01 17:32:26,fanshi118 mentioned 2021-06-01 17:33:31,fanshi118 subscribed 2021-06-01 17:33:31,fanshi118 head_ref_deleted 2021-06-01 21:26:06",fanshi codecov[bot] brandonwillard ricardoV94 fanshi118,11,True
225,446,Require independent dimensions in `size` arguments to multivariate `RandomVariable`s,brandonwillard,"This PR implements the change proposed in https://github.com/pymc-devs/aesara/discussions/412.  It also changes `RandomVariable.compute_bcast` so that it uses constant folding, which is a lot more thorough than the `get_scalar_constant_value` heuristics that are currently in place.

With these changes, one must now add the independent dimensions to the `size` parameters for multivariate `RandomVariable`s.  For example,
```python
import numpy as np

from aesara.tensor.random.basic import multivariate_normal


multivariate_normal(np.zeros((1, 2)), np.ones((1, 2, 2)), size=(4,)).eval()
# ValueError: shape mismatch: objects cannot be broadcast to a single shape

multivariate_normal(np.zeros((1, 2)), np.ones((1, 2, 2)), size=(4, 1)).eval()
# array([[[ 2.407954  ,  2.407954  ]],
#        [[-0.01977264, -0.01977264]],
#        [[-0.15699972, -0.15699972]],
#        [[-0.52942611, -0.52942611]]])
```

I'll add the [proposed `reps` parameter](https://github.com/pymc-devs/aesara/discussions/412#discussioncomment-770036) later in a follow-up PR.",refactor random variables,ricardoV94 twiecki,brandonwillard,2021-05-28 05:28:12,2022-02-04 23:12:19,aesara/tensor/random/opt.py aesara/tensor/random/op.py tests/tensor/random/test_opt.py aesara/tensor/random/basic.py tests/tensor/random/test_basic.py,f4decde795ae9f257a94abdf0af662b63e11d869,"brandonwillard labeled 2021-05-28 05:28:12,brandonwillard assigned 2021-05-28 05:28:13,brandonwillard head_ref_force_pushed 2021-05-28 05:43:47,brandonwillard review_dismissed 2021-06-01 04:18:35,brandonwillard head_ref_force_pushed 2021-06-01 04:18:35,brandonwillard head_ref_force_pushed 2021-06-01 20:53:35,brandonwillard head_ref_force_pushed 2021-06-05 18:06:23,brandonwillard labeled 2022-02-01 23:36:39,brandonwillard head_ref_force_pushed 2022-02-04 01:40:29,brandonwillard review_requested 2022-02-04 01:40:58,brandonwillard review_requested 2022-02-04 01:41:04,brandonwillard review_dismissed 2022-02-04 23:11:58,brandonwillard review_dismissed 2022-02-04 23:11:58,brandonwillard head_ref_force_pushed 2022-02-04 23:11:58,brandonwillard referenced 2022-02-04 23:12:19,brandonwillard merged 2022-02-04 23:12:19,brandonwillard closed 2022-02-04 23:12:20,brandonwillard head_ref_deleted 2022-02-04 23:12:23",codecov[bot] ricardoV94 twiecki brandonwillard,7,True
226,447,Fix `ifelse` `str` representation,brandonwillard,This PR fixes the intended f-string in the `IfElse.__str__` implementation.,bug,,brandonwillard,2021-05-28 15:25:08,2021-05-28 16:17:35,aesara/ifelse.py tests/test_ifelse.py,3d92d94cf447ae3df2d15dd99ea8ee380c752ae8,"brandonwillard labeled 2021-05-28 15:25:08,brandonwillard assigned 2021-05-28 15:25:08,brandonwillard referenced 2021-05-28 16:17:35,brandonwillard merged 2021-05-28 16:17:35,brandonwillard closed 2021-05-28 16:17:35,brandonwillard head_ref_deleted 2021-05-28 16:17:39",brandonwillard,0,True
227,448,Do not require `fgraph.clients` entries in `RandomVariable` rewrites,brandonwillard,"This PR removes the requirement that `fgraph.clients` contain valid entries in the `local_dimshuffle_rv_lift` and `local_subtensor_rv_lift` rewrites.

With this change, those rewrites can be used without unnecessary restrictions on the `fgraph` argument, which&mdash;for example&mdash;allows them to be used with `aesara.graph.opt.pre_greedy_local_optimizer`.",enhancement graph rewriting,,brandonwillard,2021-05-29 21:29:24,2021-05-29 22:30:33,aesara/tensor/random/opt.py,773e9c51df62408c8f08c9d27ce2dff2721485e5,"brandonwillard labeled 2021-05-29 21:29:24,brandonwillard labeled 2021-05-29 21:29:24,brandonwillard assigned 2021-05-29 21:29:24,brandonwillard referenced 2021-05-29 22:30:33,brandonwillard merged 2021-05-29 22:30:33,brandonwillard closed 2021-05-29 22:30:33,brandonwillard head_ref_deleted 2021-05-29 22:30:35",codecov[bot] brandonwillard,1,True
228,449,Enable adding 'rep_param_idx' to 'make_node',Sayam753,"**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
I was trying to make `MvStudentT` distribution compatible to v4 changes. 
```python
class MvStudentTRV(RandomVariable):
    name = ""multivariate_studentt""
    ndim_supp = 1
    ndims_params = [0, 1, 2]
    dtype = ""floatX""
    _print_name = (""MvStudentT"", ""\\\\operatorname{MvStudentT}"")

    def __call__(self, nu, mu=None, cov=None, size=None, **kwargs):

        dtype = aesara.config.floatX if self.dtype == ""floatX"" else self.dtype

        if mu is None:
            mu = np.array([0.0], dtype=dtype)
        if cov is None:
            cov = np.array([[1.0]], dtype=dtype)
        return super().__call__(nu, mu, cov, size=size, **kwargs)
``` 
After defining the appropriate Continuous distribution with `dist` and `logp` methods, I got an error with traceback below -
<details>
<summary>Traceback</summary>

<p>

```none
IndexError: tuple index out of range
---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)
<ipython-input-3-91b52edf2489> in <module>
      1 from pymc3.distributions.multivariate import MvStudentT
      2 with pm.Model() as model:
----> 3     a = pm.MvStudentT('a', nu=10, mu=mu, cov=cov)
~/Desktop/pymc/pymc3/pymc3/distributions/distribution.py in __new__(cls, name, *args, **kwargs)
    154         transform = kwargs.pop(""transform"", UNSET)
    155 
--> 156         rv_out = cls.dist(*args, rng=rng, **kwargs)
    157 
    158         return model.register_rv(rv_out, name, data, total_size, dims=dims, transform=transform)
~/Desktop/pymc/pymc3/pymc3/distributions/multivariate.py in dist(cls, nu, Sigma, mu, cov, tau, chol, lower, **kwargs)
    329         mu = at.as_tensor_variable(mu)
    330         cov = quaddist_matrix(cov, chol, tau, lower)
--> 331         return super().dist([nu, mu, cov], **kwargs)
    332 
    333     def random(self, point=None, size=None):
~/Desktop/pymc/pymc3/pymc3/distributions/distribution.py in dist(cls, dist_params, **kwargs)
    163         testval = kwargs.pop(""testval"", None)
    164 
--> 165         rv_var = cls.rv_op(*dist_params, **kwargs)
    166 
    167         if testval is not None:
~/Desktop/pymc/pymc3/pymc3/distributions/multivariate.py in __call__(self, nu, mu, cov, size, **kwargs)
    265             cov = np.array([[1.0]], dtype=dtype)
    266         print(nu, mu, cov)
--> 267         return super().__call__(nu, mu, cov, size=size, **kwargs)
    268 
    269     @classmethod
~/miniconda3/envs/pymc3_dev/lib/python3.7/site-packages/aesara/tensor/random/op.py in __call__(self, size, name, rng, dtype, *args, **kwargs)
    321 
    322     def __call__(self, *args, size=None, name=None, rng=None, dtype=None, **kwargs):
--> 323         res = super().__call__(rng, size, dtype, *args, **kwargs)
    324 
    325         if name is not None:
~/miniconda3/envs/pymc3_dev/lib/python3.7/site-packages/aesara/graph/op.py in __call__(self, *inputs, **kwargs)
    267         """"""
    268         return_list = kwargs.pop(""return_list"", False)
--> 269         node = self.make_node(*inputs, **kwargs)
    270 
    271         if config.compute_test_value != ""off"":
~/miniconda3/envs/pymc3_dev/lib/python3.7/site-packages/aesara/tensor/random/op.py in make_node(self, rng, size, dtype, *dist_params)
    368             raise TypeError(""The type of rng should be an instance of RandomStateType"")
    369 
--> 370         bcast = self.compute_bcast(dist_params, size)
    371         dtype = self.dtype or dtype
    372 
~/miniconda3/envs/pymc3_dev/lib/python3.7/site-packages/aesara/configparser.py in res(*args, **kwargs)
     47         def res(*args, **kwargs):
     48             with self:
---> 49                 return f(*args, **kwargs)
     50 
     51         return res
~/miniconda3/envs/pymc3_dev/lib/python3.7/site-packages/aesara/tensor/random/op.py in compute_bcast(self, dist_params, size)
    285 
    286         """"""
--> 287         shape = self._infer_shape(size, dist_params)
    288 
    289         # Ignore `Cast`s, since they do not affect broadcastables
~/miniconda3/envs/pymc3_dev/lib/python3.7/site-packages/aesara/tensor/random/op.py in _infer_shape(self, size, dist_params, param_shapes)
    255             shape_supp = self._shape_from_params(
    256                 dist_params,
--> 257                 param_shapes=param_shapes,
    258             )
    259 
~/miniconda3/envs/pymc3_dev/lib/python3.7/site-packages/aesara/tensor/random/op.py in _shape_from_params(self, dist_params, **kwargs)
    156         Defaults to `param_supp_shape_fn`.
    157         """"""
--> 158         return default_shape_from_params(self.ndim_supp, dist_params, **kwargs)
    159 
    160     def rng_fn(self, rng, *args, **kwargs):
~/miniconda3/envs/pymc3_dev/lib/python3.7/site-packages/aesara/tensor/random/op.py in default_shape_from_params(ndim_supp, dist_params, rep_param_idx, param_shapes)
     68     if param_shapes is not None:
     69         ref_param = param_shapes[rep_param_idx]
---> 70         return (ref_param[-ndim_supp],)
     71     else:
     72         ref_param = dist_params[rep_param_idx]
IndexError: tuple index out of range
```
</p>
</details>

I wanted to make use of `rep_param_idx` parameter but could not figure out how.
So, here is this PR.

With this PR, I would simply replace super().call with 
```
- return super().__call__(nu, mu, cov, size=size, **kwargs)
+ return super().__call__(nu, mu, cov, size=size, rep_param_idx=1, **kwargs)
```

+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
I do not know if there is a relevant GitHub issue.
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [ ] There are tests covering the changes introduced in the PR.
No. I will learn about adding test cases over the weekend.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,,,2021-05-29 22:33:46,2021-05-29 23:14:09,aesara/tensor/random/op.py,995fffcba679a2e3a8bbed703ff27cee0da0f2c2,"Sayam753 convert_to_draft 2021-05-29 22:42:23,Sayam753 closed 2021-05-29 23:14:09",Sayam753,1,False
229,450,Misc. `aesara.compile.builders.OpFromGraph` fixes,brandonwillard,This PR makes a few miscellaneous updates to `OpFromGraph`.,bug enhancement,,brandonwillard,2021-05-30 00:35:36,2021-05-30 03:01:22,aesara/compile/builders.py tests/compile/test_builders.py doc/library/d3viz/index.rst doc/library/scan.rst doc/library/tensor/nnet/basic.rst tests/d3viz/models.py doc/library/d3viz/index.ipynb,deecbeaaafd48af567326b39ae0fdcc12083270c 397bd737a2ef13819e24f1aaa2c9078810a7f0a1 c2b5dae7eb10224035e8eb3eb01baedf13d0871f,"brandonwillard labeled 2021-05-30 00:35:36,brandonwillard labeled 2021-05-30 00:35:36,brandonwillard assigned 2021-05-30 00:35:37,brandonwillard referenced 2021-05-30 03:01:22,brandonwillard merged 2021-05-30 03:01:22,brandonwillard closed 2021-05-30 03:01:22,brandonwillard head_ref_deleted 2021-05-30 03:01:45",codecov[bot] ricardoV94 brandonwillard,2,True
230,452,Include `__props__` in `RandomVariable.__str__`,brandonwillard,This PR adds the `__props__`s entries to `RandomVariable.__str__`.,enhancement,,brandonwillard,2021-05-31 00:17:17,2021-05-31 01:17:31,aesara/tensor/random/op.py tests/tensor/random/test_op.py,fb37adbe05d621970f415f05dca9436b852e34e5,"brandonwillard assigned 2021-05-31 00:17:18,brandonwillard labeled 2021-05-31 00:20:37,brandonwillard referenced 2021-05-31 01:17:31,brandonwillard merged 2021-05-31 01:17:31,brandonwillard closed 2021-05-31 01:17:31,brandonwillard head_ref_deleted 2021-05-31 01:17:35",codecov[bot] brandonwillard,1,True
231,455,Minor misc. in-place optimizations-related updates,brandonwillard,This PR provides some minor miscellaneous updates relating to in-place optimizations and the objects they use.,enhancement graph rewriting,,brandonwillard,2021-06-01 04:17:50,2021-06-01 20:39:32,aesara/tensor/random/opt.py tests/compile/test_mode.py aesara/compile/debugmode.py aesara/compile/nanguardmode.py aesara/compile/monitormode.py tests/record.py aesara/compile/mode.py aesara/graph/fg.py aesara/utils.py aesara/tensor/random/op.py tests/tensor/random/test_opt.py tests/tensor/random/test_op.py aesara/compile/function/types.py,8b7f4a150b7c5eefd9d2ee3af8eb352e4b890e3b 1756d211fc65718c7537f9a22dd7cd43613ae7d4 74d0e10635a50b55510772e8c19894baf3c3d789 1daa82175af9f6b382eb77fd2b5ffdef1e872019 66c2078cd4c93d84c25449b54a41c2ebd45ea138 1e3150af2a8470f1459ae6d5e2daa7d16d636bad ebd29bc09ad72160509822d989dd561181e1c14a,"brandonwillard labeled 2021-06-01 04:17:50,brandonwillard labeled 2021-06-01 04:17:50,brandonwillard assigned 2021-06-01 04:17:50,brandonwillard head_ref_force_pushed 2021-06-01 04:48:43,brandonwillard head_ref_force_pushed 2021-06-01 04:53:41,brandonwillard head_ref_force_pushed 2021-06-01 05:07:09,brandonwillard head_ref_force_pushed 2021-06-01 05:59:21,brandonwillard head_ref_force_pushed 2021-06-01 17:33:33,brandonwillard head_ref_force_pushed 2021-06-01 17:34:45,brandonwillard head_ref_force_pushed 2021-06-01 17:35:13,brandonwillard head_ref_force_pushed 2021-06-01 17:42:44,brandonwillard referenced 2021-06-01 20:39:32,brandonwillard merged 2021-06-01 20:39:32,brandonwillard closed 2021-06-01 20:39:33,brandonwillard head_ref_deleted 2021-06-01 20:39:35",codecov[bot] brandonwillard,1,True
232,456,Add a deprecated `aesara.scalar.basic_scipy` module stub,brandonwillard,This PR reintroduces `aesara.scalar.basic_scipy` as a deprecated module stub for backward compatibility (e.g. without this PyMC3 `v4` is broken).,bug important,ricardoV94,brandonwillard,2021-06-01 20:45:36,2021-06-02 02:01:22,.github/workflows/test.yml aesara/scalar/basic_scipy.py tests/tensor/test_basic_scipy.py setup.cfg tests/tensor/test_math_scipy.py,9441ea2a1cf575aabcf93070d0e683bdb7b79c36 4507b29a829bc8f99a9e7539bf5a22e94875e48a,"brandonwillard labeled 2021-06-01 20:45:36,brandonwillard labeled 2021-06-01 20:45:36,brandonwillard assigned 2021-06-01 20:45:37,brandonwillard review_dismissed 2021-06-01 20:49:31,brandonwillard head_ref_force_pushed 2021-06-01 21:56:48,brandonwillard referenced 2021-06-02 02:01:21,brandonwillard merged 2021-06-02 02:01:22,brandonwillard closed 2021-06-02 02:01:22,brandonwillard head_ref_deleted 2021-06-02 02:01:25",codecov[bot] ricardoV94 brandonwillard,1,True
233,459,Fix duplicate names and Numba conversion for `Switch`,brandonwillard,This PR prevents duplicate names in Numba converted function signatures and fixes the conversion of `Switch` (i.e. `numpy.where`).,bug important Numba,,brandonwillard,2021-06-03 21:23:20,2021-06-04 00:17:20,aesara/link/utils.py tests/link/test_numba.py tests/link/test_utils.py aesara/link/numba/dispatch.py,f471e56e3716f0e0a5d80094410ae150b477063d 860bebbfb1f6c94b284073965961117a4f366d46 b9f6815df58cf8f5140e256bb798e034b25754c8 c8e578888e7e3b2689e55927fa38a4402f0b1666 84f44ff5dd632eb86273b926ef5bdc9e2f83254e 8f5cdc5a2aaa2ff3a9be3794be39487de66a46e7,"brandonwillard labeled 2021-06-03 21:23:20,brandonwillard labeled 2021-06-03 21:23:20,brandonwillard labeled 2021-06-03 21:23:20,brandonwillard assigned 2021-06-03 21:23:20,brandonwillard connected 2021-06-03 21:23:30,brandonwillard head_ref_force_pushed 2021-06-04 00:16:08,brandonwillard referenced 2021-06-04 00:17:20,brandonwillard merged 2021-06-04 00:17:20,brandonwillard closed 2021-06-04 00:17:20,brandonwillard head_ref_deleted 2021-06-04 00:17:23",codecov[bot] brandonwillard,1,True
234,460,Fix Numba `DimShuffle` with non-array input,brandonwillard,This PR fixes an issue in the Numba implementation of `DimShuffle` when its input is not an array.,bug important Numba,,brandonwillard,2021-06-04 00:49:13,2021-06-04 05:58:06,aesara/link/utils.py tests/link/test_numba.py aesara/link/numba/dispatch.py,c32d52e84b53e5c0181d414a1958d83b48bbb4dd 7cd094646e4794bd4b6f5769a41e397840c4ab32 d335a74f79ac2c10bdaacaf4ce1ed5f637601f84 68770bdb4ddfd574204e5624a19c4bfd556ed5f1 1f15eac0304f9225e77574f4a738f4435c7524e6 46678cdfe6669c6960e105ab3cd1bb9c2992ced8 547b89f07ac2cb440a658c32477887233d598596 efac30e097cd93ec240b7f82a36d8e5e4513edae,"brandonwillard labeled 2021-06-04 00:49:13,brandonwillard labeled 2021-06-04 00:49:13,brandonwillard labeled 2021-06-04 00:49:13,brandonwillard assigned 2021-06-04 00:49:14,brandonwillard renamed 2021-06-04 00:49:29,brandonwillard renamed 2021-06-04 00:49:47,brandonwillard referenced 2021-06-04 05:58:06,brandonwillard merged 2021-06-04 05:58:06,brandonwillard closed 2021-06-04 05:58:06,brandonwillard head_ref_deleted 2021-06-04 05:58:09",codecov[bot] brandonwillard,1,True
235,462,Change references to `master` branch to `main`,brandonwillard,This PR renames references to `master` to `main`.,important,michaelosthege,brandonwillard,2021-06-05 18:19:48,2021-06-05 19:40:18,.github/workflows/test.yml doc/extending/jax_op.rst .github/workflows/pypi.yml README.rst Makefile doc/dev_start_guide.rst,81d332a2b15c91c51acf9210d430bc7e2d4223f2,"brandonwillard labeled 2021-06-05 18:19:48,brandonwillard assigned 2021-06-05 18:19:48,brandonwillard referenced 2021-06-05 19:40:18,brandonwillard merged 2021-06-05 19:40:18,brandonwillard closed 2021-06-05 19:40:18,brandonwillard head_ref_deleted 2021-06-05 19:40:21",michaelosthege brandonwillard,0,True
236,463,Doc fixes,brandonwillard,"This PR contains numerous Sphinx-related documentation fixes.  Only one set of warnings remain after these changes, and fixing those involves a refactor of `Type.[Variable|Constant]`.",documentation enhancement,michaelosthege,brandonwillard,2021-06-06 05:47:46,2021-06-07 21:55:28,doc/extending/op.rst aesara/tensor/math_opt.py doc/extending/ctype.rst doc/library/tensor/nnet/bn.rst doc/conf.py aesara/scan/__init__.py aesara/graph/type.py tests/tensor/test_type.py aesara/gpuarray/dnn.py doc/sandbox/sandbox.rst doc/extending/graphstructures.rst doc/library/tensor/signal/conv.rst doc/dev_start_guide.rst doc/library/config.rst doc/extending/inplace.rst doc/library/sparse/sandbox.rst doc/library/tensor/random/basic.rst aesara/graph/opt.py doc/extending/type.rst aesara/tensor/subtensor.py doc/extending/extending_aesara.rst doc/extending/pipeline.rst doc/library/graph/params_type.rst aesara/graph/fg.py doc/extending/extending_aesara_c.rst README.rst aesara/link/c/interface.py aesara/tensor/basic_opt.py doc/library/tensor/nnet/index.rst doc/library/tensor/random/index.rst aesara/tensor/extra_ops.py tests/tensor/test_basic_opt.py doc/library/tensor/index.rst aesara/link/basic.py doc/tutorial/examples.rst doc/extending/unittest.rst doc/extending/tips.rst doc/glossary.rst doc/library/index.rst doc/sandbox/elemwise_compiler.rst doc/library/tensor/nnet/batchnorm.rst doc/library/graph/op.rst doc/library/tensor/nnet/basic.rst doc/core_development_guide.rst aesara/sparse/opt.py doc/introduction.rst doc/extending/optimization.rst doc/library/tensor/basic.rst aesara/tensor/basic.py doc/extending/index.rst aesara/graph/basic.py doc/library/tests.rst aesara/graph/op.py aesara/link/jax/dispatch.py aesara/scalar/math.py doc/library/scan.rst aesara/sparse/basic.py doc/index.rst,7d0311eca3124fb599b5fbcb50cad3486cd50eff 971e9214fd90fa756116b63af9f12ad521177cf8 e43d47b2c3431856e9355bbb7d8bfdb28fe467f1 16c4396f5626688f1a5f94a57bca12cfc3d63310 78457afa8a5f7e045b391aa39bb721646f4d870c 3172c47520307f56b42e929d3b9f0ac89a94f0f0 65213cf1a66df87d96f228fc441d42fa5ab23709,"brandonwillard assigned 2021-06-06 05:47:54,brandonwillard labeled 2021-06-06 05:48:03,brandonwillard labeled 2021-06-06 05:48:03,brandonwillard head_ref_force_pushed 2021-06-06 21:15:30,brandonwillard review_dismissed 2021-06-06 21:16:07,brandonwillard review_dismissed 2021-06-07 21:40:52,brandonwillard head_ref_force_pushed 2021-06-07 21:40:52,brandonwillard head_ref_force_pushed 2021-06-07 21:42:27,brandonwillard head_ref_force_pushed 2021-06-07 21:43:48,brandonwillard head_ref_force_pushed 2021-06-07 21:47:36,brandonwillard head_ref_force_pushed 2021-06-07 21:51:30,brandonwillard referenced 2021-06-07 21:55:28,brandonwillard merged 2021-06-07 21:55:28,brandonwillard closed 2021-06-07 21:55:28,brandonwillard head_ref_deleted 2021-06-07 21:55:31",codecov[bot] michaelosthege brandonwillard,9,True
237,464,Implement betainc and derivatives,ricardoV94,"This PR adds the equivalent Scipy `betainc` and Python-only Op's for the approximation of the derivatives wrt to the first two arguments. More context can be found in https://github.com/pymc-devs/pymc3/pull/4736

One of the scalar gradient tests is failing locally because the expected `nan` return raises a `ValueError` in a test context, whereas it issues a `RuntimeWarning` when running in the REPL. Other scalar gradient tests are failing in the CI due to numerical issues, but pass locally. Probably I need to specify in more detail the compilation mode (and if so, which one)?

***


Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [x] There are tests covering the changes introduced in the PR.
",,brandonwillard,,2021-06-06 12:54:45,2021-07-06 21:41:58,aesara/tensor/math.py aesara/scalar/math.py tests/scalar/test_math.py aesara/tensor/inplace.py tests/tensor/test_math_scipy.py,5388d61ec215ad3e6eb16d25c5da616f9f4efc07,"ricardoV94 head_ref_force_pushed 2021-06-06 12:55:38,ricardoV94 head_ref_force_pushed 2021-06-07 17:09:21,ricardoV94 head_ref_force_pushed 2021-06-07 17:09:44,ricardoV94 head_ref_force_pushed 2021-06-08 07:49:58,ricardoV94 head_ref_force_pushed 2021-06-08 07:52:03,ricardoV94 head_ref_force_pushed 2021-06-21 09:03:45,ricardoV94 head_ref_force_pushed 2021-06-21 09:04:18,ricardoV94 head_ref_force_pushed 2021-06-21 09:04:45,brandonwillard head_ref_force_pushed 2021-07-01 21:46:11,brandonwillard head_ref_force_pushed 2021-07-01 21:53:15,ricardoV94 head_ref_force_pushed 2021-07-02 10:43:26,ricardoV94 head_ref_force_pushed 2021-07-02 12:24:43,ricardoV94 head_ref_force_pushed 2021-07-05 07:41:23,ricardoV94 head_ref_force_pushed 2021-07-05 07:43:10,ricardoV94 head_ref_force_pushed 2021-07-05 07:45:32,ricardoV94 head_ref_force_pushed 2021-07-05 07:47:53,ricardoV94 head_ref_force_pushed 2021-07-05 16:50:56,brandonwillard referenced 2021-07-06 21:41:58,brandonwillard merged 2021-07-06 21:41:58,brandonwillard closed 2021-07-06 21:41:58,ricardoV94 head_ref_deleted 2021-07-08 08:10:16",codecov[bot] ricardoV94 brandonwillard,16,True
238,465,Safeguard local_log_sum_exp optimization against -inf values,ricardoV94,"Fixes #461


**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,twiecki brandonwillard,,2021-06-06 13:15:11,2021-06-09 09:50:28,aesara/link/numba/dispatch.py aesara/tensor/math_opt.py tests/tensor/test_math_opt.py,a5f576770740f5e9cad0dcd9c86a4a1109f596c8 94919b879154e5b50c3a508c8eb675bce1bde30f 3937bb11a3179aee6022e6c7cf6fb20e4893c2bc,"ricardoV94 head_ref_force_pushed 2021-06-06 19:12:14,ricardoV94 head_ref_force_pushed 2021-06-06 19:14:31,ricardoV94 head_ref_force_pushed 2021-06-07 08:52:11,brandonwillard mentioned 2021-06-07 09:10:12,brandonwillard subscribed 2021-06-07 09:10:12,brandonwillard mentioned 2021-06-07 16:36:47,brandonwillard subscribed 2021-06-07 16:36:47,ricardoV94 head_ref_force_pushed 2021-06-07 16:54:16,ricardoV94 head_ref_force_pushed 2021-06-07 16:55:45,ricardoV94 review_requested 2021-06-07 16:56:48,ricardoV94 review_dismissed 2021-06-09 07:02:25,ricardoV94 head_ref_force_pushed 2021-06-09 07:02:42,brandonwillard mentioned 2021-06-09 08:33:08,brandonwillard subscribed 2021-06-09 08:33:08,ricardoV94 referenced 2021-06-09 09:50:28,ricardoV94 merged 2021-06-09 09:50:28,ricardoV94 closed 2021-06-09 09:50:28,ricardoV94 head_ref_deleted 2021-06-09 09:51:19,brandonwillard mentioned 2021-06-09 14:07:39,brandonwillard subscribed 2021-06-09 14:07:39",codecov[bot] ricardoV94 twiecki brandonwillard,18,True
239,468,Update `pymc-devs` references to `aesara-devs`,brandonwillard,This PR makes the necessary updates for the transfer to `aesara-devs`.,important,michaelosthege,brandonwillard,2021-06-07 17:12:10,2021-06-07 19:48:02,doc/library/tensor/basic_opt.rst aesara/configparser.py aesara/scan/basic.py doc/extending/jax_op.rst aesara/ifelse.py aesara/scan/__init__.py doc/conf.py doc/library/tensor/math_opt.rst doc/dev_start_guide.rst setup.py doc/library/tensor/random/basic.rst doc/updating.rst doc/.static/version_switch.js tests/test_determinism.py README.rst aesara/compile/profiling.py doc/library/tensor/random/index.rst aesara/scan/scan_perform.pyx doc/acknowledgement.rst doc/install_generic.inc aesara/scan/opt.py aesara/scan/op.py aesara/misc/pkl_utils.py aesara/raise_op.py doc/LICENSE.txt doc/introduction.rst aesara/scan/utils.py tests/test_ifelse.py CONTRIBUTING.md tests/record.py conda/meta.yaml doc/index.rst,b1633efa044c35411125e1b1af637d284c12ceef,"brandonwillard labeled 2021-06-07 17:12:10,brandonwillard assigned 2021-06-07 17:12:11,brandonwillard renamed 2021-06-07 17:21:13,brandonwillard referenced 2021-06-07 19:48:01,brandonwillard merged 2021-06-07 19:48:01,brandonwillard closed 2021-06-07 19:48:02,brandonwillard head_ref_deleted 2021-06-07 19:48:06",michaelosthege brandonwillard,3,True
240,471,Call axis reducer functions directly in `create_multiaxis_reducer`,brandonwillard,This PR closes #470.,important Numba,,brandonwillard,2021-06-08 03:40:47,2021-06-08 17:13:08,aesara/link/numba/dispatch.py,105b619d2a5c5698a82bc736bc1e71c55968259f,"brandonwillard labeled 2021-06-08 03:40:47,brandonwillard labeled 2021-06-08 03:40:47,brandonwillard assigned 2021-06-08 03:40:47,brandonwillard referenced 2021-06-08 17:13:08,brandonwillard merged 2021-06-08 17:13:08,brandonwillard closed 2021-06-08 17:13:08,brandonwillard head_ref_deleted 2021-06-08 17:13:25",codecov[bot] brandonwillard,1,True
241,473,Add optimizations to simplify unnecessary `logit` - `sigmoid` expressions,ricardoV94,"This PR introduces the following local rewrites during `specialization`:

```
log(sigmoid(x) / (1 - sigmoid(x))) -> x
sigmoid(log(x / (1-x)) -> x
```

",enhancement important graph rewriting,brandonwillard,ricardoV94,2021-06-08 20:27:36,2021-09-12 21:32:00,aesara/tensor/math_opt.py tests/tensor/test_math_opt.py,4b068d4ab88204bed1e598db01bc3348e75a4061,"ricardoV94 renamed 2021-06-08 20:28:12,ricardoV94 head_ref_force_pushed 2021-06-08 20:29:33,ricardoV94 convert_to_draft 2021-06-13 05:43:10,ricardoV94 head_ref_force_pushed 2021-06-15 14:09:55,ricardoV94 ready_for_review 2021-06-15 14:14:52,ricardoV94 head_ref_force_pushed 2021-06-15 14:17:53,ricardoV94 convert_to_draft 2021-06-22 15:30:48,ricardoV94 head_ref_force_pushed 2021-06-23 17:17:52,ricardoV94 head_ref_force_pushed 2021-07-02 12:41:05,ricardoV94 head_ref_force_pushed 2021-07-02 12:42:15,ricardoV94 head_ref_force_pushed 2021-07-02 12:45:19,ricardoV94 ready_for_review 2021-07-02 12:46:19,ricardoV94 assigned 2021-08-01 23:09:37,brandonwillard labeled 2021-08-01 23:09:51,brandonwillard labeled 2021-08-01 23:09:51,brandonwillard labeled 2021-08-01 23:09:51,ricardoV94 head_ref_force_pushed 2021-08-02 08:12:25,ricardoV94 head_ref_force_pushed 2021-08-09 07:42:53,ricardoV94 convert_to_draft 2021-08-09 07:43:25,ricardoV94 head_ref_force_pushed 2021-08-09 07:47:00,ricardoV94 head_ref_force_pushed 2021-08-09 17:54:30,ricardoV94 ready_for_review 2021-08-09 18:34:29,ricardoV94 review_requested 2021-08-09 20:14:08,ricardoV94 review_dismissed 2021-08-10 08:07:02,ricardoV94 head_ref_force_pushed 2021-08-10 08:07:02,ricardoV94 review_requested 2021-08-10 10:03:27,ricardoV94 head_ref_force_pushed 2021-08-11 09:36:37,ricardoV94 convert_to_draft 2021-08-12 13:34:45,ricardoV94 head_ref_force_pushed 2021-08-19 06:08:27,ricardoV94 head_ref_force_pushed 2021-08-19 09:52:59,ricardoV94 ready_for_review 2021-08-19 09:53:19,ricardoV94 head_ref_force_pushed 2021-08-19 15:02:09,ricardoV94 head_ref_force_pushed 2021-09-06 09:30:10,ricardoV94 review_dismissed 2021-09-07 07:58:29,ricardoV94 head_ref_force_pushed 2021-09-07 07:58:29,ricardoV94 review_requested 2021-09-09 04:23:36,ricardoV94 referenced 2021-09-12 21:32:00,ricardoV94 merged 2021-09-12 21:32:00,ricardoV94 closed 2021-09-12 21:32:00,ricardoV94 head_ref_deleted 2021-09-19 10:39:47",codecov[bot] ricardoV94 brandonwillard,17,True
242,475,Add Numba config options,brandonwillard,This PR adds some Numba config options for `fastmath` and the `target` option for `numba.vectorize`.,Numba,,brandonwillard,2021-06-09 02:16:36,2022-01-12 03:25:23,tests/link/test_numba.py aesara/configdefaults.py aesara/link/numba/dispatch.py,ee2ef15aec049f31c7eb11f86a335d07f8f7bdf1 8f29ffef4dbb46bc1fd1a6833c431957afe4bcbd f97bd9b26a15a4f77ee67fcef3a3738eec43f194,"brandonwillard assigned 2021-06-09 02:16:40,brandonwillard labeled 2021-06-09 02:16:46,brandonwillard head_ref_force_pushed 2021-09-17 04:19:40,brandonwillard head_ref_force_pushed 2021-09-17 04:20:06,brandonwillard connected 2021-11-08 23:41:23,brandonwillard closed 2022-01-12 03:25:23",dhirschfeld codecov[bot] brandonwillard dgerlanc twiecki,7,False
243,476,Add in-place functionality to the Numba `Elemwise` implementation,brandonwillard,This PR allows the Numba implementation of `Elemwise` to be performed in-place.,important Numba,,brandonwillard,2021-06-09 02:19:35,2021-06-10 04:54:11,aesara/tensor/elemwise.py tests/link/test_numba.py aesara/link/numba/dispatch.py,5da10a6f3765a1936739bae4ed579cef5e1614d4 b3cf2047d52b945c4d273aa2bbdb33ea847e00fb,"brandonwillard labeled 2021-06-09 02:19:35,brandonwillard labeled 2021-06-09 02:19:35,brandonwillard assigned 2021-06-09 02:19:35,brandonwillard connected 2021-06-09 02:19:45,brandonwillard head_ref_force_pushed 2021-06-09 21:29:12,brandonwillard referenced 2021-06-10 04:54:11,brandonwillard merged 2021-06-10 04:54:11,brandonwillard closed 2021-06-10 04:54:11,brandonwillard head_ref_deleted 2021-06-10 04:54:14",codecov[bot] twiecki brandonwillard,3,True
244,479,Set Actions workflows `concurrency` to `cancel-in-progress`,brandonwillard,Closes #469.,enhancement CI,,brandonwillard,2021-06-15 17:13:11,2021-06-15 19:57:23,.github/workflows/pypi.yml .github/workflows/test.yml,9fecdd4d263db458e8998de43491567de9ff25f6,"brandonwillard labeled 2021-06-15 17:13:11,brandonwillard labeled 2021-06-15 17:13:11,brandonwillard assigned 2021-06-15 17:13:11,brandonwillard head_ref_force_pushed 2021-06-15 17:16:29,brandonwillard head_ref_force_pushed 2021-06-15 17:17:52,brandonwillard referenced 2021-06-15 19:57:23,brandonwillard merged 2021-06-15 19:57:23,brandonwillard closed 2021-06-15 19:57:23,brandonwillard head_ref_deleted 2021-06-15 19:57:26",codecov[bot] brandonwillard,2,True
245,481,Add the new logo,brandonwillard,This PR adds our new logo.  Visit [my branch](https://github.com/brandonwillard/aesara/tree/add-logo-to-readme) to see the rendered README.,documentation,,brandonwillard,2021-06-17 23:01:59,2021-06-17 23:28:27,README.rst doc/images/aesara_logo_2400.png,d387c32b20519bcb0e965683798e07e63cab041b,"brandonwillard labeled 2021-06-17 23:01:59,brandonwillard assigned 2021-06-17 23:02:00,brandonwillard head_ref_force_pushed 2021-06-17 23:02:40,brandonwillard head_ref_force_pushed 2021-06-17 23:03:38,brandonwillard referenced 2021-06-17 23:28:27,brandonwillard merged 2021-06-17 23:28:27,brandonwillard closed 2021-06-17 23:28:27,brandonwillard head_ref_deleted 2021-06-17 23:28:32",brandonwillard,0,True
246,483,Rename `abs_` to `abs`,rlouf,Closes #480.,enhancement NumPy compatibility,,,2021-06-18 13:05:26,2021-06-19 07:28:47,doc/library/tensor/basic.rst aesara/tensor/math_opt.py aesara/tensor/math.py tests/tensor/test_inplace.py aesara/compile/nanguardmode.py aesara/tensor/extra_ops.py tests/tensor/test_math.py aesara/tensor/var.py aesara/scalar/basic.py aesara/tensor/inplace.py tests/tensor/test_math_opt.py,8369acd5c4dd130179b2cc365d33648161f98c0f 14b62d4fa573f4f4cdaca6058fcdaadd1cf5e907,"rlouf head_ref_force_pushed 2021-06-18 13:11:27,brandonwillard labeled 2021-06-19 00:27:25,brandonwillard labeled 2021-06-19 00:27:25,brandonwillard referenced 2021-06-19 07:28:47,brandonwillard merged 2021-06-19 07:28:47,brandonwillard closed 2021-06-19 07:28:47,ricardoV94 referenced 2021-06-23 16:48:30,rlouf head_ref_deleted 2022-10-13 14:07:16",codecov[bot] rlouf ricardoV94 brandonwillard,1,True
247,484,Restrict Actions workflow concurrency group to pull requests,brandonwillard,"This PR updates the recent GitHub Actions `concurrency` setting so that run cancellations are limited to only pull requests.

I noticed that some `main` workflows were erroneously canceled&mdash;assumedly due to the current `concurrency` settings&mdash;after merging a couple PRs, so hopefully this change addresses any future occurrences of that.

These settings were taken from [here](https://core.trac.wordpress.org/changeset/50930/trunk/.github/workflows/coding-standards.yml).",CI,,brandonwillard,2021-06-19 21:51:11,2021-06-19 22:43:05,.github/workflows/pypi.yml .github/workflows/test.yml,4d4a7e988c5b4711b717eb92b588862af4b0fa9f,"brandonwillard labeled 2021-06-19 21:51:11,brandonwillard assigned 2021-06-19 21:51:12,brandonwillard referenced 2021-06-19 22:43:05,brandonwillard merged 2021-06-19 22:43:05,brandonwillard closed 2021-06-19 22:43:05,brandonwillard head_ref_deleted 2021-06-19 22:43:07",codecov[bot] brandonwillard,1,True
248,486,Add `take_along_axis`,brandonwillard,This PR adds a helper function for `numpy.take_along_axis`.  There's also a commit that fixes some coverage-related issues (e.g. not ignoring some files).,enhancement CI NumPy compatibility,,brandonwillard,2021-06-21 03:20:24,2021-06-21 04:32:23,.github/workflows/test.yml aesara/tensor/basic.py setup.cfg .coveragerc tests/tensor/test_basic.py,b761b8f99e0abef4fdd6165f50e32feee2ed10c2 5db2c3b3494df60b1b3b333f9562862e4dc4b9ee,"brandonwillard labeled 2021-06-21 03:20:24,brandonwillard labeled 2021-06-21 03:20:24,brandonwillard assigned 2021-06-21 03:20:24,brandonwillard renamed 2021-06-21 03:20:48,brandonwillard labeled 2021-06-21 04:25:25,brandonwillard referenced 2021-06-21 04:32:23,brandonwillard merged 2021-06-21 04:32:23,brandonwillard closed 2021-06-21 04:32:23,brandonwillard head_ref_deleted 2021-06-21 04:32:27",codecov[bot] brandonwillard,1,True
249,490,Add `logsumexp` and `logaddexp`,ricardoV94,"Closes #467

***

+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [x] There are tests covering the changes introduced in the PR.",enhancement,brandonwillard,ricardoV94,2021-06-21 10:29:14,2021-06-21 16:11:18,aesara/tensor/math.py tests/tensor/test_math.py,6379b9156c002639bbd9d424b7860ee635f4508b c61a63ab537e1eed7273a2238e05771ee1cbcbed,"ricardoV94 assigned 2021-06-21 16:10:05,brandonwillard labeled 2021-06-21 16:10:12,brandonwillard referenced 2021-06-21 16:11:18,brandonwillard merged 2021-06-21 16:11:18,brandonwillard closed 2021-06-21 16:11:18,ricardoV94 head_ref_deleted 2021-06-23 15:25:01",codecov[bot] ricardoV94 brandonwillard,1,True
250,492,Remove explicit `debugprint` import from README,ricardoV94,,,brandonwillard,,2021-06-22 11:55:25,2021-06-22 16:14:34,README.rst,7b877c4fa80ffc04506598cf32af5b8b05cf90ea,"brandonwillard referenced 2021-06-22 16:14:34,brandonwillard merged 2021-06-22 16:14:34,brandonwillard closed 2021-06-22 16:14:34,brandonwillard head_ref_deleted 2021-06-22 16:14:41",ricardoV94 brandonwillard,0,True
251,495,Add log1mexp op and opt,ricardoV94,"This PR adds the numerically stable `log1mexp` `op` and `opt` for graphs of the form `log(1 - exp(x))`. Closes #360 

Question: Do I need to do anything for the `jax` / `numba` linkers?

Some other minor changes: 
1. Added a more intuitive alias to `Softplus` as `log1pexp`. 
1. Added rewrites for expressions of `exp(log1mexp(x))` and `exp(Softplus(x))` in line with existing rewrites for `exp(log...(x))`
1. Separated `local_exp_log` opt into two separate ones, with the ones that add a `nan switch` term appearing only during `specialization`.
",enhancement graph rewriting,brandonwillard,,2021-06-23 15:14:48,2021-07-01 20:46:06,aesara/tensor/math_opt.py aesara/tensor/math.py aesara/scalar/math.py aesara/tensor/inplace.py tests/tensor/test_math_opt.py tests/tensor/test_math_scipy.py,1a6475d3b4781dc43404222374e65a8e6622dfd8 e5f721b1531e20f6434a8062f51dbf23ba58d46c 6922ddb1db87a497a73fb5482b541a55ee44aa91 74a0cdf1dc1b466bb5458fc06487c93722411fe9 5d095834e6bfecbcaa57d061f63dac4c78a1f500,"ricardoV94 head_ref_force_pushed 2021-06-23 15:18:10,ricardoV94 head_ref_force_pushed 2021-06-23 16:48:31,ricardoV94 head_ref_force_pushed 2021-06-23 16:49:31,ricardoV94 head_ref_force_pushed 2021-06-23 16:56:52,ricardoV94 head_ref_force_pushed 2021-06-25 06:46:38,ricardoV94 head_ref_force_pushed 2021-06-25 16:29:41,ricardoV94 head_ref_force_pushed 2021-06-25 17:51:47,ricardoV94 head_ref_force_pushed 2021-06-25 18:00:02,ricardoV94 head_ref_force_pushed 2021-06-27 16:44:04,ricardoV94 review_requested 2021-06-28 05:31:57,ricardoV94 head_ref_force_pushed 2021-06-30 10:51:16,ricardoV94 head_ref_force_pushed 2021-06-30 11:15:50,brandonwillard labeled 2021-06-30 19:46:32,brandonwillard labeled 2021-06-30 19:46:32,ricardoV94 head_ref_force_pushed 2021-07-01 08:45:18,ricardoV94 head_ref_force_pushed 2021-07-01 08:50:26,brandonwillard referenced 2021-07-01 20:46:05,brandonwillard merged 2021-07-01 20:46:06,brandonwillard closed 2021-07-01 20:46:06,ricardoV94 head_ref_deleted 2021-09-19 10:39:31",codecov[bot] ricardoV94 brandonwillard,15,True
252,497,Updates to linear algebra `Op`s,brandonwillard,"This PR provides updates to the `aesara.tensor.[n|s]linalg` modules.  

It removes the conditional logic for the presence of SciPy, automatically makes `slinalg` available from `aesara.tensor`, and updates `Solve` to use the current SciPy arguments/options, adds an `Op` for `numpy.linalg.inv`, adds the `hermitian` option to `MatrixPinv`, and a `MatrixPinv.infer_shape` implementation.",enhancement NumPy compatibility,,brandonwillard,2021-06-24 04:53:55,2021-06-25 19:39:15,tests/tensor/test_slinalg.py doc/extending/other_ops.rst aesara/sandbox/linalg/__init__.py tests/link/test_numba.py aesara/tensor/nlinalg.py aesara/sandbox/linalg/ops.py aesara/tensor/var.py tests/gpuarray/test_opt.py tests/tensor/nnet/test_corr3d.py tests/tensor/nnet/test_corr.py aesara/tensor/linalg.py setup.cfg aesara/tensor/slinalg.py tests/sandbox/linalg/test_linalg.py tests/tensor/test_math_opt.py aesara/tensor/__init__.py aesara/tensor/nnet/conv.py aesara/sparse/type.py tests/tensor/test_nlinalg.py tests/gpuarray/test_linalg.py aesara/link/numba/dispatch.py aesara/tensor/nnet/abstract_conv.py tests/tensor/nnet/test_abstract_conv.py aesara/scalar/math.py aesara/link/jax/dispatch.py tests/tensor/nnet/test_conv.py tests/tensor/test_math_scipy.py,59691b2f3d3e38ee4233b6890f007702e840c7d4 630d39b42ff1a079a89b2bfa003508bbe9bde8b6 c759b34a02239ccb67fb35fcbed8080bd1e5b725 e3383b65cf497331984ba46b418d66b9e3f6105e 7f635c9b3b878044934f911ab997a994c018d1fd 8c8d74aa77e7cc789ad27a2cde29a52c81568a73 90541d05977f537394d2887e683d0aeedff6d539 ba589231ef254d5c056ebe51e6e4548fc6a8670f 55120c9892006e55c5fef20743a0dba0de0a16db,"brandonwillard labeled 2021-06-24 04:53:55,brandonwillard labeled 2021-06-24 04:53:55,brandonwillard assigned 2021-06-24 04:53:55,brandonwillard head_ref_force_pushed 2021-06-25 04:08:50,brandonwillard head_ref_force_pushed 2021-06-25 04:13:40,brandonwillard head_ref_force_pushed 2021-06-25 04:44:36,brandonwillard renamed 2021-06-25 04:45:44,brandonwillard head_ref_force_pushed 2021-06-25 05:07:07,brandonwillard ready_for_review 2021-06-25 05:07:11,brandonwillard head_ref_force_pushed 2021-06-25 05:14:07,brandonwillard head_ref_force_pushed 2021-06-25 05:18:14,brandonwillard head_ref_force_pushed 2021-06-25 05:20:43,brandonwillard head_ref_force_pushed 2021-06-25 06:10:59,brandonwillard head_ref_force_pushed 2021-06-25 16:43:37,brandonwillard head_ref_force_pushed 2021-06-25 16:52:25,brandonwillard head_ref_force_pushed 2021-06-25 16:56:37,brandonwillard referenced 2021-06-25 19:39:15,brandonwillard merged 2021-06-25 19:39:15,brandonwillard closed 2021-06-25 19:39:15,brandonwillard head_ref_deleted 2021-06-25 19:39:18",codecov[bot] ricardoV94 twiecki brandonwillard,5,True
253,498,Update vectorize function in numba_funcify_Elemwise,fanshi118,This PR removes an unnecessary function call in the Numba conversion of `Elemwise` `Op`s.  It also fixes a bug in `test_Elemwise` when the `MyMultiOut` test `Op` is used with a more recent NumPy version.,bug enhancement important Numba,,brandonwillard,2021-06-25 00:43:11,2021-06-25 03:24:00,aesara/link/utils.py tests/link/test_numba.py aesara/link/numba/dispatch.py,5dec9900d1328279f25157495b85832797b7b5e4 cf70c13be81884793707a27d0b7371928a6dfb00,"brandonwillard labeled 2021-06-25 00:45:26,brandonwillard labeled 2021-06-25 00:45:26,brandonwillard head_ref_force_pushed 2021-06-25 01:49:34,brandonwillard labeled 2021-06-25 01:52:17,brandonwillard labeled 2021-06-25 01:52:17,brandonwillard assigned 2021-06-25 01:54:22,brandonwillard head_ref_force_pushed 2021-06-25 02:10:50,brandonwillard referenced 2021-06-25 03:24:00,brandonwillard merged 2021-06-25 03:24:00,brandonwillard closed 2021-06-25 03:24:00,fanshi118 head_ref_deleted 2021-06-25 15:22:11",codecov[bot] fanshi118 brandonwillard,1,True
254,502,Simplify Numba reducer functions,brandonwillard,This PR simplifies and updates the docstrings of the helper functions that produce Numba array reductions.,enhancement Numba,,brandonwillard,2021-06-28 22:32:39,2021-06-28 23:56:07,aesara/link/numba/dispatch.py,ba850cf27406dac5192b7fe38342c4bc8185b857 957568d4a3137d5b641ed3dabfd4134333b94fb8,"brandonwillard labeled 2021-06-28 22:32:39,brandonwillard labeled 2021-06-28 22:32:39,brandonwillard assigned 2021-06-28 22:32:39,brandonwillard referenced 2021-06-28 23:56:07,brandonwillard merged 2021-06-28 23:56:07,brandonwillard closed 2021-06-28 23:56:07,brandonwillard head_ref_deleted 2021-06-28 23:56:10",codecov[bot] brandonwillard,1,True
255,503,Propagate `RandomVariable` names in `local_dimshuffle_rv_lift`,ricardoV94,"The custom name of `RV` Ops are lost during ~~rewrites~~ the `Dimshuffle_lift` rewrite. 

This PR propagates the name in that rewrite, and also adds checks for this behavior in the `local_rv_size_lift` which already propagated the `RV` name.",enhancement graph rewriting,brandonwillard,,2021-07-01 06:31:55,2021-11-30 17:23:23,aesara/tensor/random/opt.py tests/tensor/random/test_opt.py,eb45251b2f13d244f87399ab6e5a9e8748cf9a6b,"ricardoV94 labeled 2021-07-01 06:31:55,ricardoV94 renamed 2021-07-01 06:32:50,ricardoV94 head_ref_force_pushed 2021-07-01 08:22:09,ricardoV94 head_ref_force_pushed 2021-07-02 10:55:40,ricardoV94 head_ref_force_pushed 2021-07-02 10:56:12,ricardoV94 renamed 2021-07-02 10:56:27,ricardoV94 head_ref_force_pushed 2021-08-02 07:50:14,ricardoV94 review_requested 2021-08-02 07:50:29,ricardoV94 unlabeled 2021-08-02 12:04:58,ricardoV94 head_ref_force_pushed 2021-09-19 10:36:56,ricardoV94 review_requested 2021-09-19 10:37:10,ricardoV94 head_ref_force_pushed 2021-11-29 13:04:46,ricardoV94 head_ref_force_pushed 2021-11-29 13:06:12,brandonwillard referenced 2021-11-30 17:23:23,brandonwillard merged 2021-11-30 17:23:23,brandonwillard closed 2021-11-30 17:23:23,brandonwillard renamed 2021-12-09 22:45:51,brandonwillard labeled 2021-12-09 22:46:04,brandonwillard labeled 2021-12-09 22:46:04",codecov[bot] ricardoV94 brandonwillard,5,True
256,504,Add `cho_solve` `Op`,xjing76,Adding `cho_solve` that correspond to [`scipy.linalg.cho_solve`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.linalg.cho_solve.html),enhancement,brandonwillard,,2021-07-01 19:53:54,2021-08-08 22:01:54,tests/tensor/test_slinalg.py aesara/tensor/slinalg.py,71c270360b347cf3abbd31363923cf7e2c0935e3,"xjing76 head_ref_force_pushed 2021-07-01 19:55:06,xjing76 head_ref_force_pushed 2021-07-01 19:57:15,brandonwillard labeled 2021-07-01 20:29:49,brandonwillard labeled 2021-07-01 20:29:49,brandonwillard renamed 2021-07-01 20:42:11,xjing76 head_ref_force_pushed 2021-07-02 00:07:10,xjing76 head_ref_force_pushed 2021-07-02 13:07:35,xjing76 head_ref_force_pushed 2021-07-08 12:14:27,xjing76 review_dismissed 2021-07-09 11:40:47,xjing76 head_ref_force_pushed 2021-07-09 11:40:47,xjing76 head_ref_force_pushed 2021-07-12 17:24:53,xjing76 head_ref_force_pushed 2021-07-16 09:42:57,brandonwillard review_dismissed 2021-08-01 22:34:05,brandonwillard head_ref_force_pushed 2021-08-01 22:34:05,brandonwillard head_ref_force_pushed 2021-08-01 22:34:45,brandonwillard referenced 2021-08-08 22:01:54,brandonwillard merged 2021-08-08 22:01:54,brandonwillard closed 2021-08-08 22:01:54",xjing76 codecov[bot] brandonwillard,9,True
257,507,Work around SciPy squeeze defect,brandonwillard,"This PR adds a work-around for SciPy's dropped/squeezed broadcast dimensions (e.g. see https://github.com/scipy/scipy/issues/7689) and refactors the `aesara.tensor.random` tests.

This work-around makes the SciPy-based `RandomVariable`s consistent&mdash;both in general and with NumPy.",bug important NumPy compatibility,,brandonwillard,2021-07-05 22:27:51,2021-07-07 20:51:11,tests/unittest_tools.py tests/tensor/random/test_basic.py aesara/tensor/random/op.py aesara/tensor/random/basic.py,d8723d75816b4cb190d3b62cf66078cf1eebb14a f9dc1ba460defe4a49c996939b56c77a90ce08a7,"brandonwillard labeled 2021-07-05 22:27:51,brandonwillard labeled 2021-07-05 22:27:51,brandonwillard labeled 2021-07-05 22:27:51,brandonwillard assigned 2021-07-05 22:27:51,brandonwillard head_ref_force_pushed 2021-07-05 23:44:05,brandonwillard head_ref_force_pushed 2021-07-06 20:09:11,brandonwillard head_ref_force_pushed 2021-07-06 21:13:32,brandonwillard head_ref_force_pushed 2021-07-07 03:24:25,brandonwillard head_ref_force_pushed 2021-07-07 05:24:59,brandonwillard head_ref_force_pushed 2021-07-07 05:27:08,brandonwillard head_ref_force_pushed 2021-07-07 05:43:23,brandonwillard referenced 2021-07-07 20:51:11,brandonwillard merged 2021-07-07 20:51:11,brandonwillard closed 2021-07-07 20:51:11,brandonwillard head_ref_deleted 2021-07-07 20:51:14",codecov[bot] brandonwillard,1,True
258,509,Make `BroadcastTo` work on arrays with zero-shapes,brandonwillard,Closes #508.,bug important,,brandonwillard,2021-07-07 05:17:17,2021-07-09 03:55:55,tests/tensor/test_type.py tests/tensor/test_extra_ops.py aesara/tensor/type.py aesara/tensor/extra_ops.py tests/scan/test_basic.py,b2c5d53a5eebf46d2ff7976fd33cd1274e23d47c ff8882752cdcbf649ffcb2b5fa667afe93f8f697 466d8fe2e13e4288b0882550f6eb542bb40d2aab,"brandonwillard labeled 2021-07-07 05:17:17,brandonwillard labeled 2021-07-07 05:17:17,brandonwillard assigned 2021-07-07 05:17:18,brandonwillard head_ref_force_pushed 2021-07-07 05:17:41,brandonwillard head_ref_force_pushed 2021-07-07 05:18:03,brandonwillard head_ref_force_pushed 2021-07-07 15:50:38,brandonwillard head_ref_force_pushed 2021-07-07 20:52:27,brandonwillard closed 2021-07-09 03:55:55,brandonwillard head_ref_deleted 2021-11-10 20:29:43",codecov[bot] twiecki brandonwillard,2,False
259,510,Replace `scan_args` with `ScanArgs`,kc611,"This PR just replicates `ScanArgs` logic from https://github.com/pymc-devs/symbolic-pymc/pull/114 over here in Aesara.
",enhancement,,,2021-07-07 06:29:02,2021-07-17 23:40:38,doc/extending/scan.rst aesara/scan/utils.py aesara/scan/opt.py tests/scan/test_utils.py aesara/link/jax/dispatch.py,617e9b747e6700f3240b4d6779fc8dd79a9b6b55,"brandonwillard head_ref_force_pushed 2021-07-17 22:26:57,brandonwillard labeled 2021-07-17 22:27:07,brandonwillard renamed 2021-07-17 22:27:48,brandonwillard referenced 2021-07-17 23:40:38,brandonwillard merged 2021-07-17 23:40:38,brandonwillard closed 2021-07-17 23:40:38",kc611 brandonwillard,0,True
260,513,Add gammainc(c) derivatives,ricardoV94,"This PR adds a Python implementation of derivatives of the `gammainc` and `gamaincc`. Closes #74.

The algorithms were adapted from the STAN library. ",enhancement,twiecki brandonwillard,ricardoV94,2021-07-08 17:32:49,2021-09-19 11:27:18,tests/tensor/test_math_scipy.py aesara/scalar/math.py tests/scalar/test_math.py,bd5f5fd7c77be0bf187148534a80d672d7aef089 51ff05f34ab99702cca4bc524d89fa7abf7bf3c9 924e8c46dff6459a319397cde660928811d9106b,"ricardoV94 head_ref_force_pushed 2021-07-21 10:53:30,brandonwillard labeled 2021-08-01 23:10:11,ricardoV94 assigned 2021-08-01 23:10:15,ricardoV94 head_ref_force_pushed 2021-08-02 08:26:00,brandonwillard review_dismissed 2021-09-18 21:24:28,brandonwillard head_ref_force_pushed 2021-09-18 21:24:28,ricardoV94 review_requested 2021-09-19 11:02:33,twiecki referenced 2021-09-19 11:27:17,twiecki merged 2021-09-19 11:27:17,twiecki closed 2021-09-19 11:27:18,ricardoV94 head_ref_deleted 2022-01-03 16:45:22",codecov[bot] ricardoV94 twiecki brandonwillard,5,True
261,516,Broadcast Fixes,brandonwillard,This PR contains multiple fixes related to broadcastable dimensions in shape calculations.,bug enhancement important,ricardoV94,brandonwillard,2021-07-11 04:45:44,2021-07-11 18:11:04,aesara/tensor/basic.py aesara/tensor/shape.py tests/tensor/test_type.py tests/tensor/test_extra_ops.py aesara/tensor/random/op.py aesara/tensor/type.py aesara/tensor/extra_ops.py tests/scan/test_basic.py aesara/tensor/random/utils.py,ee9a9219e367fe725d232a75dfe5070c1de0d530 466d8fe2e13e4288b0882550f6eb542bb40d2aab 938805ced635658dca941a3b3e892f1d85e47ef9 3520d65ed79b11daea588ab7f14bcfa88745530b 7488651ce28380c32dfa5be5ea89755f9a2311e7,"brandonwillard labeled 2021-07-11 04:45:44,brandonwillard labeled 2021-07-11 04:45:44,brandonwillard labeled 2021-07-11 04:45:44,brandonwillard assigned 2021-07-11 04:45:44,brandonwillard head_ref_force_pushed 2021-07-11 04:59:56,brandonwillard head_ref_force_pushed 2021-07-11 05:26:39,brandonwillard head_ref_force_pushed 2021-07-11 06:43:31,brandonwillard head_ref_force_pushed 2021-07-11 16:49:45,brandonwillard referenced 2021-07-11 18:11:04,brandonwillard merged 2021-07-11 18:11:04,brandonwillard closed 2021-07-11 18:11:04,brandonwillard head_ref_deleted 2021-07-11 18:11:06",codecov[bot] ricardoV94 brandonwillard,2,True
262,520,Replace `take` in `_tensor_py_operators.__getitem__` with an optimization,brandonwillard,"Closes #518.

- [x] Make `aesara.tensor.subtensor.take` return a simple `*Subtensor*` result (e.g. `x[..., idx, ...]`).
  The old `take` graph will be produced later during optimization, so the end result should be the same.",enhancement important,,brandonwillard,2021-07-12 00:13:54,2021-07-17 00:18:51,tests/sparse/test_basic.py tests/tensor/test_subtensor.py aesara/tensor/shape.py aesara/sparse/__init__.py tests/tensor/test_var.py tests/compile/test_builders.py aesara/tensor/subtensor.py tests/tensor/test_extra_ops.py tests/tensor/test_shape.py tests/link/test_jax.py tests/link/test_numba.py tests/tensor/test_subtensor_opt.py aesara/tensor/basic_opt.py aesara/tensor/var.py aesara/tensor/subtensor_opt.py tests/unittest_tools.py tests/tensor/test_basic_opt.py aesara/tensor/__init__.py,f51f563a68fa572c28300e92cdb5a6189000fda7 7bf72a5b76f3a6a1f5db1ecad5629a59a91d49a1 b5e528658851b71c15267864a390a64d48197c17 f0dcd986e745592c5b54a265a04aaceaa2ef512d c29aa575b6115dbfb20b30ad12fb79fb0a603d53,"brandonwillard labeled 2021-07-12 00:13:54,brandonwillard labeled 2021-07-12 00:13:54,brandonwillard assigned 2021-07-12 00:13:54,brandonwillard head_ref_force_pushed 2021-07-12 00:23:45,brandonwillard head_ref_force_pushed 2021-07-12 00:40:42,brandonwillard head_ref_force_pushed 2021-07-12 00:42:58,brandonwillard head_ref_force_pushed 2021-07-12 01:05:49,brandonwillard head_ref_force_pushed 2021-07-12 05:42:56,brandonwillard head_ref_force_pushed 2021-07-12 18:42:41,brandonwillard head_ref_force_pushed 2021-07-12 20:21:14,brandonwillard head_ref_force_pushed 2021-07-12 22:14:53,brandonwillard head_ref_force_pushed 2021-07-12 22:45:33,brandonwillard head_ref_force_pushed 2021-07-12 23:51:11,brandonwillard head_ref_force_pushed 2021-07-13 02:20:08,brandonwillard head_ref_force_pushed 2021-07-13 03:35:47,brandonwillard head_ref_force_pushed 2021-07-13 03:36:03,brandonwillard head_ref_force_pushed 2021-07-13 03:58:13,brandonwillard head_ref_force_pushed 2021-07-13 21:02:28,brandonwillard head_ref_force_pushed 2021-07-14 01:16:19,brandonwillard head_ref_force_pushed 2021-07-14 02:17:38,brandonwillard head_ref_force_pushed 2021-07-14 02:21:12,brandonwillard head_ref_force_pushed 2021-07-14 02:28:40,brandonwillard head_ref_force_pushed 2021-07-14 04:16:07,brandonwillard head_ref_force_pushed 2021-07-14 20:42:53,brandonwillard ready_for_review 2021-07-15 03:14:11,brandonwillard head_ref_force_pushed 2021-07-16 00:20:20,brandonwillard referenced 2021-07-17 00:18:51,brandonwillard merged 2021-07-17 00:18:51,brandonwillard closed 2021-07-17 00:18:51,brandonwillard head_ref_deleted 2021-07-17 00:18:54",codecov[bot] brandonwillard,1,True
263,523,Replace `aesara.graph.unify` with `logical-unification` and add a `KanrenRelationSub` local optimizer,brandonwillard,"This PR adds [`kanren`](https://github.com/pythological/kanren), [`logical-unification`](https://github.com/pythological/unification), [`etuples`](https://github.com/pythological/etuples), and [`cons`](https://github.com/pythological/python-cons) support to Aesara graph objects (e.g. `Variable` and `Op`).  These libraries completely replace `aesara.graph.unify` and its related machinery.

It also introduces the `KanrenRelationSub` `LocalOptimizer` from [`symbolic-pymc`](https://github.com/pymc-devs/symbolic-pymc).  This rewriter allows one to apply `kanren` relations to Aesara graphs.

- [x] Replace `aesara.graph.unify` framework with`logical-unification`
- [x] Refactor `PatternSub` to work with `logical-unification`

Closes #67.",enhancement important graph rewriting refactor,ricardoV94 kc611,brandonwillard,2021-07-12 20:05:54,2021-12-08 00:15:03,tests/graph/utils.py aesara/graph/kanren.py aesara/graph/opt.py tests/graph/test_unify.py aesara/graph/unify.py tests/graph/test_kanren.py aesara/tensor/type.py tests/graph/test_opt.py setup.py,47a8420e0b7b0e9086a4c1b6ac17225cb2138324 68d348a73bdae12aa7c62226e29f6e989afb3b26 5cf37307dcde2c3aff2df1e8e08844d800b84163,"brandonwillard labeled 2021-07-12 20:05:54,brandonwillard labeled 2021-07-12 20:05:54,brandonwillard labeled 2021-07-12 20:08:34,brandonwillard head_ref_force_pushed 2021-10-17 21:27:06,brandonwillard head_ref_force_pushed 2021-10-18 17:57:52,brandonwillard head_ref_force_pushed 2021-10-18 20:36:39,brandonwillard head_ref_force_pushed 2021-10-19 17:54:13,brandonwillard head_ref_force_pushed 2021-10-25 20:32:37,brandonwillard head_ref_force_pushed 2021-11-28 01:55:29,brandonwillard head_ref_force_pushed 2021-11-28 02:30:27,brandonwillard head_ref_force_pushed 2021-11-28 02:31:06,brandonwillard head_ref_force_pushed 2021-11-28 02:32:52,brandonwillard assigned 2021-11-28 02:34:51,brandonwillard ready_for_review 2021-11-28 02:34:56,brandonwillard labeled 2021-11-28 02:35:13,brandonwillard head_ref_force_pushed 2021-12-03 08:29:57,brandonwillard head_ref_force_pushed 2021-12-03 17:07:17,brandonwillard head_ref_force_pushed 2021-12-04 00:28:28,brandonwillard head_ref_force_pushed 2021-12-04 03:48:03,brandonwillard head_ref_force_pushed 2021-12-04 04:30:20,brandonwillard review_requested 2021-12-04 04:31:10,brandonwillard review_requested 2021-12-04 04:31:18,brandonwillard head_ref_force_pushed 2021-12-04 04:32:53,brandonwillard head_ref_force_pushed 2021-12-04 07:16:09,brandonwillard head_ref_force_pushed 2021-12-05 06:14:38,brandonwillard renamed 2021-12-05 07:53:57,brandonwillard head_ref_force_pushed 2021-12-05 08:48:14,brandonwillard head_ref_force_pushed 2021-12-06 21:07:28,brandonwillard head_ref_force_pushed 2021-12-07 00:05:15,brandonwillard head_ref_force_pushed 2021-12-07 22:05:30,brandonwillard referenced 2021-12-08 00:15:03,brandonwillard merged 2021-12-08 00:15:03,brandonwillard closed 2021-12-08 00:15:04,brandonwillard head_ref_deleted 2021-12-08 00:15:06",codecov[bot] ricardoV94 kc611 brandonwillard,15,True
264,526,Fix bug in `broadcast_shape_iter` when all dims are broadcastable,brandonwillard,This PR fixes a bug in `broadcast_shape_iter` that occurs when all dims are broadcastable (the resulting broadcasted shape ends up being -1).,bug important,,brandonwillard,2021-07-15 21:56:22,2021-07-15 23:29:48,aesara/tensor/extra_ops.py tests/tensor/test_extra_ops.py,c12d1ff281e70983c172e33d05415d99d7a727b7,"brandonwillard labeled 2021-07-15 21:56:22,brandonwillard labeled 2021-07-15 21:56:22,brandonwillard assigned 2021-07-15 21:56:23,brandonwillard renamed 2021-07-15 21:56:31,brandonwillard head_ref_force_pushed 2021-07-15 21:57:15,brandonwillard head_ref_force_pushed 2021-07-15 21:58:00,brandonwillard referenced 2021-07-15 23:29:48,brandonwillard merged 2021-07-15 23:29:48,brandonwillard closed 2021-07-15 23:29:48,brandonwillard head_ref_deleted 2021-07-15 23:29:52",codecov[bot] brandonwillard,1,True
265,530,Expose `standard_normal` to RandomStream,zoj613,"Exposes `standard_normal`  to the random namespace for convenience and to be more consistent with the behavior of `np.random.RandomState`.

closes #528 ",,ricardoV94 twiecki,,2021-07-20 07:42:55,2021-07-22 05:52:26,tests/tensor/random/test_utils.py tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,88bd4f230e97f934915b1c230d71e2ae21d0c4be d248e691b429c02f2293847c055eec42df1184e4,"zoj613 review_dismissed 2021-07-20 10:01:41,zoj613 head_ref_force_pushed 2021-07-20 10:01:41,zoj613 head_ref_force_pushed 2021-07-20 11:32:32,zoj613 head_ref_force_pushed 2021-07-21 16:34:06,zoj613 review_requested 2021-07-21 16:34:18,zoj613 head_ref_force_pushed 2021-07-21 16:34:57,zoj613 review_dismissed 2021-07-21 19:37:37,zoj613 head_ref_force_pushed 2021-07-21 19:37:37,twiecki mentioned 2021-07-21 19:38:15,twiecki subscribed 2021-07-21 19:38:15,zoj613 head_ref_force_pushed 2021-07-21 19:41:39,twiecki referenced 2021-07-22 05:52:26,twiecki merged 2021-07-22 05:52:26,twiecki closed 2021-07-22 05:52:27,zoj613 mentioned 2021-07-22 05:52:43,zoj613 subscribed 2021-07-22 05:52:43,zoj613 head_ref_deleted 2021-07-22 15:23:38",codecov[bot] ricardoV94 zoj613 twiecki,5,True
266,531,Register `log1p_neg_sigmoid` rewrite in specialize,ricardoV94,"The rewrite `log1p(-sigmoid(x)) -> -softplus(x)` seems to not work just in `canonicalize`. This came up in https://github.com/aesara-devs/aesara/issues/29#issuecomment-680818970 and in some precision benchmarks I have been doing.

By itself, this change should be enough to address https://github.com/pymc-devs/pymc3/pull/4620 and perhaps render #473 unnecessary.
",,twiecki,,2021-07-21 10:59:19,2021-07-21 16:39:37,aesara/tensor/math_opt.py tests/tensor/test_math_opt.py,05b4431a5f5b02b461e014c6cc0f44e736b3cb37,"ricardoV94 review_requested 2021-07-21 10:59:26,ricardoV94 referenced 2021-07-21 16:39:37,ricardoV94 merged 2021-07-21 16:39:37,ricardoV94 closed 2021-07-21 16:39:37,ricardoV94 head_ref_deleted 2021-08-06 07:25:47",codecov[bot] ricardoV94 twiecki,1,True
267,534,Add `ScanArgs` tests and optional cloning,brandonwillard,"This PR adds some missing `ScanArgs` tests and makes graph cloning optional.  Cloning is the default when the `ScanArgs` constructor is used (like it originally was in `scan_args`), but not when `ScanArgs.from_node` is used (as it was in `symbolic-pymc`).",enhancement,,brandonwillard,2021-07-25 23:00:32,2021-07-26 01:50:58,.pre-commit-config.yaml tests/scan/test_utils.py aesara/scan/utils.py tests/tensor/test_shape.py,554dae49f1567532026965cf688551a1a0fba4f0 c0e014ebdbd50a0e49d8ead1b985538b71688c80,"brandonwillard labeled 2021-07-25 23:00:32,brandonwillard assigned 2021-07-25 23:00:33,brandonwillard renamed 2021-07-25 23:00:52,brandonwillard head_ref_force_pushed 2021-07-25 23:07:51,brandonwillard head_ref_force_pushed 2021-07-25 23:28:16,brandonwillard head_ref_force_pushed 2021-07-25 23:36:51,brandonwillard referenced 2021-07-26 01:50:58,brandonwillard merged 2021-07-26 01:50:58,brandonwillard closed 2021-07-26 01:50:58,brandonwillard head_ref_deleted 2021-07-26 01:51:01",codecov[bot] brandonwillard,1,True
268,537,Make `RandomVariable.compute_bcast` use constant folding,brandonwillard,"This PR closes #536 by making `RandomVariable.compute_bcast` use constant folding to discover broadcastable dimensions more thoroughly.  It also fixes some docstring and `VMLinker` exception issues and removes some mistaken `TensorType` class methods from `RandomType`.


The constant folding approach used by `RandomVariable.compute_bcast` in this PR is very thorough compared to the hodgepodge of logic that relied on `get_scalar_constant_value`; however, the graphs resulting from the `shape` variable in `RandomVariable.compute_bcast` need to be cloned, and those cloned graphs are constant folded, which is a little redundant when/if the same constant folding will end up being performed later as well.  

We need to be aware of these performance-related points, including the general scope and cost of constant folding and shape inference (via the `ShapeFeature` attached to `shape_fg`).  This doesn't prevent us from using constant folding to replace the misguided `get_scalar_constant_value` function in the long run, we just might need to limit the scope of it in special cases (e.g. very large constants in a graph, or constants passed to sophisticated `Op`s, etc.)

For instance, we could add options to dynamically restrict the scope of constant folding to certain `Op`s.  The result would be a function much more in line with `get_scalar_constant_value`, but without the inherent redundancy and scope creep.",bug important,ricardoV94,brandonwillard,2021-07-29 02:23:48,2021-07-29 14:31:33,aesara/link/vm.py aesara/link/utils.py tests/tensor/random/test_type.py aesara/tensor/random/type.py aesara/graph/type.py aesara/tensor/random/op.py aesara/tensor/type.py tests/tensor/random/test_op.py tests/link/test_vm.py,ec968c534b7d1dfcd3419783483790df9c41c24c 3f9afc7105441551ae317733582e91b64896ae95 2953533fe9b7867b751c2bc4a3fd2bd2416c06ce 12753bd30ad909b4e65330032e176a32a7228adb d9fbda7dea41e2ed7875e80492a5b0485d48d736 1d71605aae509de3980e0eb738bca60f3b6dd800,"brandonwillard labeled 2021-07-29 02:23:48,brandonwillard labeled 2021-07-29 02:23:48,brandonwillard assigned 2021-07-29 02:23:48,brandonwillard renamed 2021-07-29 02:29:06,brandonwillard renamed 2021-07-29 02:29:16,brandonwillard head_ref_force_pushed 2021-07-29 04:13:39,brandonwillard head_ref_force_pushed 2021-07-29 04:17:25,brandonwillard head_ref_force_pushed 2021-07-29 04:39:01,brandonwillard review_requested 2021-07-29 06:15:10,brandonwillard review_requested 2021-07-29 06:15:15,brandonwillard referenced 2021-07-29 14:31:33,brandonwillard merged 2021-07-29 14:31:33,brandonwillard closed 2021-07-29 14:31:33,brandonwillard head_ref_deleted 2021-07-29 14:31:36",codecov[bot] ricardoV94 brandonwillard,1,True
269,538,Fix openmp pragma statement in elemwise,msibaev,"Currently setting `openmp=true`  generate C++ code that cannot be compiled. The offending line contains invalid openmp pragma call.

```
#pragma omp parallel for if(n>={int(config.openmp_elemwise_minsize)})
```

That's because [this line in tensor/elemwise.py](https://github.com/aesara-devs/aesara/blob/main/aesara/tensor/elemwise.py#L1148) was meant to be an f-string.

To reproduce the error you can run a `misc` script from the root directory

```
THEANO_FLAGS=""openmp=true,nocleanup=true"" OMP_NUM_THREADS=2 python theano/misc/elemwise_time_test.py
```
",,brandonwillard,,2021-07-29 05:04:11,2021-07-29 06:49:06,aesara/tensor/elemwise.py,ed8849fac8ad03fc96620adb9089e3443e4609ea,"msibaev mentioned 2021-07-29 05:55:17,msibaev subscribed 2021-07-29 05:55:17,twiecki subscribed 2021-07-29 06:24:17,dgerlanc subscribed 2021-07-29 06:24:17,brandonwillard subscribed 2021-07-29 06:24:17,rlouf subscribed 2021-07-29 06:24:17,ricardoV94 subscribed 2021-07-29 06:24:17,kc611 subscribed 2021-07-29 06:24:17,twiecki referenced 2021-07-29 06:49:06,twiecki merged 2021-07-29 06:49:06,twiecki closed 2021-07-29 06:49:06,msibaev head_ref_deleted 2021-07-29 09:05:39",rlouf msibaev kc611 brandonwillard ricardoV94 ghost dgerlanc twiecki,5,True
270,540,Fix for extra `RandomVariable` reappearing in `Scan` outputs,kc611,"This PR fixes the 'reappearing `RandomVariable`s' issue when `RandomStreams` are used along with `Scan`. 

A short explanation about what's causing it:
It originates from over here:
https://github.com/aesara-devs/aesara/blob/7d07260bb28add3548790e706acbc61209d19a6b/aesara/scan/basic.py#L913

Since unlike `RandomGenerators`, `RandomStream` inputs have an 'update' value associated with them, they get added to the shared inner outputs which ultimately go to the inner output list. And hence they reappear as separate outputs in inner graph. 
",question,,,2021-07-30 17:46:22,2021-08-10 03:40:30,aesara/scan/basic.py tests/tensor/random/test_utils.py,018e031313792c13e796b59e9ff029582b8657f8,"kc611 connected 2021-07-30 17:51:17,kc611 renamed 2021-07-30 17:52:09,brandonwillard labeled 2021-08-01 23:10:35,kc611 closed 2021-08-10 03:40:30",kc611 brandonwillard,3,False
271,541,add arimarv {WIP},mjhajharia,"draft PR for adding arma RV in aesara


cc: @brandonwillard ",question,brandonwillard,,2021-07-30 21:11:29,2021-08-13 07:07:13,aesara/tensor/random/basic.py,1de96b12afbfa19ce48c0bfe0938b40970481374 bf76d07f65fff29413946a898bd30cf0a89cd1dc 5b392a3e8516e6964cb716f52b89417ccd999290,"brandonwillard mentioned 2021-07-30 21:11:29,brandonwillard subscribed 2021-07-30 21:11:29,brandonwillard labeled 2021-08-01 23:10:52,ricardoV94 closed 2021-08-13 07:07:14",ricardoV94 brandonwillard mjhajharia,3,False
272,548,Fix scope issue in `UltraFastScalarSigmoid.c_code`,brandonwillard,This PR fixes a scoping issue in `UltraFastScalarSigmoid.c_code` that gives rise to compilation errors when used multiple times in a `Composite` `Op`.,bug important,twiecki,brandonwillard,2021-08-06 03:30:09,2021-08-06 14:13:06,aesara/tensor/nnet/sigm.py tests/tensor/nnet/test_sigm.py,43bd142e7145cb3084ecf3ffdf24f7ee1f7ef75c,"brandonwillard labeled 2021-08-06 03:30:09,brandonwillard labeled 2021-08-06 03:30:09,brandonwillard assigned 2021-08-06 03:30:10,brandonwillard referenced 2021-08-06 14:13:06,brandonwillard merged 2021-08-06 14:13:06,brandonwillard closed 2021-08-06 14:13:06,brandonwillard head_ref_deleted 2021-08-06 14:13:10",codecov[bot] twiecki brandonwillard,1,True
273,549,Add specialization for subtraction and addition with negative terms,ricardoV94,"```
x - (-y) -> x + y
x + (-y) -> x - y 
-x + y -> y - x
```

Adding these during canonicalization conflicted with a couple of other rewrites. 

1. `local_neg_to_mul` tries to convert `-x -> -1. * x`, so that the `local_mul_canonizer` can do its thing. 
1. When it comes to constants, the `local_add_canonizer` will try to place them on the left of the graph for ""constant folding"" and leave them as an `add`, even if they are negative. For example `x - 5 -> -5 + x`.

The new rewrites were registered or designed not to conflict with these preexisting rewrites

Closes #546",important graph rewriting,brandonwillard,ricardoV94,2021-08-06 16:04:03,2022-10-18 20:12:09,aesara/tensor/rewriting/math.py tests/tensor/rewriting/test_math.py,6510c90b4ce5d3c1bec269f983f7e18a3c40a394 9f4650fedaabd1f709b7f645473172534f771d93 1846741d4a3de30ecfb24c212ab1a31d644c8508,"ricardoV94 head_ref_force_pushed 2021-08-06 17:41:38,ricardoV94 head_ref_force_pushed 2021-08-06 17:47:32,ricardoV94 head_ref_force_pushed 2021-08-09 07:19:48,ricardoV94 head_ref_force_pushed 2021-08-09 07:20:22,ricardoV94 head_ref_force_pushed 2021-08-09 07:40:39,ricardoV94 convert_to_draft 2021-08-09 10:11:56,ricardoV94 head_ref_force_pushed 2021-08-09 19:08:16,ricardoV94 head_ref_force_pushed 2021-08-09 19:52:15,ricardoV94 ready_for_review 2021-08-09 19:52:46,ricardoV94 renamed 2021-08-09 19:52:56,ricardoV94 convert_to_draft 2021-08-10 08:07:38,brandonwillard labeled 2021-09-17 03:23:13,brandonwillard labeled 2021-09-17 03:23:13,ricardoV94 assigned 2021-09-17 03:23:22,ricardoV94 head_ref_force_pushed 2022-01-19 08:46:51,ricardoV94 ready_for_review 2022-01-19 08:48:31,ricardoV94 head_ref_force_pushed 2022-01-19 18:03:52,ricardoV94 review_requested 2022-01-19 19:05:03,ricardoV94 convert_to_draft 2022-02-20 17:40:57,ricardoV94 head_ref_force_pushed 2022-02-22 08:33:04,ricardoV94 ready_for_review 2022-02-22 11:04:09,ricardoV94 head_ref_force_pushed 2022-03-13 14:57:41,ricardoV94 head_ref_force_pushed 2022-03-16 17:29:48,brandonwillard head_ref_force_pushed 2022-04-14 21:47:09,rlouf head_ref_force_pushed 2022-10-17 08:00:03,rlouf head_ref_force_pushed 2022-10-17 08:40:40,brandonwillard head_ref_force_pushed 2022-10-17 23:28:55,rlouf head_ref_force_pushed 2022-10-18 07:07:28,rlouf referenced 2022-10-18 20:12:09,rlouf merged 2022-10-18 20:12:09,rlouf closed 2022-10-18 20:12:10",codecov[bot] ricardoV94 rlouf brandonwillard,13,True
274,550,Preserve inplace operators in local_ultra_fast_sigmoid,jeffreyenos,"This PR improves the `local_ultra_fast_sigmoid` optimizer by preserving existing inplace `Elemwise` operators. If it detects an inplace operator, the optimizer will use `ultra_fast_sigmoid_inplace` instead of `ultra_fast_sigmoid`.",enhancement graph rewriting,ricardoV94 brandonwillard,,2021-08-06 20:01:26,2021-08-20 06:51:49,aesara/tensor/nnet/sigm.py tests/tensor/nnet/test_sigm.py,082fc73d7f9fdf951684bf73682312f920ea7595,"brandonwillard labeled 2021-08-06 22:19:28,brandonwillard labeled 2021-08-06 22:19:35,brandonwillard review_requested 2021-08-06 22:23:12,jeffreyenos mentioned 2021-08-11 16:30:06,jeffreyenos subscribed 2021-08-11 16:30:06,jeffreyenos mentioned 2021-08-18 07:37:55,jeffreyenos subscribed 2021-08-18 07:37:55,jeffreyenos review_dismissed 2021-08-19 19:10:19,jeffreyenos head_ref_force_pushed 2021-08-19 19:10:19,jeffreyenos mentioned 2021-08-19 19:19:48,jeffreyenos subscribed 2021-08-19 19:19:48,twiecki referenced 2021-08-20 06:51:49,twiecki merged 2021-08-20 06:51:49,twiecki closed 2021-08-20 06:51:49",codecov[bot] brandonwillard ricardoV94 jeffreyenos twiecki,21,True
275,551,Move subtensor rewrites from basic_opt to subtensor_opt,neelriyer,"**There is an informative high-level description of the changes.**
Moves the `*Subtensor*` rewrites in `aesara.tensor.basic_opt` to `aesara.tensor.subtensor_opt`. 
Doesn't change too much. This is my first contribution to this repo.

**The description and/or commit message(s) references the relevant GitHub issue(s).**
Resolves #545.

**[`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).**
Yes

**The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.**
Yes
",,brandonwillard,,2021-08-08 01:00:09,2021-09-05 08:17:12,tests/tensor/test_slinalg.py aesara/tensor/math_opt.py aesara/scan/basic.py tests/link/test_numba.py aesara/tensor/var.py aesara/link/vm.py tests/graph/utils.py aesara/tensor/random/opt.py aesara/graph/opt.py tests/tensor/test_var.py aesara/tensor/subtensor.py tests/tensor/nnet/test_basic.py tests/tensor/nnet/test_sigm.py aesara/compile/ops.py aesara/tensor/slinalg.py aesara/tensor/basic_opt.py tests/tensor/test_math_opt.py aesara/tensor/nnet/basic.py doc/tutorial/loop_solution_1.py tests/tensor/utils.py aesara/configdefaults.py aesara/tensor/signal/conv.py aesara/tensor/nnet/sigm.py aesara/tensor/subtensor_opt.py tests/tensor/test_subtensor.py .github/workflows/test.yml aesara/link/numba/dispatch.py doc/tutorial/loop.rst tests/.hypothesis/unicode_data/13.0.0/charmap.json.gz aesara/graph/opt_utils.py tests/tensor/random/test_opt.py tests/graph/test_opt.py,dc2330c7280619a66542d7caf637e1d10805ea5b 1adad2da9b6f64e263d3331b73904bb73723b768 3d4b27d4c1682120236ae8f41f547f8a96881a1b ea9e574c08095d66d03def617df09f79e586670b 7da25c41a6f71e3914c6c37892cd1e4cb63b5b5a 1c052789696f2074258291c97e6430fa40e3c3a6 b6e38b2206ab1cab7312fdc3d9ab16c2242f0a78 796858c5d9470d36ef4c1e0e8f80605a5043ed26 1d5accf82fbdb8591c2473017ce4e7fb4d3c442b,"brandonwillard mentioned 2021-08-19 10:53:31,brandonwillard subscribed 2021-08-19 10:53:31,neelriyer head_ref_force_pushed 2021-08-22 10:18:35,brandonwillard mentioned 2021-08-22 10:22:50,brandonwillard subscribed 2021-08-22 10:22:50,brandonwillard mentioned 2021-08-29 06:47:17,brandonwillard subscribed 2021-08-29 06:47:17,ricardoV94 mentioned 2021-08-29 07:04:44,ricardoV94 subscribed 2021-08-29 07:04:44,neelriyer mentioned 2021-08-29 07:12:20,neelriyer subscribed 2021-08-29 07:12:20,ricardoV94 mentioned 2021-08-29 07:34:18,ricardoV94 subscribed 2021-08-29 07:34:18,brandonwillard mentioned 2021-08-29 07:36:16,brandonwillard subscribed 2021-08-29 07:36:16,brandonwillard mentioned 2021-08-30 22:02:01,brandonwillard subscribed 2021-08-30 22:02:01,ricardoV94 mentioned 2021-09-05 08:15:16,ricardoV94 subscribed 2021-09-05 08:15:16,ricardoV94 closed 2021-09-05 08:17:12",ricardoV94 neelriyer brandonwillard,14,False
276,552,Refactor `Scan` `Op`,brandonwillard,"This PR performs some long overdue repairs to `Scan`.

Some of these refactorings are only gradual steps towards other larger ones.",enhancement important refactor Scan,,brandonwillard,2021-08-08 18:01:11,2021-09-15 18:00:49,requirements.txt tests/gpuarray/test_elemwise.py aesara/graph/features.py aesara/scan/basic.py aesara/tensor/shape.py aesara/ifelse.py setup.py aesara/scan/views.py aesara/tensor/math.py aesara/tensor/subtensor.py tests/test_printing.py tests/scan/test_printing.py aesara/tensor/basic_opt.py aesara/scan/scan_perform.pyx aesara/scan/scan_perform_ext.py aesara/scan/opt.py aesara/scan/op.py aesara/tensor/elemwise.py aesara/printing.py tests/scan/test_utils.py aesara/scan/c_code/scan_perform.c doc/LICENSE.txt tests/scan/test_basic.py doc/extending/scan.rst aesara/scan/utils.py aesara/tensor/basic.py,5beb4df90d7463ffda20aacbc48ebba0f35faaaf d36f3b1474ee5e2dc10852b19b6b495b28745db2 0f5ab50525e8effbd2560d28d430b131e7f22c2d 899b7eae15bd32a0ef32bdbeb19472fafb8398d3 6221c7fc36ffea531f50ee42d51143a0b7b31342 c7f1edccb086305b34c4160573644c34d2e5bd56 3ae81da91dc89e872c42029987f08c0e27feecbd b38eec354ac39fd082d058f9ef0b44ba9a36c826 858d2e8c185b7f97abc3f8a23a8d92bc45ba6882 44730e4eb639dfd1441776a9b8798ba56c9cde8d c602e2deabf42051f8df054e6cc99bb3ac484aaa 01004d3acf675da33890cdc55743cffcbd3c22bd 11abcf5cbc36a2460e8c27b28b08a5dd281fac44 35b3bc3191cb9ed56e56cd4466aa4ed4811d1314 d3b653a8afb9fd91210ed6d34440a913a210961d da9d11e7ebab148c580544a50eca5492043bd6c0 04b704389e4050263e2bc13538010b5dd9a79532 fbe0b48428668bb0c25f31ea544000573e41e5d7,"brandonwillard labeled 2021-08-08 18:01:11,brandonwillard labeled 2021-08-08 18:01:11,brandonwillard labeled 2021-08-08 18:01:11,brandonwillard assigned 2021-08-08 18:01:11,brandonwillard head_ref_force_pushed 2021-08-08 18:54:26,brandonwillard head_ref_force_pushed 2021-08-08 19:38:57,brandonwillard head_ref_force_pushed 2021-08-08 20:27:08,brandonwillard renamed 2021-08-09 17:38:03,brandonwillard head_ref_force_pushed 2021-09-03 21:19:30,brandonwillard head_ref_force_pushed 2021-09-03 22:57:54,brandonwillard head_ref_force_pushed 2021-09-04 01:31:08,brandonwillard head_ref_force_pushed 2021-09-04 03:21:56,brandonwillard head_ref_force_pushed 2021-09-04 07:26:31,brandonwillard head_ref_force_pushed 2021-09-07 21:48:06,brandonwillard ready_for_review 2021-09-12 22:32:11,brandonwillard labeled 2021-09-12 22:32:46,brandonwillard head_ref_force_pushed 2021-09-12 22:41:31,brandonwillard head_ref_force_pushed 2021-09-12 22:57:14,brandonwillard head_ref_force_pushed 2021-09-14 01:24:48,brandonwillard referenced 2021-09-15 18:00:49,brandonwillard merged 2021-09-15 18:00:49,brandonwillard closed 2021-09-15 18:00:49,brandonwillard head_ref_deleted 2021-09-15 18:00:52",codecov[bot] brandonwillard,2,True
277,555,Cast output of `local_func_inv` and `local_exp_log` rewrites,ricardoV94,"This PR fixes issues in two rewrites that could return invalid integer input types.

Also removed the redundant `local_neg_neg` rewrite which is covered by the `local_func_inv` ~~and added specific ops to track in some rewrites~~",enhancement graph rewriting,twiecki brandonwillard,ricardoV94,2021-08-09 17:35:36,2021-08-19 14:57:59,aesara/tensor/math_opt.py tests/tensor/test_math_opt.py,571354b25e8b66d61ceeb75e40e6b5b731dc92df f6db054aec2c613b269bc80a73d7eef52cce3da6,"ricardoV94 renamed 2021-08-09 17:35:47,ricardoV94 assigned 2021-08-09 17:36:57,brandonwillard labeled 2021-08-09 17:37:31,brandonwillard labeled 2021-08-09 17:37:31,ricardoV94 head_ref_force_pushed 2021-08-09 17:38:51,ricardoV94 head_ref_force_pushed 2021-08-09 18:40:58,ricardoV94 head_ref_force_pushed 2021-08-10 08:06:41,ricardoV94 head_ref_force_pushed 2021-08-11 09:36:13,ricardoV94 head_ref_force_pushed 2021-08-12 10:55:14,ricardoV94 renamed 2021-08-12 13:40:41,ricardoV94 review_requested 2021-08-16 17:33:55,ricardoV94 head_ref_force_pushed 2021-08-19 06:04:17,ricardoV94 head_ref_force_pushed 2021-08-19 09:54:14,ricardoV94 review_requested 2021-08-19 12:55:39,ricardoV94 referenced 2021-08-19 14:57:58,ricardoV94 merged 2021-08-19 14:57:59,ricardoV94 closed 2021-08-19 14:57:59,ricardoV94 head_ref_deleted 2021-08-19 15:00:13",codecov[bot] ricardoV94 twiecki brandonwillard,10,True
278,556,Make `TensorConstant` a subclass of `TensorVariable`,brandonwillard,This PR closes #554.,enhancement refactor,ricardoV94,brandonwillard,2021-08-09 17:36:11,2021-08-10 01:12:16,aesara/tensor/var.py,7015e9e25f7efb1730a6ff6edf495dea0179c6ce,"brandonwillard assigned 2021-08-09 17:36:11,brandonwillard renamed 2021-08-09 17:36:22,brandonwillard labeled 2021-08-09 17:38:54,brandonwillard labeled 2021-08-09 17:38:58,brandonwillard head_ref_force_pushed 2021-08-09 17:39:18,brandonwillard ready_for_review 2021-08-09 20:54:22,brandonwillard review_requested 2021-08-09 20:54:52,brandonwillard review_requested 2021-08-09 20:54:52,brandonwillard referenced 2021-08-10 01:12:16,brandonwillard merged 2021-08-10 01:12:16,brandonwillard closed 2021-08-10 01:12:16,brandonwillard head_ref_deleted 2021-08-10 01:12:19",codecov[bot] ricardoV94 brandonwillard,3,True
279,560,Implement `DeepCopyOp.infer_shape`,brandonwillard,This PR adds a missing `infer_shape` method implementation to `DeepCopyOp`.,enhancement,ricardoV94,brandonwillard,2021-08-10 19:30:32,2021-08-11 04:30:34,aesara/compile/ops.py,a07c91c32d14f14329add900a8f41cf4839efed3,"brandonwillard labeled 2021-08-10 19:30:32,brandonwillard assigned 2021-08-10 19:30:32,brandonwillard referenced 2021-08-11 04:30:34,brandonwillard merged 2021-08-11 04:30:34,brandonwillard closed 2021-08-11 04:30:34,brandonwillard head_ref_deleted 2021-08-11 04:30:37",codecov[bot] ricardoV94 brandonwillard,2,True
280,561,"Add an alternative, faster `AdvancedIncSubtensor` `Op`",brandonwillard,"This PR changes `AdvancedIncSubtensor.perform` so that it uses `x[indices] += y` instead of `np.add.at(x, indices, y)`, since the latter appears to be much slower (e.g. ~4x for boolean indexing at array sizes around 10,000) than the former (see [here](https://stackoverflow.com/questions/67318786/numpy-add-at-slower-than-in-place-add) for some examples).

This changes the results of `AdvancedIncSubtensor`, since&mdash;unlike the descriptions given to these `*IncSubtensor` `Op`s&mdash;they are **not** all equal to `x[indices] += y`.  `AdvancedIncSubtensor*`s all implement behavior that follows `np.add.at`, and that differs from `x[indices] += y` in how it treats duplicate values in `indices`.

~For consistency, this PR should also change `AdvancedIncSubtensor` so that they both produce the same results as `x[indices] += y` and not `np.add.at`, or we should add an option that enables/disables this feature.  The latter seems like the more reasonable thing to do.~

An `ignore_duplicates` option has been added to `inc_subtensor` that determines which approach is used.",enhancement,ricardoV94 kc611 twiecki,brandonwillard,2021-08-10 21:45:04,2021-12-05 04:58:56,aesara/tensor/subtensor.py aesara/tensor/subtensor_opt.py tests/tensor/test_subtensor.py,85b0be18f4aee65537bfebc6d444328aa54f730f 1eea088dfdf526b9a41078ada86e6da2aee8fc34,"brandonwillard labeled 2021-08-10 21:45:04,brandonwillard assigned 2021-08-10 21:45:04,brandonwillard head_ref_force_pushed 2021-08-11 00:38:58,brandonwillard head_ref_force_pushed 2021-08-11 00:39:11,brandonwillard convert_to_draft 2021-08-11 03:43:55,brandonwillard head_ref_force_pushed 2021-08-11 03:54:12,brandonwillard head_ref_force_pushed 2021-08-11 04:28:07,brandonwillard ready_for_review 2021-08-11 04:29:36,brandonwillard head_ref_force_pushed 2021-08-11 15:57:45,brandonwillard head_ref_force_pushed 2021-08-11 15:58:08,brandonwillard head_ref_force_pushed 2021-08-17 23:19:49,brandonwillard review_requested 2021-09-17 03:04:04,brandonwillard review_requested 2021-09-17 03:04:04,brandonwillard head_ref_force_pushed 2021-09-21 16:17:33,brandonwillard renamed 2021-12-03 02:10:25,brandonwillard head_ref_force_pushed 2021-12-03 02:30:36,brandonwillard referenced 2021-12-05 04:58:56,brandonwillard merged 2021-12-05 04:58:56,brandonwillard closed 2021-12-05 04:58:57,brandonwillard head_ref_deleted 2021-12-05 04:58:59",codecov[bot] kc611 brandonwillard ricardoV94 twiecki,6,True
281,562,Misc PatternSub changes,ricardoV94,"This PR refactors a couple of `PatternSub` rewrites in `math_opt` and fixes a couple of bugs:

Closes #558

",,brandonwillard,,2021-08-11 13:48:46,2021-08-18 17:42:10,tests/graph/utils.py aesara/tensor/math_opt.py aesara/graph/opt.py aesara/graph/opt_utils.py tests/graph/test_opt.py tests/tensor/test_math_opt.py,f58007b25bdfe4eefe923f0e18a505b3a1074a99 6456791f5e828abc98d5c9a5b83c8ad01c7f1d6b 2c33641998b2bd0bbacebc91218f03a04d171012 b8a0c103171976830ff19865f44bb7c8b88f04f2 90179179a9cd0d2b6ac121cc388d0ceb68cc8fbe b7d2ea55bfc5b026e77160fb384e675a4e4e17bf cb5a2f0599652ac843770b2fe65a4d7745bb0fd9 55458f1c30ca9b4d2482572fce855572fd170fb2 b53f7e68c8dc585f43abd537db58374516e73a09,"ricardoV94 head_ref_force_pushed 2021-08-11 13:49:29,ricardoV94 head_ref_force_pushed 2021-08-12 09:43:14,ricardoV94 renamed 2021-08-12 09:43:43,ricardoV94 renamed 2021-08-12 09:44:43,ricardoV94 head_ref_force_pushed 2021-08-12 09:45:27,ricardoV94 head_ref_force_pushed 2021-08-12 10:51:20,ricardoV94 head_ref_force_pushed 2021-08-12 13:11:32,ricardoV94 head_ref_force_pushed 2021-08-12 13:19:36,brandonwillard review_dismissed 2021-08-18 02:32:33,ricardoV94 head_ref_force_pushed 2021-08-18 10:13:51,ricardoV94 review_requested 2021-08-18 11:51:22,ricardoV94 head_ref_force_pushed 2021-08-18 15:20:38,ricardoV94 review_dismissed 2021-08-18 15:26:32,ricardoV94 head_ref_force_pushed 2021-08-18 15:26:32,ricardoV94 review_requested 2021-08-18 16:52:37,ricardoV94 referenced 2021-08-18 17:42:10,ricardoV94 merged 2021-08-18 17:42:10,ricardoV94 closed 2021-08-18 17:42:10,ricardoV94 head_ref_deleted 2021-08-18 17:43:15",codecov[bot] ricardoV94 brandonwillard,24,True
282,565,Remove old warnings,ricardoV94,Well it's a funny list of commits... Hoping I didn't miss anything,,twiecki,,2021-08-18 17:21:05,2021-08-19 07:32:52,aesara/link/vm.py aesara/tensor/nnet/basic.py aesara/tensor/math_opt.py doc/tutorial/loop_solution_1.py tests/tensor/test_subtensor.py tests/tensor/utils.py aesara/tensor/subtensor.py tests/tensor/nnet/test_basic.py aesara/configdefaults.py doc/tutorial/loop.rst aesara/tensor/signal/conv.py aesara/tensor/basic_opt.py tests/tensor/test_math_opt.py,634c933a8eb3fff9f014c07823274de8deb6e4d1 4a58298e0211a54cf4e60818443993e64132189e d158de7649324653dc547d08aba29ebbea1d671a d7ebd11f9d98a69e667c89613c321704072d6c9e 664bab5b0d739e3339e9a92e838297e229d7d7d5 c226a793dfb0cfeae2f1c095acf6597530cab890 ee3e40d32d019614af21042683bae3d9c44b1ba1 55f9a5a1aba4e35dfe32de5e68acf9568ce3848a 8cb7d0a4eaffd703a8199dc87db8ea7c8492699a 0a7bb1511f20930419ed0aa93128ce68dda83255 e7972b2fc5f52f3eb8cd9ebd5f2a5cceb738554a cfe4df4b430e2336d428f1e5123f95ecd0081fcc 0f160f8d6ffc3d7ca2f6fa35a966aa069b3c557e,"ricardoV94 head_ref_force_pushed 2021-08-18 17:47:25,ricardoV94 review_dismissed 2021-08-19 05:37:51,ricardoV94 head_ref_force_pushed 2021-08-19 05:37:51,ricardoV94 review_requested 2021-08-19 06:57:03,twiecki referenced 2021-08-19 07:32:52,twiecki merged 2021-08-19 07:32:52,twiecki closed 2021-08-19 07:32:52,ricardoV94 head_ref_deleted 2021-09-19 10:39:38",codecov[bot] ricardoV94 twiecki,2,True
283,566,Fix a bug in an aesara.scan warning message,brandonwillard,"This PR fixes a mistaken comma in `aesara.scan`.

Reported https://github.com/aesara-devs/aehmc/pull/7#issuecomment-901132887.",bug,twiecki,brandonwillard,2021-08-18 18:05:18,2021-08-18 19:55:18,aesara/scan/basic.py,a952d12ef1a0ecbe6eb011e54e98aa21140a566b,"brandonwillard labeled 2021-08-18 18:05:18,brandonwillard assigned 2021-08-18 18:05:18,brandonwillard referenced 2021-08-18 19:55:17,brandonwillard merged 2021-08-18 19:55:17,brandonwillard closed 2021-08-18 19:55:18,brandonwillard head_ref_deleted 2021-08-18 19:55:21",codecov[bot] twiecki brandonwillard,1,True
284,567,Add `tensor.full_like` equivalent to `np.full_like`,ricardoV94,,NumPy compatibility,brandonwillard,ricardoV94,2021-08-19 09:51:04,2021-10-23 18:23:53,aesara/link/numba/dispatch/scan.py aesara/scan/utils.py aesara/tensor/basic.py aesara/link/numba/dispatch/tensor_basic.py aesara/link/c/cmodule.py aesara/link/numba/dispatch/__init__.py aesara/link/numba/dispatch/elemwise.py tests/scan/test_utils.py tests/link/test_jax.py tests/tensor/test_basic.py tests/link/test_numba.py aesara/link/jax/dispatch.py aesara/link/numba/dispatch/basic.py aesara/tensor/basic_opt.py .gitignore tests/tensor/test_basic_opt.py aesara/link/numba/dispatch/scalar.py,200abf186170e78dfc9bc326800524dc6af18545 7fb6aed458a6cdd340406eb11c81b2d4c38f76dd,"ricardoV94 labeled 2021-08-19 09:51:15,ricardoV94 head_ref_force_pushed 2021-08-19 09:52:36,ricardoV94 head_ref_force_pushed 2021-08-19 11:18:38,ricardoV94 head_ref_force_pushed 2021-08-19 15:00:37,ricardoV94 head_ref_force_pushed 2021-09-06 09:29:28,ricardoV94 head_ref_force_pushed 2021-09-19 10:52:18,ricardoV94 head_ref_force_pushed 2021-09-19 11:01:14,ricardoV94 head_ref_force_pushed 2021-09-20 10:47:56,ricardoV94 review_requested 2021-09-20 20:55:58,ricardoV94 review_dismissed 2021-09-22 01:56:31,ricardoV94 head_ref_force_pushed 2021-09-22 01:56:31,ricardoV94 head_ref_force_pushed 2021-09-22 19:43:55,ricardoV94 assigned 2021-09-30 21:36:10,kc611 referenced 2021-10-23 18:23:53,kc611 merged 2021-10-23 18:23:53,kc611 closed 2021-10-23 18:23:53,ricardoV94 head_ref_deleted 2022-07-17 13:17:28",codecov[bot] ricardoV94 kc611 brandonwillard,8,True
285,570,"Fix `RandomVariable` rewrite failures arising from ""output"" strings",brandonwillard,"This PR fixes an issue in the `RandomVariable` rewrite checks that occurs when `fgraph.clients[base_rv]` contains `(""output"", ...)` entries.",bug important graph rewriting,,brandonwillard,2021-08-23 21:35:10,2021-08-24 00:31:27,aesara/tensor/random/opt.py .github/workflows/test.yml aesara/link/numba/dispatch.py tests/link/test_numba.py tests/tensor/random/test_opt.py,05c0647fa6932bf43c10e188e4104e4a2a0e5e5a 6e78d7909106b8a84bce430efdf8ee201a1650ac 4328be3d6081cd96db03d8a454d2fc0fa8ed9f03 b259f426775a54f45c5420028211249a605d90ae,"brandonwillard assigned 2021-08-23 21:35:27,brandonwillard labeled 2021-08-23 21:35:36,brandonwillard labeled 2021-08-23 21:35:49,brandonwillard labeled 2021-08-23 21:35:55,brandonwillard head_ref_force_pushed 2021-08-23 22:10:28,brandonwillard head_ref_force_pushed 2021-08-23 22:11:14,brandonwillard head_ref_force_pushed 2021-08-23 22:37:42,brandonwillard head_ref_force_pushed 2021-08-23 22:38:04,brandonwillard head_ref_force_pushed 2021-08-23 23:07:03,brandonwillard referenced 2021-08-24 00:31:27,brandonwillard merged 2021-08-24 00:31:27,brandonwillard closed 2021-08-24 00:31:27,brandonwillard head_ref_deleted 2021-08-24 00:31:30",codecov[bot] brandonwillard,1,True
286,572,Added infix dot product to `TensorVariable`,brandonwillard,This PR adds the infix dot product (e.g. `X @ y`) to the `TensorVariable` classes.,,,,2021-08-25 02:43:49,2021-08-25 04:30:35,aesara/tensor/var.py tests/tensor/test_var.py,a298bf28e2615379871112eab9361b69be7fb592,"brandonwillard referenced 2021-08-25 04:30:35,brandonwillard merged 2021-08-25 04:30:35,brandonwillard closed 2021-08-25 04:30:35,brandonwillard head_ref_deleted 2021-08-25 04:30:39",codecov[bot] brandonwillard,1,True
287,574,Remove out-of-date conda recipe,dgerlanc,"Resolves #573 
",,twiecki brandonwillard,,2021-08-27 23:03:38,2021-08-30 17:38:36,tests/link/test_numba.py conda/meta.yaml aesara/link/numba/dispatch.py,028e3baa7de5a0602684a40ab15d6409fdb16bb0 8f0c8305ab6bdf4e226a7607982950eb862a93d6,"dgerlanc review_requested 2021-08-28 20:46:03,brandonwillard referenced 2021-08-30 17:38:35,brandonwillard merged 2021-08-30 17:38:35,brandonwillard closed 2021-08-30 17:38:36,dgerlanc head_ref_deleted 2021-09-17 19:04:21",dgerlanc twiecki brandonwillard,2,True
288,575,Make sure Numba's `reshape` gets C-ordered arrays,brandonwillard,This PR prevents issues involving non-C-ordered arrays and Numba's `reshape`.  An extra case for zero-dimensional reshapes was added as well.,,,,2021-08-27 23:11:49,2021-08-28 02:11:38,tests/link/test_numba.py aesara/link/numba/dispatch.py,299a741cca9a67b42dd592ab70ca466c25cff880,"brandonwillard referenced 2021-08-28 02:11:38,brandonwillard merged 2021-08-28 02:11:38,brandonwillard closed 2021-08-28 02:11:38,brandonwillard head_ref_deleted 2021-08-28 02:11:46",codecov[bot] brandonwillard,1,True
289,577,Fix in-place updates performed on scalars in Numba,brandonwillard,"This PR fixes the use of `vectorize` when in-place updates are requested on scalar parameters.

Since Numba doesn't output NumPy `ndarray`s with zero dimensions in most cases, requesting in-place updates with the `out` parameter for a `vectorize`d Numba function will fail.  This update converts the Numba scalar term into an `ndarray` and then performs the in-place operation.",bug important Numba,,brandonwillard,2021-08-28 20:43:31,2021-08-30 14:56:19,tests/link/test_numba.py aesara/link/numba/dispatch.py,49ed76285512d88c557da780acacab2efb45ae8d d462fb90bd28e14a79f4d6d1e52501b46fe384e9 cc998e4eec4d4e8847bf1d3651651cd2d5fc2d5f ff0cbd4ae745afa6c1438ea1965aa784548e5f4f 5d4414152b604c4f954b24ad3abb27103df48251 cfaf13ae87e20503938455b2f40e289836e6c454,"brandonwillard labeled 2021-08-29 21:32:32,brandonwillard labeled 2021-08-29 21:32:32,brandonwillard labeled 2021-08-29 21:32:32,brandonwillard assigned 2021-08-29 21:32:35,brandonwillard referenced 2021-08-30 14:56:19,brandonwillard merged 2021-08-30 14:56:19,brandonwillard closed 2021-08-30 14:56:19,brandonwillard head_ref_deleted 2021-08-30 14:56:21",codecov[bot] brandonwillard,1,True
290,578,Add developer conda dependencies,dgerlanc,"Adds a developer `environment.yml`, resolving #576.",,brandonwillard,,2021-08-28 23:08:40,2021-09-17 02:56:50,environment.yml,5c35ca44035d81aebb2b00bbd905c5f0c6bdc67f,"dgerlanc review_requested 2021-08-28 23:08:40,dgerlanc ready_for_review 2021-09-15 20:08:22,brandonwillard referenced 2021-09-17 02:56:50,brandonwillard merged 2021-09-17 02:56:50,brandonwillard closed 2021-09-17 02:56:50,dgerlanc head_ref_deleted 2021-09-17 19:05:15,brandonwillard connected 2021-10-25 16:35:11",dgerlanc brandonwillard,1,True
291,581,Move subtensor rewrites from basic opt to subtensor opt v2,neelriyer,"**There is an informative high-level description of the changes.**
Moves the *Subtensor* rewrites from aesara.tensor.basic_opt to aesara.tensor.subtensor_opt.
Continuation of a previously submitted PR that became a bit too messy (#551).

**The description and/or commit message(s) references the relevant GitHub issue(s).**
Resolves #545.

**+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).**
Yes

**The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).**
Yes

**The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.**
Yes",enhancement refactor,ricardoV94 brandonwillard,,2021-09-05 08:09:26,2021-09-21 15:52:38,tests/tensor/nnet/test_basic.py tests/tensor/test_subtensor_opt.py aesara/tensor/basic_opt.py aesara/tensor/subtensor_opt.py tests/tensor/test_basic_opt.py,32f573385580d2b808a07e9602ef12786394728c eb7ac18495088aae76db22d5201043a5429a3cb4 a7b062ccbad0f6569be733c23a96ce869d9c3e2f,"neelriyer head_ref_force_pushed 2021-09-07 06:50:36,brandonwillard mentioned 2021-09-07 06:55:39,brandonwillard subscribed 2021-09-07 06:55:39,neelriyer closed 2021-09-07 11:18:17,neelriyer head_ref_force_pushed 2021-09-07 11:18:17,neelriyer reopened 2021-09-09 09:58:29,brandonwillard mentioned 2021-09-09 10:00:36,brandonwillard subscribed 2021-09-09 10:00:36,ricardoV94 mentioned 2021-09-09 10:00:36,ricardoV94 subscribed 2021-09-09 10:00:36,neelriyer mentioned 2021-09-10 05:22:14,neelriyer subscribed 2021-09-10 05:22:14,ricardoV94 mentioned 2021-09-11 10:09:20,ricardoV94 subscribed 2021-09-11 10:09:20,ricardoV94 mentioned 2021-09-12 21:34:10,ricardoV94 subscribed 2021-09-12 21:34:10,neelriyer head_ref_force_pushed 2021-09-14 00:24:14,ricardoV94 mentioned 2021-09-14 00:27:09,ricardoV94 subscribed 2021-09-14 00:27:09,brandonwillard labeled 2021-09-17 02:58:11,brandonwillard labeled 2021-09-17 02:58:11,brandonwillard ready_for_review 2021-09-17 02:58:30,brandonwillard review_requested 2021-09-17 02:59:45,brandonwillard review_dismissed 2021-09-17 02:59:59,brandonwillard mentioned 2021-09-21 11:43:01,brandonwillard subscribed 2021-09-21 11:43:01,brandonwillard mentioned 2021-09-21 15:47:13,brandonwillard subscribed 2021-09-21 15:47:13,brandonwillard referenced 2021-09-21 15:52:38,brandonwillard merged 2021-09-21 15:52:38,brandonwillard closed 2021-09-21 15:52:38",codecov[bot] ricardoV94 neelriyer brandonwillard,18,True
292,583,Make basic graph objects available at package level,brandonwillard,This PR makes some of the basic graph objects available at package level.,refactor,ricardoV94,brandonwillard,2021-09-12 22:27:08,2021-09-13 04:36:07,aesara/tensor/type.py aesara/graph/__init__.py aesara/tensor/__init__.py,bf90960c7e125b5bd030042836572144a42ebcfa bf68178cbae5657173b662376f378c8f2c01d925 8676e120657e54c882e084addcedc7feb962498b,"brandonwillard assigned 2021-09-12 22:27:20,brandonwillard labeled 2021-09-12 22:27:32,brandonwillard head_ref_force_pushed 2021-09-12 22:28:34,brandonwillard referenced 2021-09-13 04:36:07,brandonwillard merged 2021-09-13 04:36:07,brandonwillard closed 2021-09-13 04:36:07,brandonwillard head_ref_deleted 2021-09-13 04:36:10",codecov[bot] ricardoV94 brandonwillard,1,True
293,586,Create `HasInnerGraph` mixin,brandonwillard,This PR formalizes the concept of an `Op` that contains/encapsulates an Aesara graph by adding a mixin type `HasInnerGraph`.,enhancement refactor Scan,,brandonwillard,2021-09-15 18:03:52,2021-09-17 06:06:13,aesara/scan/op.py aesara/compile/builders.py setup.cfg aesara/compile/debugmode.py aesara/d3viz/formatting.py aesara/graph/op.py aesara/compile/function/types.py,5739f71833778099f9f90042ac2278a2ceb03c7b 4f32bfbdeb1d028c4a8fe4c0872a13831a1a333e,"brandonwillard assigned 2021-09-15 19:04:15,brandonwillard labeled 2021-09-15 19:04:24,brandonwillard labeled 2021-09-15 19:04:24,brandonwillard head_ref_force_pushed 2021-09-15 22:02:11,brandonwillard head_ref_force_pushed 2021-09-15 22:21:12,brandonwillard head_ref_force_pushed 2021-09-17 02:50:49,brandonwillard referenced 2021-09-17 06:06:13,brandonwillard merged 2021-09-17 06:06:13,brandonwillard closed 2021-09-17 06:06:13,brandonwillard head_ref_deleted 2021-09-17 06:06:16,brandonwillard labeled 2021-09-17 06:07:45",codecov[bot] brandonwillard,1,True
294,587,Move `aesara.debugmode.debugprint` to `aesara.printing`,brandonwillard,This PR moves `aesara.debugmode.debugprint` to `aesara.printing._debugprint`.,enhancement refactor,,brandonwillard,2021-09-15 19:20:45,2021-09-17 02:53:22,tests/test_printing.py aesara/compile/debugmode.py aesara/graph/features.py aesara/printing.py,81bff63a5021f8eb42c7e8f1a771429e53ea3d0f 5169d41e4195a15b95ee221734633eab9ad306d5 8107aa275d51ecc0b3d1fb10f442b67b77d610f7,"brandonwillard head_ref_force_pushed 2021-09-15 19:24:23,brandonwillard labeled 2021-09-15 22:25:54,brandonwillard labeled 2021-09-15 22:25:54,brandonwillard assigned 2021-09-15 22:26:03,brandonwillard referenced 2021-09-17 02:53:22,brandonwillard merged 2021-09-17 02:53:22,brandonwillard closed 2021-09-17 02:53:22,brandonwillard head_ref_deleted 2021-09-17 02:53:25,brandonwillard renamed 2021-09-17 02:53:39",codecov[bot] brandonwillard,1,True
295,589,Remove MKL warning.,twiecki,"I think this warning is a bit too strong, there might be good reasons for not having mkl installed, like running an AMD or M1 processor, in which case this warning is annoying and confusing.",C-backend,brandonwillard,,2021-09-16 23:02:52,2021-09-18 21:19:55,aesara/link/c/cmodule.py tests/link/c/test_cmodule.py,d29731d81e5335cc7cc7e0c3491c6b7a5849a430,"brandonwillard labeled 2021-09-17 02:56:28,twiecki head_ref_force_pushed 2021-09-17 15:03:41,twiecki head_ref_force_pushed 2021-09-17 15:22:12,twiecki head_ref_force_pushed 2021-09-17 15:50:18,brandonwillard referenced 2021-09-18 21:19:54,brandonwillard merged 2021-09-18 21:19:54,brandonwillard closed 2021-09-18 21:19:55,brandonwillard head_ref_deleted 2021-09-18 21:19:58",codecov[bot] twiecki brandonwillard,1,True
296,591,Split `aesara.link.numba.dispatch` into distinct modules,brandonwillard,"This PR breaks apart `aesara.link.numba.dispatch` into a new sub-package with distinct modules.  Since `aesara.link.numba.dispatch` is only getting larger, this refactoring is becoming more and more necessary.  (It also takes a lot of pressure off of editors/IDEs.)

- [x] The `mock` setup isn't covering all cases, so that needs to be fixed.",important refactor Numba,,brandonwillard,2021-09-17 06:03:41,2021-09-17 23:16:12,aesara/link/numba/dispatch/extra_ops.py aesara/link/numba/dispatch/tensor_basic.py aesara/link/numba/dispatch.py aesara/link/numba/linker.py aesara/link/numba/dispatch/__init__.py aesara/link/numba/dispatch/elemwise.py aesara/link/numba/dispatch/nlinalg.py tests/link/test_numba.py aesara/link/numba/dispatch/basic.py aesara/link/numba/dispatch/random.py aesara/link/numba/dispatch/scalar.py,18681ee4e6e2d9c34cf5b0899712a931f3b29903,"brandonwillard convert_to_draft 2021-09-17 06:03:53,brandonwillard assigned 2021-09-17 06:04:16,brandonwillard labeled 2021-09-17 06:04:22,brandonwillard labeled 2021-09-17 06:04:22,brandonwillard labeled 2021-09-17 06:04:27,brandonwillard renamed 2021-09-17 06:08:51,brandonwillard head_ref_force_pushed 2021-09-17 06:09:35,brandonwillard head_ref_force_pushed 2021-09-17 17:52:27,brandonwillard ready_for_review 2021-09-17 17:52:49,brandonwillard head_ref_force_pushed 2021-09-17 22:03:55,brandonwillard head_ref_force_pushed 2021-09-17 22:21:47,brandonwillard referenced 2021-09-17 23:16:12,brandonwillard merged 2021-09-17 23:16:12,brandonwillard closed 2021-09-17 23:16:13,brandonwillard head_ref_deleted 2021-09-17 23:16:16",codecov[bot] brandonwillard,1,True
297,592,Generalize `aesara.printing.debugprint` and create `Variable` getter functions,brandonwillard,"This PR generalizes `aesara.printing.debugprint` so that it can handle arbitrary `HasInnerGraph` `Op`s.  Also, it introduces two new functions: `aesara.graph.basic.get_var_by_name` and `aesara.printing.get_var_by_id`.  The former will return all the `Variable`s in a graph with a given name (or `Variable.auto_name`), and the latter will do the same thing using the IDs produced by `aesara.printing.debugprint`.

Here's an example:
```python
import aesara
import aesara.tensor as at

from aesara.printing import get_node_by_id
from aesara.graph.basic import get_var_by_name


a = at.vector()
B = at.matrix(""B"")
x0 = at.scalar()

srng = at.random.RandomStream()


scan_out, _ = aesara.scan(lambda x_tm1: x_tm1 + srng.normal(name=""epsilon""),
                          outputs_info=[{""initial"": x0}],
                          n_steps=10)

aesara.dprint(scan_out)
# Subtensor{int64::} [id A] ''
#  |for{cpu,scan_fn}.0 [id B] ''
#  | |TensorConstant{10} [id C]
#  | |IncSubtensor{Set;:int64:} [id D] ''
#  | | |AllocEmpty{dtype='float64'} [id E] ''
#  | | | |Elemwise{add,no_inplace} [id F] ''
#  | | |   |TensorConstant{10} [id C]
#  | | |   |Subtensor{int64} [id G] ''
#  | | |     |Shape [id H] ''
#  | | |     | |Rebroadcast{0} [id I] ''
#  | | |     |   |InplaceDimShuffle{x} [id J] ''
#  | | |     |     |<TensorType(float64, scalar)> [id K]
#  | | |     |ScalarConstant{0} [id L]
#  | | |Rebroadcast{0} [id I] ''
#  | | |ScalarFromTensor [id M] ''
#  | |   |Subtensor{int64} [id G] ''
#  | |RandomGeneratorSharedVariable(<Generator(PCG64) at 0x7FF0853859B0>) [id N]
#  |ScalarConstant{1} [id O]
#
# Inner graphs:
#
# for{cpu,scan_fn}.0 [id B] ''
#  >Elemwise{add,no_inplace} [id P] ''
#  > |<TensorType(float64, scalar)> [id Q] -> [id D]
#  > |normal_rv{0, (0, 0), floatX, False}.1 [id R] 'epsilon'
#  >   |<RandomGeneratorType> [id S] -> [id N]
#  >   |TensorConstant{[]} [id T]
#  >   |TensorConstant{11} [id U]
#  >   |TensorConstant{0.0} [id V]
#  >   |TensorConstant{1.0} [id W]
#  >normal_rv{0, (0, 0), floatX, False}.0 [id X] ''
#  > |<RandomGeneratorType> [id S] -> [id N]
#  > |TensorConstant{[]} [id T]
#  > |TensorConstant{11} [id U]
#  > |TensorConstant{0.0} [id V]
#  > |TensorConstant{1.0} [id W]

get_node_by_id(scan_out, ""R"")
# normal_rv{0, (0, 0), floatX, False}(<RandomGeneratorType>, TensorConstant{[]}, TensorConstant{11}, TensorConstant{0.0}, TensorConstant{1.0})

get_var_by_name([scan_out], ""epsilon"")
# (epsilon,)

```",enhancement,,brandonwillard,2021-09-18 01:22:20,2021-09-18 21:18:51,tests/graph/utils.py aesara/scan/op.py tests/compile/test_builders.py tests/test_printing.py tests/graph/test_basic.py aesara/graph/basic.py aesara/printing.py tests/scan/test_printing.py tests/tensor/test_math_opt.py,3bd91c41816691703bc29eea9ebd6992ffc1612d e051a2e2fc7b1d4e4de6e28f5cf58e78dbeaad0d d5aa2039403d5ce0ed1b9d8885f62c5d71dfa0b6 3ddf7f3f63d1da88319797fbecf3cdd667bedc16,"brandonwillard assigned 2021-09-18 01:22:47,brandonwillard labeled 2021-09-18 01:22:53,brandonwillard head_ref_force_pushed 2021-09-18 02:00:44,brandonwillard head_ref_force_pushed 2021-09-18 02:21:44,brandonwillard head_ref_force_pushed 2021-09-18 02:21:56,brandonwillard head_ref_force_pushed 2021-09-18 18:22:39,brandonwillard head_ref_force_pushed 2021-09-18 19:47:20,brandonwillard referenced 2021-09-18 21:18:51,brandonwillard merged 2021-09-18 21:18:51,brandonwillard closed 2021-09-18 21:18:51,brandonwillard head_ref_deleted 2021-09-18 21:18:54",codecov[bot] brandonwillard,1,True
298,594,Fix docstring and type hints for indices_from_subtensor,brandonwillard,This PR fixes some docstring and type hinting issues in `indices_from_subtensor`.,documentation enhancement,,,2021-09-22 05:19:43,2021-09-22 06:28:41,aesara/tensor/subtensor.py,d658c8993e46b0b61d99594cbf05c000db157867,"brandonwillard referenced 2021-09-22 06:28:41,brandonwillard merged 2021-09-22 06:28:41,brandonwillard closed 2021-09-22 06:28:41,brandonwillard head_ref_deleted 2021-09-22 06:28:43,brandonwillard labeled 2021-09-22 06:29:10,brandonwillard labeled 2021-09-22 06:29:10",codecov[bot] brandonwillard,1,True
299,595,Add custom implementation for numba vectorized,fanshi118,"**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [ ] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement Numba,,,2021-09-24 19:18:42,2022-01-19 00:44:34,tests/link/test_numba.py aesara/link/numba/dispatch/elemwise.py,f53ddae18326f10300479c308123c3ce7b6672be,"brandonwillard connected 2021-09-24 19:30:55,brandonwillard labeled 2021-09-24 19:31:05,brandonwillard labeled 2021-09-24 19:31:05,fanshi118 head_ref_force_pushed 2021-09-24 19:45:56,fanshi118 head_ref_force_pushed 2021-09-27 13:24:39,brandonwillard closed 2022-01-19 00:44:34",codecov[bot] fanshi118 brandonwillard,2,False
300,596,Implement Jax dispatch for Erf Op,ericmjl,"I have recently used the Erf and Erfinv functions in a PyMC3 model and would like to contribute a JAX-backed Erf op.

This PR is the first PR that helps me get up-to-speed with jaxification. I have done my best to follow the instructions [here](https://github.com/aesara-devs/aesara/blob/main/doc/extending/jax_op.rst) but I might be missing some pointers given my lack of constant practice with the library. Please go gentle. In later PRs I'll probably be able to follow much more closely as I get familiar with the development process.

W.r.t. the git commit messages, please ignore the bad habits that I have - a squashed merge at the end should do the trick.

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,ricardoV94 twiecki brandonwillard,,2021-09-25 17:19:46,2021-10-09 20:14:08,tests/link/test_jax.py aesara/link/jax/dispatch.py,5357cf6ee2a1fa7d3fa5a447a8204b98e666e28f fd7491cd79071207d45815d9da184cdbd226924f,"twiecki mentioned 2021-09-26 21:09:49,twiecki subscribed 2021-09-26 21:09:49,ricardoV94 mentioned 2021-09-26 21:09:49,ricardoV94 subscribed 2021-09-26 21:09:49,ericmjl review_dismissed 2021-09-29 10:13:42,ricardoV94 mentioned 2021-09-29 10:24:55,ricardoV94 subscribed 2021-09-29 10:24:55,twiecki mentioned 2021-09-30 02:26:02,twiecki subscribed 2021-09-30 02:26:02,ricardoV94 mentioned 2021-09-30 02:26:02,ricardoV94 subscribed 2021-09-30 02:26:02,ricardoV94 renamed 2021-09-30 06:59:38,ricardoV94 renamed 2021-09-30 06:59:43,ricardoV94 review_requested 2021-09-30 07:04:38,ricardoV94 mentioned 2021-10-06 23:08:33,ricardoV94 subscribed 2021-10-06 23:08:33,brandonwillard convert_to_draft 2021-10-07 04:45:33,brandonwillard ready_for_review 2021-10-07 04:46:09,brandonwillard review_requested 2021-10-09 19:24:52,ricardoV94 referenced 2021-10-09 20:14:08,ricardoV94 merged 2021-10-09 20:14:08,ricardoV94 closed 2021-10-09 20:14:08,brandonwillard mentioned 2021-10-10 00:56:10,brandonwillard subscribed 2021-10-10 00:56:10,ericmjl head_ref_deleted 2021-10-10 00:56:14",codecov[bot] brandonwillard ricardoV94 ericmjl twiecki,22,True
301,598,gitignore stuff produced by tests,ferrine,"First step for #597 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [ ] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.  If your commit description starts with ""Fix..."", then you're probably making this mistake.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,twiecki,,2021-09-28 10:05:32,2021-09-28 11:19:58,.gitignore,a0146b13e4e7bb2867774a159d8b1034bc24572f,"brandonwillard mentioned 2021-09-28 11:13:05,brandonwillard subscribed 2021-09-28 11:13:05,twiecki referenced 2021-09-28 11:19:58,twiecki merged 2021-09-28 11:19:58,twiecki closed 2021-09-28 11:19:58,ferrine head_ref_deleted 2021-09-28 11:28:56",ferrine twiecki brandonwillard,1,True
302,599,Improve the performance of Numba-compiled array reduction `Op`s,kc611,"Linked issue: https://github.com/aesara-devs/aesara/issues/529 

This PR replaces out use of `vectorized` in ` numba_funcify_CAReduce` while also replacing the harmful `np.transpose` (More Details: https://github.com/aesara-devs/aesara/issues/404#issuecomment-927165342) from the JIT-ed function. 

A performance comparison for this implementation: https://gist.github.com/kc611/7cc0451c6b5b53c9ce46fdc57c6a0da1",enhancement important Numba,oscargus brandonwillard,kc611,2021-09-28 14:52:12,2022-01-20 17:54:58,aesara/tensor/math.py aesara/link/numba/dispatch/elemwise.py tests/link/test_numba.py aesara/link/numba/dispatch/basic.py tests/scalar/test_basic.py aesara/scalar/basic.py tests/link/test_numba_performance.py,ef9beb0398e7a01a964a769e1ddc8a30fbaddbd9 092e760b881d16316a0f1b54bba10815e60e1f76 178aeed2b0a680c6a560789b65c3da82a3628228 b4c8fb00f60ecc453125f7c54e9a5097f478dddf,"kc611 convert_to_draft 2021-09-28 14:52:32,kc611 head_ref_force_pushed 2021-09-29 10:45:40,brandonwillard connected 2021-11-08 23:33:31,brandonwillard labeled 2021-11-23 18:25:00,fanshi118 mentioned 2021-11-23 19:00:50,fanshi118 subscribed 2021-11-23 19:00:50,fanshi118 mentioned 2021-11-23 19:28:00,fanshi118 subscribed 2021-11-23 19:28:00,brandonwillard labeled 2021-12-13 05:10:57,brandonwillard labeled 2021-12-13 05:11:05,kc611 assigned 2021-12-13 05:11:12,kc611 head_ref_force_pushed 2021-12-22 12:14:02,kc611 ready_for_review 2021-12-22 14:07:09,kc611 head_ref_force_pushed 2021-12-23 16:43:14,kc611 head_ref_force_pushed 2022-01-03 17:06:23,kc611 head_ref_force_pushed 2022-01-07 17:02:59,brandonwillard head_ref_force_pushed 2022-01-18 16:46:09,brandonwillard head_ref_force_pushed 2022-01-18 18:00:07,brandonwillard head_ref_force_pushed 2022-01-18 18:39:01,brandonwillard head_ref_force_pushed 2022-01-18 18:40:27,brandonwillard head_ref_force_pushed 2022-01-18 18:41:39,brandonwillard head_ref_force_pushed 2022-01-18 20:12:31,brandonwillard head_ref_force_pushed 2022-01-18 20:27:10,brandonwillard head_ref_force_pushed 2022-01-18 20:29:34,brandonwillard renamed 2022-01-18 20:49:35,brandonwillard head_ref_force_pushed 2022-01-18 21:04:33,brandonwillard head_ref_force_pushed 2022-01-18 21:04:58,brandonwillard head_ref_force_pushed 2022-01-18 21:19:19,brandonwillard head_ref_force_pushed 2022-01-18 21:31:06,brandonwillard head_ref_force_pushed 2022-01-18 21:43:38,brandonwillard head_ref_force_pushed 2022-01-18 22:13:22,brandonwillard head_ref_force_pushed 2022-01-18 22:14:00,brandonwillard head_ref_force_pushed 2022-01-19 00:37:25,brandonwillard head_ref_force_pushed 2022-01-19 00:37:42,brandonwillard review_dismissed 2022-01-19 00:42:42,brandonwillard head_ref_force_pushed 2022-01-20 06:39:58,brandonwillard referenced 2022-01-20 17:54:57,brandonwillard merged 2022-01-20 17:54:57,brandonwillard closed 2022-01-20 17:54:58",codecov[bot] kc611 brandonwillard fanshi118 oscargus,19,True
303,601,Use alt_prefix field in `ScanArgs.get_alt_field`,brandonwillard,This PR fixes a bug in `ScanArgs.get_alt_field` that causes the `alt_prefix` argument to be ignored.,bug Scan,,brandonwillard,2021-09-30 23:38:14,2021-10-01 00:43:14,aesara/scan/utils.py tests/scan/test_utils.py,04aa919a6541ff91722c626b2f9d8727f18098cc,"brandonwillard assigned 2021-09-30 23:38:36,brandonwillard labeled 2021-09-30 23:38:41,brandonwillard labeled 2021-09-30 23:38:41,brandonwillard referenced 2021-10-01 00:43:14,brandonwillard merged 2021-10-01 00:43:14,brandonwillard closed 2021-10-01 00:43:14,brandonwillard head_ref_deleted 2021-10-01 00:43:16",codecov[bot] brandonwillard,1,True
304,602,Add an `empty_like` implementation,brandonwillard,This PR adds an `empty_like` implementation.,enhancement NumPy compatibility,twiecki,brandonwillard,2021-10-01 01:53:16,2021-10-01 06:31:33,tests/tensor/test_basic.py aesara/tensor/basic.py,ad037ced0c70802dd4a69a55bef72f5690903739,"brandonwillard assigned 2021-10-01 01:53:26,brandonwillard labeled 2021-10-01 01:53:35,brandonwillard labeled 2021-10-01 01:53:35,twiecki referenced 2021-10-01 06:31:33,twiecki merged 2021-10-01 06:31:33,twiecki closed 2021-10-01 06:31:33,brandonwillard head_ref_deleted 2021-11-10 20:30:50",codecov[bot] twiecki brandonwillard,1,True
305,607,Added Numba Scan implementation,kc611,A first try at implementing `Scan` Op in Numba.,enhancement important Numba Scan,brandonwillard,kc611,2021-10-04 12:46:37,2021-10-09 17:42:48,aesara/link/numba/dispatch/scan.py aesara/link/numba/dispatch/__init__.py aesara/link/numba/dispatch/basic.py tests/link/test_numba.py,0b83dc6f5eb46659185b7d6bd11a0672ebfbe008 e15bd95a49de54386532c478029dbe1fccd85f69 3b06d5c19c7dcd2df4c8ecabe08b3f983b55eaf8 018f8d717b345d8f1c26f5402059e3c934fdfb4e,"kc611 convert_to_draft 2021-10-04 12:46:50,kc611 review_requested 2021-10-04 12:47:05,kc611 assigned 2021-10-04 15:41:01,brandonwillard labeled 2021-10-04 15:41:16,brandonwillard labeled 2021-10-04 15:41:16,brandonwillard labeled 2021-10-04 15:41:16,brandonwillard labeled 2021-10-06 17:31:33,brandonwillard connected 2021-10-06 17:32:12,brandonwillard ready_for_review 2021-10-09 17:39:38,brandonwillard referenced 2021-10-09 17:42:47,brandonwillard merged 2021-10-09 17:42:47,brandonwillard closed 2021-10-09 17:42:48",codecov[bot] kc611 brandonwillard,3,True
306,610,Make Numba conversion of `MakeVector` work with mixed input types,brandonwillard,"This PR fixes an issue with the Numba conversion of `MakeVector` that causes it to fail when mixed type inputs are provided.

Closes #600",,,,2021-10-09 23:46:57,2021-10-10 18:11:46,tests/link/test_numba.py aesara/link/numba/dispatch/tensor_basic.py,1144dc6490ccd52702c130221e1c2325f77164c6,"brandonwillard head_ref_force_pushed 2021-10-09 23:58:54,brandonwillard head_ref_force_pushed 2021-10-10 06:21:43,brandonwillard referenced 2021-10-10 18:11:46,brandonwillard merged 2021-10-10 18:11:46,brandonwillard closed 2021-10-10 18:11:46,brandonwillard head_ref_deleted 2021-10-10 18:11:49",codecov[bot] brandonwillard,1,True
307,613,avoid appending -m64 to CXXFLAGS for riscv,alexfanqi,"Hi,

I am testing aesara on riscv and find lots of test failures are due to invalid -m64 flags. Like arm, gcc for riscv does not have the -m64 flag. This pr makes those tests pass successfully.
",bug C-backend,ricardoV94,,2021-10-13 06:41:05,2021-10-19 01:00:15,aesara/link/c/cmodule.py,9b791518cd5bee36e486a7da94795bbf9abc922c,"brandonwillard labeled 2021-10-14 18:30:59,brandonwillard labeled 2021-10-14 18:30:59,brandonwillard referenced 2021-10-19 01:00:15,brandonwillard merged 2021-10-19 01:00:15,brandonwillard closed 2021-10-19 01:00:15",codecov[bot] ricardoV94 alexfanqi brandonwillard,4,True
308,614,Remove libgpuarray,ferrine,"Removing all the mentions to libgpuarray

",important refactor GPU,brandonwillard,ferrine,2021-10-14 10:55:03,2022-04-07 00:35:46,tests/gpuarray/test_nnet.py aesara/link/c/cmodule.py aesara/gpuarray/ctc.py aesara/gpuarray/c_code/pool_max_grad.c aesara/gpuarray/opt_util.py setup.py aesara/gpuarray/c_code/dnn_fwd.c doc/library/gpuarray/ctc.rst doc/faq.rst aesara/gpuarray/__init__.py aesara/gpuarray/c_code/dnn_batchnorm_inf.c tests/gpuarray/c_code/tstgpueye.c tests/gpuarray/test_fft.py environment.yml aesara/gpuarray/c_code/dnn_base.c aesara/compile/profiling.py tests/gpuarray/test_subtensor.py aesara/gpuarray/dnn_opt.py aesara/tensor/slinalg.py doc/install.rst aesara/gpuarray/c_code/ctc_wrapper.c aesara/gpuarray/opt.py aesara/tensor/extra_ops.py aesara/compile/function/types.py aesara/scan/opt.py aesara/gpuarray/sort.py aesara/__init__.py doc/tutorial/examples.rst aesara/gpuarray/c_code/topk_common.cuh aesara/tensor/blas.py tests/gpuarray/test_ctc.py aesara/printing.py tests/gpuarray/test_basic_ops.py aesara/misc/check_multi_gpu.py aesara/gpuarray/kernel_codegen.py aesara/scan/c_code/scan_perform.c doc/library/gpuarray/op.rst tests/gpuarray/test_linalg.py tests/gpuarray/test_pool.py aesara/gpuarray/nnet.py aesara/tensor/fourier.py doc/tutorial/using_multi_gpu.rst doc/extending/creating_an_op.rst aesara/gpuarray/c_code/dnn_conv_base.c aesara/gpuarray/c_code/dnn_gi.c aesara/gpuarray/rng_mrg.py aesara/gpuarray/c_code/dnn_batchnorm_base.c aesara/gpuarray/pathparse.py tests/gpuarray/test_extra_ops.py aesara/gpuarray/c_code/blockgemv.c aesara/misc/check_blas.py aesara/gpuarray/c_code/magma_cholesky.c tests/gpuarray/test_rng_mrg.py aesara/gpuarray/c_code/dnn_pool.c aesara/gpuarray/c_code/magma_inv.c .pre-commit-config.yaml tests/gpuarray/test_cgpukernelbase.py doc/extending/graphstructures.rst aesara/gpuarray/c_code/gpuarray_helper.h doc/optimizations.rst tests/gpuarray/test_opt.py doc/library/config.rst tests/gpuarray/config.py tests/gpuarray/test_dnn.py tests/gpuarray/test_pickle.py aesara/tensor/subtensor.py aesara/gpuarray/blocksparse.py aesara/gpuarray/c_code/dnn_sptf_gt.c aesara/gpuarray/multinomial.py aesara/gpuarray/c_code/pool_grad_grad.c doc/install_windows.rst aesara/gpuarray/c_code/dnn_rnn_paramsize.c aesara/gpuarray/c_code/pool_ave_grad.c aesara/link/c/interface.py tests/gpuarray/test_scan.py tests/compile/function/test_types.py tests/gpuarray/__init__.py aesara/tensor/basic_opt.py aesara/sandbox/fourier.py doc/tutorial/modes.rst doc/tutorial/using_gpu.rst doc/install_generic.inc aesara/tensor/nnet/conv.py aesara/tensor/sort.py doc/library/gpuarray/fft.rst aesara/d3viz/d3viz.py aesara/gpuarray/c_code/dnn_sptf_gi.c aesara/gpuarray/c_code/corr_gemm.c aesara/compile/mode.py aesara/gpuarray/c_code/dnn_rnn_fwd.c aesara/gpuarray/c_code/pool_max_rop.c tests/gpuarray/test_type.py aesara/misc/pkl_utils.py aesara/gpuarray/c_code/dnn_sptf_grid.c aesara/gpuarray/c_code/dnn_dropout_fwd.c tests/gpuarray/test_gemmcorr.py tests/test_config.py doc/tutorial/aliasing.rst doc/tutorial/loop.rst doc/library/gpuarray/index.rst aesara/gpuarray/c_code/dnn_softmax_grad.c aesara/tensor/nnet/opt.py doc/library/gpuarray/type.rst tests/gpuarray/test_abstractconv.py aesara/gpuarray/c_code/dnn_pool_grad.c aesara/gpuarray/subtensor.py aesara/gpuarray/linalg.py aesara/configparser.py doc/library/gpuarray/extra.rst doc/extending/ctype.rst aesara/ifelse.py aesara/gpuarray/c_code/dnn_rnn_desc.c aesara/gpuarray/c_code/dnn_batchnorm.c aesara/gpuarray/dnn.py doc/library/tensor/nnet/ctc.rst aesara/gpuarray/c_code/magma_eigh.c aesara/tensor/nlinalg.py doc/troubleshooting.rst aesara/gradient.py aesara/gpuarray/c_code/topk_dense_large.cu aesara/gpuarray/c_code/blockger.c doc/install_ubuntu.rst doc/extending/type.rst aesara/gpuarray/elemwise.py aesara/gpuarray/c_code/dnn_batchnorm_grad.c doc/library/gpuarray/linalg.rst aesara/compile/sharedvalue.py aesara/tensor/math.py doc/scripts/docgen.py doc/library/tensor/nnet/conv.rst aesara/tensor/nnet/conv3d2d.py aesara/gpuarray/c_code/dnn_rnn_gw.c aesara/gpuarray/c_code/corr3d_gemm.c tests/gpuarray/rnn_support.py aesara/scan/scan_perform.pyx doc/library/sparse/index.rst tests/gpuarray/test_reduction.py aesara/scan/op.py aesara/tensor/nnet/basic.py aesara/tensor/nnet/batchnorm.py doc/library/gpuarray/plot_fft.png aesara/compile/debugmode.py aesara/gpuarray/extra_ops.py aesara/tensor/signal/pool.py aesara/d3viz/formatting.py doc/extending/graph_rewriting.rst aesara/misc/burn_gpu.py tests/gpuarray/test_others.py aesara/gpuarray/fft.py tests/gpuarray/run_dnn_conv.py doc/tutorial/using_gpu_solution_1.py DESCRIPTION.txt aesara/compile/nanguardmode.py aesara/gpuarray/c_code/magma_svd.c aesara/gpuarray/neighbours.py tests/gpuarray/test_blas.py aesara/gpuarray/basic_ops.py aesara/gpuarray/c_code/cudnn_helper.h aesara/link/c/params_type.py aesara/tensor/nnet/abstract_conv.py tests/gpuarray/test_elemwise.py doc/library/gpuarray/dnn.rst aesara/tensor/math_opt.py aesara/scan/basic.py doc/extending/other_ops.rst tests/gpuarray/test_blocksparse.py aesara/scan/__init__.py aesara/graph/type.py tests/gpuarray/test_sort.py aesara/gpuarray/blas.py aesara/gpuarray/cudnn_defs.py aesara/gpuarray/optdb.py tests/gpuarray/test_gemmcorr3d.py aesara/misc/may_share_memory.py aesara/gpuarray/c_code/conv_desc.c doc/library/compile/shared.rst setup.cfg aesara/gpuarray/pool.py aesara/gpuarray/c_code/dnn_sptf_sampler.c aesara/gpuarray/c_code/dnn_gw.c doc/extending/creating_a_c_op.rst aesara/gpuarray/fp16_help.py aesara/gpuarray/c_code/dimshuffle.c doc/tutorial/modes_solution_1.py tests/gpuarray/test_multinomial.py aesara/tensor/nnet/neighbours.py doc/acknowledgement.rst aesara/gpuarray/reduction.py aesara/sandbox/rng_mrg.py aesara/gpuarray/c_code/dnn_dropout_desc.c aesara/gpuarray/c_code/dnn_rnn_gi.c doc/requirements.inc aesara/configdefaults.py aesara/gpuarray/c_code/pool.c aesara/compile/function/pfunc.py doc/install_macos.rst tests/gpuarray/test_neighbours.py aesara/gpuarray/c_code/magma_qr.c tests/tensor/test_sharedvar.py aesara/gpuarray/type.py aesara/gpuarray/c_code/topk_dense.cu aesara/tensor/subtensor_opt.py tests/gpuarray/check_dnn_conv.py aesara/scan/utils.py tests/test_ifelse.py aesara/gpuarray/c_code/dnn_softmax.c aesara/tensor/basic.py doc/tutorial/debug_faq.rst aesara/graph/basic.py tests/gpuarray/test_misc.py aesara/updates.py doc/tutorial/index.rst aesara/gpuarray/c_code/dnn_redux.c,49c35f18d9249cb45ab9bfdd0feba5d213912061 45e891b70deab8c8692bfc5a2071b9b92a516b64 2c7d4623c634e4cb03830f52ab055a69c2bdd1cb 49eaca54a143c8403ac32dc57c20968c85650258 bd7a13574138020e0adb1f44da758c2da8468f18 d23cf2c7e45c71a869c41ac230adcd05c8eb3e97 a431d9c750bef6d3f89f1be2224e3e21337949ba 68e63463a49735ef09d1bb4620b4abcae26327ea fe60eae8d45475bba217fcc97e3352221f5ae829 ff49a277ea1b74dc39826542d278c59115e228b5 98bb1ee6dfa5d5fd61ebbaeec4be677c954ba738 fb4722f196aecbcc2dc380ca1dcf90c1bccf58d5 815336608354e85b532364a580fbd938c6f4b95b,"brandonwillard mentioned 2021-10-14 10:57:18,brandonwillard subscribed 2021-10-14 10:57:18,brandonwillard connected 2021-10-14 15:11:39,brandonwillard labeled 2021-10-14 15:11:52,brandonwillard labeled 2021-10-14 15:11:52,brandonwillard labeled 2021-10-14 15:11:52,ferrine assigned 2021-10-14 15:12:05,twiecki mentioned 2022-03-14 11:17:33,twiecki subscribed 2022-03-14 11:17:33,brandonwillard mentioned 2022-03-14 11:17:33,brandonwillard subscribed 2022-03-14 11:17:34,ferrine renamed 2022-03-15 15:17:14,ferrine renamed 2022-03-17 09:40:43,brandonwillard mentioned 2022-03-17 09:45:03,brandonwillard subscribed 2022-03-17 09:45:03,brandonwillard review_requested 2022-03-29 01:46:59,brandonwillard review_requested 2022-03-29 01:46:59,brandonwillard review_requested 2022-03-29 01:46:59,brandonwillard review_requested 2022-03-29 01:46:59,brandonwillard referenced 2022-04-07 00:35:45,brandonwillard merged 2022-04-07 00:35:45,brandonwillard closed 2022-04-07 00:35:46,ferrine mentioned 2022-04-07 00:37:35,ferrine subscribed 2022-04-07 00:37:35,ferrine head_ref_deleted 2022-04-07 12:45:45",ferrine twiecki codecov[bot] brandonwillard,13,True
309,615,Added Numba IfElse Op,kc611,"This PR adds a simple `Numba` conversion for the `IfElse` `Op`. 

Closes #401 ",enhancement Numba,brandonwillard,kc611,2021-10-15 11:04:07,2021-10-19 00:59:12,tests/link/test_numba.py aesara/link/numba/dispatch/basic.py,eb1244352144795121f815f4d042238bc9f3836d,"kc611 assigned 2021-10-15 15:55:58,brandonwillard labeled 2021-10-15 15:56:03,brandonwillard labeled 2021-10-15 15:56:12,brandonwillard review_dismissed 2021-10-18 18:04:28,brandonwillard head_ref_force_pushed 2021-10-18 18:04:28,brandonwillard head_ref_force_pushed 2021-10-18 18:14:08,brandonwillard head_ref_force_pushed 2021-10-18 20:27:41,brandonwillard referenced 2021-10-19 00:59:12,brandonwillard merged 2021-10-19 00:59:12,brandonwillard closed 2021-10-19 00:59:12",codecov[bot] kc611 brandonwillard,3,True
310,618,[Do Not Merge] Replaced CLinker to NumbaLinker from mode and tests,kc611,"resolves #432 

A simple replacement of all `CLinker` instances with `NumbaLinker` from active tests to check what fails. 

Some test I've ignored `Clinker`s in are those from `test/gpuarray` and `tests/link` and also a `test/tensor/test_mpi.py`",testing important Numba,,kc611,2021-10-18 16:43:50,2022-01-01 17:23:00,tests/tensor/random/test_type.py tests/scalar/test_basic_sympy.py aesara/compile/mode.py tests/tensor/test_gc.py tests/tensor/test_elemwise.py tests/scalar/test_math.py tests/tensor/test_basic_opt.py,7d43a525edd08d435deac4772c4f765170450c3d e1b52908c5dc0e02cfaeb1fe5e3028d9bbfee084,"brandonwillard labeled 2021-10-18 17:52:17,brandonwillard labeled 2021-10-18 17:52:17,brandonwillard labeled 2021-10-18 17:52:32,kc611 assigned 2021-10-18 17:55:19,kc611 closed 2022-01-01 17:23:00",kc611 brandonwillard,1,False
311,619,Fixed local_useless_switch optimization for boolean conditions,kc611,resolves #616 ,bug important graph rewriting,brandonwillard,kc611,2021-10-18 17:01:01,2021-10-18 17:51:37,tests/tensor/test_basic_opt.py aesara/tensor/basic_opt.py,9439822c7e9d8e3c5f985b1b9a06a8f030f2b1d8,"kc611 review_requested 2021-10-18 17:05:56,kc611 assigned 2021-10-18 17:06:28,brandonwillard labeled 2021-10-18 17:06:36,brandonwillard labeled 2021-10-18 17:06:36,brandonwillard labeled 2021-10-18 17:06:43,brandonwillard referenced 2021-10-18 17:51:37,brandonwillard merged 2021-10-18 17:51:37,brandonwillard closed 2021-10-18 17:51:37",kc611 brandonwillard,0,True
312,625,Fixed Dimshuffle for scalar result cases,kc611,"Fixes #621 

A simple fix which returns a scalar array for the particular case of `DimShuffle` 

```python
import numpy as np
import aesara
from aesara.graph.optdb import OptimizationQuery
from aesara.compile.mode import Mode
from aesara.link.numba.linker import NumbaLinker
from aesara.tensor.elemwise import DimShuffle
from aesara.tensor.type import TensorType

opts = OptimizationQuery(include=[None], exclude=[""cxx_only"", ""BlasOpt""])
numba_mode = Mode(NumbaLinker(), opts)
py_mode = Mode(""py"", opts)

orig_shape = (1, 1, 1)
dims = ()
out_shape = ()

broadcastables = [(entry == 1) for entry in orig_shape]
x = TensorType(aesara.config.floatX, broadcastables)(""x"")
out = DimShuffle(broadcastables, dims)(x)

py_res = aesara.function(inputs=[x], outputs=[out], mode=py_mode)(np.ones(orig_shape, dtype=aesara.config.floatX)) # returns array([1.])
numba_res = aesara.function(inputs=[x], outputs=[out], mode=numba_mode)(np.ones(orig_shape, dtype=aesara.config.floatX)) # returns array([1.])
pass
```",bug important,brandonwillard,,2021-10-21 18:13:54,2021-10-22 20:50:21,tests/link/test_numba.py aesara/link/numba/dispatch/scalar.py aesara/link/numba/dispatch/elemwise.py,d4dd922ed0689b10a72eb2e4dcd17c348365ce62 cda03573c1bcb4a6f4c7e19c96ec77a70cb188f1,"brandonwillard labeled 2021-10-21 18:19:23,brandonwillard labeled 2021-10-21 18:19:23,kc611 head_ref_force_pushed 2021-10-22 15:12:49,brandonwillard referenced 2021-10-22 20:50:21,brandonwillard merged 2021-10-22 20:50:21,brandonwillard closed 2021-10-22 20:50:21",codecov[bot] kc611 brandonwillard,2,True
313,626,Fixed float typecasting for Dot implementation in Numba module,kc611,"Fixes #620 

A simple fix that typecasts the inputs to `Dot` (and other few implementation of Numba Ops) to the maximum sized input float so that every input is of same `dtype` (as expected by Numba)",,brandonwillard,,2021-10-21 18:39:27,2021-10-22 20:50:36,tests/link/test_numba.py aesara/link/numba/dispatch/basic.py,8dd10c5d09afb558ac9c1d562203df0b2fd78acf,"kc611 head_ref_force_pushed 2021-10-22 15:08:38,kc611 review_dismissed 2021-10-22 18:23:39,kc611 head_ref_force_pushed 2021-10-22 18:23:39,brandonwillard referenced 2021-10-22 20:50:36,brandonwillard merged 2021-10-22 20:50:36,brandonwillard closed 2021-10-22 20:50:36",codecov[bot] kc611 brandonwillard,5,True
314,627,Fixed: Inv Numba implementation now correctly returns non-integral in…,kc611,"A simple fix which replaces Numpy's reciprocal function for Numba implementation of `Inv` Ops with a direct inverse signature. 

Fixes #624 ",,brandonwillard,,2021-10-21 19:00:03,2021-10-22 18:21:36,tests/link/test_numba.py aesara/link/numba/dispatch/scalar.py,00ab32784ddceb14544f4ca912ef3f5a66a37339,"kc611 referenced 2021-10-22 18:21:36,kc611 merged 2021-10-22 18:21:36,kc611 closed 2021-10-22 18:21:36",codecov[bot] kc611 brandonwillard,1,True
315,628,Fixed Numba Scan failures on multidimensional nit sot outputs,kc611,"Fixes #623 

Used a simple and 'tricky' Numba list element reassignment to allocate memory properly to `nit_sot` outputs in Numba implementation of `Scan`.

Essentially in Numba as long as as the dimensionality is same it doesn't care about the precise shape of the element in a list wile reassignment and hence we can reassign an element with a different shape (but with same number of dimensions) in a Numba list to a specific index.",,brandonwillard,,2021-10-22 15:51:14,2021-10-22 20:50:58,aesara/link/numba/dispatch/scan.py tests/link/test_numba.py aesara/link/numba/dispatch/scalar.py,d183385f8e20e3c3e4b52ff6c956713ab33f994c 223d5df63c5de402bc2c0f4449195aa98ea264a7 e7d3b6b0e9386feb3e53a1b292415fe0d48ac8b0,"brandonwillard referenced 2021-10-22 20:50:57,brandonwillard merged 2021-10-22 20:50:57,brandonwillard closed 2021-10-22 20:50:58",codecov[bot] kc611 brandonwillard,1,True
316,631,Allow `jax_funcify_Join` to work without omnistaging,ricardoV94,"Do not include explicit if statement, as it cannot be jit-compiled by JAX. The error will be caught by JAX anyway.


Closes #630",bug enhancement JAX,twiecki brandonwillard,,2021-10-25 13:44:14,2021-10-27 04:45:40,tests/link/test_jax.py aesara/link/jax/dispatch.py,9bcc953b273a2e858c97ce5ad17773997abb8c48,"ricardoV94 renamed 2021-10-25 13:44:24,ricardoV94 renamed 2021-10-25 13:44:33,ricardoV94 head_ref_force_pushed 2021-10-25 13:44:46,ricardoV94 head_ref_force_pushed 2021-10-25 13:46:09,ricardoV94 labeled 2021-10-25 13:46:27,brandonwillard labeled 2021-10-25 16:20:17,brandonwillard labeled 2021-10-25 16:21:39,ricardoV94 convert_to_draft 2021-10-25 17:13:05,ricardoV94 head_ref_force_pushed 2021-10-25 18:24:24,ricardoV94 ready_for_review 2021-10-25 18:26:09,ricardoV94 review_requested 2021-10-25 18:55:41,ricardoV94 review_requested 2021-10-26 07:05:53,ricardoV94 referenced 2021-10-27 04:45:40,ricardoV94 merged 2021-10-27 04:45:40,ricardoV94 closed 2021-10-27 04:45:40,ricardoV94 head_ref_deleted 2021-11-04 14:53:47",codecov[bot] ricardoV94 twiecki brandonwillard,5,True
317,632,Convert `get_vector_length` to a dispatch function,brandonwillard,"This PR changes `get_vector_length` into a `singledispatch` function.  Under these changes, `Op`-specific length-discerning logic can now be located in the module that the `Op` is defined, which reduces dependencies between sub-packages/modules and simplifies the process of making extensions to the logic itself.

These changes also help pave the way for a solution to #608.  (Such changes may also be included in this PR.)",refactor,,brandonwillard,2021-10-27 22:02:04,2021-10-28 04:07:59,aesara/tensor/sharedvar.py aesara/tensor/shape.py aesara/tensor/basic.py aesara/tensor/elemwise.py aesara/tensor/subtensor.py tests/tensor/test_basic.py aesara/tensor/__init__.py,58ea5f3c251c168b7ffa1759d476962824af3857,"brandonwillard head_ref_force_pushed 2021-10-27 22:02:26,brandonwillard head_ref_force_pushed 2021-10-27 22:10:00,brandonwillard head_ref_force_pushed 2021-10-27 22:53:06,brandonwillard head_ref_force_pushed 2021-10-28 01:04:57,brandonwillard assigned 2021-10-28 01:12:19,brandonwillard labeled 2021-10-28 01:12:26,brandonwillard head_ref_force_pushed 2021-10-28 01:32:07,brandonwillard referenced 2021-10-28 04:07:59,brandonwillard merged 2021-10-28 04:07:59,brandonwillard closed 2021-10-28 04:07:59,brandonwillard head_ref_deleted 2021-10-28 04:08:03",codecov[bot] brandonwillard,1,True
318,635,Update `Scan` optimizations and fix `Scan` + `RandomVariable` shape inference issues,brandonwillard,"This PR refactors some of the `Scan` optimizations in order to fix `Scan` + `RandomVariable` shape inference issues.  These changes are a part of #584 and are a solution to #608.

- [ ] Replace use of `FunctionGraph.replace*` in `add_nitsot_outputs`
  This isn't directly related to #608, so it can be taken care of later.
- [x] Use `SpecifyShape` with the `RandomVariable`'s `size` parameter
  This makes it possible for `Scan`'s shape inference to track the shape of the cloned non-sequence variables it makes out of `RandomVariable` `size` parameters.
- [x] Add canonicalizations for `SpecifyShape`
  These are necessary for broadcastable inference in `RandomVariable` when `SpecifyShape` is used.
- [x] Convert global `Scan` optimizations to local optimizations.

  It looks like the current `Scan` optimizations mutate the `FunctionGraph`s in-place in different stages, and this might be leading to inconsistent intermediate graph states that fail when the shape inference optimization is performed.  
  
  This seems to be the case for the MWE in #608, because shape inference errors occur when the cloned `size` parameter in the `Scan`'s body (i.e. the `size` variable in the graph constructed by the `scan_body` function) is encountered.  It should be possible to assign the shape of `size_at` to that variable in the `ShapeFeature`; however, the outer `size_at` is nowhere to be found in the `FunctionGraph` that's being optimized&mdash;implying that a valid `Scan` isn't being used to replace the original `Scan`, but that the original `Scan` is possibly being changed in multiple `FunctionGraph.replace*` steps.

  From inspection of `aesara.graph.opt`, it's clear that this is a distinct possibility, since most of the optimizations are global optimizations with multiple `FunctionGraph.replace_all*` calls in a single optimization.  This approach to graph rewriting is rather undesirable for the reasons mentioned above, so this PR will attempt to remedy the situation.",bug important graph rewriting refactor Scan,,brandonwillard,2021-10-28 22:03:51,2021-11-18 16:02:46,aesara/scan/basic.py aesara/tensor/shape.py tests/scan/test_opt.py tests/tensor/test_basic.py doc/troubleshooting.rst aesara/tensor/random/op.py aesara/tensor/type.py tests/tensor/random/test_op.py aesara/graph/opt.py aesara/compile/ops.py aesara/tensor/basic_opt.py aesara/scan/scan_perform.pyx aesara/link/numba/dispatch/random.py tests/tensor/test_basic_opt.py aesara/scan/scan_perform_ext.py aesara/scan/opt.py aesara/scan/op.py tests/tensor/test_shape.py tests/tensor/test_sharedvar.py aesara/tensor/subtensor_opt.py aesara/scan/c_code/scan_perform.c tests/scan/test_basic.py aesara/tensor/random/utils.py aesara/scan/utils.py tests/tensor/test_subtensor.py aesara/tensor/basic.py tests/tensor/test_subtensor_opt.py tests/tensor/random/test_opt.py,fe59ddf2fb855a877e0013c9e7d016f375676b7f a23d3682c45e82e8718ad90f6ab8fe0f18bd4f1a 9f7d40629243bb5052bdb84a0a68d12ec61fc5b7 86a4acb665ac1370a610be8cbd2b686275510e01 463adf8932f472d6d38c77c6663fdb884cd5fe37 8730c2e24ff59798bd3e90bad3f20afcd1e044c2 c6b3ddfee3507ced1fc09bc8ff0d3305f3ff11ff afefb0141a4e8c3cf7ddd441f87c53c8650898df 6232ba3743d6273adc7665be84b8db4a86202a8a 1f7b9b4daa0800c4d271464600c445a86ee01823 147497fe08dbb2916fd5aa1be49ceb3cdeea2546 b11ffefb16b92809c455c20a92d26f10ac1842e1 22fc6b497aa44bc05c4103234a3e9af6687079a1 d17dd077fc49e6c840a807dd82766d78a8f8b2cd 0f0badefca94b8106cde244f9f248c875a736415,"brandonwillard assigned 2021-10-28 22:04:04,brandonwillard labeled 2021-10-28 22:04:15,brandonwillard labeled 2021-10-28 22:04:15,brandonwillard labeled 2021-10-28 22:04:15,brandonwillard convert_to_draft 2021-10-28 22:04:23,brandonwillard head_ref_force_pushed 2021-10-29 00:27:38,brandonwillard head_ref_force_pushed 2021-10-29 03:58:12,brandonwillard head_ref_force_pushed 2021-10-29 17:52:41,brandonwillard head_ref_force_pushed 2021-11-15 19:01:45,brandonwillard head_ref_force_pushed 2021-11-15 19:39:11,brandonwillard connected 2021-11-15 19:39:38,brandonwillard ready_for_review 2021-11-15 19:39:46,brandonwillard labeled 2021-11-15 19:39:54,brandonwillard head_ref_force_pushed 2021-11-15 19:53:25,brandonwillard head_ref_force_pushed 2021-11-15 22:31:26,brandonwillard head_ref_force_pushed 2021-11-15 22:40:43,brandonwillard head_ref_force_pushed 2021-11-16 03:07:10,brandonwillard renamed 2021-11-16 03:14:14,brandonwillard labeled 2021-11-16 03:14:34,brandonwillard head_ref_force_pushed 2021-11-16 04:46:40,brandonwillard referenced 2021-11-18 16:02:46,brandonwillard merged 2021-11-18 16:02:46,brandonwillard closed 2021-11-18 16:02:46,brandonwillard head_ref_deleted 2021-11-18 16:02:51",codecov[bot] brandonwillard,1,True
319,636,Fix `TensorVariable.__getitem__` `np.newaxis` cases,brandonwillard,Closes #633,bug important,,brandonwillard,2021-10-29 04:45:42,2021-10-29 06:07:33,aesara/tensor/elemwise.py tests/tensor/test_subtensor.py aesara/tensor/var.py tests/tensor/test_var.py,594c7c4ab804ce5ce698025d24aa2dfaf6102a7c,"brandonwillard assigned 2021-10-29 04:45:54,brandonwillard labeled 2021-10-29 04:46:01,brandonwillard labeled 2021-10-29 04:46:01,brandonwillard referenced 2021-10-29 06:07:33,brandonwillard merged 2021-10-29 06:07:33,brandonwillard closed 2021-10-29 06:07:33,brandonwillard head_ref_deleted 2021-10-29 06:07:36",codecov[bot] brandonwillard,1,True
320,639,Add Numba cache configuration,kc611,"Built on top of rebased version of : https://github.com/aesara-devs/aesara/pull/475

Adds a `partial` function `numba_njit` as `numba.njit(cache=config.numba__cache)` and a `numba_vectorize` as `numba.vectorize(cache=config.numba__cache)`.

",enhancement Numba,brandonwillard,kc611,2021-10-29 17:29:14,2022-01-18 16:38:54,aesara/link/numba/dispatch/scan.py aesara/link/basic.py aesara/link/numba/dispatch/extra_ops.py aesara/link/utils.py aesara/link/numba/dispatch/tensor_basic.py aesara/configdefaults.py aesara/link/numba/dispatch/elemwise.py aesara/link/numba/dispatch/nlinalg.py tests/link/test_numba.py aesara/link/numba/dispatch/basic.py .gitignore aesara/link/numba/dispatch/random.py aesara/link/numba/dispatch/scalar.py,14ec70a9b407ae6531cd90a735c6e39684731562 314ca4e0fb7e11f12b770810aec2594945fd602a,"kc611 head_ref_force_pushed 2021-10-29 17:49:29,brandonwillard connected 2021-11-08 23:38:05,kc611 head_ref_force_pushed 2021-11-10 17:17:13,kc611 assigned 2021-12-09 22:42:31,brandonwillard labeled 2021-12-09 22:42:45,brandonwillard labeled 2021-12-09 22:42:45,kc611 head_ref_force_pushed 2021-12-28 17:57:58,brandonwillard ready_for_review 2022-01-11 21:50:16,brandonwillard head_ref_force_pushed 2022-01-11 21:54:13,brandonwillard head_ref_force_pushed 2022-01-11 23:58:51,kc611 head_ref_force_pushed 2022-01-18 04:11:15,brandonwillard referenced 2022-01-18 16:38:54,brandonwillard merged 2022-01-18 16:38:54,brandonwillard closed 2022-01-18 16:38:54",codecov[bot] kc611 brandonwillard,17,True
321,640,Implement `__eq__` for `RandomStateType` and `RandomGeneratorType`,brandonwillard,Closes #638,bug,ricardoV94 twiecki,brandonwillard,2021-10-29 23:19:11,2021-10-30 10:40:02,tests/tensor/random/test_type.py aesara/tensor/random/type.py,7c5a08e7e3b2b8ef3342cc1ca1f55a2c20631561,"brandonwillard assigned 2021-10-29 23:19:51,brandonwillard labeled 2021-10-29 23:19:55,brandonwillard head_ref_force_pushed 2021-10-29 23:21:47,brandonwillard review_dismissed 2021-10-30 08:34:18,brandonwillard head_ref_force_pushed 2021-10-30 08:34:18,twiecki referenced 2021-10-30 10:40:02,twiecki merged 2021-10-30 10:40:02,twiecki closed 2021-10-30 10:40:02,brandonwillard head_ref_deleted 2021-11-10 20:31:08",codecov[bot] ricardoV94 twiecki brandonwillard,1,True
322,643,Refactor `get_scalar_constant_value`,brandonwillard,"This PR adds missing canonicalizations and misc. updates that relate to `get_scalar_constant_value`.

`get_scalar_constant_value` uses a confusing and poorly defined abstraction: it attempts to return the non-symbolic value of a symbolic scalar graph **and/or** the ""underlying"" scalar value of a graph.  The latter concept of an ""underlying"" scalar value is ambiguous and very limited, since it only applies in a few cases&mdash;like the outputs of `Alloc` `Op`s, because they use a scalar input (i.e. the ""underlying"" scalar value) to construct an array/tensor.

- [x] Replace uses of `get_scalar_constant_value` for `Alloc` and `Second`

Its implementation is a hard to follow (and maintain) set of conditions, iterations, and recursions&mdash;all of which are a mix of existing/missing constants-based canonicalizations and re-implemented constant folding steps.

The goal of this PR is to further the replacement/removal of `get_scalar_constant_value` with a more complete set of optimizations, and, when/if necessary, explicit use of constant folding.

This PR also implements some of the missing `Shape`-related canonicalizations mentioned in #642.",enhancement graph rewriting refactor,kc611,brandonwillard,2021-10-31 22:35:50,2021-11-15 17:37:58,aesara/tensor/math_opt.py aesara/graph/features.py aesara/ifelse.py tests/tensor/test_basic.py doc/library/config.rst aesara/graph/opt.py aesara/tensor/subtensor.py aesara/graph/fg.py tests/scan/test_printing.py aesara/tensor/basic_opt.py tests/tensor/test_math.py aesara/tensor/extra_ops.py tests/tensor/test_basic_opt.py tests/tensor/test_math_opt.py aesara/tensor/elemwise.py aesara/configdefaults.py tests/graph/test_features.py aesara/tensor/exceptions.py aesara/tensor/subtensor_opt.py tests/tensor/test_subtensor.py aesara/tensor/basic.py tests/graph/test_fg.py tests/tensor/test_subtensor_opt.py tests/graph/test_opt.py,2f1b3ebf54728aea7271db3344e11346f6f1dbd1 c8ca89f675c4be33544f0d094d149f21fb6ecc5c 5954079b98178325c149637a2c1065c2a9bc5b78 287f7a092412a94b5044ec38eb99e1bd764820d6 b1a8fa9c2aed6e026128742d0e92987de684bf58 9b8f91efcdde90de769d3cb00736be9076bf3814 7a5b1ff18f28f7e1fdf2499efde79a0373f2b01a 7b9b44572c3ffd2aa72316aa59c700c2359695eb 20601b746760a68b39f707027ccdfa668115352c d26b992bdd0bc0c73531a940119ff238f700cfa0 3b5ec3dc45288cae27ba4bec5ccbd50ddfd1444c 4241f8a4346c2d7e29a27b9433ad794dc31b593b 4359ca72c69ee99ef3a2c387053018291e7cc43b 5b4a8572cf3ffb400cedcb33e7d1ab257055e717 e77a4846f203e5bde3dc7c55a73d2908234dac69 3a3b12211d9376276c7706c68161b2d11eefd544 c68677e0a4fb11c30e83241e7d556401f7ecb823 cd3e134230749f2f002aceb5378582564ea5cc71 3e2c472b98f2735b54a7662c8f5a82f245a9f6a9 e5df6aa7c8cbba39672df17260776ad541a449b9 8e57cc876c4f97f3548e6b8d25e1c6d6fc002971 d471db3db06a723cb6f7f69032e7505d45cba881 6825e02cf5c0f7a28d2ac85cc917dd8be91a3c44 25633508c4d9c8f9a951a3095c7c6f7a0e992e2b 582f19f63c0c321b99bc4e8c0e86fa0e865e74f3 cf0b2c9153c6e0952fd83862d57a0abec2ab5908 7315bc799c35970fb6d712bc030ec3acf2c18ae1 1d14ee9be41ac3e4e625014ee0c1f92629982a99 350268b9ff985f595a9d55771d53871217cca599 2586e67151a4a0a8ba11832ad805d91e1cdd5fbb d7358d39b343941491f9c236900e4d568f7bdc34 9144137b05c040147f1f5a6b4eccc0fd529e06be 066709cf62931d67073efbc3810994904f78a659 e792667445edbdf11483d74e0725d738db14bdb6 5e3113f72e4cd6c2eabda95954f6dd55c37d848e d1422254ca449f61ccbd2de912f5772999401b12 63dd23a54af1a9926fe03b94a479e22211f4033c,"brandonwillard labeled 2021-10-31 22:36:28,brandonwillard labeled 2021-10-31 22:36:28,brandonwillard labeled 2021-10-31 22:36:28,brandonwillard assigned 2021-10-31 22:36:31,brandonwillard head_ref_force_pushed 2021-10-31 23:04:32,brandonwillard head_ref_force_pushed 2021-10-31 23:36:15,brandonwillard head_ref_force_pushed 2021-11-01 00:04:27,brandonwillard head_ref_force_pushed 2021-11-01 00:56:18,brandonwillard head_ref_force_pushed 2021-11-02 16:44:52,brandonwillard review_requested 2021-11-02 16:45:32,brandonwillard review_requested 2021-11-02 16:45:36,brandonwillard head_ref_force_pushed 2021-11-10 05:04:13,brandonwillard head_ref_force_pushed 2021-11-10 19:39:07,brandonwillard head_ref_force_pushed 2021-11-14 19:58:55,brandonwillard head_ref_force_pushed 2021-11-14 23:21:23,brandonwillard referenced 2021-11-15 17:37:58,brandonwillard merged 2021-11-15 17:37:58,brandonwillard closed 2021-11-15 17:37:58,brandonwillard head_ref_deleted 2021-11-15 17:38:01",codecov[bot] kc611 brandonwillard,4,True
323,647,Add shape assertion to `local_useless_alloc`,brandonwillard,Closes #646,bug graph rewriting,,brandonwillard,2021-11-02 01:40:52,2021-11-02 16:41:10,tests/tensor/test_basic_opt.py aesara/tensor/basic_opt.py,05a94fed12b42d378456797ce286f5a1181e5982,"brandonwillard assigned 2021-11-02 16:40:57,brandonwillard labeled 2021-11-02 16:41:03,brandonwillard labeled 2021-11-02 16:41:03,brandonwillard referenced 2021-11-02 16:41:10,brandonwillard merged 2021-11-02 16:41:10,brandonwillard closed 2021-11-02 16:41:10,brandonwillard head_ref_deleted 2021-11-02 16:41:13",codecov[bot] brandonwillard,1,True
324,650,Remove `TensorConstant.tag.unique_value`,Carlosbogo,"Replaced TensorConstant.tag.unique_value by method TensorConstant.get_unique_value()

It is my first PR so I might have done something wrong. If so, please tell me and I will be glad to help with everything I can.

",refactor,brandonwillard,,2021-11-02 22:53:31,2021-11-28 01:41:49,aesara/scan/opt.py aesara/tensor/math_opt.py aesara/tensor/basic.py aesara/tensor/var.py,a765d62fb014b90d99360ac1f6d3614989b64fe2,"brandonwillard connected 2021-11-02 22:55:33,Carlosbogo review_requested 2021-11-03 09:23:24,brandonwillard renamed 2021-11-09 21:34:27,brandonwillard head_ref_force_pushed 2021-11-15 18:12:55,brandonwillard labeled 2021-11-15 18:13:13,brandonwillard head_ref_force_pushed 2021-11-15 22:39:36,brandonwillard head_ref_force_pushed 2021-11-15 22:41:02,brandonwillard referenced 2021-11-28 01:41:48,brandonwillard merged 2021-11-28 01:41:48,brandonwillard closed 2021-11-28 01:41:49,Carlosbogo head_ref_deleted 2021-11-28 15:54:31",codecov[bot] Carlosbogo brandonwillard,4,True
325,652,Update the developer start guide,brandonwillard,"This PR updates the project requirements, removes outdated content, and adds instructions for the construction of a functional development environment.",documentation enhancement,,brandonwillard,2021-11-02 23:52:36,2021-11-03 00:47:58,doc/extending/scan.rst doc/extending/extending_aesara.rst .github/PULL_REQUEST_TEMPLATE.md aesara/misc/doubleop.py doc/dev_start_guide.rst,eaa4717237702c0a80ced7f18b0e62f9ed9808ff,"brandonwillard head_ref_force_pushed 2021-11-03 00:44:55,brandonwillard assigned 2021-11-03 00:46:03,brandonwillard labeled 2021-11-03 00:46:07,brandonwillard labeled 2021-11-03 00:46:11,brandonwillard referenced 2021-11-03 00:47:58,brandonwillard merged 2021-11-03 00:47:58,brandonwillard closed 2021-11-03 00:47:58,brandonwillard head_ref_deleted 2021-11-03 00:48:01",brandonwillard,0,True
326,653,Remove introductory sentences from `dev_start_guide.rst`,brandonwillard,,documentation enhancement,,brandonwillard,2021-11-03 00:51:49,2021-11-03 01:21:07,doc/dev_start_guide.rst,5d8028784feb23344ef2b217e0fbfeee2591345d,"brandonwillard head_ref_force_pushed 2021-11-03 00:53:14,brandonwillard head_ref_force_pushed 2021-11-03 00:55:23,brandonwillard assigned 2021-11-03 01:07:36,brandonwillard labeled 2021-11-03 01:07:42,brandonwillard labeled 2021-11-03 01:07:42,brandonwillard head_ref_force_pushed 2021-11-03 01:18:51,brandonwillard referenced 2021-11-03 01:21:07,brandonwillard merged 2021-11-03 01:21:07,brandonwillard closed 2021-11-03 01:21:07,brandonwillard head_ref_deleted 2021-11-03 01:21:10",brandonwillard,0,True
327,654,Fix a file extension typo in the dev guide,brandonwillard,,,,,2021-11-03 01:24:01,2021-11-03 01:24:45,doc/dev_start_guide.rst,da4609b6a81163ec70e8f9ba37016b6c90778423,"brandonwillard head_ref_force_pushed 2021-11-03 01:24:16,brandonwillard referenced 2021-11-03 01:24:45,brandonwillard merged 2021-11-03 01:24:45,brandonwillard closed 2021-11-03 01:24:45,brandonwillard head_ref_deleted 2021-11-03 01:24:48",brandonwillard,0,True
328,655,Make input mismatch TypeError in make_node more readable,ricardoV94,"```python
import aesara
import aesara.tensor as at

class MyOp(aesara.graph.op.Op):
    itypes = [at.dvector, at.dvector, at.dvector]
    otypes = [at.dscalar]
    def perform(self, node, inputs, outputs):
        pass
    
MyOp()(at.vector(), at.scalar(), at.vector())
```

Before:
```
Traceback (most recent call last):
  File ""/home/ricardo/Documents/Projects/aesara/venv/lib/python3.8/site-packages/IPython/core/interactiveshell.py"", line 3441, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File ""<ipython-input-2-c79d16f9907a>"", line 10, in <module>
    MyOp()(at.vector(), at.scalar(), at.dvector())
  File ""/home/ricardo/Documents/Projects/aesara/aesara/graph/op.py"", line 275, in __call__
    node = self.make_node(*inputs, **kwargs)
  File ""/home/ricardo/Documents/Projects/aesara/aesara/graph/op.py"", line 227, in make_node
    raise TypeError(
TypeError: We expected inputs of types '[TensorType(float64, vector), TensorType(float64, vector), TensorType(float64, vector)]' but got types '[TensorType(float64, vector), TensorType(float64, scalar), TensorType(float64, vector)]'

```

After:
```
Traceback (most recent call last):
  File ""/home/ricardo/Documents/Projects/aesara/venv/lib/python3.8/site-packages/IPython/core/interactiveshell.py"", line 3441, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File ""<ipython-input-2-ddfd178ce0c4>"", line 13, in <module>
    MyOp()(at.vector(), at.scalar(), at.vector())
  File ""/home/ricardo/Documents/Projects/aesara/aesara/graph/op.py"", line 284, in __call__
    node = self.make_node(*inputs, **kwargs)
  File ""/home/ricardo/Documents/Projects/aesara/aesara/graph/op.py"", line 228, in make_node
    raise TypeError(
TypeError: Invalid input types for Op MyOp:
Input 2/3: Expected TensorType(float64, vector), got TensorType(float64, scalar)
```
",enhancement refactor,brandonwillard,,2021-11-04 14:58:55,2021-11-15 22:32:32,aesara/graph/op.py tests/graph/test_op.py,327bd1eaaf4a1300268a41d888981dfe646413d8,"ricardoV94 head_ref_force_pushed 2021-11-04 15:04:28,ricardoV94 head_ref_force_pushed 2021-11-04 15:06:29,brandonwillard labeled 2021-11-04 17:37:11,brandonwillard labeled 2021-11-04 17:37:11,ricardoV94 head_ref_force_pushed 2021-11-05 08:23:58,ricardoV94 head_ref_force_pushed 2021-11-05 08:26:45,ricardoV94 review_requested 2021-11-05 08:27:26,ricardoV94 head_ref_force_pushed 2021-11-12 16:10:57,ricardoV94 head_ref_force_pushed 2021-11-12 16:15:56,ricardoV94 review_requested 2021-11-12 16:16:15,ricardoV94 head_ref_force_pushed 2021-11-12 16:17:15,ricardoV94 head_ref_force_pushed 2021-11-15 18:12:13,brandonwillard referenced 2021-11-15 22:32:32,brandonwillard merged 2021-11-15 22:32:32,brandonwillard closed 2021-11-15 22:32:32,ricardoV94 head_ref_deleted 2021-11-22 08:50:08",codecov[bot] ricardoV94 brandonwillard,9,True
329,656,Adding support for nightly builds,dfm,"This PR closes #511 by adding support for building a ""nightly"" release on a GitHub Actions cronjob and pushing it to the `aesara-nightly` PyPI package.

_How it works_: It's not terribly elegant, but if the environment variable `BUILD_AESARA_NIGHTLY` is present, the name of the package in `setup.py` gets renamed and versioneer's `get_versions` function gets monkey patched to return the current base version with the date appended.

_Open questions_:

1. Right now we're following versioneer's convention of using the last release version as the base version. This is the simplest to implement, but it might be more sensible to use the `setuptools_scm` convention of using the current release + one minor increment as the base version.
2. We'll need to add a correctly scoped and permissioned PyPI API token to this repo (called `nightly_pypi_secret`) so that we can push to the `aesara-nightly` project. I'll message @brandonwillard offline to get this set up.

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] ~~There are tests covering the changes introduced in the PR.~~",enhancement CI,brandonwillard,brandonwillard,2021-11-05 12:57:03,2021-12-13 21:45:20,setup.py .github/workflows/nightly.yml,5050a98242cd4b2bd289e1d59cbd1e09d0a04a47,"brandonwillard mentioned 2021-11-05 12:57:04,brandonwillard subscribed 2021-11-05 12:57:04,brandonwillard labeled 2021-11-08 20:10:54,brandonwillard labeled 2021-11-08 20:10:54,brandonwillard assigned 2021-12-13 04:52:06,brandonwillard referenced 2021-12-13 21:45:20,brandonwillard merged 2021-12-13 21:45:20,brandonwillard closed 2021-12-13 21:45:20,brandonwillard mentioned 2021-12-13 22:26:28,brandonwillard subscribed 2021-12-13 22:26:28,brandonwillard mentioned 2021-12-13 22:28:54,brandonwillard subscribed 2021-12-13 22:28:54",codecov[bot] dfm brandonwillard,6,True
330,663,fixed typo on tutorial --extending aesara,jguerra-astro,"Resolves #660

There was a mistake in the tutorials

```python
import aesara
from aesara.graph.op import Op
from aesara.graph.basic import Apply

class AXPBOp(Op):
    """"""
    This creates an Op that takes x to a*x+b.
    """"""
    __props__ = (""a"", ""b"")

    def __init__(self, a, b):
        self.a = a
        self.b = b
        super().__init__()

    def make_node(self, x):
        x = aesara.tensor.as_tensor_variable(x)
        return Apply(self, [x], [x.type()])

    def perform(self, node, inputs, output_storage):
        x = inputs[0]
        z = output_storage[0]
        z[0] = self.a * x + self.b

    def infer_shape(self, fgraph, node, i0_shapes):
        return i0_shapes

    def grad(self, inputs, output_grads):
        return [a * output_grads[0] + b]
```
```python
    def grad(self, inputs, output_grads):
        return [a * output_grads[0] + b]
```
should be:
```python
    def grad(self, inputs, output_grads):
        return [self.a * output_grads[0]]
```
",bug documentation,brandonwillard,,2021-11-09 18:49:29,2021-11-09 21:33:20,doc/extending/extending_aesara.rst,cccc7fe828ba93338ff3cc5b78f58e8c5c9662d9,"brandonwillard labeled 2021-11-09 21:31:03,brandonwillard labeled 2021-11-09 21:31:03,brandonwillard referenced 2021-11-09 21:33:20,brandonwillard merged 2021-11-09 21:33:20,brandonwillard closed 2021-11-09 21:33:21,jguerra-astro head_ref_deleted 2021-11-15 17:00:22",jguerra-astro brandonwillard,0,True
331,664,Removed TensorConstant.tag.unique_value (Issue #648),Carlosbogo,Solves #648 by substituting TensorConstant.tag.unique_value for the function get_unique_value().,refactor,brandonwillard,,2021-11-12 00:21:24,2021-11-15 17:49:17,aesara/scan/opt.py aesara/tensor/math_opt.py aesara/tensor/basic.py aesara/tensor/var.py,17594a05d4dee2574f07771b8f176e7dd60d134a,"brandonwillard connected 2021-11-14 23:24:18,brandonwillard labeled 2021-11-14 23:24:26,brandonwillard closed 2021-11-15 17:49:17",Carlosbogo brandonwillard,1,False
332,667,Made the RandomState conversion of Numba a valid RandomStateType,kc611,"Resolves #661 

This PR makes the Numba conversion of `RandomStateType` a tuple representing Numba's internal state and is a valid `RandomStateType` even after conversion. ",bug important Numba,brandonwillard,kc611,2021-11-16 16:29:09,2021-11-21 21:58:44,tests/link/test_numba.py aesara/link/numba/dispatch/random.py aesara/link/numba/dispatch/basic.py,075c580d874ebc28cab15002d5629bf0f284776c,"kc611 head_ref_force_pushed 2021-11-17 05:52:40,kc611 convert_to_draft 2021-11-17 07:50:24,kc611 head_ref_force_pushed 2021-11-17 07:58:20,brandonwillard labeled 2021-11-18 20:58:53,brandonwillard labeled 2021-11-18 20:58:53,kc611 assigned 2021-11-18 20:58:59,brandonwillard labeled 2021-11-18 20:59:06,kc611 head_ref_force_pushed 2021-11-19 15:02:42,kc611 ready_for_review 2021-11-19 15:03:18,kc611 review_requested 2021-11-19 16:13:52,kc611 head_ref_force_pushed 2021-11-21 11:33:06,brandonwillard referenced 2021-11-21 21:58:44,brandonwillard merged 2021-11-21 21:58:44,brandonwillard closed 2021-11-21 21:58:44",codecov[bot] kc611 brandonwillard,11,True
333,670,Fix issue with version logic when tags are not available,brandonwillard,"This PR fixes `IndexError` issues in `aesara.version` when the project is cloned at a fixed depth and there are no tags
present at the given depth (e.g. during the RTD builds).",,ricardoV94,,2021-11-18 18:52:31,2021-11-18 20:31:29,aesara/version.py,04db98dbffd6938736a9cde761e9981f930c001e,"brandonwillard referenced 2021-11-18 20:31:28,brandonwillard merged 2021-11-18 20:31:29,brandonwillard closed 2021-11-18 20:31:29,brandonwillard head_ref_deleted 2021-11-18 20:31:32",codecov[bot] ricardoV94 brandonwillard,1,True
334,672,Add a `CheckAndRaise` `COp`,brandonwillard,This PR introduces a `CheckAndRaise` `Op` that behaves like a more configurable version of `Assert` by allowing one to specify an `Exception` type for each instance.,enhancement refactor,ricardoV94 twiecki,brandonwillard,2021-11-20 06:02:33,2021-11-25 00:38:28,aesara/tensor/math_opt.py aesara/graph/type.py aesara/assert_op.py aesara/gpuarray/dnn.py tests/tensor/test_basic.py tests/gpuarray/test_opt.py tests/tensor/random/test_op.py tests/graph/utils.py aesara/graph/opt.py setup.cfg aesara/tensor/basic_opt.py aesara/tensor/extra_ops.py aesara/gpuarray/opt.py tests/tensor/test_basic_opt.py aesara/tensor/nnet/basic.py tests/tensor/test_extra_ops.py aesara/tensor/subtensor_opt.py aesara/raise_op.py tests/scan/test_basic.py aesara/tensor/basic.py tests/tensor/test_subtensor_opt.py tests/test_raise_op.py tests/graph/test_opt.py aesara/tensor/nnet/abstract_conv.py,1039c1cad62d91c223932696f6e055404a56525e 40f31a96724e11f5239a2f0887e1a58ffd32a157 2a617f3036902b03fb386d3c4aaebf19ad72122d 5927d4d451e39fae1fa8d1d5ebe76371e290bb1e 28c26dd76835833b22a241af6b5221e62f22584d 01b743547c0825c4a81739ce17a67bd629dd2957 d604273d5dee835618c99be5cc72264001a4629a f593e802b293e3d0d1129d20c7ec7b1a3cc1ddd5,"brandonwillard assigned 2021-11-20 06:05:29,brandonwillard labeled 2021-11-20 06:05:37,brandonwillard labeled 2021-11-20 06:05:37,brandonwillard head_ref_force_pushed 2021-11-21 00:52:43,brandonwillard head_ref_force_pushed 2021-11-21 03:13:19,brandonwillard labeled 2021-11-21 03:13:35,brandonwillard head_ref_force_pushed 2021-11-21 07:01:48,brandonwillard head_ref_force_pushed 2021-11-21 21:41:23,brandonwillard review_dismissed 2021-11-23 23:47:54,brandonwillard head_ref_force_pushed 2021-11-23 23:47:54,brandonwillard referenced 2021-11-25 00:38:28,brandonwillard merged 2021-11-25 00:38:28,brandonwillard closed 2021-11-25 00:38:28,brandonwillard head_ref_deleted 2021-11-25 00:38:31",codecov[bot] ricardoV94 twiecki brandonwillard,3,True
335,673,Add `axis` argument to `Softmax` and related `Op`s,ricardoV94,"TODO:

+ [x] Add axis to Softmax
+ [x] Add axis to SoftmaxGrad
+ [x] Add axis to LogSoftmax
+ [x] Update Numba dispatch
+ [x] Update JAX dispatch
+ [x] Generalize optimizations for Softmax
+ [x] Generalize optimizations for SoftmaxGrad
+ [x] Generalize optimizations for LogSoftmax
+ [x] Move `Softmax/LogSoftmax` contents from `nnet/basic.py` to `tensor/softmax.py`? **Will do in follow-up PR**
+ [x] Rename `logsoftmax` -> `log_softmax` for consistency with scipy (with deprecated alias)? **Will do in follow-up PR**

Closes #183",enhancement,brandonwillard,ricardoV94,2021-11-24 12:16:00,2021-12-13 18:33:46,aesara/tensor/nnet/__init__.py aesara/tensor/nnet/basic.py tests/gpuarray/test_nnet.py tests/gpuarray/test_dnn.py tests/tensor/nnet/test_basic.py aesara/link/numba/dispatch/elemwise.py tests/link/test_jax.py tests/link/test_numba.py tests/test_rop.py aesara/link/jax/dispatch.py tests/scan/test_basic.py,43e44f6f6889c389bf188d9b8c8ff1a5c1128248 8b9bfc1653bb824d4e9e0e86bf5ef38edbcbacc3 78bc40ddea811c744e212aee0ee5990b2fba892c 929f2cdedd59d9c8dc39f3156c568de29f71cd28 131f106f59fa4ddc81920b907612a8572d19dfc9 9ce41da41ad47ae8a06f83a97e4dc2a5593413af 1353e6c236e335ba13ff42e09fde86c96f090aec,"ricardoV94 renamed 2021-11-24 12:16:28,ricardoV94 head_ref_force_pushed 2021-11-24 12:17:56,ricardoV94 head_ref_force_pushed 2021-11-24 12:36:52,ricardoV94 head_ref_force_pushed 2021-11-24 12:45:29,ricardoV94 head_ref_force_pushed 2021-11-24 13:01:50,ricardoV94 head_ref_force_pushed 2021-11-24 13:18:25,ricardoV94 head_ref_force_pushed 2021-11-24 15:16:00,ricardoV94 head_ref_force_pushed 2021-11-24 18:53:31,ricardoV94 head_ref_force_pushed 2021-11-24 19:00:38,ricardoV94 head_ref_force_pushed 2021-11-24 19:15:59,ricardoV94 head_ref_force_pushed 2021-11-24 19:26:47,brandonwillard labeled 2021-11-25 00:27:15,ricardoV94 head_ref_force_pushed 2021-11-25 08:03:47,ricardoV94 head_ref_force_pushed 2021-11-25 08:11:20,ricardoV94 head_ref_force_pushed 2021-11-25 08:15:16,ricardoV94 head_ref_force_pushed 2021-11-25 09:28:25,ricardoV94 head_ref_force_pushed 2021-11-25 09:59:19,ricardoV94 ready_for_review 2021-11-25 10:00:14,ricardoV94 head_ref_force_pushed 2021-11-25 10:42:42,ricardoV94 head_ref_force_pushed 2021-11-25 10:47:32,ricardoV94 head_ref_force_pushed 2021-11-25 10:56:30,ricardoV94 head_ref_force_pushed 2021-11-25 11:08:50,ricardoV94 head_ref_force_pushed 2021-11-25 11:21:38,ricardoV94 head_ref_force_pushed 2021-11-25 12:37:34,ricardoV94 review_requested 2021-11-25 15:02:35,ricardoV94 head_ref_force_pushed 2021-11-25 16:38:38,ricardoV94 head_ref_force_pushed 2021-11-25 16:53:19,ricardoV94 head_ref_force_pushed 2021-11-25 16:54:20,ricardoV94 assigned 2021-11-26 03:17:34,brandonwillard review_dismissed 2021-11-26 21:49:01,ricardoV94 mentioned 2021-12-13 04:50:38,ricardoV94 subscribed 2021-12-13 04:50:38,ricardoV94 head_ref_force_pushed 2021-12-13 11:33:04,ricardoV94 head_ref_force_pushed 2021-12-13 11:44:34,brandonwillard referenced 2021-12-13 18:33:46,brandonwillard merged 2021-12-13 18:33:46,brandonwillard closed 2021-12-13 18:33:46,brandonwillard renamed 2021-12-13 18:34:24,ricardoV94 head_ref_deleted 2021-12-16 09:40:33",codecov[bot] ricardoV94 brandonwillard,20,True
336,675,Update `local_subtensor_make_vector` and tests,brandonwillard,This PR closes #97 and includes some additional `*Subtensor*` clean-up.,graph rewriting refactor,,brandonwillard,2021-11-25 01:26:37,2021-12-05 04:55:28,aesara/scan/opt.py aesara/tensor/nnet/basic.py tests/tensor/test_subtensor.py aesara/tensor/basic.py aesara/tensor/subtensor.py tests/tensor/test_subtensor_opt.py aesara/tensor/var.py aesara/tensor/subtensor_opt.py,48be1169c3452b47bd5f6b7df6458371211daea6 c606f8ae5d02fb64aff2a9758ac5a68224a30371 3ed16910645b719bfb1ce05923a4f2bb8f30b978 81509bc0604748e6aa8953c0d45fb7379815747c 4a5158aeb702b5b4640b7f55e125d85e3cbe74ee 86e3cf191b0ce1750cc7bf2558fa7c4463a57f3f,"brandonwillard labeled 2021-11-25 05:45:57,brandonwillard assigned 2021-11-25 05:45:59,brandonwillard head_ref_force_pushed 2021-11-28 01:52:56,brandonwillard labeled 2021-11-28 01:53:56,brandonwillard head_ref_force_pushed 2021-12-03 02:07:57,brandonwillard head_ref_force_pushed 2021-12-03 17:08:37,brandonwillard head_ref_force_pushed 2021-12-04 07:34:37,brandonwillard referenced 2021-12-05 04:55:28,brandonwillard merged 2021-12-05 04:55:28,brandonwillard closed 2021-12-05 04:55:28,brandonwillard head_ref_deleted 2021-12-05 04:55:31",codecov[bot] brandonwillard,1,True
337,676,Split `solve_triangular` functionality from the `Solve` class into separate `SolveTriangular` class,fshart,"Split ""solve_triangular"" functionality from the Solve class into 
separate SolveTriangular class (in aesara.tensor.slinalg)

- Implementation of new class SolveTriangular
- Changing naming convention of Solve to match scipy
- Split of old tests to match the current classes
- new tests for Solve class to cover the case of the issue
- changed the deprecated ""solve_lower_triangular"" and 
""solve_upper_triangular"" according to class split",refactor SciPy compatibility,brandonwillard,,2021-11-25 09:17:15,2021-12-13 21:47:13,tests/tensor/test_slinalg.py tests/link/test_numba.py aesara/tensor/slinalg.py,1ddf96a7b8e8503fb8773b09c3ca77483fd884c4,"brandonwillard connected 2021-11-25 19:33:27,brandonwillard labeled 2021-11-25 19:34:13,brandonwillard renamed 2021-11-25 19:35:13,brandonwillard head_ref_force_pushed 2021-12-05 06:10:44,fshart review_requested 2021-12-09 12:16:35,fshart head_ref_force_pushed 2021-12-10 15:21:34,fshart review_requested 2021-12-10 15:41:49,fshart head_ref_force_pushed 2021-12-13 09:49:24,fshart head_ref_force_pushed 2021-12-13 11:57:36,fshart head_ref_force_pushed 2021-12-13 12:09:37,brandonwillard labeled 2021-12-13 18:03:48,brandonwillard head_ref_force_pushed 2021-12-13 19:36:05,brandonwillard referenced 2021-12-13 21:47:12,brandonwillard merged 2021-12-13 21:47:12,brandonwillard closed 2021-12-13 21:47:13",codecov[bot] fshart brandonwillard,19,True
338,678,Make `ScalarConstant` a subclass of `ScalarVariable`,brandonwillard,This PR makes the `Scalar` `Constant` and `Variable` types more consistent with the analogous `TensorType`s.,refactor,,brandonwillard,2021-11-25 21:14:25,2021-11-26 03:02:54,aesara/scalar/basic.py,8befeafda95f4270f86eee82be5ab5fef1570844,"brandonwillard labeled 2021-11-26 03:02:23,brandonwillard assigned 2021-11-26 03:02:23,brandonwillard referenced 2021-11-26 03:02:53,brandonwillard merged 2021-11-26 03:02:53,brandonwillard closed 2021-11-26 03:02:54,brandonwillard head_ref_deleted 2021-11-26 03:02:56",codecov[bot] brandonwillard,1,True
339,680,Do not add `SpecifyShape` to constant sizes in `RandomVariable`,brandonwillard,This PR removes the superfluous use of `SpecifyShape` with constant size parameters given to `RandomVariable`.,enhancement,ricardoV94,brandonwillard,2021-11-26 20:41:12,2021-11-26 21:48:59,tests/tensor/random/test_opt.py aesara/tensor/random/utils.py,0d4887ff6121f8d572ce5548ffab011773222e1d,"brandonwillard labeled 2021-11-26 20:43:17,brandonwillard assigned 2021-11-26 20:43:20,brandonwillard referenced 2021-11-26 21:48:59,brandonwillard merged 2021-11-26 21:48:59,brandonwillard closed 2021-11-26 21:48:59,brandonwillard head_ref_deleted 2021-11-26 21:49:02",codecov[bot] ricardoV94 brandonwillard,1,True
340,681,Add a pretty printer for `Constant` and keywords to `FunctionPrinter`,brandonwillard,This PR adds a pretty printer for `Constant` that only prints the array data and it adds keywords to `FunctionPrinter`.,enhancement,,brandonwillard,2021-11-27 21:46:22,2021-12-03 07:48:50,tests/tensor/test_subtensor.py aesara/tensor/basic.py aesara/tensor/elemwise.py aesara/tensor/subtensor.py aesara/tensor/blas.py aesara/tensor/math.py tests/test_printing.py aesara/printing.py aesara/tensor/nnet/sigm.py aesara/tensor/basic_opt.py tests/tensor/test_math.py tests/scalar/test_basic.py aesara/tensor/inplace.py tests/tensor/test_basic_opt.py,6ae1f7dd3f2471d6e3e55c0f96d1a8acd6f3dd57 7e426ab69b7977431ca82ab13b615d584271514d e1f2bc37943664e6c29dc29bc83c16df6bf804f4 47835f84f815f43ebad3e6b8853175c43b5e0c65 eb7d75b8c5e84f17f9b2659cdb6930e7c83293e9 c490278f39b293a4faa8179cd9718b210e009eb0 c8e152a3049abe86a199054fcf90c740ed473010 14a2dcb4604ee682cfcff6b65071b2769c67eb74 a06b82ff8d51bc4d99711fbdece680c2d96f0aaf,"brandonwillard labeled 2021-11-28 01:40:46,brandonwillard assigned 2021-11-28 01:40:48,brandonwillard head_ref_force_pushed 2021-11-28 01:44:14,brandonwillard head_ref_force_pushed 2021-11-30 17:31:58,brandonwillard head_ref_force_pushed 2021-12-03 01:44:26,brandonwillard referenced 2021-12-03 07:48:50,brandonwillard merged 2021-12-03 07:48:50,brandonwillard closed 2021-12-03 07:48:50,brandonwillard head_ref_deleted 2021-12-03 07:48:53",codecov[bot] brandonwillard,1,True
341,683,Add JAX dispatch for `Psi` `Op`,ricardoV94,Also added the digamma alias to psi which is also available in Scipy,JAX SciPy compatibility,,,2021-11-29 12:56:13,2021-11-29 19:43:48,aesara/tensor/math.py tests/link/test_jax.py aesara/link/jax/dispatch.py,c7755882cdca9059986cfec70952e8417a3e4b34 1367828ce1639200ebd6b71b3ad41656d9429056,"ricardoV94 labeled 2021-11-29 12:56:21,ricardoV94 labeled 2021-11-29 12:56:25,ricardoV94 head_ref_force_pushed 2021-11-29 12:57:12,brandonwillard referenced 2021-11-29 19:43:48,brandonwillard merged 2021-11-29 19:43:48,brandonwillard closed 2021-11-29 19:43:48,brandonwillard renamed 2021-12-09 22:45:09",codecov[bot] ricardoV94 brandonwillard,1,True
342,688,Make `local_optimizer` automatically validate nodes using its `tracks` argument,brandonwillard,This PR makes it so that `local_optimizer` implementations no longer need to manually check that their `node` argument matches the instances/types specified by their `tracks` arguments.  It also adds a long needed `__repr__` implementation for `FromFunctionLocalOptimizer`.,enhancement graph rewriting,ricardoV94,brandonwillard,2021-12-04 05:40:57,2021-12-06 21:06:23,aesara/graph/optdb.py tests/graph/test_opt.py aesara/graph/opt.py aesara/gpuarray/optdb.py,ffd0815266651bb604115ac7da555c21564aca65 a3f719e093ea4b6082eb4a01e6ba567ebbc2afda ca0ee31041834e547a64a153610a6ac06921c18a 976c8a4104bd8c96bd93458bd4ec128fca875b50 4b7e45ca36e9888002d343eb100434aa121e50ad,"brandonwillard assigned 2021-12-04 05:44:18,brandonwillard labeled 2021-12-04 05:44:30,brandonwillard labeled 2021-12-04 05:44:30,brandonwillard connected 2021-12-04 05:45:08,brandonwillard renamed 2021-12-04 05:46:28,brandonwillard head_ref_force_pushed 2021-12-04 07:33:32,brandonwillard convert_to_draft 2021-12-04 08:09:37,brandonwillard head_ref_force_pushed 2021-12-05 01:52:54,brandonwillard head_ref_force_pushed 2021-12-05 04:49:18,brandonwillard head_ref_force_pushed 2021-12-05 04:56:10,brandonwillard ready_for_review 2021-12-05 07:34:09,brandonwillard review_requested 2021-12-05 07:35:09,brandonwillard review_requested 2021-12-05 07:35:09,brandonwillard head_ref_force_pushed 2021-12-05 07:45:08,brandonwillard head_ref_force_pushed 2021-12-05 08:59:02,brandonwillard head_ref_force_pushed 2021-12-05 09:00:50,brandonwillard referenced 2021-12-06 21:06:23,brandonwillard merged 2021-12-06 21:06:23,brandonwillard closed 2021-12-06 21:06:23,brandonwillard head_ref_deleted 2021-12-06 21:06:27",codecov[bot] ricardoV94 brandonwillard,7,True
343,693,Fix a `RandomVariable` `DimShuffle` lift case for empty sizes,brandonwillard,This PR fixes a case that `local_dimshuffle_rv_lift` currently doesn't handle: when broadcast dimensions are added to a `RandomVariable` with independent dimensions (i.e. non-scalar parameter(s)) and no `size`.,bug graph rewriting,,brandonwillard,2021-12-09 01:58:16,2021-12-09 18:28:51,aesara/tensor/random/opt.py tests/tensor/random/test_opt.py,96d6a5c3e7aa199b49c96355e0593e2d6d513fe8,"brandonwillard assigned 2021-12-09 18:28:37,brandonwillard labeled 2021-12-09 18:28:45,brandonwillard labeled 2021-12-09 18:28:45,brandonwillard referenced 2021-12-09 18:28:51,brandonwillard merged 2021-12-09 18:28:51,brandonwillard closed 2021-12-09 18:28:51,brandonwillard head_ref_deleted 2021-12-09 18:28:54",codecov[bot] brandonwillard,1,True
344,694,Fix broadcastables inference for `Alloc` and an `as_tensor_variable` bug when all `ndim=0` and all dimensions are broadcastable,brandonwillard,"This PR closes #692.

It generalizes the broadcastables inference used by `RandomVariable`, which performs constant folding and shape simplification rewrites instead of using `get_scalar_constant_value`.",bug,,brandonwillard,2021-12-09 21:37:51,2021-12-09 22:36:39,aesara/tensor/basic.py tests/tensor/test_basic.py aesara/tensor/random/op.py aesara/gpuarray/basic_ops.py aesara/tensor/extra_ops.py tests/tensor/random/test_op.py,934596eeed6311e56da87ea6eed3538b778f2b6e c67e71bd0575e5a6163a69a3ca6ece78af239fa8,"brandonwillard labeled 2021-12-09 21:38:08,brandonwillard assigned 2021-12-09 21:38:10,brandonwillard referenced 2021-12-09 22:36:39,brandonwillard merged 2021-12-09 22:36:39,brandonwillard closed 2021-12-09 22:36:39,brandonwillard head_ref_deleted 2021-12-09 22:36:42",codecov[bot] brandonwillard,1,True
345,696,Generalize and update the JAX `Op` conversion docs,brandonwillard,This PR generalizes the `Op` conversion documentation to mention/cover both Numba and JAX.  It also fixes the section levels and sidebar layout of the page.,documentation enhancement,,brandonwillard,2021-12-11 03:02:18,2021-12-11 04:10:15,doc/extending/index.rst doc/extending/fibby.rst doc/extending/jax_op.rst,993603722f0f34acd7d6cdf44a1f808568efc93c 304460b4b3c362aee9bc309bd10f1ed5c96f3b9d,"brandonwillard labeled 2021-12-11 03:02:39,brandonwillard labeled 2021-12-11 03:02:39,brandonwillard assigned 2021-12-11 03:02:40,brandonwillard head_ref_force_pushed 2021-12-11 03:09:50,brandonwillard referenced 2021-12-11 04:10:15,brandonwillard merged 2021-12-11 04:10:15,brandonwillard closed 2021-12-11 04:10:15,brandonwillard head_ref_deleted 2021-12-11 04:10:17,brandonwillard connected 2021-12-11 19:22:27,brandonwillard connected 2022-01-14 23:54:56,brandonwillard connected 2022-01-14 23:56:02",brandonwillard,0,True
346,697,Documentation refactoring and new unification and miniKanren sections,brandonwillard,This PR contains more miscellaneous updates to the documentation.  Among these is the addition of a section on unification and reification that describes the components introduced by #523.,documentation enhancement refactor,ricardoV94,brandonwillard,2021-12-11 22:20:06,2021-12-13 03:45:43,doc/extending/scan.rst doc/extending/op.rst doc/tutorial/extending_aesara_c.rst doc/extending/creating_a_numba_jax_op.rst doc/extending/index.rst doc/extending/pipeline.rst doc/extending/graph_rewriting.rst doc/glossary.rst doc/extending/tips.rst doc/extending/creating_a_c_op.rst doc/extending/graphstructures.rst doc/tutorial/index.rst doc/optimizations.rst doc/extending/cop.rst doc/extending/aesara_vs_c.rst doc/extending/creating_an_op.rst doc/core_development_guide.rst doc/tutorial/extending_aesara.rst,36d3e7f3da795e4276d671dbe5dcc12f6dc4cd1e 29c13cd2d92f5f4ddd04cac98852004ea760cfff 10ad92d123c595284dab1ca98ca55f6e136ac4d6 5ddf3b230a5547f676eee743251c0949da279860 2fd049cbb80a31cbd9f7bfcfa8f9ea3b732d3b5e,"brandonwillard head_ref_force_pushed 2021-12-11 23:45:36,brandonwillard head_ref_force_pushed 2021-12-11 23:46:01,brandonwillard labeled 2021-12-11 23:48:58,brandonwillard labeled 2021-12-11 23:48:58,brandonwillard labeled 2021-12-11 23:48:58,brandonwillard assigned 2021-12-11 23:48:59,brandonwillard review_dismissed 2021-12-13 03:44:15,brandonwillard head_ref_force_pushed 2021-12-13 03:44:15,brandonwillard renamed 2021-12-13 03:45:26,brandonwillard referenced 2021-12-13 03:45:43,brandonwillard merged 2021-12-13 03:45:43,brandonwillard closed 2021-12-13 03:45:43,brandonwillard head_ref_deleted 2021-12-13 03:45:45",ricardoV94 brandonwillard,0,True
347,698,Update the articles for extending `Type`s,brandonwillard,This PR makes some updates to the documentation for creating custom `Type`s.,documentation enhancement refactor,,brandonwillard,2021-12-13 04:18:38,2021-12-13 04:27:01,doc/extending/type.rst doc/extending/ctype.rst doc/tutorial/index.rst,801576ad96b613a873f0879aaeac3127a1034f6d,"brandonwillard labeled 2021-12-13 04:26:42,brandonwillard labeled 2021-12-13 04:26:42,brandonwillard labeled 2021-12-13 04:26:42,brandonwillard assigned 2021-12-13 04:26:43,brandonwillard referenced 2021-12-13 04:27:01,brandonwillard merged 2021-12-13 04:27:01,brandonwillard closed 2021-12-13 04:27:01,brandonwillard head_ref_deleted 2021-12-13 04:27:04",brandonwillard,0,True
348,700,Fixing nightly build metadata,dfm,This fixes an issue with the metadata generated for the nightly package as implemented in #656. I've reproduced the issue there and checked that this fixes my build locally. I believe this will do the trick with the published packages too.,bug CI,brandonwillard,,2021-12-14 03:31:59,2022-02-26 21:08:49,.github/workflows/nightly.py setup.py .github/workflows/nightly.yml,d1cdf81de0c6402db9d6d7c5370bb96ae2808fe2,"dfm review_requested 2021-12-14 03:32:05,brandonwillard labeled 2021-12-16 21:52:23,brandonwillard labeled 2021-12-16 21:52:23",codecov[bot] dfm brandonwillard,1,False
349,701,Use NumPy C API to perform `DimShuffle` steps in its C implementation,brandonwillard,"This PR replaces the custom view array creation in `DimShuffle`'s C implementation with calls to NumPy's C API that match the Python implementation.  It also replaces the manual shape creation steps in `Reshape`'s C implementation with a call to a NumPy helper function.

Closes #699",bug important C-backend,ricardoV94,brandonwillard,2021-12-15 03:19:52,2021-12-15 21:29:16,aesara/tensor/shape.py aesara/gpuarray/elemwise.py aesara/tensor/c_code/dimshuffle.c aesara/tensor/elemwise.py aesara/link/numba/dispatch/elemwise.py tests/tensor/test_shape.py tests/link/test_jax.py tests/link/test_numba.py aesara/link/jax/dispatch.py tests/tensor/test_elemwise.py aesara/tensor/inplace.py,2cd98465dcf671919526b3e952011b21016d5cd5 888556b50607d1b6652bc0a37063c62f4bcdd25d a119a2561411aa69fcaccc4864d3bda49381eb99 863e81d20a6510a57a8d679b515a967ec2bf480b,"brandonwillard head_ref_force_pushed 2021-12-15 03:22:30,brandonwillard assigned 2021-12-15 03:23:05,brandonwillard labeled 2021-12-15 03:23:10,brandonwillard labeled 2021-12-15 03:23:10,brandonwillard review_requested 2021-12-15 03:23:12,brandonwillard review_requested 2021-12-15 03:23:17,brandonwillard head_ref_force_pushed 2021-12-15 03:27:30,brandonwillard labeled 2021-12-15 03:36:13,brandonwillard head_ref_force_pushed 2021-12-15 19:33:50,brandonwillard head_ref_force_pushed 2021-12-15 19:54:39,brandonwillard review_requested 2021-12-15 19:55:04,brandonwillard referenced 2021-12-15 21:29:15,brandonwillard merged 2021-12-15 21:29:15,brandonwillard closed 2021-12-15 21:29:16,brandonwillard head_ref_deleted 2021-12-15 21:29:19",codecov[bot] ricardoV94 brandonwillard,6,True
350,704,Add missing `Constant` validation to `OpFromGraph` constructor,brandonwillard,"This PR adds missing validation to `OpFromGraph`, as well as some minor docstring and exception refactoring.",enhancement refactor,,brandonwillard,2021-12-16 20:31:43,2021-12-22 17:01:05,tests/compile/test_builders.py aesara/compile/builders.py aesara/compile/function/types.py,b7d92cc2a6d75f6ad85e9c1caed834f06a878209 d256afaa89dc4968ec4455b8185406ab0aad8cc2 1dfe3bf39cfc9a782e788859fc26d739428940b9,"brandonwillard head_ref_force_pushed 2021-12-16 21:44:57,brandonwillard labeled 2021-12-22 17:00:39,brandonwillard labeled 2021-12-22 17:00:40,brandonwillard assigned 2021-12-22 17:00:41,brandonwillard referenced 2021-12-22 17:01:04,brandonwillard merged 2021-12-22 17:01:04,brandonwillard closed 2021-12-22 17:01:05,brandonwillard head_ref_deleted 2021-12-22 17:01:07",codecov[bot] brandonwillard,1,True
351,711,Enable complete static shape information at the type level,brandonwillard,"This PR addresses #431 and&mdash;as a result&mdash;#608 by adding full static shape information at the `Type` level.

I recently noticed that something like this was attempted a while back, and that some of the relevant issues are described in [`typeattr.txt`](https://github.com/aesara-devs/aesara/blob/main/aesara/graph/sandbox/typeattr.txt).  As mentioned in that document, the main issue is that `a.type == b.type` is not suitable for use when `Type`s have varying degrees of type/shape information.  

This varying degree of type information is currently dealt with by making all `Type`s conform in the case of replacements.  `Types` can differ during rewrites when, for instance, the replacement `Variable` is the output of an `Op` that's better at inferring `TensorType.broadcastable` information (i.e. static shape information).  In these cases, if a rewrite/optimization replaces a `Variable` of `Type` `TensorType(""float64"", (True, False))` with a `Variable` of `Type` `TensorType(""float64"", (False, False))`, it will apply a `Rebroadcast` `Op` in order to ""broaden"" the original `(True, False)` broadcast pattern (i.e. shape equal to `(1, s)` for some `s`) so that the replacement `Type` is equal to the replaced variable's original `Type`.

There are at least two things wrong with this approach: 1) `Rebroadcast` is basically just a redundant `Assert` `Op`, and 2) `Type` ""broadening"" isn't particularly productive or useful.  We should only be ""narrowing"" the `Type`s.  In other words, if we get more information about a `Type`, we should use it.  This puts less pressure on each individual `Op` to operate at an equally precise level of shape inference, and it more explicitly draws out contradictions/inconsistencies between `Op` implementations.

**To summarize the above, we need to ""narrow"" `Type`s** as we refine a graph.  We're talking about a simple form of type inference, essentially.

In order to do this, an explicit ""information""-based ordering over `Type`s is required.  For example, `a.type < b.type` is true when `a` is a more specific type than `b`, and, as a result, `a` can be replaced by `b` under the assumption that both types represent the same term.  Since this is a high-level assumption we necessarily make when performing replacements, we're basically updating our type information about terms when we encounter these cases.

For example, `t1 = TensorType(""float64"", [False, False])` can be replaced by `t2 = TensorType(""float64"", [True, False])`, because `t2` has a more specific broadcast pattern than `t1`.  In other words, `t1 > t2` according to the above.

The implementation in this PR uses a new `Type.is_super` method to implement the `<` ordering in the above example, but it can easily be replaced by a more convenient `__lt__` implementation.  (NB: the name of the method is liable to change.)

After making these important `Type` system changes, this PR introduces an entirely new `Type` to implement fixed-shape types; however, since the existing `TensorType` already has partial shape information (i.e. `TensorType.broadcastable`), it might be better to extend that by adding a `TensorType.shape` attribute and making `TensorType.broadcastable` a property derived therefrom.  This aligns closer with the approach described in the old `typeattr.txt` file above, since the `TensorType.shape` would need to encode missing shape information with something like `None`s (e.g. `TensorType.shape = (None, 1, None)` would be equivalent to `TensorType.broadcastable = (False, True, False)`).

- [x] Finish refactoring code that uses strict `Type` equality
- [x] Add tests for new fixed-shape `Type`s
- [x] Consider making all `TensorType`s with `all(TensorType.broadcastable) is True` fixed-shape tensors, since their shapes are fixed and known already.
    This would involve overriding `TensorType.__new__` so that it returns the appropriate types.
- [x] Clarify/fix the `Type.filter_variable`/`Type.convert_variable` interface.  Currently, these methods overlap a lot and their exact purposes aren't clear and their usages seem somewhat inconsistent with regard to types and the like.
- [x] Consider removing distinct `FixedShapeTensorType` and extending the existing `TensorType` to include a `shape` field.",enhancement important refactor shape inference,ricardoV94 kc611,brandonwillard,2021-12-29 22:19:34,2022-01-13 03:43:17,aesara/sandbox/multinomial.py aesara/tensor/shape.py doc/extending/creating_a_numba_jax_op.rst aesara/gpuarray/opt_util.py tests/sparse/test_basic.py tests/tensor/test_var.py aesara/graph/fg.py tests/sparse/test_type.py tests/scan/test_printing.py aesara/tensor/slinalg.py aesara/tensor/extra_ops.py aesara/gpuarray/opt.py tests/tensor/test_basic_opt.py aesara/compile/function/types.py aesara/scan/opt.py tests/tensor/utils.py doc/tutorial/examples.rst aesara/tensor/blas.py tests/tensor/test_blas_c.py tests/graph/test_unify.py tests/graph/test_features.py tests/tensor/test_shape.py doc/library/printing.rst aesara/scalar/basic.py tests/unittest_tools.py tests/compile/function/test_pfunc.py doc/library/tensor/basic.rst tests/tensor/test_sort.py tests/graph/test_types.py tests/tensor/nnet/test_abstract_conv.py aesara/gpuarray/rng_mrg.py aesara/sparse/basic.py tests/graph/test_opt.py aesara/tensor/io.py aesara/graph/features.py doc/extending/graphstructures.rst aesara/tensor/random/op.py aesara/tensor/var.py aesara/tensor/type.py tests/graph/test_op.py aesara/graph/opt.py aesara/tensor/subtensor.py doc/tutorial/adding.rst aesara/tensor/basic_opt.py aesara/typed_list/basic.py doc/tutorial/using_gpu.rst tests/tensor/test_math_opt.py aesara/tensor/nnet/conv.py aesara/tensor/sort.py aesara/tensor/elemwise.py aesara/d3viz/d3viz.py aesara/sparse/type.py aesara/compile/mode.py doc/tutorial/shape_info.rst tests/tensor/test_gc.py tests/sandbox/test_multinomial_wo_replacement.py tests/tensor/test_type_other.py tests/scan/test_basic.py aesara/tensor/random/utils.py tests/tensor/test_nlinalg.py tests/tensor/test_subtensor.py tests/graph/test_basic.py tests/link/test_jax.py doc/library/scan.rst aesara/tensor/nnet/opt.py aesara/ifelse.py tests/tensor/test_type.py aesara/gpuarray/dnn.py tests/tensor/test_elemwise.py aesara/gradient.py doc/extending/type.rst tests/tensor/nnet/test_basic.py tests/tensor/test_math.py tests/d3viz/test_formatting.py tests/tensor/test_blas_scipy.py aesara/link/basic.py aesara/scan/op.py aesara/tensor/nnet/batchnorm.py aesara/tensor/nnet/basic.py aesara/tensor/type_other.py aesara/compile/debugmode.py tests/compile/test_debugmode.py tests/compile/test_shared.py tests/test_raise_op.py aesara/tensor/nnet/abstract_conv.py tests/tensor/test_slinalg.py aesara/tensor/math_opt.py aesara/scan/basic.py tests/tensor/test_blas.py aesara/tensor/fft.py aesara/graph/type.py tests/tensor/test_basic.py tests/tensor/test_opt_uncanonicalize.py doc/extending/extending_aesara_solution_1.py aesara/link/vm.py tests/graph/utils.py aesara/tensor/sharedvar.py tests/tensor/signal/test_pool.py tests/test_printing.py aesara/gpuarray/pool.py aesara/typed_list/type.py doc/extending/creating_a_c_op.rst aesara/tensor/nnet/neighbours.py aesara/compile/io.py aesara/sandbox/rng_mrg.py tests/scalar/test_type.py aesara/configdefaults.py aesara/compile/function/pfunc.py tests/tensor/test_extra_ops.py tests/tensor/test_sharedvar.py aesara/gpuarray/type.py aesara/tensor/subtensor_opt.py aesara/sparse/opt.py aesara/tensor/basic.py tests/tensor/test_casting.py doc/tutorial/debug_faq.rst aesara/graph/basic.py tests/tensor/test_subtensor_opt.py aesara/graph/op.py tests/tensor/test_math_scipy.py,3faade90edd72c8dd79065fd302dca0d0c6f738f bd01ec2a4408bb20b9800d3ed58fe24b385bcd71 5f64d4c8ccddc10df718c0ceba2a47c14d8559da 61400fe9ceb5f5ecfcef75ba6078ac8e21754d93 79e83220053976faf963188920c921b0a185fa85 c797bf3e1369b0cc3be3b42a0f4832de747057fd 9759e6a793fb879907c256e2a5084ea3cd4eda5c 190d61d3dd5db36343d2c5ca3836c6d2a2e9416b 0e5e7cc71ddc9686b62675a709ccf76a69f433db 5451534b6571abc1c15b9bcf30a251cea73f224b 93e865ca359adb79a4e02803fb15f46529039dc3 104945fa95ed82f867fa5c5ff32f021d40adc227 510e42b6906367024cef22df08f885d3371d936e cd7237361b9a63e9e5bcb51ad4e7d8191f46f058 6c1937deb6c13da583e1b2a3cfb21598f4296439 e092d1c118eb6b9ee07aaadb4fb218b7cee957b7 f266c525bb1a018e3ebf5762263667d0bf14dfc1 e039f06727e93daff0a4f7c9f638b355bc30b015 a73b6227af1f3ea50713f8a4a710c0ddc981fe5c 130568786b7d55e3527e0eb3697c116d26a5077e cb5515de88802237adabb2bbe02dbadf4e129b5d 04507a80ba9de6faa5971f7eecc928b27cae8963 b5b9725138a5113b288840e3e58813bb1bb5c7a4 653647a0281f7c1b16782fdba4b303776b51911e 59940593dfd53bd3488da3b669432535432f3433 5db027fa593a0f43799996b6eb499896573f3ffb 466ecba51c1bcee4b18324a861c5b19c4149085e b81aa7c9361d867ab34449fcefef203aac73a9b3 dbcdcb64c12fdd7e4a7efd81f724e4710281adc3 38efe831fa4f199f03bf23d42caf736ac2afa6e1 dea16c11cb86a42931e3b483d8039570ed8e611e dd1284bdb26d050f04d67e89171698f80fa82715 4e234dca0f173c2008feed261d3e68340b795297 ae96a3f232adef39c96ed4b44d2bcb22514e261f 42b8d2a8f496ddc9f3809dce546e947bd509c0bd feea29b262555b5aa9f69280d0bbb66dbc8a837f,"brandonwillard renamed 2021-12-29 22:20:08,brandonwillard assigned 2021-12-29 22:20:10,brandonwillard review_requested 2021-12-29 22:20:19,brandonwillard review_requested 2021-12-29 22:20:19,brandonwillard labeled 2021-12-29 22:20:31,brandonwillard labeled 2021-12-29 22:20:31,brandonwillard labeled 2021-12-29 22:20:31,brandonwillard connected 2021-12-29 22:20:39,brandonwillard convert_to_draft 2021-12-29 22:20:51,brandonwillard head_ref_force_pushed 2021-12-29 22:22:09,brandonwillard head_ref_force_pushed 2021-12-29 22:48:43,brandonwillard head_ref_force_pushed 2021-12-29 23:34:10,brandonwillard head_ref_force_pushed 2021-12-30 05:15:12,brandonwillard head_ref_force_pushed 2021-12-31 05:21:54,brandonwillard head_ref_force_pushed 2021-12-31 05:38:39,brandonwillard head_ref_force_pushed 2021-12-31 18:19:34,brandonwillard head_ref_force_pushed 2021-12-31 19:01:08,brandonwillard head_ref_force_pushed 2022-01-01 20:42:46,brandonwillard head_ref_force_pushed 2022-01-02 01:43:39,brandonwillard head_ref_force_pushed 2022-01-02 02:12:43,brandonwillard head_ref_force_pushed 2022-01-02 02:13:03,brandonwillard head_ref_force_pushed 2022-01-04 00:15:06,brandonwillard head_ref_force_pushed 2022-01-04 00:15:18,brandonwillard head_ref_force_pushed 2022-01-05 00:01:30,brandonwillard head_ref_force_pushed 2022-01-05 00:02:53,brandonwillard head_ref_force_pushed 2022-01-05 00:13:47,brandonwillard head_ref_force_pushed 2022-01-06 04:51:32,brandonwillard head_ref_force_pushed 2022-01-06 05:56:23,brandonwillard head_ref_force_pushed 2022-01-06 05:57:18,brandonwillard head_ref_force_pushed 2022-01-06 17:55:43,brandonwillard head_ref_force_pushed 2022-01-06 22:04:26,brandonwillard head_ref_force_pushed 2022-01-07 00:47:35,brandonwillard head_ref_force_pushed 2022-01-07 00:52:16,brandonwillard head_ref_force_pushed 2022-01-07 01:00:35,brandonwillard head_ref_force_pushed 2022-01-07 01:04:08,brandonwillard head_ref_force_pushed 2022-01-07 03:08:08,brandonwillard head_ref_force_pushed 2022-01-07 05:12:45,brandonwillard head_ref_force_pushed 2022-01-07 21:31:16,brandonwillard head_ref_force_pushed 2022-01-07 21:39:13,brandonwillard head_ref_force_pushed 2022-01-07 22:20:16,brandonwillard head_ref_force_pushed 2022-01-07 23:08:24,brandonwillard head_ref_force_pushed 2022-01-07 23:40:19,brandonwillard head_ref_force_pushed 2022-01-08 02:45:22,brandonwillard head_ref_force_pushed 2022-01-08 06:40:58,brandonwillard head_ref_force_pushed 2022-01-08 06:59:37,brandonwillard head_ref_force_pushed 2022-01-08 07:39:58,brandonwillard head_ref_force_pushed 2022-01-08 07:52:31,brandonwillard head_ref_force_pushed 2022-01-08 08:06:13,brandonwillard head_ref_force_pushed 2022-01-08 08:23:30,brandonwillard head_ref_force_pushed 2022-01-08 08:24:30,brandonwillard head_ref_force_pushed 2022-01-08 09:03:24,brandonwillard head_ref_force_pushed 2022-01-08 16:36:21,brandonwillard head_ref_force_pushed 2022-01-08 17:57:49,brandonwillard head_ref_force_pushed 2022-01-08 18:15:32,brandonwillard head_ref_force_pushed 2022-01-08 21:06:17,brandonwillard head_ref_force_pushed 2022-01-08 22:24:57,brandonwillard head_ref_force_pushed 2022-01-08 22:41:57,brandonwillard head_ref_force_pushed 2022-01-08 23:39:41,brandonwillard head_ref_force_pushed 2022-01-09 01:28:19,brandonwillard head_ref_force_pushed 2022-01-09 01:30:44,brandonwillard head_ref_force_pushed 2022-01-09 01:32:44,brandonwillard head_ref_force_pushed 2022-01-09 01:33:12,brandonwillard head_ref_force_pushed 2022-01-09 01:34:13,brandonwillard head_ref_force_pushed 2022-01-09 01:50:40,brandonwillard head_ref_force_pushed 2022-01-09 04:21:58,brandonwillard ready_for_review 2022-01-09 05:28:49,brandonwillard head_ref_force_pushed 2022-01-09 22:13:26,brandonwillard head_ref_force_pushed 2022-01-10 05:07:16,brandonwillard renamed 2022-01-10 05:08:31,brandonwillard review_requested 2022-01-10 05:13:36,brandonwillard renamed 2022-01-10 05:13:58,brandonwillard head_ref_force_pushed 2022-01-10 16:48:13,brandonwillard head_ref_force_pushed 2022-01-11 19:05:27,brandonwillard head_ref_force_pushed 2022-01-11 19:25:30,brandonwillard head_ref_force_pushed 2022-01-11 20:57:10,brandonwillard head_ref_force_pushed 2022-01-11 21:02:53,brandonwillard head_ref_force_pushed 2022-01-11 21:07:58,brandonwillard head_ref_force_pushed 2022-01-12 16:46:06,brandonwillard head_ref_force_pushed 2022-01-12 17:14:36,brandonwillard labeled 2022-01-12 19:48:11,twiecki subscribed 2022-01-12 19:54:39,brandonwillard subscribed 2022-01-12 19:54:39,ricardoV94 subscribed 2022-01-12 19:54:39,kc611 subscribed 2022-01-12 19:54:39,brandonwillard head_ref_force_pushed 2022-01-13 02:31:40,brandonwillard head_ref_force_pushed 2022-01-13 02:33:06,brandonwillard referenced 2022-01-13 03:43:17,brandonwillard merged 2022-01-13 03:43:17,brandonwillard closed 2022-01-13 03:43:18,brandonwillard head_ref_deleted 2022-01-13 03:43:20,rlouf referenced 2022-01-14 10:23:14,rlouf referenced 2022-01-14 10:33:04,brandonwillard connected 2022-01-14 23:54:02,rlouf referenced 2022-01-20 11:36:38,ricardoV94 referenced 2022-05-28 10:19:46,ricardoV94 referenced 2022-05-28 16:50:28,ricardoV94 referenced 2022-06-07 10:06:33,ricardoV94 referenced 2022-07-07 12:48:47,ricardoV94 referenced 2022-07-07 13:37:09,brandonwillard referenced 2022-07-07 22:09:20",rlouf codecov[bot] kc611 brandonwillard ricardoV94 twiecki,19,True
352,713,Tests for input checks in tensor/signal/pool.py,aerubanov,"This PR adds tests that are basically to check that suitable exceptions are raised if incorrect input data is received in ```tensor/signal/pool.py```.  This pool-request is related to issue #605.
",enhancement testing,,,2021-12-30 11:47:03,2022-01-03 23:54:43,tests/tensor/signal/test_pool.py,ea8a1d4657281e9d66742bed5767a7e5eeb23a3f e062c12a7bd852cb8bc1592f1af53e68a3147808 a64efbf78ea140131bc9362e13c79f922df4d853 4f2f0efebfa4bfadd3e1d2d971e8423b83030fb6,"brandonwillard labeled 2021-12-31 05:23:00,brandonwillard labeled 2021-12-31 05:23:00,aerubanov head_ref_force_pushed 2022-01-01 06:41:52,brandonwillard mentioned 2022-01-01 06:43:32,brandonwillard subscribed 2022-01-01 06:43:32,aerubanov head_ref_force_pushed 2022-01-02 07:55:09,brandonwillard referenced 2022-01-03 23:54:43,brandonwillard merged 2022-01-03 23:54:43,brandonwillard closed 2022-01-03 23:54:43,aerubanov head_ref_deleted 2022-01-04 12:49:24",codecov[bot] aerubanov brandonwillard,4,True
353,716,Fixed issue with NumPy 1.22,oscargus,"Removed direct access of numpy config that was removed in NumPy 1.22. Fixes #715 

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",bug important NumPy compatibility,,,2022-01-01 17:09:32,2022-01-01 23:02:41,aesara/link/c/cmodule.py .github/workflows/test.yml,ac1c7f60ab9c0136c4ef74cb3052f0dde3fff3cd 9b3559ab95f5216867b199e0a467767bedf4bda6,"oscargus mentioned 2022-01-01 18:19:25,oscargus subscribed 2022-01-01 18:19:25,brandonwillard mentioned 2022-01-01 18:20:46,brandonwillard subscribed 2022-01-01 18:20:46,oscargus head_ref_force_pushed 2022-01-01 19:18:57,brandonwillard labeled 2022-01-01 20:06:01,brandonwillard labeled 2022-01-01 20:06:01,brandonwillard labeled 2022-01-01 20:06:01,oscargus head_ref_force_pushed 2022-01-01 20:27:09,oscargus head_ref_force_pushed 2022-01-01 23:01:51,brandonwillard referenced 2022-01-01 23:02:41,brandonwillard merged 2022-01-01 23:02:41,brandonwillard closed 2022-01-01 23:02:41",codecov[bot] oscargus kc611 brandonwillard,11,True
354,719,Make `TensorConstant`s print their names when specified,oscargus,"In addition, the value is printed (and sometimes the data type).

I modified it a bit to also print the value, but easy to change if the original proposal in #689 is deemed better. I imagined that it may be better to get more information, but on the other hand the name is there, so maybe no benefit.

Example:
```
In [9]: z = at.constant(1, name='z')
   ...: y = z + 1; 
   ...: y.name = 'y'

In [10]: dprint(y)
Elemwise{add,no_inplace} [id A] 'y'   
 |z{1} [id B]
 |TensorConstant{1} [id C]

In [11]: print(z)
z{1}
```

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement,,,2022-01-02 00:03:43,2022-01-02 01:39:15,aesara/tensor/var.py tests/tensor/test_var.py,9992e0a73730743d69d0fbec95c50a86c792e1d6,"brandonwillard connected 2022-01-02 01:36:24,brandonwillard labeled 2022-01-02 01:36:35,brandonwillard renamed 2022-01-02 01:38:02,brandonwillard renamed 2022-01-02 01:38:19,brandonwillard referenced 2022-01-02 01:39:14,brandonwillard merged 2022-01-02 01:39:14,brandonwillard closed 2022-01-02 01:39:15,oscargus mentioned 2022-01-02 01:39:32,oscargus subscribed 2022-01-02 01:39:32,oscargus referenced 2022-01-02 18:17:19,oscargus referenced 2022-01-02 18:25:48,oscargus referenced 2022-01-02 18:40:44",codecov[bot] oscargus ricardoV94 brandonwillard,7,True
355,721,Updated versioneer to enable Python 3.11 and removed some Python 2 and 3.6 support.,oscargus,"versioneer must be rerun to support Python 3.11. At the same time, the support
for Python 3.6 was further reduced and also some odd Python 2.7-leftovers removed.

When trying to test SymPy with Python 3.11, aesara was the limiting factor (so far). This is caused by versioneer using configparser.SafeConfigParser which was removed in 3.11. Rerunning versioneer solves this.

I understood from another PR that `import aesara.tensor as aet` is not really encouraged in the code, so I removed those comments (found by searching for 3.6).

It seems like black works with pypy now, so removed that as well as specifying specific versions of black and pylint. Let's see how that works out.

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement important,,,2022-01-03 12:00:33,2022-01-03 21:08:15,requirements.txt versioneer.py aesara/tensor/nnet/basic.py doc/requirements.inc doc/tutorial/examples.rst doc/tutorial/debug_faq.rst aesara/tensor/var.py aesara/tensor/blas_c.py Makefile aesara/_version.py setup.py,616c38d5646707a8c872b3abef57a1279c6e2c4a,"oscargus head_ref_force_pushed 2022-01-03 13:18:24,oscargus renamed 2022-01-03 14:25:49,brandonwillard labeled 2022-01-03 21:04:58,brandonwillard labeled 2022-01-03 21:04:58,brandonwillard referenced 2022-01-03 21:08:15,brandonwillard merged 2022-01-03 21:08:15,brandonwillard closed 2022-01-03 21:08:15",codecov[bot] oscargus brandonwillard,2,True
356,722,Convert `list`s to `tuple`s,oscargus,"Not creating a temporary list will enable early exit of all and any.
Faster to create tuple than list contaning constants.
Removed duplicated definition of method.

I didn't go through exactly all the tests and replaced lists with tuples...

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement refactor,brandonwillard,,2022-01-03 13:10:14,2022-01-03 21:18:48,aesara/link/c/cmodule.py aesara/gpuarray/opt_util.py tests/sparse/test_basic.py aesara/compile/profiling.py aesara/tensor/slinalg.py aesara/gpuarray/dnn_opt.py aesara/gpuarray/opt.py aesara/tensor/extra_ops.py tests/tensor/test_basic_opt.py aesara/tensor/blas.py aesara/printing.py tests/gpuarray/test_basic_ops.py aesara/scalar/basic.py tests/record.py tests/tensor/nnet/test_abstract_conv.py aesara/sparse/basic.py tests/gpuarray/test_extra_ops.py aesara/misc/check_blas.py tests/gpuarray/test_rng_mrg.py aesara/tensor/var.py tests/gpuarray/test_opt.py aesara/graph/opt.py aesara/tensor/subtensor.py tests/gpuarray/test_dnn.py tests/test_gradient.py aesara/gpuarray/multinomial.py aesara/compile/ops.py tests/compile/function/test_types.py tests/gpuarray/test_scan.py aesara/tensor/utils.py tests/tensor/test_math_opt.py aesara/tensor/nnet/conv.py aesara/d3viz/d3viz.py aesara/tensor/elemwise.py aesara/compile/mode.py tests/gpuarray/test_type.py tests/scan/test_basic.py tests/tensor/test_subtensor.py aesara/sparse/sandbox/sp2.py aesara/tensor/nnet/corr3d.py aesara/tensor/nnet/opt.py aesara/gpuarray/linalg.py aesara/ifelse.py aesara/gpuarray/dnn.py aesara/tensor/nlinalg.py tests/sandbox/test_rng_mrg.py aesara/gradient.py tests/tensor/test_elemwise.py aesara/compile/function/__init__.py aesara/gpuarray/elemwise.py tests/compile/test_profiling.py tests/tensor/test_math.py aesara/scan/op.py aesara/compile/debugmode.py aesara/tensor/signal/pool.py doc/tutorial/using_gpu_solution_1.py aesara/compile/builders.py tests/gpuarray/test_blas.py aesara/tensor/opt_uncanonicalize.py aesara/tensor/nnet/abstract_conv.py aesara/tensor/nnet/ctc.py aesara/tensor/math_opt.py aesara/scan/basic.py tests/scan/test_opt.py tests/tensor/test_basic.py tests/tensor/test_opt_uncanonicalize.py aesara/link/vm.py aesara/gpuarray/pool.py aesara/tensor/nnet/corr.py tests/tensor/nnet/test_sigm.py doc/tutorial/modes_solution_1.py aesara/tensor/nnet/neighbours.py tests/link/test_vm.py aesara/sandbox/rng_mrg.py tests/tensor/test_extra_ops.py aesara/misc/latence_gpu_transfert.py aesara/gpuarray/type.py aesara/tensor/subtensor_opt.py aesara/scan/utils.py tests/test_ifelse.py aesara/tensor/basic.py aesara/graph/basic.py aesara/graph/op.py tests/tensor/test_subtensor_opt.py aesara/tensor/blas_c.py,cdf2e15596234ca650f85a63e610fa9d012b5780,"oscargus head_ref_force_pushed 2022-01-03 13:26:46,oscargus head_ref_force_pushed 2022-01-03 13:41:38,brandonwillard labeled 2022-01-03 21:11:49,brandonwillard labeled 2022-01-03 21:11:49,brandonwillard renamed 2022-01-03 21:15:00,brandonwillard referenced 2022-01-03 21:18:48,brandonwillard merged 2022-01-03 21:18:48,brandonwillard closed 2022-01-03 21:18:48",codecov[bot] oscargus brandonwillard,2,True
357,723,Do not use old `T` alias in documentation.,oscargus,"Closes #703.

(I've searched and these are the ones I found.)


**Thank you for opening a PR!**


Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",documentation refactor,ricardoV94,,2022-01-03 15:57:06,2022-01-03 18:53:10,doc/tutorial/gradients.rst doc/library/scan.rst doc/tutorial/examples.rst,ee97865c18dad960ef857f9e294379271c3213b1,"twiecki referenced 2022-01-03 18:53:10,twiecki merged 2022-01-03 18:53:10,twiecki closed 2022-01-03 18:53:10,brandonwillard labeled 2022-01-03 21:02:40,brandonwillard labeled 2022-01-03 21:02:43",oscargus ricardoV94 twiecki brandonwillard,0,True
358,725,Fix limit of `log1mexp` gradient at zero and improve numerical stablity,ricardoV94,"The grad of `log1mexp` was evaluating to `+inf` for inputs of `0`, due to specific number/order of operations and the fact that `1/-0.0 == -np.inf` vs `1/0.0 == np.inf`.

This PR fixes this edge case and also improves numerical stability for values close to zero, relative to the previous implementation and relative to the gradient obtained from the equivalent symbolic graph `at.log(1-at.exp(x))`

This showed up here first: https://github.com/pymc-devs/pymc/issues/5289",bug enhancement,,,2022-01-05 11:50:27,2022-01-05 21:56:54,aesara/scalar/math.py tests/tensor/test_math.py,2f6c33d4bbc002bfe76232b85346b4f6276357e9,"ricardoV94 head_ref_force_pushed 2022-01-05 12:00:29,ricardoV94 renamed 2022-01-05 13:36:19,brandonwillard labeled 2022-01-05 21:56:47,brandonwillard labeled 2022-01-05 21:56:47,brandonwillard referenced 2022-01-05 21:56:54,brandonwillard merged 2022-01-05 21:56:54,brandonwillard closed 2022-01-05 21:56:54,ricardoV94 head_ref_deleted 2022-01-19 18:32:55",codecov[bot] ricardoV94 brandonwillard,1,True
359,728,Replace `aet` aliases with `at`,twiecki,"Closes https://github.com/aesara-devs/aesara/issues/328.

This is the command I ran:
```bash
find ./ -type f -exec sed -i -e 's/aet/at/g' {} \\;
```",refactor,kc611 brandonwillard,,2022-01-07 16:51:21,2022-01-10 12:38:29,aesara/sandbox/multinomial.py aesara/tensor/shape.py doc/extending/creating_a_numba_jax_op.rst tests/gpuarray/test_nnet.py tests/compile/test_builders.py tests/d3viz/models.py doc/library/d3viz/index.ipynb tests/tensor/nnet/test_corr.py tests/sparse/test_basic.py tests/tensor/test_mlp.py tests/tensor/test_keepdims.py README.rst tests/scan/test_printing.py tests/test_rop.py aesara/tensor/slinalg.py tests/gpuarray/test_subtensor.py aesara/gpuarray/opt.py aesara/tensor/extra_ops.py tests/tensor/test_basic_opt.py aesara/scan/opt.py doc/tutorial/examples.rst doc/extending/unittest.rst aesara/tensor/blas.py tests/tensor/test_blas_c.py doc/tutorial/gradients.rst tests/graph/test_compute_test_value.py doc/library/printing.rst tests/gpuarray/test_basic_ops.py tests/tensor/nnet/test_batchnorm.py tests/tensor/nnet/test_blocksparse.py tests/unittest_tools.py tests/compile/function/test_pfunc.py tests/tensor/test_utils.py doc/library/tensor/basic.rst tests/gpuarray/test_pool.py tests/tensor/nnet/test_neighbours.py aesara/link/jax/dispatch.py tests/tensor/nnet/test_abstract_conv.py aesara/gpuarray/rng_mrg.py aesara/sparse/basic.py tests/sparse/test_opt.py tests/gpuarray/test_rng_mrg.py tests/gpuarray/test_cgpukernelbase.py doc/extending/graphstructures.rst tests/tensor/nnet/test_ctc.py aesara/tensor/var.py tests/graph/test_params_type.py tests/gpuarray/test_opt.py tests/graph/test_op.py tests/tensor/random/test_op.py aesara/graph/opt.py tests/gpuarray/test_dnn.py doc/tutorial/adding.rst tests/test_gradient.py aesara/gpuarray/blocksparse.py doc/library/compile/nanguardmode.rst tests/typed_list/test_opt.py tests/compile/function/test_types.py tests/gpuarray/test_scan.py aesara/tensor/basic_opt.py aesara/typed_list/basic.py doc/library/compile/io.rst doc/tutorial/modes.rst doc/tutorial/using_gpu.rst tests/tensor/test_math_opt.py tests/compile/test_misc.py doc/tutorial/loop_solution_1.py doc/library/gpuarray/fft.rst aesara/tensor/elemwise.py doc/extending/tips.rst tests/compile/function/test_function.py aesara/raise_op.py tests/scan/test_basic.py doc/introduction.rst tests/tensor/test_subtensor.py doc/tutorial/aliasing.rst doc/tutorial/loop.rst tests/graph/test_basic.py aesara/sparse/sandbox/sp2.py tests/link/test_jax.py doc/library/scan.rst aesara/gpuarray/subtensor.py aesara/gpuarray/linalg.py aesara/ifelse.py aesara/gpuarray/dnn.py tests/link/test_numba.py aesara/tensor/nlinalg.py tests/sandbox/test_rng_mrg.py tests/tensor/test_elemwise.py tests/tensor/nnet/test_corr3d.py doc/tutorial/conditions.rst aesara/tensor/math.py tests/compile/test_profiling.py tests/tensor/nnet/test_basic.py aesara/tensor/nnet/conv3d2d.py tests/tensor/test_math.py tests/scalar/test_math.py tests/tensor/test_blas_scipy.py tests/gpuarray/test_reduction.py tests/sandbox/linalg/test_linalg.py aesara/scan/op.py aesara/tensor/nnet/basic.py aesara/tensor/nnet/batchnorm.py aesara/tensor/signal/pool.py aesara/tensor/signal/conv.py doc/glossary.rst doc/library/tensor/nnet/basic.rst tests/compile/test_debugmode.py doc/tutorial/using_gpu_solution_1.py aesara/compile/builders.py aesara/compile/nanguardmode.py tests/tensor/test_merge.py aesara/sparse/sandbox/sp.py aesara/gpuarray/neighbours.py tests/tensor/random/test_opt.py aesara/gpuarray/basic_ops.py tests/tensor/random/test_basic.py aesara/tensor/nnet/abstract_conv.py aesara/tensor/nnet/ctc.py tests/tensor/test_slinalg.py tests/gpuarray/test_elemwise.py aesara/tensor/math_opt.py aesara/scan/basic.py tests/tensor/test_blas.py tests/scan/test_opt.py tests/tensor/test_basic.py doc/library/d3viz/index.rst doc/extending/extending_aesara_solution_1.py aesara/sandbox/linalg/ops.py tests/tensor/test_opt_uncanonicalize.py aesara/link/numba/dispatch/scan.py aesara/tensor/random/opt.py doc/sandbox/logistic_regression_example.rst tests/tensor/signal/test_pool.py doc/tutorial/modes_solution_1.py aesara/breakpoint.py doc/library/compile/debugmode.rst doc/tutorial/printing_drawing.rst aesara/sandbox/rng_mrg.py tests/tensor/test_extra_ops.py tests/scan/test_utils.py tests/tensor/test_sharedvar.py aesara/gpuarray/type.py aesara/tensor/subtensor_opt.py doc/tutorial/broadcasting.rst aesara/scan/checkpoints.py aesara/scan/utils.py tests/test_ifelse.py aesara/tensor/basic.py tests/tensor/nnet/test_conv.py doc/tutorial/debug_faq.rst aesara/graph/basic.py tests/tensor/test_subtensor_opt.py doc/library/tensor/fft.rst aesara/tensor/blas_c.py tests/compile/test_nanguardmode.py doc/tutorial/index.rst tests/tensor/test_math_scipy.py,00bef72b4f0975a3c247f760640875d75d1fe321,"twiecki review_requested 2022-01-07 16:57:04,brandonwillard labeled 2022-01-08 18:09:31,twiecki subscribed 2022-01-08 18:13:49,brandonwillard subscribed 2022-01-08 18:13:49,ricardoV94 subscribed 2022-01-08 18:13:49,kc611 subscribed 2022-01-08 18:13:50,brandonwillard renamed 2022-01-08 18:17:58,twiecki closed 2022-01-10 07:02:36,twiecki reopened 2022-01-10 07:03:36,twiecki review_dismissed 2022-01-10 07:03:37,kc611 mentioned 2022-01-10 07:05:23,kc611 subscribed 2022-01-10 07:05:23,twiecki review_requested 2022-01-10 07:05:33,kc611 mentioned 2022-01-10 07:06:31,kc611 subscribed 2022-01-10 07:06:31,twiecki referenced 2022-01-10 12:38:28,twiecki merged 2022-01-10 12:38:28,twiecki closed 2022-01-10 12:38:29",codecov[bot] kc611 brandonwillard ricardoV94 twiecki,4,True
360,734,Change FunctionGraph.change_input to change_node_input,anooptp,"**Thank you for opening a PR!**

Fixes #731 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",graph rewriting refactor,brandonwillard,,2022-01-08 14:30:15,2022-01-08 18:14:24,aesara/graph/features.py tests/graph/test_fg.py aesara/compile/function/types.py aesara/graph/fg.py,89b48394142ffeac675b6296448217c567998509 806bd2ff1a61429ca8c114ba45089ff0f2caca21,"brandonwillard labeled 2022-01-08 18:02:07,brandonwillard labeled 2022-01-08 18:02:20,brandonwillard referenced 2022-01-08 18:14:24,brandonwillard merged 2022-01-08 18:14:24,brandonwillard closed 2022-01-08 18:14:24,brandonwillard mentioned 2022-01-08 18:18:13,brandonwillard subscribed 2022-01-08 18:18:13",codecov[bot] anooptp brandonwillard,2,True
361,735,"Remove optimize_graph_with_cache, it's not used",MridulS,"Fixes https://github.com/aesara-devs/aesara/issues/733
Clean up tests and config variable cache_optimizations


**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [  N/A ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",refactor,brandonwillard,,2022-01-08 19:48:25,2022-01-08 22:40:15,aesara/configdefaults.py tests/compile/function/test_types.py aesara/compile/function/types.py,304a60c0ee9fd04ead8bc6a97f1b5905d949395b,"brandonwillard labeled 2022-01-08 20:31:19,brandonwillard milestoned 2022-01-08 20:31:22,brandonwillard referenced 2022-01-08 22:40:15,brandonwillard merged 2022-01-08 22:40:15,brandonwillard closed 2022-01-08 22:40:15",codecov[bot] MridulS brandonwillard,1,True
362,736,Set `default_updates` on RNGs passed to `RandomVariable.make_node`,brandonwillard,"This PR makes the behavior of `RandomVariable` in `Scan`s a little more intuitive by adding `default_updates` to the RNG objects used and generated by `RandomVariable`s.

Under these changes, the following result is produced by default:
``` python
import aesara
import aesara.tensor as at


def inner_fn():
    return at.random.normal()


out, updates = aesara.scan(inner_fn, n_steps=10)

fn = aesara.function([], out)
fn()
# array([-0.89055728,  0.60126195,  0.85510428,  0.22562239, -0.59557647,
#   )
fn()
# array([ 2.09033971, -0.48043732, -2.66384694, -0.49392544,  0.90139483,
#         1.51081408, -1.15271538,  1.98298267, -0.38496484, -0.13587198])
```

In order to avoid updating shared RNG states implicitly produced by calls like `at.random.normal()`, the option `no_default_updates` can be set to `True` when calling `aesara.function`:
``` python
fn = aesara.function([], out, no_default_updates=True)
fn()
# array([-0.48043732, -2.66384694, -0.49392544,  0.90139483,  1.51081408,
#        -1.15271538,  1.98298267, -0.38496484, -0.13587198,  1.2234377 ])
fn()
# array([-0.48043732, -2.66384694, -0.49392544,  0.90139483,  1.51081408,
#        -1.15271538,  1.98298267, -0.38496484, -0.13587198,  1.2234377 ])
```",enhancement question random variables request discussion,zoj613,,2022-01-09 05:17:54,2022-04-11 21:56:33,tests/tensor/random/test_basic.py aesara/tensor/random/op.py tests/tensor/random/test_op.py tests/tensor/random/test_opt.py,db043cd84c39fd5bd262ed4815e3fe2f71a11433 309982a30ad626978cd2129c6bc88b20ef9eec16 0bed116ddd7aa90ea69f448c8469958fd7765450,"brandonwillard labeled 2022-01-09 05:20:14,brandonwillard labeled 2022-01-09 05:20:14,brandonwillard review_requested 2022-01-09 05:24:01,brandonwillard review_requested 2022-01-09 05:24:08,brandonwillard review_requested 2022-01-09 05:24:08,brandonwillard review_requested 2022-01-09 05:26:14,brandonwillard review_dismissed 2022-01-10 16:49:24,brandonwillard head_ref_force_pushed 2022-01-10 16:49:24,brandonwillard head_ref_force_pushed 2022-01-10 16:54:44,brandonwillard convert_to_draft 2022-01-11 00:02:19,brandonwillard labeled 2022-01-11 00:02:28,brandonwillard labeled 2022-01-11 00:02:28,brandonwillard closed 2022-04-11 21:56:33",rlouf zoj613 codecov[bot] brandonwillard ricardoV94,11,False
363,740,Remove useless `BroadcastTo` `Op`s,brandonwillard,Closes #737,enhancement graph rewriting,,brandonwillard,2022-01-11 01:22:39,2022-01-11 03:48:53,aesara/tensor/extra_ops.py tests/tensor/test_basic_opt.py aesara/tensor/basic_opt.py tests/tensor/test_extra_ops.py,34160176d0d37d50988e8300da880bd22bb2505d 5be1f086ec3ba846fe3f2ea1198824874edc2fc5,"brandonwillard assigned 2022-01-11 01:33:54,brandonwillard labeled 2022-01-11 01:34:03,brandonwillard labeled 2022-01-11 01:34:03,brandonwillard head_ref_force_pushed 2022-01-11 01:43:55,brandonwillard referenced 2022-01-11 03:48:53,brandonwillard merged 2022-01-11 03:48:53,brandonwillard closed 2022-01-11 03:48:54,brandonwillard head_ref_deleted 2022-01-11 03:48:56",codecov[bot] brandonwillard,1,True
364,741,Support `n_steps=0` (and empty sequence) case for `Scan`,rlouf,"This PR implements the `n_steps=0` behavior for the scan operator. The implementation currently raises an exception when the number of steps is 0, or if we scan over an empty sequence. However, this can make the code crash for no reason when the number of steps is determined dynamically at runtime.

I thus removed exceptions where they were raised and added 2 small tests to document the behavior. I also remove the warning raised when `n_steps=1` which has no reason to be.

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Closes #659 ",bug Scan,ricardoV94 brandonwillard,rlouf,2022-01-11 17:22:29,2022-01-21 03:54:34,aesara/scan/scan_perform_ext.py aesara/scan/op.py aesara/scan/basic.py aesara/scan/scan_perform.pyx aesara/scan/c_code/scan_perform.c tests/scan/test_basic.py,01a7120aaa24e5c00f20998d525d1f4bdceff567 62e009ba5909f180e79200b0eded09d231fc4c93 e19d1ce058deca5a46db1656eb5e045fb0536493,"rlouf head_ref_force_pushed 2022-01-11 17:23:48,brandonwillard labeled 2022-01-11 17:53:06,brandonwillard labeled 2022-01-11 17:53:06,rlouf head_ref_force_pushed 2022-01-11 17:57:04,rlouf assigned 2022-01-11 21:12:03,rlouf head_ref_force_pushed 2022-01-13 10:46:31,brandonwillard head_ref_force_pushed 2022-01-14 23:29:57,brandonwillard head_ref_force_pushed 2022-01-14 23:30:14,brandonwillard ready_for_review 2022-01-14 23:30:38,rlouf head_ref_force_pushed 2022-01-15 14:55:13,rlouf head_ref_force_pushed 2022-01-15 15:11:55,rlouf head_ref_force_pushed 2022-01-20 10:03:22,rlouf head_ref_force_pushed 2022-01-20 10:11:29,rlouf head_ref_force_pushed 2022-01-20 10:54:04,rlouf head_ref_force_pushed 2022-01-20 11:33:30,brandonwillard head_ref_force_pushed 2022-01-21 01:11:48,brandonwillard head_ref_force_pushed 2022-01-21 01:12:14,brandonwillard referenced 2022-01-21 03:54:34,brandonwillard merged 2022-01-21 03:54:34,brandonwillard closed 2022-01-21 03:54:34",ricardoV94 rlouf codecov[bot] brandonwillard,18,True
365,743,Introduce `aesara.as_symbolic`,brandonwillard,"This PR introduces the `aesara.as_symbolic` dispatch function, which converts all eligible objects to `Variable`s.  Unlike `aesara.tensor.as_tensor_variable`, `as_symbolic` will convert `None`s, `slice`s, or any other types that have equivalent Aesara `Type`s.",enhancement,,brandonwillard,2022-01-11 21:00:17,2022-01-12 17:03:08,aesara/graph/opt.py aesara/__init__.py aesara/tensor/type_other.py tests/tensor/test_type_other.py aesara/tensor/__init__.py,a90c14d98989d747dd9c1ff30336690645f2895a,"brandonwillard labeled 2022-01-11 21:00:45,brandonwillard assigned 2022-01-11 21:00:47,brandonwillard review_requested 2022-01-11 22:21:42,brandonwillard review_requested 2022-01-11 22:21:42,brandonwillard referenced 2022-01-12 17:03:08,brandonwillard merged 2022-01-12 17:03:08,brandonwillard closed 2022-01-12 17:03:08,brandonwillard head_ref_deleted 2022-01-12 17:03:33",codecov[bot] brandonwillard,1,True
366,744,Implement `aesara.tensor.matmul`,zoj613,"closes #488

This implements an aesara equivalent of `np.matmul`.

The behavior depends on the arguments in the following way.

If both arguments are 2-D they are multiplied like conventional matrices.

If either argument is N-D, N > 2, it is treated as a stack of matrices residing in the last two indexes and broadcast accordingly.

If the first argument is 1-D, it is promoted to a matrix by prepending a 1 to its dimensions. After matrix multiplication the prepended 1 is removed.

If the second argument is 1-D, it is promoted to a matrix by appending a 1 to its dimensions. After matrix multiplication the appended 1 is removed.

`matmul` differs from `dot` in two important ways:

Multiplication by scalars is not allowed.

Stacks of matrices are broadcast together as if the matrices were elements, respecting the signature `(n,k),(k,m)->(n,m)`

References
---------------
https://numpy.org/doc/stable/reference/generated/numpy.matmul.html
",enhancement NumPy compatibility tensor algebra Op implementation,rlouf brandonwillard,,2022-01-11 22:29:17,2022-07-30 21:34:15,aesara/tensor/math.py aesara/tensor/nlinalg.py tests/tensor/test_math.py,b60030fef04a3acc55bdbcaf0a99ad511a667769,"zoj613 labeled 2022-01-11 22:37:23,zoj613 head_ref_force_pushed 2022-01-11 23:23:20,zoj613 review_requested 2022-01-11 23:24:02,zoj613 review_requested 2022-01-11 23:28:12,zoj613 review_requested 2022-01-11 23:31:58,brandonwillard labeled 2022-01-12 00:09:35,zoj613 renamed 2022-01-12 20:29:02,zoj613 head_ref_force_pushed 2022-01-12 21:46:42,zoj613 head_ref_force_pushed 2022-01-12 23:45:58,zoj613 head_ref_force_pushed 2022-01-14 06:09:26,zoj613 head_ref_force_pushed 2022-01-15 09:49:15,zoj613 head_ref_force_pushed 2022-01-15 09:52:13,zoj613 ready_for_review 2022-01-16 08:16:34,zoj613 renamed 2022-01-16 08:16:51,zoj613 head_ref_force_pushed 2022-01-20 22:38:04,zoj613 head_ref_force_pushed 2022-01-21 07:21:07,zoj613 mentioned 2022-06-21 15:28:40,zoj613 subscribed 2022-06-21 15:28:40,brandonwillard review_dismissed 2022-06-21 19:02:14,zoj613 mentioned 2022-06-21 19:12:16,zoj613 subscribed 2022-06-21 19:12:16,zoj613 head_ref_force_pushed 2022-06-21 19:19:16,brandonwillard mentioned 2022-07-07 07:45:31,brandonwillard subscribed 2022-07-07 07:45:31,brandonwillard labeled 2022-07-11 18:03:15,brandonwillard unlabeled 2022-07-11 18:03:31,zoj613 mentioned 2022-07-20 15:46:13,zoj613 subscribed 2022-07-20 15:46:13,brandonwillard head_ref_force_pushed 2022-07-23 21:00:56,brandonwillard labeled 2022-07-23 21:01:50,brandonwillard labeled 2022-07-23 21:02:08,brandonwillard head_ref_force_pushed 2022-07-23 21:03:14,brandonwillard head_ref_force_pushed 2022-07-23 21:03:40,brandonwillard head_ref_force_pushed 2022-07-24 19:51:47,brandonwillard mentioned 2022-07-30 03:39:27,brandonwillard subscribed 2022-07-30 03:39:27,brandonwillard referenced 2022-07-30 21:34:15,brandonwillard merged 2022-07-30 21:34:15,brandonwillard closed 2022-07-30 21:34:15,zoj613 head_ref_deleted 2022-07-30 21:58:36",purna135 rlouf zoj613 Sayam753 codecov[bot] brandonwillard,54,True
367,745,Add a `sum` method to `_sparse_py_operators`,aerubanov,"This PR add ```sum``` method for sparse tensors according to #522. So one can call ```x.sum()``` instead of  ```aesara.sparse.sp_sum(x)```.

I think this change should also be reflected in the documentation, but I could not find a section with the methods of sparse tensors. We need to decide something about what to do with it.
",enhancement sparse tensors,brandonwillard,,2022-01-12 12:44:38,2022-01-12 20:59:56,aesara/sparse/basic.py tests/sparse/test_basic.py tests/tensor/test_sharedvar.py,7eaf35fc8571859005c59f021b66af66f7c12829 8e30d8834e76136231b7458725df55a716c52b3c,"brandonwillard labeled 2022-01-12 17:06:52,brandonwillard labeled 2022-01-12 17:06:53,brandonwillard renamed 2022-01-12 17:12:43,brandonwillard referenced 2022-01-12 20:59:55,brandonwillard merged 2022-01-12 20:59:55,brandonwillard closed 2022-01-12 20:59:56,aerubanov head_ref_deleted 2022-01-13 06:22:23,brandonwillard connected 2022-01-13 06:30:22,brandonwillard mentioned 2022-01-13 09:58:34,brandonwillard subscribed 2022-01-13 09:58:34",codecov[bot] aerubanov brandonwillard,4,True
368,754,Remove `docs/requirement.rst`,adil14788,"**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",documentation refactor,brandonwillard,,2022-01-15 11:23:01,2022-06-19 14:13:16,doc/requirements.rst,109c307fe2e002af3dac4aad947044b45e8e34d7,"brandonwillard renamed 2022-01-15 19:59:41,brandonwillard connected 2022-01-15 19:59:52,brandonwillard labeled 2022-01-15 20:00:12,brandonwillard labeled 2022-01-15 20:00:12",adil14788 brandonwillard,1,False
369,756,"Add `__pycache__`, `_build`, and `*.pkl` to `.gitignore`",brandonwillard,This PR adds some missing ignores to `.gitignore`.,,twiecki,,2022-01-16 22:35:01,2022-01-17 16:29:42,.gitignore,693f3088c0f2772a71cc78f7b247eac573596b22,"twiecki referenced 2022-01-17 16:29:42,twiecki merged 2022-01-17 16:29:42,twiecki closed 2022-01-17 16:29:42",twiecki brandonwillard,0,True
370,757,Add `Blockwise` `Op`,brandonwillard,"This PR implements https://github.com/aesara-devs/aesara/issues/695.

It's currently just an outline.",enhancement important Op implementation,Sayam753,,2022-01-17 03:57:09,2022-09-26 19:57:01,aesara/tensor/math.py aesara/tensor/blockwise.py tests/tensor/test_blockwise.py tests/unittest_tools.py,cf9affc85788c9cb06654a8f0135000bb867f628 037f90fc42e65f6f38e303701a66221f34ee7f07 e79383c6841181fdeb01e870e5e5ce80aa79c959 b8f868b1b1d1b80b6ffff9bb693b0e3c6022baa8 82a103b5d76262dc2643fed890a220f9fdc3e756,"brandonwillard connected 2022-01-17 03:57:18,brandonwillard head_ref_force_pushed 2022-01-17 18:04:14,brandonwillard labeled 2022-01-17 23:38:47,brandonwillard labeled 2022-01-17 23:38:47,brandonwillard labeled 2022-03-19 21:33:38,brandonwillard labeled 2022-07-11 18:03:16,brandonwillard unlabeled 2022-07-11 18:03:31,brandonwillard head_ref_force_pushed 2022-07-23 21:05:44,brandonwillard head_ref_force_pushed 2022-08-02 17:49:55,brandonwillard head_ref_force_pushed 2022-08-03 18:50:12,brandonwillard head_ref_force_pushed 2022-08-29 20:05:51,brandonwillard closed 2022-09-26 19:57:01,brandonwillard head_ref_deleted 2023-01-28 20:29:07",Sayam753 brandonwillard,3,False
371,759,Add rewrites to remove unnecessary `expm1` operations,ricardoV94,"An alternative strategy would be to canonicalize all these `log*` and `exp*` Ops and let the `add_mul_canonizer` do it's thing with the `+1/-1`, after which a single `log(exp(x)) -> x` `exp(log(x)) -> switch(x>=0, x, np.nan)` might be able to cover all cases...

This would require at least, removing the `local_expm1` rewrite that is registered already during canonicalization, and perhaps delay some other rewrites that build (or build on top of) these `Ops`.",enhancement graph rewriting,brandonwillard,ricardoV94,2022-01-17 12:25:23,2022-03-13 16:34:39,aesara/tensor/math_opt.py tests/tensor/test_math_opt.py,0d5356838ee8503ece47bb28d7fa2b20689209aa 8262835f186528cd26f99f736016fc9f5250456a,"ricardoV94 head_ref_force_pushed 2022-01-17 12:50:40,ricardoV94 head_ref_force_pushed 2022-01-18 08:49:03,brandonwillard renamed 2022-01-19 00:45:39,brandonwillard labeled 2022-01-19 00:47:04,brandonwillard labeled 2022-01-19 00:47:04,ricardoV94 assigned 2022-01-19 00:47:11,ricardoV94 head_ref_force_pushed 2022-01-19 07:46:43,ricardoV94 head_ref_force_pushed 2022-02-20 08:07:38,ricardoV94 review_requested 2022-02-20 13:56:22,ricardoV94 head_ref_force_pushed 2022-02-20 17:40:13,ricardoV94 head_ref_force_pushed 2022-02-22 08:18:29,ricardoV94 head_ref_force_pushed 2022-03-13 14:57:10,ricardoV94 referenced 2022-03-13 16:34:39,ricardoV94 merged 2022-03-13 16:34:39,ricardoV94 closed 2022-03-13 16:34:39",codecov[bot] ricardoV94 brandonwillard,2,True
372,760,Add rewrite to merge consecutive `Join`ed `Subtensor`s,ricardoV94,"I was playing a bit with this kind of rewrites recently, which appeared for me when undoing `at.diff` operations which reduce the first axis index.

`concatenate(([x[:1], x[1:])) -> x`

I am not sure this is a useful rewrite to have in the codebase, let me know what you think.
If this is useful, it will probably still need a bit of cleanup, as I've never worked with SubTensors before.",enhancement graph rewriting,brandonwillard,ricardoV94,2022-01-17 16:37:51,2022-04-29 18:34:50,aesara/tensor/subtensor_opt.py tests/tensor/test_subtensor_opt.py,ccd8360df549be30803546b861a7b6fac193c26c,"ricardoV94 head_ref_force_pushed 2022-01-17 16:39:52,ricardoV94 head_ref_force_pushed 2022-01-17 17:36:23,ricardoV94 head_ref_force_pushed 2022-01-18 09:13:29,ricardoV94 head_ref_force_pushed 2022-01-18 09:16:28,brandonwillard renamed 2022-01-19 00:46:03,brandonwillard labeled 2022-01-19 00:46:45,brandonwillard labeled 2022-01-19 00:46:45,ricardoV94 assigned 2022-01-19 00:47:22,ricardoV94 head_ref_force_pushed 2022-01-19 07:58:25,ricardoV94 head_ref_force_pushed 2022-01-19 07:59:40,ricardoV94 head_ref_force_pushed 2022-01-19 08:47:36,ricardoV94 head_ref_force_pushed 2022-01-19 17:17:41,ricardoV94 head_ref_force_pushed 2022-02-20 08:09:26,ricardoV94 head_ref_force_pushed 2022-02-20 17:38:26,ricardoV94 review_requested 2022-02-20 17:39:29,ricardoV94 head_ref_force_pushed 2022-02-22 08:14:48,ricardoV94 review_requested 2022-02-22 08:17:51,ricardoV94 head_ref_force_pushed 2022-03-01 14:43:39,ricardoV94 review_dismissed 2022-04-28 06:21:20,ricardoV94 head_ref_force_pushed 2022-04-28 06:21:20,ricardoV94 review_requested 2022-04-28 06:22:30,ricardoV94 head_ref_force_pushed 2022-04-28 09:29:43,ricardoV94 review_requested 2022-04-28 09:30:34,ricardoV94 head_ref_force_pushed 2022-04-28 09:37:45,ricardoV94 head_ref_force_pushed 2022-04-29 06:58:31,brandonwillard referenced 2022-04-29 18:34:50,brandonwillard merged 2022-04-29 18:34:50,brandonwillard closed 2022-04-29 18:34:50",codecov[bot] ricardoV94 brandonwillard,35,True
373,761,Remove `PyPolyaGamma`,brandonwillard,"This PR removes `PyPolyaGamma`.  It's not a NumPy or SciPy supported distribution and it requires an external dependency, so it needs to be removed.",refactor random variables,,,2022-01-17 18:29:31,2022-01-17 19:58:53,requirements.txt environment.yml tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,21c060f6f8030707657693cbe619b957175df9a3 cde1d32cb91ed0c8a01748070a1c48e1df020106,"brandonwillard referenced 2022-01-17 19:58:53,brandonwillard merged 2022-01-17 19:58:53,brandonwillard closed 2022-01-17 19:58:53,brandonwillard head_ref_deleted 2022-01-17 19:58:56,brandonwillard labeled 2022-01-17 19:59:23,brandonwillard labeled 2022-01-17 19:59:23",codecov[bot] brandonwillard,1,True
374,762,Fix bad Windows free in `dimshuffle.c`,brandonwillard,"This PR closes #707.

It looks like the `PyDimMem_FREE` macro can have two different behaviors, and one of them doesn't match the explicit use of `malloc`.  The changes here make the allocation and deallocation approaches match.",bug important C-backend Windows,twiecki,brandonwillard,2022-01-17 23:21:55,2022-01-18 05:21:02,aesara/tensor/c_code/dimshuffle.c,73f332e9c4c2e3b9839117e986a38aad28ab5cd6,"brandonwillard labeled 2022-01-17 23:26:05,brandonwillard labeled 2022-01-17 23:26:05,brandonwillard assigned 2022-01-17 23:26:07,brandonwillard renamed 2022-01-17 23:27:15,brandonwillard labeled 2022-01-17 23:33:21,brandonwillard referenced 2022-01-18 05:21:01,brandonwillard merged 2022-01-18 05:21:01,brandonwillard closed 2022-01-18 05:21:02,brandonwillard head_ref_deleted 2022-01-18 05:21:05,brandonwillard labeled 2022-01-18 05:21:20",codecov[bot] twiecki brandonwillard,5,True
375,763,Reintroduce deprecated `broadcastable` keyword arguments,brandonwillard,"This PR reintroduces the `broadcastable` keyword argument&mdash;with a warning&mdash;to `TensorType.[__init__, clone]` and the shared variable constructor.  This keyword should account for most backward compatibility issues in external libraries.",important,,brandonwillard,2022-01-18 00:06:29,2022-01-18 01:51:20,aesara/tensor/type.py aesara/tensor/sharedvar.py tests/tensor/test_type.py tests/tensor/test_sharedvar.py,873640025e5b4522711dea5df5130c85f5001330,"brandonwillard assigned 2022-01-18 00:06:39,brandonwillard labeled 2022-01-18 00:07:03,brandonwillard referenced 2022-01-18 01:51:20,brandonwillard merged 2022-01-18 01:51:20,brandonwillard closed 2022-01-18 01:51:20,brandonwillard head_ref_deleted 2022-01-18 01:51:24",codecov[bot] brandonwillard,1,True
376,766,Make `Sparse` tensor `Type`s extend `TensorType`,aerubanov,"This pull request is a continuation of the work in PR #303 on refactors the sparse tensor type structure so that sparse types extend the existing tensor types.

Closes #142.",enhancement important refactor sparse tensors,kc611 brandonwillard,,2022-01-19 12:32:45,2022-03-16 01:26:11,aesara/sparse/sharedvar.py doc/extending/other_ops.rst aesara/tensor/shape.py aesara/tensor/var.py aesara/tensor/type.py tests/sparse/test_basic.py aesara/misc/may_share_memory.py tests/tensor/test_var.py aesara/tensor/math.py tests/sparse/test_type.py aesara/tensor/basic_opt.py aesara/link/c/type.py tests/typed_list/test_basic.py aesara/__init__.py aesara/sparse/__init__.py aesara/tensor/blas.py aesara/sparse/type.py aesara/sparse/opt.py tests/compile/function/test_pfunc.py tests/test_ifelse.py aesara/tensor/basic.py aesara/sparse/sandbox/sp2.py tests/sparse/test_var.py aesara/sparse/basic.py,8eaeee3dd84775abda45976c61ad8fcd527ea3a3 0d3e0cba67a6cc815e528c9260de35ebf76f79c5 d7179fc5e028cb4daf5cf1f1babb568687fc0010,"brandonwillard convert_to_draft 2022-01-19 18:43:03,brandonwillard labeled 2022-01-19 18:43:14,brandonwillard labeled 2022-01-19 18:43:14,brandonwillard renamed 2022-01-19 18:44:00,aerubanov head_ref_force_pushed 2022-01-21 12:26:14,aerubanov head_ref_force_pushed 2022-01-21 15:43:15,aerubanov head_ref_force_pushed 2022-01-21 20:10:44,aerubanov head_ref_force_pushed 2022-01-24 14:09:00,brandonwillard labeled 2022-01-24 20:44:49,brandonwillard labeled 2022-01-24 20:44:53,brandonwillard mentioned 2022-01-25 09:23:06,brandonwillard subscribed 2022-01-25 09:23:06,brandonwillard mentioned 2022-01-26 19:32:59,brandonwillard subscribed 2022-01-26 19:32:59,aerubanov head_ref_force_pushed 2022-01-27 13:12:30,brandonwillard mentioned 2022-02-01 19:56:17,brandonwillard subscribed 2022-02-01 19:56:17,aerubanov head_ref_force_pushed 2022-02-07 15:31:40,brandonwillard mentioned 2022-02-08 11:27:35,brandonwillard subscribed 2022-02-08 11:27:35,brandonwillard mentioned 2022-02-08 19:41:00,brandonwillard subscribed 2022-02-08 19:41:00,brandonwillard mentioned 2022-02-13 08:17:18,brandonwillard subscribed 2022-02-13 08:17:18,aerubanov ready_for_review 2022-02-23 12:12:46,aerubanov review_requested 2022-02-23 12:12:53,brandonwillard head_ref_force_pushed 2022-02-27 00:34:58,brandonwillard head_ref_force_pushed 2022-02-27 01:25:50,brandonwillard head_ref_force_pushed 2022-02-27 01:51:37,brandonwillard review_requested 2022-02-27 03:40:20,brandonwillard review_requested 2022-02-27 03:40:20,aerubanov review_dismissed 2022-03-11 15:36:53,aerubanov review_dismissed 2022-03-11 15:36:53,aerubanov head_ref_force_pushed 2022-03-11 15:36:53,aerubanov head_ref_force_pushed 2022-03-13 08:43:35,aerubanov head_ref_force_pushed 2022-03-14 10:37:06,brandonwillard mentioned 2022-03-14 12:26:36,brandonwillard subscribed 2022-03-14 12:26:36,aerubanov review_requested 2022-03-14 12:26:42,brandonwillard head_ref_force_pushed 2022-03-15 20:54:57,brandonwillard head_ref_force_pushed 2022-03-15 22:33:29,brandonwillard head_ref_force_pushed 2022-03-15 22:41:57,brandonwillard referenced 2022-03-16 01:26:10,brandonwillard merged 2022-03-16 01:26:10,brandonwillard closed 2022-03-16 01:26:11,brandonwillard mentioned 2022-03-16 13:41:16,brandonwillard subscribed 2022-03-16 13:41:16,aerubanov head_ref_deleted 2022-03-16 13:41:24,aerubanov mentioned 2022-03-16 14:48:06,aerubanov subscribed 2022-03-16 14:48:06",codecov[bot] aerubanov kc611 brandonwillard,22,True
377,767,Fix bug in `local_elemwise_alloc` and add tests,ricardoV94,"Rewrite would return a new graph identical to itself, resulting in an endless rewrite cycle

```python
import aesara
import aesara.tensor as at

x = at.matrix(""x"")
y = at.matrix(""y"")
z = at.mul(at.alloc(x, 1, 5), y)

with aesara.config.change_flags(optimizer_verbose=True):
    f = aesara.function([x, y], z, mode=""FAST_RUN"")
```
```
optimizer: rewrite local_elemwise_alloc replaces Elemwise{mul,no_inplace}.0 with Elemwise{mul,no_inplace}.0
optimizer: rewrite local_elemwise_alloc replaces Elemwise{mul,no_inplace}.0 with Elemwise{mul,no_inplace}.0
optimizer: rewrite local_elemwise_alloc replaces Elemwise{mul,no_inplace}.0 with Elemwise{mul,no_inplace}.0
optimizer: rewrite local_elemwise_alloc replaces Elemwise{mul,no_inplace}.0 with Elemwise{mul,no_inplace}.0
optimizer: rewrite local_elemwise_alloc replaces Elemwise{mul,no_inplace}.0 with Elemwise{mul,no_inplace}.0
optimizer: rewrite local_elemwise_alloc replaces Elemwise{mul,no_inplace}.0 with Elemwise{mul,no_inplace}.0
optimizer: rewrite local_elemwise_alloc replaces Elemwise{mul,no_inplace}.0 with Elemwise{mul,no_inplace}.0
optimizer: rewrite local_elemwise_alloc replaces Elemwise{mul,no_inplace}.0 with Elemwise{mul,no_inplace}.0
...
```

~There are still flaws in the rewrite logic, as indicated by the new triggered assertion~

First showed up in https://github.com/pymc-devs/pymc/pull/5369

TODO:
- [x] Rewrite docstrings to make clear what is going on in this rewrite
- [ ] Make sure tests cover all rewrite cases
- [ ] Consider removing the special `Dimshuffle` of `Alloc` logic",bug important,brandonwillard,ricardoV94,2022-01-19 14:02:43,2022-01-20 03:46:51,tests/tensor/test_subtensor_opt.py tests/tensor/test_basic_opt.py aesara/tensor/basic_opt.py,7e3792c08822650d9f9088938dd38e82ffc63c55 faa1fc183ad0e1f13c9598acbe7a230dbdac1e93,"twiecki review_requested 2022-01-19 16:01:24,ricardoV94 convert_to_draft 2022-01-19 16:22:21,ricardoV94 head_ref_force_pushed 2022-01-19 16:48:30,ricardoV94 head_ref_force_pushed 2022-01-19 18:54:49,ricardoV94 ready_for_review 2022-01-19 18:54:55,ricardoV94 assigned 2022-01-19 19:03:23,brandonwillard labeled 2022-01-19 19:03:34,brandonwillard labeled 2022-01-19 19:03:34,ricardoV94 head_ref_force_pushed 2022-01-19 19:04:42,ricardoV94 head_ref_force_pushed 2022-01-19 19:19:54,ricardoV94 head_ref_force_pushed 2022-01-19 19:24:41,ricardoV94 convert_to_draft 2022-01-19 20:14:13,ricardoV94 head_ref_force_pushed 2022-01-19 20:54:58,ricardoV94 head_ref_force_pushed 2022-01-19 21:02:05,brandonwillard head_ref_force_pushed 2022-01-20 01:35:37,brandonwillard ready_for_review 2022-01-20 01:35:57,brandonwillard review_dismissed 2022-01-20 01:46:53,brandonwillard head_ref_force_pushed 2022-01-20 02:13:56,brandonwillard referenced 2022-01-20 03:46:51,brandonwillard merged 2022-01-20 03:46:51,brandonwillard closed 2022-01-20 03:46:51,ricardoV94 head_ref_deleted 2022-07-17 13:18:45",codecov[bot] ricardoV94 twiecki brandonwillard,27,True
378,769,Add a Numba implementation for the `BroadcastTo` `Op`,kc611,Resolves #472,enhancement Numba,,kc611,2022-01-19 16:56:15,2022-01-20 03:57:22,aesara/link/numba/dispatch/extra_ops.py tests/link/test_numba.py tests/tensor/test_subtensor_opt.py aesara/tensor/basic_opt.py tests/tensor/test_basic_opt.py,2eb57ab74366e9e59dc8a720c70c474ba65eea0b cafe2770b57eb99b8fc7a8de3b2e029eae4527aa,"brandonwillard labeled 2022-01-19 18:41:19,brandonwillard labeled 2022-01-19 18:41:19,kc611 assigned 2022-01-19 18:41:27,brandonwillard renamed 2022-01-19 18:42:21,kc611 referenced 2022-01-20 03:57:22,kc611 merged 2022-01-20 03:57:22,kc611 closed 2022-01-20 03:57:22",codecov[bot] kc611 brandonwillard,1,True
379,774,Clean up `Scan`'s Cython implementation,brandonwillard,"This PR moves all of the non-native Python, non-NumPy objects out of `Scan`'s Cython implementation so that it has fewer interactions with Python and can&mdash;potentially&mdash;be turned into a pure C function (i.e. `cdef`) without too much effort.

Currently, the only function argument that isn't a native or NumPy object is the thunk for the inner-function.  When the thunk is a `CThunk`, we can obtain a `Capsule` object that I believe Cython `cdef` functions can use directly; however, that has not been implemented in this PR.


Aside from these simple refactorings, both the Python and Cython implementations have been changed so that they use `np.empty` to allocate memory.  That should provide a small improvement over the current use of `np.zeros`.",enhancement refactor Scan,,brandonwillard,2022-01-21 03:26:43,2022-01-23 02:24:21,aesara/scan/utils.py aesara/scan/scan_perform_ext.py aesara/scan/op.py aesara/scan/basic.py aesara/compile/__init__.py aesara/compile/function/pfunc.py aesara/compile/profiling.py aesara/scan/scan_perform.pyx aesara/scan/c_code/scan_perform.c tests/scan/test_basic.py,28110fd2843a22278a023505e3c517f1f322a6c1 aabec6329a1ce2522f8612b4fb24bc0314f890d4 25fa9e69cefe8c9fabd4bf5f8a8dbdc0b54ff6ac a46b9e38a62e38af945dd36f87e6f2004986407e 0b80779900e5302a3deb87cb06323fe18129df6d ede69aa7ace22c8126354730d48c0131f7b1222f f42a220b52a46b5c09cda19d64404a33d13ea8aa fea7597405601692957a89bcf532da86871573d1 7f0b59f52e7c5e845c864c76b6f70bd79cb470e7,"brandonwillard head_ref_force_pushed 2022-01-21 03:51:44,brandonwillard head_ref_force_pushed 2022-01-21 03:52:25,brandonwillard assigned 2022-01-21 03:55:16,brandonwillard labeled 2022-01-21 03:55:29,brandonwillard labeled 2022-01-21 03:55:29,brandonwillard labeled 2022-01-21 03:55:29,brandonwillard head_ref_force_pushed 2022-01-21 04:03:20,brandonwillard head_ref_force_pushed 2022-01-21 04:09:35,brandonwillard head_ref_force_pushed 2022-01-21 18:54:32,brandonwillard head_ref_force_pushed 2022-01-21 21:27:58,brandonwillard head_ref_force_pushed 2022-01-21 22:59:03,brandonwillard head_ref_force_pushed 2022-01-21 23:13:50,brandonwillard connected 2022-01-21 23:20:20,brandonwillard head_ref_force_pushed 2022-01-22 01:39:26,brandonwillard head_ref_force_pushed 2022-01-22 02:29:18,brandonwillard head_ref_force_pushed 2022-01-23 00:59:12,brandonwillard referenced 2022-01-23 02:24:21,brandonwillard merged 2022-01-23 02:24:21,brandonwillard closed 2022-01-23 02:24:21,brandonwillard head_ref_deleted 2022-01-23 02:24:24",codecov[bot] zoj613 brandonwillard,3,True
380,779,"Added `Op`s for `np.linspace`, `np.logspace`, and `np.geomspace`",kc611,"Resolves #768

Adds `Op` counterparts for the following numpy functions:
- `np.linspace`
- `np.logspace`
- `np.geomspace`",enhancement NumPy compatibility,ricardoV94 brandonwillard,,2022-01-22 11:36:31,2022-03-18 19:42:28,aesara/link/utils.py aesara/link/numba/dispatch/elemwise.py tests/tensor/test_extra_ops.py tests/link/test_numba.py aesara/link/numba/dispatch/basic.py aesara/tensor/extra_ops.py aesara/link/numba/dispatch/scalar.py aesara/tensor/__init__.py,be4bc62084e49628894aea76e913e6876fce3afe c95372b064a9cf4377c2100845d91c9ce1734c3b,"kc611 convert_to_draft 2022-01-22 12:24:17,kc611 head_ref_force_pushed 2022-01-22 16:33:11,brandonwillard labeled 2022-01-26 18:49:35,brandonwillard labeled 2022-01-26 18:49:35,brandonwillard labeled 2022-01-26 18:49:35,brandonwillard renamed 2022-01-26 18:50:02,kc611 head_ref_force_pushed 2022-02-23 17:34:00,kc611 head_ref_force_pushed 2022-03-08 15:27:52,kc611 head_ref_force_pushed 2022-03-08 17:23:31,kc611 ready_for_review 2022-03-08 17:23:42,kc611 review_requested 2022-03-08 17:23:59,kc611 review_requested 2022-03-08 17:23:59,kc611 review_dismissed 2022-03-17 17:29:05,kc611 head_ref_force_pushed 2022-03-17 17:29:05,brandonwillard referenced 2022-03-18 19:42:28,brandonwillard merged 2022-03-18 19:42:28,brandonwillard closed 2022-03-18 19:42:28",codecov[bot] ricardoV94 kc611 brandonwillard,19,True
381,781,Remove broken logger warning,brandonwillard,This PR removes a broken warning and old style logger from `aesara.tensor.math_opt`.,bug refactor,ricardoV94,,2022-01-23 18:18:51,2022-01-23 21:18:18,aesara/tensor/math_opt.py tests/tensor/test_math_opt.py,fb90f87bb86ae38f4ecdca1d824d40cfd7452afe ebb125b13936a42e9598bbc05c5c20a997ba02fd,"brandonwillard labeled 2022-01-23 18:21:39,brandonwillard labeled 2022-01-23 18:21:39,brandonwillard milestoned 2022-01-23 18:21:42,brandonwillard connected 2022-01-23 18:21:52,brandonwillard review_dismissed 2022-01-23 19:14:02,brandonwillard head_ref_force_pushed 2022-01-23 19:14:02,brandonwillard referenced 2022-01-23 21:18:18,brandonwillard merged 2022-01-23 21:18:18,brandonwillard closed 2022-01-23 21:18:18,brandonwillard head_ref_deleted 2022-01-23 21:18:24",codecov[bot] ricardoV94 brandonwillard,1,True
382,783,Update the high-level API documentation,rlouf,"This PR makes a few small changes to the index page of the API documentation:

- Document the fact that `scan` and `dprint` are available in the `aesara` namespace
- Remove reference to the deprecated `aesara.dot`
- Divide the page into sections",documentation,,rlouf,2022-01-24 09:52:51,2022-01-24 17:25:10,doc/library/index.rst,ed7b7ed6e84f3e03284e3db556a41c3cf4979029 f7fde0ca9b92395884c4cd0ce7d3b8799aecbaa8 24abc04dc51c6518f71b5bc53b402677c165c061 af89d3e1f91cd47cc53e911a0567e01d4a411f4f,"rlouf labeled 2022-01-24 09:52:51,rlouf assigned 2022-01-24 09:52:52,brandonwillard referenced 2022-01-24 17:25:10,brandonwillard merged 2022-01-24 17:25:10,brandonwillard closed 2022-01-24 17:25:10,rlouf head_ref_deleted 2022-01-24 17:34:04",rlouf brandonwillard,0,True
383,787,Fixed behaviour of at.subtensor.take when axis is None,kc611,A fix for #786,bug,,,2022-01-24 15:22:08,2022-01-24 20:39:56,aesara/tensor/subtensor.py tests/tensor/test_subtensor.py,24d88b5d2d32716189db9fe06d5c5771334c23c2,"kc611 review_requested 2022-01-24 15:23:52,brandonwillard labeled 2022-01-24 20:34:16,brandonwillard connected 2022-01-24 20:34:24,brandonwillard referenced 2022-01-24 20:39:56,brandonwillard merged 2022-01-24 20:39:56,brandonwillard closed 2022-01-24 20:39:56",codecov[bot] kc611 brandonwillard,1,True
384,789,Add NumPy RNG constructor `Op`s,kc611,"Resolves #739 

Adds `RandomStateMakerOp` and `DefaultGeneratorMakerOp` as constructor `Op`s for `RandomType` `Variable`s",enhancement important random variables NumPy compatibility,brandonwillard,kc611,2022-01-24 17:27:24,2022-01-30 21:30:58,aesara/tensor/random/__init__.py aesara/tensor/random/op.py tests/tensor/random/test_op.py,b0cddce193b5bc21db6b0fdb85741448096be8a2,"brandonwillard labeled 2022-01-24 20:12:37,brandonwillard labeled 2022-01-24 20:12:37,brandonwillard labeled 2022-01-24 20:32:18,brandonwillard labeled 2022-01-24 20:32:22,brandonwillard renamed 2022-01-24 20:33:04,brandonwillard labeled 2022-01-24 20:33:25,brandonwillard renamed 2022-01-24 20:34:06,kc611 head_ref_force_pushed 2022-01-30 16:59:14,brandonwillard referenced 2022-01-30 21:30:58,brandonwillard merged 2022-01-30 21:30:58,brandonwillard closed 2022-01-30 21:30:58,kc611 assigned 2022-01-30 21:31:18",codecov[bot] kc611 brandonwillard,10,True
385,792,"Introduce ""uncomputed"" inputs feature and update `Scan` to use it",brandonwillard,"This PR implements a sub-graph exclusion capability to the compilation/computation process.  In its current/initial form, `Op` has a new class attribute `Op.uncomputed_inputs` that allows an `Op` to specify&mdash;by index&mdash;any inputs that are not explicitly used as value inputs to its computation.

This is a feature through which we can include parts of an `Op`'s computational steps at the graph level.  `Op`s&mdash;like `Scan`&mdash;that perform computations using Aesara graphs of their own (i.e. ""inner-graphs"") can now optimize their inner-graphs alongside the graphs in which they're contained.  Doing so addresses most of the major issues described in #777 and opens us up to simpler implementations of&mdash;and more optimizations for&mdash;such `Op`s.

The main idea behind these changes and the `Op.uncomputed_inputs` feature is about making a distinction between the graph used for static analysis and the graph used for computation.  These changes essentially create two different graphs for each phase/purpose (i.e. the ""computation"" graph is a subset of the ""analysis"" graph).

While we could simply remove sub-graphs and produce distinct `FunctionGraph`s for each type of ""phase"" graph, the current design and implementation of our linking/compilation process makes that seem less straightforward than it probably should be, especially under the requirement that the ""analysis"" graph be fully available during the compilation phase.  More specifically, `Op`s like `Scan` need to use the uncomputed input graphs to generate functions/code/thunks for use in their `Op.perform` implementations.

That's why the current implementation of this feature effectively creates ""computational"" graphs within the relevant steps of each `Linker`.  At some point, the entire Linker process should be refactored so that these distinct graphs are much more explicit.


Some important changes:
  * When `Op.uncomputed_inputs` is set, the `storage_map` entries for those `Variable`s are empty (lists).
  * The input storage passed to each thunk (e.g. the `inputs` provided in `Op.perform` and the input symbol names provided in `COp.c_code`) do **not** contain the ""uncomputed"" inputs.
  * `Linker.schedule` must return a list of topologically ordered `Apply` nodes that does **not** contain the sub-graphs corresponding to the uncomputed inputs.  A class-level `Linker.toposort` is used by default and performs this filtering.  Custom `Linker._scheduler` implementations must implement this themselves.
    - [ ] Consider a not so wasteful way of implementing this _after_ calling `Linker._scheduler`

Things that still need to be done:
  - [ ] Make sure `MergeOptimizer`/`MergeFeature` will correctly handle uncomputed sub-graphs.
  - [ ] Consider the effect(s) of uncomputed sub-graphs on `DestroyHandler` and the in-placing process.
  - [x] Add `Scan`'s inner-graph as uncomputed (outer-)inputs.
    - Do we need to include the inner-inputs as uncomputed outer-inputs, or can we reasonably use `graph_inputs` on only the inner-outputs?
    - Will we still need to clone everything or can we use the output of `fn(*inner_inputs)` as the inner-outputs directly?",enhancement important refactor Scan,,brandonwillard,2022-01-26 05:55:44,2022-02-17 16:56:08,aesara/link/c/basic.py aesara/graph/features.py aesara/tensor/shape.py aesara/scan/basic.py tests/compile/test_builders.py tests/scan/test_opt.py aesara/gpuarray/opt_util.py tests/tensor/test_opt_uncanonicalize.py tests/tensor/test_elemwise.py aesara/link/numba/dispatch/scan.py tests/graph/utils.py aesara/link/vm.py tests/scalar/test_basic_sympy.py aesara/graph/opt.py tests/test_printing.py tests/scan/test_views.py tests/link/test_link.py aesara/graph/fg.py tests/scan/test_printing.py tests/link/c/test_basic.py aesara/tensor/basic_opt.py aesara/gpuarray/dnn_opt.py tests/scalar/test_basic.py tests/scalar/test_math.py tests/tensor/test_math.py aesara/gpuarray/opt.py tests/tensor/test_basic_opt.py tests/link/test_utils.py aesara/compile/function/types.py tests/link/test_vm.py aesara/link/utils.py aesara/link/basic.py aesara/scan/opt.py aesara/scan/op.py aesara/tensor/blas.py aesara/compile/debugmode.py aesara/d3viz/formatting.py aesara/printing.py tests/scan/test_utils.py tests/graph/test_features.py aesara/scalar/basic.py tests/scan/test_basic.py aesara/scan/utils.py aesara/compile/builders.py tests/graph/test_fg.py aesara/graph/basic.py tests/graph/test_basic.py aesara/graph/op.py doc/sandbox/interactive_debugger.rst tests/graph/test_opt.py,4fa91a3fa5a5e32f52f4cf15ea1f13b868f993ef 0f9f54f9474a4e3864b512f2786ce02c6396bd86 2cecf3d15aba31db6d485df3caabc4df663b8e23 628af3901f3215de357243a3d9a9f3edd0af7a41 7bb75233d31e54affec2ae30ca105c9ac16095be 6893f16ff42c0caeea642e17d494c55e7b6d6f3b 65cacb35c2dd28dc4a6563071e2149c482a6b56e 34eecbdc776c31bf1ae94ec0a03f862f04c19e29 bdb77ffe128c1304f969c2d627cf2d6ce076bd22 064760dde58fc0f1a0e7388a6a003bab98705ba4 42de87cd586913dec97d50a73c0ef5bc02de43d1 4901c7b38f0884e9c0a0a5d2d3a8e43a18344f5c ccdc40c7f2c84b35ec94aa72c4c44794efbbdc78 f79bc5d169c2aaede3d84e0817ea8e147e357c20 d731a90e2746f168ae92d6c66ada897bdfcee020 c5fa40d764a2085c0be659a2df0e7728279a06f8 25ca22f4b1b8dec1c21ca5acf12093b5925297fe 3467646651fdd28e47ad438c24c63a94a9bd11af ffe40530be156a77fa5b4ae058e349956652e24b 2b9c5bb6f42583bc999c756711f562cd2ee2b71a 19c0606ef847cb8a4a768c69c12e03042b5e13b8 e2d874a63d4d4f22ed6963c47e59a07d0405809e faf9643c63ff12d570b1a4576af1e402efa21861 99623cf202e35fa38cb5f1485256695e907fb09f 35290fefba21c2de10e4e7d7b8ce028054cfcd2d 1fa2b005c9380a4d3267d11cc0fef555101d1a54 8d09393e592496a33424939f16a54c1808c8f71d faf0d49276a87efc71c71a776a87ccff96e0b181 8db8ed1fdf5b07290325111c45104e6ec987d799 412422321d89291ad423a608e083385a93ba3348 51bdfe971889a8591b607743c15aac9b44a35219 4fc81f5ab03f96d64274b87f6c6eda398b907c73 48bbd00db4cb539758b2ff34ae553f853024719d 467b08347647a3d9b7c6a5fe9d9adb19e3fd1e87 ec4222115517de24d04ae3446f1db51ca085dade,"brandonwillard renamed 2022-01-26 05:56:13,brandonwillard assigned 2022-01-26 05:56:16,brandonwillard labeled 2022-01-26 05:56:33,brandonwillard labeled 2022-01-26 05:56:33,brandonwillard labeled 2022-01-26 05:56:33,brandonwillard labeled 2022-01-26 05:56:33,brandonwillard milestoned 2022-01-26 05:56:37,brandonwillard connected 2022-01-26 05:56:46,brandonwillard convert_to_draft 2022-01-26 05:56:50,brandonwillard head_ref_force_pushed 2022-01-26 05:57:30,brandonwillard head_ref_force_pushed 2022-01-26 06:31:05,brandonwillard head_ref_force_pushed 2022-01-26 17:09:41,brandonwillard review_requested 2022-01-26 18:37:40,brandonwillard review_requested 2022-01-26 18:37:40,brandonwillard head_ref_force_pushed 2022-01-26 20:20:29,brandonwillard head_ref_force_pushed 2022-01-26 23:15:15,brandonwillard head_ref_force_pushed 2022-01-26 23:18:12,brandonwillard head_ref_force_pushed 2022-01-26 23:18:38,brandonwillard head_ref_force_pushed 2022-01-27 23:42:46,brandonwillard head_ref_force_pushed 2022-01-28 21:51:53,brandonwillard head_ref_force_pushed 2022-01-29 00:31:55,brandonwillard head_ref_force_pushed 2022-01-29 00:41:43,brandonwillard head_ref_force_pushed 2022-01-29 01:22:15,brandonwillard head_ref_force_pushed 2022-01-29 01:45:05,brandonwillard head_ref_force_pushed 2022-01-29 02:07:34,brandonwillard head_ref_force_pushed 2022-01-29 06:45:21,brandonwillard head_ref_force_pushed 2022-01-29 07:19:38,brandonwillard head_ref_force_pushed 2022-01-29 07:36:20,brandonwillard head_ref_force_pushed 2022-01-30 01:17:14,brandonwillard head_ref_force_pushed 2022-01-30 02:26:28,brandonwillard head_ref_force_pushed 2022-01-30 21:28:21,brandonwillard head_ref_force_pushed 2022-02-01 00:10:12,brandonwillard head_ref_force_pushed 2022-02-01 00:38:17,brandonwillard head_ref_force_pushed 2022-02-03 00:27:53,brandonwillard head_ref_force_pushed 2022-02-03 01:46:01,brandonwillard head_ref_force_pushed 2022-02-03 06:16:22,brandonwillard head_ref_force_pushed 2022-02-03 06:19:04,brandonwillard head_ref_force_pushed 2022-02-03 17:50:14,brandonwillard head_ref_force_pushed 2022-02-03 19:13:39,brandonwillard head_ref_force_pushed 2022-02-04 00:26:24,brandonwillard head_ref_force_pushed 2022-02-04 00:36:47,brandonwillard head_ref_force_pushed 2022-02-05 03:15:39,brandonwillard head_ref_force_pushed 2022-02-06 00:31:44,brandonwillard head_ref_force_pushed 2022-02-07 18:23:47,brandonwillard head_ref_force_pushed 2022-02-07 22:59:18,brandonwillard head_ref_force_pushed 2022-02-08 17:34:30,brandonwillard head_ref_force_pushed 2022-02-12 04:37:31,brandonwillard head_ref_force_pushed 2022-02-12 04:49:01,brandonwillard closed 2022-02-17 16:56:08",codecov[bot] brandonwillard,1,False
386,795,"Implement `tril_indices`, `triu_indices`, `triu_indices_from` and `tril_indices_from`",zoj613,"closes #785 
",enhancement NumPy compatibility,ricardoV94 twiecki,,2022-01-27 16:03:04,2022-01-30 15:16:59,tests/tensor/test_basic.py aesara/tensor/basic.py,3ab35b6958024052e743871827f781afa8799be7 31c59744b72f0e43dc4c2780e03ed65ddcbb2b78 f2fc9638a862a07a5438b267d409dcbdcb8b0b02,"zoj613 review_requested 2022-01-27 16:03:12,zoj613 review_requested 2022-01-27 16:03:22,zoj613 renamed 2022-01-27 16:04:48,zoj613 labeled 2022-01-27 16:05:25,zoj613 labeled 2022-01-27 16:05:25,ricardoV94 mentioned 2022-01-27 16:32:25,ricardoV94 subscribed 2022-01-27 16:32:25,ricardoV94 mentioned 2022-01-27 19:57:05,ricardoV94 subscribed 2022-01-27 19:57:05,zoj613 renamed 2022-01-27 21:04:01,zoj613 head_ref_force_pushed 2022-01-27 21:15:39,ricardoV94 mentioned 2022-01-27 21:16:10,ricardoV94 subscribed 2022-01-27 21:16:10,zoj613 review_requested 2022-01-28 15:14:17,zoj613 head_ref_force_pushed 2022-01-29 10:11:43,zoj613 head_ref_force_pushed 2022-01-29 10:26:47,ricardoV94 referenced 2022-01-30 15:16:58,ricardoV94 merged 2022-01-30 15:16:59,ricardoV94 closed 2022-01-30 15:16:59",codecov[bot] ricardoV94 zoj613 twiecki,13,True
387,799,Enabled type checking as described by PEP 561,michaelosthege,"[PEP 561](https://www.python.org/dev/peps/pep-0561/) describes how packages can tell tools such as `mypy` that they support typechecking.
Essentially there are three options:
* Separately released ""stub packages""
* `.pyi` files with stub definitions
* inline type hints and a `py.typed` file

In Aesara there are already plenty of inline type hints, but it does not yet implement PEP 561.

One can already run `mypy --ignore-missing-import -p aesara`, but running type checks on a higher-level package (e.g. `mypy -p pymc`) does not take the type hints from Aesara into account.

<details><summary>Current mypy results for Aesara.</summary>

```
aesara\\configparser.py:28: error: Incompatible types in assignment (expression has type ""classmethod[Any]"", variable has type ""Callable[[AesaraConfigWarning, Any, Any], Any]"")
aesara\\graph\\optdb.py:71: error: Item ""GlobalOptimizer"" of ""Union[OptimizationDatabase, Union[GlobalOptimizer, LocalOptimizer]]"" has no attribute ""name""
aesara\\graph\\optdb.py:71: error: Item ""LocalOptimizer"" of ""Union[OptimizationDatabase, Union[GlobalOptimizer, LocalOptimizer]]"" has no attribute ""name""
aesara\\graph\\optdb.py:74: error: Item ""GlobalOptimizer"" of ""Union[OptimizationDatabase, Union[GlobalOptimizer, LocalOptimizer]]"" has no attribute ""name""
aesara\\graph\\optdb.py:74: error: Item ""LocalOptimizer"" of ""Union[OptimizationDatabase, Union[GlobalOptimizer, LocalOptimizer]]"" has no attribute ""name""
aesara\\graph\\optdb.py:76: error: Item ""GlobalOptimizer"" of ""Union[OptimizationDatabase, Union[GlobalOptimizer, LocalOptimizer]]"" has no attribute ""name""
aesara\\graph\\optdb.py:76: error: Item ""LocalOptimizer"" of ""Union[OptimizationDatabase, Union[GlobalOptimizer, LocalOptimizer]]"" has no attribute ""name""
aesara\\graph\\optdb.py:390: error: Signature of ""register"" incompatible with supertype ""OptimizationDatabase""
aesara\\graph\\optdb.py:390: note:      Superclass:
aesara\\graph\\optdb.py:390: note:          def register(self, name: str, optimizer: Union[OptimizationDatabase, Union[GlobalOptimizer, LocalOptimizer]], *tags: str, use_db_name_as_tag: Any = ...) -> Any
aesara\\graph\\optdb.py:390: note:      Subclass:
aesara\\graph\\optdb.py:390: note:          def register(self, name: Any, obj: Any, position: Union[str, int, float], *tags: Any, **kwargs: Any) -> Any
aesara\\graph\\optdb.py:435: error: ""GlobalOptimizer"" object is not iterable
aesara\\graph\\optdb.py:435: error: ""LocalOptimizer"" object is not iterable
aesara\\graph\\optdb.py:452: error: ""SeqOptimizer"" has no attribute ""name""
aesara\\graph\\basic.py:659: error: Missing return statement
aesara\\graph\\basic.py:713: error: Argument 1 to ""add"" of ""set"" has incompatible type ""Hashable""; expected ""T""
aesara\\graph\\basic.py:718: error: Incompatible types in ""yield"" (actual type ""Tuple[T, Optional[Sequence[T]]]"", expected type ""T"")
aesara\\graph\\basic.py:955: error: Argument 1 to ""setdefault"" of ""dict"" has incompatible type ""Apply""; expected ""Variable""
aesara\\graph\\basic.py:1085: error: ""list"" expects 1 type argument, but 2 given
aesara\\graph\\basic.py:1086: error: Argument 2 to ""walk"" has incompatible type ""Optional[Callable[[T], Union[OrderedSet, List[T]]]]""; expected ""Callable[[T], Optional[Sequence[T]]]""
aesara\\graph\\basic.py:1086: error: Argument 2 to ""walk"" has incompatible type ""Optional[Callable[[T], Union[OrderedSet, List[T]]]]""; expected ""Callable[[Any], Optional[Sequence[Any]]]""
aesara\\graph\\basic.py:1106: error: Name ""node"" already defined on line 1092
aesara\\graph\\basic.py:1352: error: Name ""multi"" already defined on line 1335
aesara\\graph\\basic.py:1685: error: Incompatible types in assignment (expression has type ""Tuple[Variable]"", variable has type ""Tuple[]"")
aesara\\graph\\basic.py:1687: error: Incompatible return value type (got ""Tuple[]"", expected ""Tuple[Variable]"")
aesara\\link\\c\\interface.py:234: error: Incompatible return value type (got ""Union[Tuple[int], Tuple[Any, ...]]"", expected ""Tuple[int]"")
aesara\\graph\\type.py:136: error: Variable ""aesara.graph.type.Type.Variable"" is not valid as a type
aesara\\graph\\type.py:136: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
aesara\\graph\\type.py:137: error: Variable ""aesara.graph.type.Type.Variable"" is not valid as a type
aesara\\graph\\type.py:137: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
aesara\\graph\\type.py:160: error: Variable ""aesara.graph.type.Type.Variable"" is not valid as a type
aesara\\graph\\type.py:160: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
aesara\\graph\\type.py:170: error: Variable? has no attribute ""type""
aesara\\graph\\type.py:194: error: Variable ""aesara.graph.type.Type.Variable"" is not valid as a type
aesara\\graph\\type.py:194: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
aesara\\graph\\type.py:205: error: Variable ""aesara.graph.type.Type.Constant"" is not valid as a type
aesara\\graph\\type.py:205: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
aesara\\graph\\type.py:222: error: Variable ""aesara.graph.type.Type.Variable"" is not valid as a type
aesara\\graph\\type.py:222: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
aesara\\graph\\fg.py:126: error: Value of type ""Optional[Dict[Variable, Variable]]"" is not indexable
aesara\\graph\\fg.py:127: error: Value of type ""Optional[Dict[Variable, Variable]]"" is not indexable
aesara\\graph\\fg.py:130: error: Need type annotation for ""execute_callbacks_times"" (hint: ""execute_callbacks_times: Dict[<type>, <type>] = ..."")
aesara\\graph\\fg.py:135: error: Need type annotation for ""_features"" (hint: ""_features: List[<type>] = ..."")
aesara\\graph\\fg.py:139: error: Need type annotation for ""apply_nodes"" (hint: ""apply_nodes: Set[<type>] = ..."")
aesara\\graph\\fg.py:144: error: Need type annotation for ""variables"" (hint: ""variables: Set[<type>] = ..."")
aesara\\graph\\fg.py:146: error: Need type annotation for ""inputs"" (hint: ""inputs: List[<type>] = ..."")
aesara\\graph\\fg.py:148: error: Need type annotation for ""clients"" (hint: ""clients: Dict[<type>, <type>] = ..."")
aesara\\graph\\fg.py:230: error: Incompatible types in assignment (expression has type ""None"", variable has type ""List[Any]"")
aesara\\graph\\fg.py:231: error: Incompatible types in assignment (expression has type ""None"", variable has type ""List[Variable]"")
aesara\\graph\\fg.py:381: error: Argument 1 to ""io_toposort"" has incompatible type ""Set[Any]""; expected ""List[Variable]""
aesara\\graph\\fg.py:467: error: Item ""str"" of ""Union[Apply, str]"" has no attribute ""inputs""
aesara\\graph\\fg.py:473: error: Item ""str"" of ""Union[Apply, str]"" has no attribute ""inputs""
aesara\\graph\\fg.py:479: error: Argument 2 to ""add_client"" of ""FunctionGraph"" has incompatible type ""Tuple[Union[Apply, str], int]""; expected ""Tuple[Apply, int]""
aesara\\graph\\fg.py:480: error: Argument 2 to ""remove_client"" of ""FunctionGraph"" has incompatible type ""Tuple[Union[Apply, str], int]""; expected ""Tuple[Apply, int]""
aesara\\graph\\fg.py:620: error: Incompatible types in assignment (expression has type ""float"", variable has type ""int"")
aesara\\graph\\fg.py:705: error: Need type annotation for ""ords""
aesara\\graph\\fg.py:731: error: Incompatible types in assignment (expression has type ""Set[Variable]"", variable has type ""Set[Apply]"")
aesara\\graph\\fg.py:766: error: Value of type ""Union[FunctionGraph, Dict[Variable, Variable]]"" is not indexable
aesara\\graph\\fg.py:766: error: Incompatible return value type (got ""Union[Any, Variable]"", expected ""FunctionGraph"")
aesara\\graph\\fg.py:766: error: Invalid index type ""int"" for ""Union[FunctionGraph, Dict[Variable, Variable]]""; expected type ""Variable""
aesara\\graph\\fg.py:802: error: Incompatible return value type (got ""Tuple[FunctionGraph, Any]"", expected ""Union[FunctionGraph, Dict[Variable, Variable]]"")
aesara\\tensor\\type.py:20: error: Cannot determine type of ""complex_types""
aesara\\tensor\\type.py:21: error: Cannot determine type of ""continuous_types""
aesara\\tensor\\type.py:22: error: Cannot determine type of ""float_types""
aesara\\tensor\\type.py:23: error: Cannot determine type of ""integer_types""
aesara\\tensor\\type.py:24: error: Cannot determine type of ""discrete_types""
aesara\\tensor\\type.py:25: error: Cannot determine type of ""all_types""
aesara\\tensor\\type.py:26: error: Cannot determine type of ""int_types""
aesara\\tensor\\type.py:27: error: Cannot determine type of ""uint_types""
aesara\\tensor\\type.py:103: error: Item ""None"" of ""Optional[Iterable[Union[bool, int, None]]]"" has no attribute ""__iter__"" (not iterable)
aesara\\graph\\opt_utils.py:220: error: ""Apply"" has no attribute ""owner""
aesara\\gpuarray\\cudnn_defs.py:306: error: Incompatible types in assignment (expression has type ""Tuple[str, str, str, str]"", base class ""CuDNNV51"" defined the type as ""Tuple[str, str, str]"")
aesara\\graph\\op.py:222: error: ""Op"" has no attribute ""itypes""
aesara\\graph\\op.py:224: error: ""Op"" has no attribute ""itypes""
aesara\\graph\\op.py:226: error: ""Op"" has no attribute ""itypes""
aesara\\graph\\op.py:232: error: ""Op"" has no attribute ""itypes""
aesara\\graph\\op.py:238: error: ""Op"" has no attribute ""otypes""
aesara\\graph\\op.py:448: error: ""Op"" has no attribute ""params_type""
aesara\\graph\\op.py:449: error: ""Op"" has no attribute ""params_type""
aesara\\graph\\op.py:459: error: ""Op"" has no attribute ""params_type""
aesara\\graph\\op.py:516: error: All conditional function variants must have identical signatures
aesara\\graph\\op.py:528: error: ""Callable[[Any, Any, Any, Any], Any]"" has no attribute ""inputs""
aesara\\graph\\op.py:529: error: ""Callable[[Any, Any, Any, Any], Any]"" has no attribute ""outputs""
aesara\\graph\\op.py:530: error: ""Callable[[Any, Any, Any, Any], Any]"" has no attribute ""perform""
aesara\\graph\\op.py:531: error: ""Callable[[Any, Any, Any, Any], Any]"" has no attribute ""lazy""
aesara\\graph\\op.py:635: error: Unsupported right operand type for in (""bool"")
aesara\\graph\\op.py:666: error: ""Callable[[], Any]"" has no attribute ""thunk""
aesara\\graph\\op.py:667: error: ""Callable[[], Any]"" has no attribute ""cthunk""
aesara\\graph\\op.py:668: error: ""Callable[[], Any]"" has no attribute ""inputs""
aesara\\graph\\op.py:669: error: ""Callable[[], Any]"" has no attribute ""outputs""
aesara\\graph\\op.py:670: error: ""Callable[[], Any]"" has no attribute ""lazy""
aesara\\graph\\op.py:671: error: Incompatible return value type (got ""Callable[[], Any]"", expected ""Callable[[Callable[[Apply, List[Any], List[Optional[List[Any]]], Optional[Tuple[Any]]], None], List[Optional[List[Any]]], List[bool], Apply], Any]"")
aesara\\graph\\op.py:1091: error: ""ExternalCOp"" has no attribute ""params_type""
aesara\\graph\\op.py:1092: error: ""ExternalCOp"" has no attribute ""params_type""
aesara\\graph\\op.py:1108: error: Incompatible return value type (got ""List[<nothing>]"", expected ""Union[List[str], List[Tuple[str, Any]]]"")
aesara\\graph\\op.py:1229: error: Unpacking a string is disallowed
aesara\\link\\c\\cmodule.py:1759: error: ""Callable[[], Any]"" has no attribute ""data""
aesara\\link\\c\\cmodule.py:1797: error: ""Callable[[], Any]"" has no attribute ""is_llvm""
aesara\\graph\\opt.py:1373: error: Need type annotation for ""time_opts"" (hint: ""time_opts: Dict[<type>, <type>] = ..."")
aesara\\graph\\opt.py:1374: error: Need type annotation for ""process_count"" (hint: ""process_count: Dict[<type>, <type>] = ..."")
aesara\\graph\\opt.py:1375: error: Need type annotation for ""applied_true"" (hint: ""applied_true: Dict[<type>, <type>] = ..."")
aesara\\graph\\opt.py:1376: error: Need type annotation for ""node_created"" (hint: ""node_created: Dict[<type>, <type>] = ..."")
aesara\\tensor\\blas_headers.py:153: error: ""Callable[[], Any]"" has no attribute ""tested""
aesara\\tensor\\blas_headers.py:154: error: ""Callable[[], Any]"" has no attribute ""present""
aesara\\tensor\\blas_headers.py:155: error: ""Callable[[], Any]"" has no attribute ""fix_works""
aesara\\tensor\\nnet\\conv3d2d.py:318: error: Cannot determine type of ""optdb""
aesara\\raise_op.py:64: error: Signature of ""make_node"" incompatible with supertype ""Op""
aesara\\raise_op.py:64: note:      Superclass:
aesara\\raise_op.py:64: note:          def make_node(self, *inputs: Variable) -> Apply
aesara\\raise_op.py:64: note:      Subclass:
aesara\\raise_op.py:64: note:          def make_node(self, value: Variable, *conds: Tuple[Variable]) -> Any
aesara\\raise_op.py:80: error: Incompatible types in assignment (expression has type ""List[Variable]"", variable has type ""Tuple[Tuple[Variable], ...]"")
aesara\\raise_op.py:82: error: ""Tuple[Variable]"" has no attribute ""type""
aesara\\raise_op.py:86: error: Unsupported operand types for + (""List[Variable]"" and ""Tuple[Tuple[Variable], ...]"")
aesara\\tensor\\var.py:857: error: Cannot determine type of ""_get_vector_length""
aesara\\tensor\\type_other.py:115: error: Cannot determine type of ""_as_symbolic""
aesara\\tensor\\type_other.py:148: error: Cannot determine type of ""_as_symbolic""
aesara\\tensor\\subtensor.py:51: error: Cannot determine type of ""float64""
aesara\\tensor\\subtensor.py:51: error: Cannot determine type of ""float32""
aesara\\tensor\\subtensor.py:51: error: Cannot determine type of ""float16""
aesara\\tensor\\subtensor.py:52: error: Cannot determine type of ""int64""
aesara\\tensor\\subtensor.py:52: error: Cannot determine type of ""int32""
aesara\\tensor\\subtensor.py:52: error: Cannot determine type of ""int16""
aesara\\tensor\\subtensor.py:52: error: Cannot determine type of ""int8""
aesara\\tensor\\subtensor.py:108: error: Incompatible return value type (got ""Tuple[Any, ...]"", expected ""Tuple[Union[slice, Variable]]"")
aesara\\tensor\\subtensor.py:138: error: Invalid type comment or annotation
aesara\\tensor\\subtensor.py:138: note: Suggestion: use type[...] instead of type(...)
aesara\\tensor\\subtensor.py:139: error: Invalid type comment or annotation
aesara\\tensor\\subtensor.py:139: note: Suggestion: use type[...] instead of type(...)
aesara\\tensor\\subtensor.py:155: error: Item ""slice"" of ""Union[Variable, slice, Any]"" has no attribute ""owner""
aesara\\tensor\\subtensor.py:192: error: Unsupported left operand type for + (""slice"")
aesara\\tensor\\subtensor.py:192: note: Left operand is of type ""Union[int, slice, Any]""
aesara\\tensor\\subtensor.py:192: error: Unsupported operand types for + (""int"" and ""Variable"")
aesara\\tensor\\subtensor.py:238: error: Incompatible return value type (got ""Tuple[slice, int]"", expected ""Tuple[Variable, int]"")
aesara\\tensor\\subtensor.py:240: error: Incompatible return value type (got ""Tuple[slice, int]"", expected ""Tuple[Variable, int]"")
aesara\\tensor\\subtensor.py:255: error: Incompatible return value type (got ""Tuple[slice, int]"", expected ""Tuple[Variable, int]"")
aesara\\tensor\\subtensor.py:259: error: Incompatible return value type (got ""Tuple[slice, int]"", expected ""Tuple[Variable, int]"")
aesara\\tensor\\subtensor.py:274: error: Incompatible return value type (got ""Tuple[slice, int]"", expected ""Tuple[Variable, int]"")
aesara\\tensor\\subtensor.py:304: error: Unsupported operand types for - (""Variable"" and ""int"")
aesara\\tensor\\subtensor.py:311: error: Unsupported operand types for - (""Variable"" and ""int"")
aesara\\tensor\\subtensor.py:336: error: Incompatible return value type (got ""Tuple[slice, int]"", expected ""Tuple[Variable, int]"")
aesara\\tensor\\subtensor.py:338: error: Incompatible return value type (got ""Tuple[slice, int]"", expected ""Tuple[Variable, int]"")
aesara\\tensor\\subtensor.py:663: error: Incompatible return value type (got ""Union[Variable, List[Variable]]"", expected ""ScalarVariable"")
aesara\\tensor\\subtensor.py:1225: error: Cannot determine type of ""pprint""
aesara\\tensor\\subtensor.py:1878: error: Cannot determine type of ""pprint""
aesara\\tensor\\subtensor.py:2125: error: Cannot determine type of ""bool""
aesara\\tensor\\subtensor.py:2788: error: Cannot determine type of ""_get_vector_length""
aesara\\tensor\\shape.py:148: error: Incompatible types in assignment (expression has type ""Union[Variable, List[Variable]]"", variable has type ""Variable"")
aesara\\tensor\\shape.py:153: error: Cannot determine type of ""_get_vector_length""
aesara\\tensor\\shape.py:165: error: Incompatible return value type (got ""Tuple[Any, ...]"", expected ""Tuple[Variable]"")
aesara\\tensor\\shape.py:167: error: No overload variant of ""zip"" matches argument types ""Variable"", ""Optional[Any]""
aesara\\tensor\\shape.py:167: note: Possible overload variants:
aesara\\tensor\\shape.py:167: note:     def [_T_co, _T1] zip(cls, Iterable[_T1]) -> zip[Tuple[_T1]]
aesara\\tensor\\shape.py:167: note:     def [_T_co, _T1, _T2] zip(cls, Iterable[_T1], Iterable[_T2]) -> zip[Tuple[_T1, _T2]]
aesara\\tensor\\shape.py:167: note:     def [_T_co, _T1, _T2, _T3] zip(cls, Iterable[_T1], Iterable[_T2], Iterable[_T3]) -> zip[Tuple[_T1, _T2, _T3]]
aesara\\tensor\\shape.py:167: note:     def [_T_co, _T1, _T2, _T3, _T4] zip(cls, Iterable[_T1], Iterable[_T2], Iterable[_T3], Iterable[_T4]) -> zip[Tuple[_T1, _T2, _T3, _T4]]
aesara\\tensor\\shape.py:167: note:     def [_T_co, _T1, _T2, _T3, _T4, _T5] zip(cls, Iterable[_T1], Iterable[_T2], Iterable[_T3], Iterable[_T4], Iterable[_T5]) -> zip[Tuple[_T1, _T2, _T3, _T4, _T5]]
aesara\\tensor\\shape.py:167: note:     def [_T_co] zip(cls, Iterable[Any], Iterable[Any], Iterable[Any], Iterable[Any], Iterable[Any], Iterable[Any], *iterables: Iterable[Any]) -> zip[Tuple[Any, ...]]
aesara\\tensor\\shape.py:167: error: ""Variable"" has no attribute ""ndim""
aesara\\tensor\\shape.py:339: error: ""Callable[[Any], Any]"" has no attribute ""cache""
aesara\\tensor\\shape.py:541: error: Argument 1 to ""ndim"" has incompatible type ""Union[int, List[Union[int, Variable]], Tuple[Union[int, Variable]], Variable]""; expected ""Union[Sequence[Sequence[Sequence[Sequence[Sequence[Any]]]]], Union[Union[_SupportsArray[dtype[Any]], Sequence[_SupportsArray[dtype[Any]]], Sequence[Sequence[_SupportsArray[dtype[Any]]]], Sequence[Sequence[Sequence[_SupportsArray[dtype[Any]]]]], Sequence[Sequence[Sequence[Sequence[_SupportsArray[dtype[Any]]]]]]], Union[bool, int, float, complex, str, bytes, Sequence[Union[bool, int, float, complex, str, bytes]], Sequence[Sequence[Union[bool, int, float, complex, str, bytes]]], Sequence[Sequence[Sequence[Union[bool, int, float, complex, str, bytes]]]], Sequence[Sequence[Sequence[Sequence[Union[bool, int, float, complex, str, bytes]]]]]]]]""
aesara\\tensor\\shape.py:550: error: Incompatible types in assignment (expression has type ""Tuple[Any, ...]"", variable has type ""Union[int, List[Union[int, Variable]], Tuple[Union[int, Variable]], Variable]"")
aesara\\tensor\\shape.py:555: error: Cannot determine type of ""_get_vector_length""
aesara\\tensor\\shape.py:574: error: Cannot determine type of ""int32""
aesara\\tensor\\math.py:347: error: Cannot determine type of ""int64""
aesara\\tensor\\math.py:829: error: Name ""isnan"" already defined on line 819
aesara\\tensor\\math.py:849: error: Name ""isinf"" already defined on line 839
aesara\\tensor\\math.py:1049: error: Cannot determine type of ""pprint""
aesara\\tensor\\math.py:1445: error: ""Type[_tensor_py_operators]"" has no attribute ""real""
aesara\\tensor\\math.py:1453: error: ""Type[_tensor_py_operators]"" has no attribute ""imag""
aesara\\tensor\\math.py:1855: error: Cannot determine type of ""pprint""
aesara\\tensor\\math.py:1856: error: Cannot determine type of ""pprint""
aesara\\tensor\\math.py:1857: error: Cannot determine type of ""pprint""
aesara\\tensor\\math.py:1858: error: Cannot determine type of ""pprint""
aesara\\tensor\\math.py:1859: error: Cannot determine type of ""pprint""
aesara\\tensor\\math.py:1860: error: Cannot determine type of ""pprint""
aesara\\tensor\\math.py:1861: error: Cannot determine type of ""pprint""
aesara\\tensor\\math.py:2010: error: Cannot determine type of ""pprint""
aesara\\tensor\\math.py:2011: error: Cannot determine type of ""special""
aesara\\tensor\\math.py:2501: error: Cannot determine type of ""pprint""
aesara\\tensor\\extra_ops.py:285: error: Cannot determine type of ""int32""
aesara\\tensor\\extra_ops.py:1510: error: Argument 1 to ""len"" has incompatible type ""Union[TensorVariable, Tuple[TensorVariable, ...]]""; expected ""Sized""
aesara\\tensor\\extra_ops.py:1513: error: Argument 1 to ""len"" has incompatible type ""Union[TensorVariable, Tuple[TensorVariable, ...]]""; expected ""Sized""
aesara\\tensor\\extra_ops.py:1518: error: Item ""Tuple[TensorVariable, ...]"" of ""Union[TensorVariable, Tuple[TensorVariable, ...]]"" has no attribute ""ndim""
aesara\\tensor\\extra_ops.py:1521: error: Item ""Tuple[TensorVariable, ...]"" of ""Union[TensorVariable, Tuple[TensorVariable, ...]]"" has no attribute ""ndim""
aesara\\tensor\\extra_ops.py:1523: error: Item ""Tuple[TensorVariable, ...]"" of ""Union[TensorVariable, Tuple[TensorVariable, ...]]"" has no attribute ""shape""
aesara\\tensor\\extra_ops.py:1523: error: Item ""Tuple[TensorVariable, ...]"" of ""Union[TensorVariable, Tuple[TensorVariable, ...]]"" has no attribute ""broadcastable""
aesara\\tensor\\extra_ops.py:1565: error: Argument 1 to ""append"" of ""list"" has incompatible type ""Union[Variable, List[Variable]]""; expected ""ScalarConstant""
aesara\\tensor\\extra_ops.py:1647: error: Incompatible types in assignment (expression has type ""Variable"", variable has type ""TensorVariable"")
aesara\\tensor\\extra_ops.py:1648: error: Incompatible types in assignment (expression has type ""Variable"", variable has type ""Union[TensorVariable, Tuple[Variable]]"")
aesara\\tensor\\elemwise.py:302: error: Cannot determine type of ""pprint""
aesara\\tensor\\elemwise.py:1816: error: Cannot determine type of ""_get_vector_length""
aesara\\tensor\\blas.py:224: error: ""Callable[[], Any]"" has no attribute ""_result""
aesara\\tensor\\blas.py:869: error: Cannot determine type of ""bool""
aesara\\tensor\\blas.py:1101: error: Cannot determine type of ""pprint""
aesara\\tensor\\blas.py:1102: error: Cannot determine type of ""pprint""
aesara\\tensor\\blas.py:1801: error: Cannot determine type of ""optdb""
aesara\\tensor\\blas.py:1832: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic_opt.py:474: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic_opt.py:765: error: Cannot determine type of ""pprint""
aesara\\tensor\\basic_opt.py:1442: error: Item ""Variable"" of ""Union[Variable, FunctionGraph]"" has no attribute ""outputs""
aesara\\tensor\\basic_opt.py:1477: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic_opt.py:1483: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic_opt.py:1703: error: Cannot determine type of ""fill""
aesara\\tensor\\basic_opt.py:1743: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic_opt.py:1747: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic_opt.py:1754: error: Cannot determine type of ""fill""
aesara\\tensor\\basic_opt.py:1855: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic_opt.py:2153: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic_opt.py:2159: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic_opt.py:2165: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic_opt.py:2171: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic_opt.py:2933: error: Cannot determine type of ""tensor_copy""
aesara\\tensor\\basic_opt.py:3376: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic_opt.py:3387: error: Cannot determine type of ""optdb""
aesara\\tensor\\basic.py:17: error: Module ""numpy.core.multiarray"" has no attribute ""normalize_axis_index""
aesara\\tensor\\basic.py:99: error: Cannot determine type of ""_as_tensor_variable""
aesara\\tensor\\basic.py:113: error: Cannot determine type of ""_as_tensor_variable""
aesara\\tensor\\basic.py:114: error: Cannot determine type of ""_as_tensor_variable""
aesara\\tensor\\basic.py:119: error: Cannot determine type of ""_as_tensor_variable""
aesara\\tensor\\basic.py:149: error: Cannot determine type of ""_as_tensor_variable""
aesara\\tensor\\basic.py:150: error: Cannot determine type of ""_as_tensor_variable""
aesara\\tensor\\basic.py:187: error: Cannot determine type of ""_as_tensor_variable""
aesara\\tensor\\basic.py:188: error: Cannot determine type of ""_as_tensor_variable""
aesara\\tensor\\basic.py:189: error: Cannot determine type of ""_as_tensor_variable""
aesara\\tensor\\basic.py:190: error: Cannot determine type of ""_as_tensor_variable""
aesara\\tensor\\basic.py:195: error: Cannot determine type of ""_as_tensor_variable""
aesara\\tensor\\basic.py:832: error: Cannot determine type of ""convert_to_bool""
aesara\\tensor\\basic.py:835: error: Cannot determine type of ""convert_to_int8""
aesara\\tensor\\basic.py:838: error: Cannot determine type of ""convert_to_int16""
aesara\\tensor\\basic.py:841: error: Cannot determine type of ""convert_to_int32""
aesara\\tensor\\basic.py:844: error: Cannot determine type of ""convert_to_int64""
aesara\\tensor\\basic.py:847: error: Cannot determine type of ""convert_to_uint8""
aesara\\tensor\\basic.py:850: error: Cannot determine type of ""convert_to_uint16""
aesara\\tensor\\basic.py:853: error: Cannot determine type of ""convert_to_uint32""
aesara\\tensor\\basic.py:856: error: Cannot determine type of ""convert_to_uint64""
aesara\\tensor\\basic.py:859: error: Cannot determine type of ""convert_to_float16""
aesara\\tensor\\basic.py:862: error: Cannot determine type of ""convert_to_float32""
aesara\\tensor\\basic.py:865: error: Cannot determine type of ""convert_to_float64""
aesara\\tensor\\basic.py:868: error: Cannot determine type of ""convert_to_complex64""
aesara\\tensor\\basic.py:871: error: Cannot determine type of ""convert_to_complex128""
aesara\\tensor\\basic.py:935: error: Cannot determine type of ""pprint""
aesara\\tensor\\basic.py:1553: error: Cannot determine type of ""pprint""
aesara\\tensor\\basic.py:1590: error: Incompatible types in assignment (expression has type ""Variable"", variable has type ""Union[TensorVariable, int, float]"")
aesara\\tensor\\basic.py:1592: error: Item ""int"" of ""Union[TensorVariable, int, float]"" has no attribute ""astype""
aesara\\tensor\\basic.py:1592: error: Item ""float"" of ""Union[TensorVariable, int, float]"" has no attribute ""astype""
aesara\\tensor\\basic.py:1704: error: Cannot determine type of ""_get_vector_length""
aesara\\tensor\\basic.py:1733: error: ""Callable[[Any, Any], Any]"" has no attribute ""_others""
aesara\\tensor\\basic.py:1748: error: Cannot determine type of ""identity""
aesara\\tensor\\basic.py:1749: error: Cannot determine type of ""pprint""
aesara\\tensor\\basic.py:2181: error: Incompatible types in assignment (expression has type ""Variable"", variable has type ""TensorVariable"")
aesara\\tensor\\basic.py:2186: error: Value of type ""Iterable[Union[bool, int]]"" is not indexable
aesara\\tensor\\basic.py:2186: error: Argument 1 to ""len"" has incompatible type ""Iterable[Union[bool, int]]""; expected ""Sized""
aesara\\tensor\\basic.py:2490: error: Cannot determine type of ""pprint""
aesara\\tensor\\basic.py:2493: error: Cannot determine type of ""_get_vector_length""
aesara\\tensor\\basic.py:4057: error: Cannot determine type of ""int32""
aesara\\tensor\\basic.py:4200: error: Incompatible types in assignment (expression has type ""Variable"", variable has type ""Union[ndarray[Any, Any], TensorVariable]"")
aesara\\tensor\\basic.py:4214: error: Incompatible return value type (got ""Union[ndarray[Any, Any], TensorVariable]"", expected ""TensorVariable"")
aesara\\tensor\\basic.py:4216: error: Incompatible return value type (got ""List[Union[ndarray[Any, Any], TensorVariable]]"", expected ""TensorVariable"")
aesara\\tensor\\basic.py:4232: error: Incompatible types in assignment (expression has type ""Variable"", variable has type ""Union[ndarray[Any, Any], TensorVariable]"")
aesara\\tensor\\basic.py:4238: error: Module has no attribute ""normalize_axis_tuple""
aesara\\tensor\\basic.py:4243: error: Incompatible return value type (got ""Union[ndarray[Any, Any], Any]"", expected ""TensorVariable"")
aesara\\scan\\utils.py:60: error: ""Constant"" has no attribute ""dtype""
aesara\\scan\\utils.py:61: error: ""Constant"" has no attribute ""astype""
aesara\\scan\\utils.py:94: error: ""Variable"" has no attribute ""dtype""; maybe ""type""?
aesara\\scan\\utils.py:95: error: ""Variable"" has no attribute ""astype""; maybe ""type""?
aesara\\scan\\utils.py:1230: error: Incompatible types in assignment (expression has type ""Optional[Tuple[str, int, int, int]]"", variable has type ""Union[Variable, FieldInfo]"")
aesara\\scan\\utils.py:1279: error: Incompatible return value type (got ""FieldInfo"", expected ""Optional[Tuple[str, int, int, int]]"")
aesara\\scan\\utils.py:1284: error: Incompatible return value type (got ""FieldInfo"", expected ""Optional[Tuple[str, int, int, int]]"")
aesara\\scan\\utils.py:1297: error: ""Tuple[str, int, int, int]"" has no attribute ""inner_index""
aesara\\scan\\utils.py:1298: error: ""Tuple[str, int, int, int]"" has no attribute ""name""
aesara\\scan\\utils.py:1300: error: ""Tuple[str, int, int, int]"" has no attribute ""name""
aesara\\scan\\utils.py:1302: error: Incompatible return value type (got ""Tuple[str, int, int, int]"", expected ""Optional[FieldInfo]"")
aesara\\scan\\utils.py:1308: error: Argument 1 to <set> has incompatible type ""Variable""; expected ""int""
aesara\\scan\\utils.py:1310: error: Argument 1 to ""add"" of ""set"" has incompatible type ""Variable""; expected ""int""
aesara\\scan\\utils.py:1321: error: ""Tuple[str, int, int, int]"" has no attribute ""name""
aesara\\scan\\utils.py:1322: error: ""Tuple[str, int, int, int]"" has no attribute ""name""
aesara\\scan\\utils.py:1324: error: ""Tuple[str, int, int, int]"" has no attribute ""name""
aesara\\scan\\utils.py:1332: error: ""Tuple[str, int, int, int]"" has no attribute ""agg_index""
aesara\\scan\\utils.py:1361: error: ""Tuple[str, int, int, int]"" has no attribute ""name""
aesara\\scan\\utils.py:1374: error: Result type of | incompatible in assignment
aesara\\scan\\utils.py:1392: error: Incompatible return value type (got ""List[Tuple[Variable, Optional[FieldInfo]]]"", expected ""List[FieldInfo]"")
aesara\\scan\\op.py:704: error: ""Scan"" has no attribute ""n_mit_mot_outs""
aesara\\scan\\op.py:709: error: Unexpected keyword argument ""shape""
aesara\\scan\\op.py:709: error: Unexpected keyword argument ""dtype""
aesara\\scan\\op.py:714: error: ""Scan"" has no attribute ""mit_mot_out_slices""
aesara\\scan\\op.py:718: error: ""Scan"" has no attribute ""n_mit_sot""
aesara\\scan\\op.py:718: error: ""Scan"" has no attribute ""n_sit_sot""
aesara\\scan\\op.py:718: error: ""Scan"" has no attribute ""n_nit_sot""
aesara\\scan\\op.py:722: error: Unexpected keyword argument ""shape""
aesara\\scan\\op.py:722: error: Unexpected keyword argument ""dtype""
aesara\\scan\\op.py:738: error: ""Scan"" has no attribute ""tap_array""
aesara\\scan\\op.py:739: error: ""Scan"" has no attribute ""n_nit_sot""
aesara\\scan\\op.py:740: error: ""Scan"" has no attribute ""n_seqs""
aesara\\scan\\op.py:742: error: ""Scan"" has no attribute ""n_mit_mot""
aesara\\scan\\op.py:742: error: ""Scan"" has no attribute ""n_mit_sot""
aesara\\scan\\op.py:742: error: ""Scan"" has no attribute ""n_sit_sot""
aesara\\scan\\op.py:744: error: ""Scan"" has no attribute ""n_shared_outs""
aesara\\scan\\op.py:745: error: ""Scan"" has no attribute ""n_mit_mot""
aesara\\scan\\op.py:745: error: ""Scan"" has no attribute ""n_mit_sot""
aesara\\scan\\op.py:745: error: ""Scan"" has no attribute ""n_sit_sot""
aesara\\scan\\op.py:746: error: ""Scan"" has no attribute ""n_mit_mot""
aesara\\scan\\op.py:746: error: ""Scan"" has no attribute ""n_mit_sot""
aesara\\scan\\op.py:749: error: ""Scan"" has no attribute ""gpu_hash""
aesara\\scalar\\math.py:214: error: Cannot instantiate abstract class ""Erfinv"" with abstract attribute ""c_code""
aesara\\scalar\\math.py:248: error: Cannot instantiate abstract class ""Erfcinv"" with abstract attribute ""c_code""
aesara\\scalar\\math.py:716: error: Cannot instantiate abstract class ""GammaIncDer"" with abstract attribute ""c_code""
aesara\\scalar\\math.py:796: error: Cannot instantiate abstract class ""GammaIncCDer"" with abstract attribute ""c_code""
aesara\\scalar\\math.py:904: error: Cannot instantiate abstract class ""Jv"" with abstract attribute ""c_code""
aesara\\scalar\\math.py:992: error: Cannot instantiate abstract class ""Iv"" with abstract attribute ""c_code""
aesara\\scalar\\math.py:1015: error: Cannot instantiate abstract class ""I1"" with abstract attribute ""c_code""
aesara\\scalar\\math.py:1038: error: Cannot instantiate abstract class ""I0"" with abstract attribute ""c_code""
aesara\\scalar\\math.py:1255: error: Cannot instantiate abstract class ""BetaInc"" with abstract attribute ""c_code""
aesara\\scalar\\math.py:1440: error: Cannot instantiate abstract class ""BetaIncDer"" with abstract attribute ""c_code""
aesara\\scalar\\basic.py:43: error: Cannot determine type of ""bool""
aesara\\scalar\\basic.py:44: error: Cannot determine type of ""complex""
aesara\\scalar\\basic.py:121: error: ""Callable[[Any], Any]"" has no attribute ""cache""
aesara\\scalar\\basic.py:1274: error: Variable ""aesara.scalar.basic.bool"" is not valid as a type
aesara\\scalar\\basic.py:1274: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
aesara\\scalar\\basic.py:1275: error: Variable ""aesara.scalar.basic.bool"" is not valid as a type
aesara\\scalar\\basic.py:1275: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
aesara\\scalar\\basic.py:1276: error: Variable ""aesara.scalar.basic.bool"" is not valid as a type
aesara\\scalar\\basic.py:1276: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
aesara\\scalar\\basic.py:2871: error: Cannot determine type of ""pprint""
aesara\\scalar\\basic.py:2872: error: Cannot determine type of ""pprint""
aesara\\scalar\\basic.py:2873: error: Cannot determine type of ""pprint""
aesara\\scalar\\basic.py:2874: error: Cannot determine type of ""pprint""
aesara\\scalar\\basic.py:2875: error: Cannot determine type of ""pprint""
aesara\\scalar\\basic.py:2876: error: Cannot determine type of ""pprint""
aesara\\scalar\\basic.py:2877: error: Cannot determine type of ""pprint""
aesara\\scalar\\basic.py:2878: error: Cannot determine type of ""pprint""
aesara\\scalar\\basic.py:3853: error: Cannot instantiate abstract class ""Real"" with abstract attribute ""c_code""
aesara\\scalar\\basic.py:3873: error: Cannot instantiate abstract class ""Imag"" with abstract attribute ""c_code""
aesara\\scalar\\basic.py:3910: error: Cannot instantiate abstract class ""Angle"" with abstract attribute ""c_code""
aesara\\scalar\\basic.py:3936: error: Cannot instantiate abstract class ""Complex"" with abstract attribute ""c_code""
aesara\\scalar\\basic.py:3980: error: Cannot instantiate abstract class ""ComplexFromPolar"" with abstract attribute ""c_code""
aesara\\printing.py:86: error: Missing return statement
aesara\\printing.py:160: error: Incompatible types in assignment (expression has type ""TextIO"", variable has type ""StringIO"")
aesara\\printing.py:162: error: Incompatible types in assignment (expression has type ""Union[str, IOBase]"", variable has type ""StringIO"")
aesara\\printing.py:171: error: Need type annotation for ""profile_list"" (hint: ""profile_list: List[<type>] = ..."")
aesara\\printing.py:172: error: Need type annotation for ""order"" (hint: ""order: List[<type>] = ..."")
aesara\\printing.py:173: error: Need type annotation for ""smap"" (hint: ""smap: List[<type>] = ..."")
aesara\\printing.py:192: error: ""None"" has no attribute ""fgraph""
aesara\\printing.py:193: error: ""None"" has no attribute ""fgraph""
aesara\\printing.py:195: error: ""None"" has no attribute ""storage_map""
aesara\\printing.py:195: error: ""None"" has no attribute ""fgraph""
aesara\\printing.py:197: error: ""None"" has no attribute ""fgraph""
aesara\\printing.py:198: error: ""None"" has no attribute ""fgraph""
aesara\\printing.py:199: error: ""None"" has no attribute ""fgraph""
aesara\\printing.py:340: error: Incompatible default for argument ""file"" (default has type ""TextIO"", argument has type ""IOBase"")
aesara\\printing.py:399: error: Return value expected
aesara\\printing.py:423: error: Unsupported right operand type for in (""Optional[Dict[Variable, str]]"")
aesara\\printing.py:424: error: Value of type ""Optional[Dict[Variable, str]]"" is not indexable
aesara\\printing.py:430: error: Argument 1 to ""len"" has incompatible type ""Optional[Dict[Variable, str]]""; expected ""Sized""
aesara\\printing.py:432: error: Argument 1 to ""len"" has incompatible type ""Optional[Dict[Variable, str]]""; expected ""Sized""
aesara\\printing.py:438: error: Unsupported target for indexed assignment (""Optional[Dict[Apply, str]]"")
aesara\\printing.py:439: error: Unsupported target for indexed assignment (""Optional[Dict[Variable, str]]"")
aesara\\printing.py:480: error: ""List[Optional[List[Any]]]"" has no attribute ""get""
aesara\\printing.py:482: error: Unsupported right operand type for in (""None"")
aesara\\printing.py:488: error: Value of type ""None"" is not indexable
aesara\\printing.py:526: error: Incompatible types in assignment (expression has type ""int"", variable has type ""str"")
aesara\\printing.py:570: error: ""List[Optional[List[Any]]]"" has no attribute ""get""
aesara\\printing.py:673: error: ""PrinterState"" has no attribute ""precedence""
aesara\\printing.py:677: error: ""PrinterState"" has no attribute ""precedence""
aesara\\printing.py:893: error: Missing return statement
aesara\\printing.py:1708: error: Need type annotation for ""used_ids"" (hint: ""used_ids: Dict[<type>, <type>] = ..."")
aesara\\printing.py:1710: error: Argument 1 to ""debugprint"" has incompatible type ""Iterable[Variable]""; expected ""Union[Variable, Apply, Function, List[Union[Variable, Apply, Function]]]""
aesara\\link\\utils.py:323: error: Argument 1 to ""int"" has incompatible type ""Optional[int]""; expected ""Union[str, bytes, SupportsInt, SupportsIndex, SupportsTrunc]""
aesara\\link\\utils.py:561: error: Incompatible default for argument ""handler"" (default has type ""TextIO"", argument has type ""TextIOWrapper"")
aesara\\link\\utils.py:648: error: ""Callable[[Any, Any], Any]"" has no attribute ""names_counter""
aesara\\link\\utils.py:649: error: ""Callable[[Any, Any], Any]"" has no attribute ""obj_to_names""
aesara\\link\\utils.py:711: error: Incompatible types in assignment (expression has type ""List[Apply]"", variable has type ""Optional[List[Variable]]"")
aesara\\link\\utils.py:713: error: Argument 2 to ""map_storage"" has incompatible type ""Optional[List[Variable]]""; expected ""Iterable[Apply]""
aesara\\link\\utils.py:722: error: Item ""None"" of ""Optional[List[Variable]]"" has no attribute ""__iter__"" (not iterable)
aesara\\link\\utils.py:724: error: Item ""Variable"" of ""Union[Variable, Any]"" has no attribute ""op""
aesara\\link\\utils.py:732: error: Item ""Variable"" of ""Union[Variable, Any]"" has no attribute ""inputs""
aesara\\link\\utils.py:736: error: ""None"" not callable
aesara\\link\\utils.py:743: error: Item ""Variable"" of ""Union[Variable, Any]"" has no attribute ""outputs""
aesara\\link\\basic.py:66: error: ""MetaObject"" has no attribute ""type""
aesara\\link\\basic.py:97: error: ""filter_inplace"" of ""Type"" does not return a value
aesara\\link\\basic.py:432: error: ""Callable[[], NoReturn]"" has no attribute ""allow_gc""
aesara\\link\\basic.py:435: error: ""Callable[[], NoReturn]"" has no attribute ""storage_map""
aesara\\link\\basic.py:510: error: Argument ""linkers"" to ""WrapLinker"" has incompatible type ""List[Union[OpWiseCLinker, PerformLinker, VMLinker]]""; expected ""Union[List[OpWiseCLinker], List[PerformLinker], List[VMLinker]]""
aesara\\link\\basic.py:543: error: Incompatible types in assignment (expression has type ""FunctionGraph"", variable has type ""None"")
aesara\\link\\basic.py:602: error: ""Callable[[], Any]"" has no attribute ""thunk_groups""
aesara\\compile\\sharedvalue.py:309: error: ""Callable[[Any, Any, Any, Any, KwArg(Any)], Any]"" has no attribute ""constructors""
aesara\\compile\\mode.py:320: error: Incompatible types in assignment (expression has type ""OptimizationDatabase"", variable has type ""SequenceDB"")
aesara\\compile\\function\\types.py:213: error: ""Callable[[Any, Any, Any], Any]"" has no attribute ""features""
aesara\\tensor\\slinalg.py:245: error: Name ""cho_solve"" already defined on line 242
aesara\\tensor\\slinalg.py:347: error: Incompatible types in assignment (expression has type ""Tuple[str, str, str, str]"", base class ""SolveBase"" defined the type as ""Tuple[str, str]"")
aesara\\tensor\\slinalg.py:421: error: Incompatible return value type (got ""Union[Variable, List[Variable]]"", expected ""TensorVariable"")
aesara\\tensor\\slinalg.py:436: error: Incompatible types in assignment (expression has type ""Tuple[str, str, str]"", base class ""SolveBase"" defined the type as ""Tuple[str, str]"")
aesara\\tensor\\slinalg.py:468: error: Name ""solve"" already defined on line 465
aesara\\tensor\\sharedvar.py:24: error: Definition of ""__getitem__"" in base class ""_tensor_py_operators"" is incompatible with definition in base class ""SharedVariable""
aesara\\tensor\\sharedvar.py:89: error: Definition of ""__getitem__"" in base class ""_tensor_py_operators"" is incompatible with definition in base class ""SharedVariable""
aesara\\tensor\\nnet\\ctc.py:73: error: ""Callable[[], Any]"" has no attribute ""avail""
aesara\\tensor\\nnet\\ctc.py:74: error: ""Callable[[], Any]"" has no attribute ""msg""
aesara\\tensor\\nnet\\ctc.py:75: error: ""Callable[[], Any]"" has no attribute ""path""
aesara\\tensor\\nnet\\ctc.py:91: error: ""Callable[[], Any]"" has no attribute ""msg""
aesara\\tensor\\nnet\\ctc.py:92: error: ""Callable[[], Any]"" has no attribute ""path""
aesara\\tensor\\nnet\\basic.py:1293: error: Cannot determine type of ""local_mul_canonizer""
aesara\\tensor\\nnet\\abstract_conv.py:13: error: Module ""fractions"" has no attribute ""gcd""
aesara\\tensor\\nnet\\abstract_conv.py:13: error: Name ""gcd"" already defined (possibly by an import)
aesara\\tensor\\math_opt.py:1546: error: Unsupported operand types for + (""List[MetaType]"" and ""List[Type[CAReduce]]"")
aesara\\tensor\\math_opt.py:1547: error: Unsupported operand types for + (""List[MetaType]"" and ""List[Type[NonZeroCAReduce]]"")
aesara\\tensor\\math_opt.py:1553: error: Argument 1 to ""local_optimizer"" has incompatible type ""List[MetaType]""; expected ""Optional[List[Union[Op, type]]]""
aesara\\tensor\\math_opt.py:1553: note: ""List"" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
aesara\\tensor\\math_opt.py:1553: note: Consider using ""Sequence"" instead, which is covariant
aesara\\tensor\\math_opt.py:1625: error: Argument 1 to ""local_optimizer"" has incompatible type ""List[MetaType]""; expected ""Optional[List[Union[Op, type]]]""
aesara\\tensor\\math_opt.py:1625: note: ""List"" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
aesara\\tensor\\math_opt.py:1625: note: Consider using ""Sequence"" instead, which is covariant
aesara\\tensor\\math_opt.py:1638: error: Argument 1 to ""local_optimizer"" has incompatible type ""List[MetaType]""; expected ""Optional[List[Union[Op, type]]]""
aesara\\tensor\\math_opt.py:1638: note: ""List"" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance
aesara\\tensor\\math_opt.py:1638: note: Consider using ""Sequence"" instead, which is covariant
aesara\\tensor\\blas_c.py:699: error: ""Callable[[], Any]"" has no attribute ""_force_init_beta""
aesara\\scan\\opt.py:668: error: ""Variable"" has no attribute ""ndim""
aesara\\scan\\opt.py:670: error: ""Variable"" has no attribute ""ndim""
aesara\\scan\\opt.py:685: error: Need type annotation for ""replacements"" (hint: ""replacements: Dict[<type>, <type>] = ..."")
aesara\\scan\\opt.py:720: error: ""Node"" has no attribute ""inputs""
aesara\\scan\\opt.py:721: error: ""Node"" has no attribute ""outputs""
aesara\\scan\\opt.py:722: error: ""Node"" has no attribute ""op""
aesara\\scan\\opt.py:723: error: ""Node"" has no attribute ""op""
aesara\\scan\\opt.py:724: error: ""Node"" has no attribute ""op""
aesara\\scan\\opt.py:725: error: ""Node"" has no attribute ""op""
aesara\\scan\\opt.py:732: error: Incompatible return value type (got ""Tuple[List[None], ScanArgs, Dict[Variable, Variable]]"", expected ""Tuple[List[Variable], ScanArgs, Dict[Variable, Variable]]"")
aesara\\scan\\opt.py:747: error: ""Node"" has no attribute ""inputs""
aesara\\scan\\opt.py:759: error: ""Node"" has no attribute ""op""
aesara\\scan\\opt.py:760: error: ""Node"" has no attribute ""op""
aesara\\scan\\opt.py:761: error: ""Node"" has no attribute ""op""
aesara\\scan\\opt.py:762: error: ""Node"" has no attribute ""op""
aesara\\scan\\opt.py:763: error: ""Node"" has no attribute ""op""
aesara\\scan\\opt.py:765: error: ""Node"" has no attribute ""op""
aesara\\scan\\opt.py:766: error: ""Node"" has no attribute ""op""
aesara\\scan\\opt.py:770: error: Value of type ""Union[Variable, List[Variable]]"" is not indexable
aesara\\scan\\opt.py:787: error: ""FunctionGraph"" has no attribute ""replace_all_validate_remove""
aesara\\scan\\opt.py:788: error: ""Node"" has no attribute ""outputs""
aesara\\sandbox\\rng_mrg.py:84: error: ""Callable[[Any, Any, Any, Any, Any], Any]"" has no attribute ""dot_modulo""
aesara\\sandbox\\rng_mrg.py:1347: error: Argument 1 to ""local_optimizer"" has incompatible type ""Tuple[Type[mrg_uniform_base]]""; expected ""Optional[List[Union[Op, type]]]""
aesara\\ifelse.py:393: error: Value of type ""Union[Variable, List[Variable]]"" is not indexable
aesara\\ifelse.py:395: error: Argument 1 to ""list"" has incompatible type ""Union[Variable, List[Variable]]""; expected ""Iterable[Variable]""
aesara\\ifelse.py:397: error: Incompatible return value type (got ""Tuple[Variable, ...]"", expected ""Union[Variable, List[Variable]]"")
aesara\\ifelse.py:397: error: Argument 1 to ""tuple"" has incompatible type ""Union[Variable, List[Variable]]""; expected ""Iterable[Variable]""
aesara\\ifelse.py:478: error: Argument 1 to ""local_optimizer"" has incompatible type ""Tuple[Type[Shape], Type[SpecifyShape], Type[Reshape], Type[Rebroadcast], Type[Dot], Type[MaxAndArgmax], Type[Subtensor], Type[IncSubtensor], Type[Alloc], Type[Elemwise], Type[DimShuffle]]""; expected ""Optional[List[Union[Op, type]]]""
aesara\\gpuarray\\type.py:754: error: ""Type[GpuArrayType]"" has no attribute ""SharedVariable""
aesara\\gpuarray\\type.py:1009: error: Argument 1 to ""constructor"" has incompatible type ""Callable[[Any, Any], Any]""; expected ""Callable[[Union[Tuple[Callable[..., Any], Tuple[Any, ...]], Tuple[Callable[..., Any], Tuple[Any, ...], Optional[Any]]]], Any]""
aesara\\gpuarray\\type.py:1019: error: Argument 3 to ""pickle"" has incompatible type ""Callable[[Any, Any], Any]""; expected ""Optional[Callable[[Union[Tuple[Callable[..., Any], Tuple[Any, ...]], Tuple[Callable[..., Any], Tuple[Any, ...], Optional[Any]]]], Any]]""
aesara\\gpuarray\\basic_ops.py:310: error: Variable ""aesara.gpuarray.type.gpu_context_type"" is not valid as a type
aesara\\gpuarray\\basic_ops.py:310: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases
aesara\\gpuarray\\basic_ops.py:889: error: Incompatible types in assignment (expression has type ""Tuple[str, str]"", base class ""Alloc"" defined the type as ""Tuple[]"")
aesara\\gpuarray\\basic_ops.py:1056: error: Incompatible types in assignment (expression has type ""Tuple[str, str]"", base class ""AllocEmpty"" defined the type as ""Tuple[str]"")
aesara\\gpuarray\\basic_ops.py:1512: error: Definition of ""perform"" in base class ""Split"" is incompatible with definition in base class ""_NoPythonOp""
aesara\\gpuarray\\subtensor.py:689: error: Definition of ""perform"" in base class ""BaseGpuAdvancedSubtensor"" is incompatible with definition in base class ""Op""
aesara\\gpuarray\\subtensor.py:822: error: Definition of ""perform"" in base class ""BaseGpuAdvancedIncSubtensor"" is incompatible with definition in base class ""Op""
aesara\\gpuarray\\neighbours.py:23: error: Definition of ""perform"" in base class ""Images2Neibs"" is incompatible with definition in base class ""_NoPythonOp""
aesara\\gpuarray\\neighbours.py:29: error: Incompatible types in assignment (expression has type ""ParamsType"", base class ""Images2Neibs"" defined the type as ""EnumList"")
aesara\\gpuarray\\elemwise.py:484: error: Definition of ""perform"" in base class ""CAReduce"" is incompatible with definition in base class ""_NoPythonOp""
aesara\\gpuarray\\elemwise.py:528: error: Incompatible types in assignment (expression has type ""Tuple[str, str, str, str, str, str]"", base class ""CAReduceDtype"" defined the type as ""Union[Tuple[str, str, str], Tuple[str, str, str, str]]"")
aesara\\gpuarray\\elemwise.py:3017: error: ""Callable[[Any, Any, Any, Any, Any, Any], Any]"" has no attribute ""cache""
aesara\\gpuarray\\__init__.py:210: error: ""Callable[[Any, Any, Any], Any]"" has no attribute ""devmap""
aesara\\gpuarray\\dnn.py:133: error: ""Callable[[], Any]"" has no attribute ""handle""
aesara\\gpuarray\\dnn.py:240: error: ""Callable[[], Any]"" has no attribute ""avail""
aesara\\gpuarray\\dnn.py:241: error: ""Callable[[], Any]"" has no attribute ""msg""
aesara\\gpuarray\\dnn.py:270: error: ""Callable[[Any], Any]"" has no attribute ""msg""
aesara\\gpuarray\\dnn.py:445: error: ""Callable[[Any], Any]"" has no attribute ""v""
aesara\\scan\\scan_perform_ext.py:46: error: Name ""scan_perform"" is not defined
aesara\\scan\\scan_perform_ext.py:55: error: Argument 1 to ""lock_ctx"" has incompatible type ""str""; expected ""Optional[PathLike[Any]]""
aesara\\scan\\scan_perform_ext.py:67: error: Name ""scan_perform"" is not defined
aesara\\scan\\scan_perform_ext.py:110: error: Name ""scan_perform"" is not defined
aesara\\scan\\scan_perform_ext.py:112: error: Name ""scan_perform"" is not defined
aesara\\link\\c\\lazylinker_c.py:152: error: ""None"" has no attribute ""_version""
aesara\\link\\c\\lazylinker_c.py:153: error: ""None"" has no attribute ""_version""
aesara\\link\\c\\lazylinker_c.py:157: error: Name ""get_version"" is not defined
aesara\\compile\\debugmode.py:145: error: Name ""BadOptimization"" already defined (possibly by an import)
aesara\\typed_list\\basic.py:202: error: Cannot instantiate abstract class ""Append"" with abstract attribute ""c_code""
aesara\\typed_list\\basic.py:291: error: Cannot instantiate abstract class ""Extend"" with abstract attribute ""c_code""
aesara\\typed_list\\basic.py:379: error: Cannot instantiate abstract class ""Insert"" with abstract attribute ""c_code""
aesara\\tensor\\random\\op.py:200: error: Incompatible return value type (got ""Tuple[TensorVariable]"", expected ""Tuple[ScalarVariable]"")
aesara\\tensor\\random\\op.py:204: error: List comprehension has incompatible type List[Tuple[Variable]]; expected List[Tuple[TensorVariable]]
aesara\\tensor\\random\\op.py:228: error: Argument 2 to ""zip"" has incompatible type ""Optional[List[Tuple[TensorVariable]]]""; expected ""Iterable[Tuple[TensorVariable]]""
aesara\\tensor\\random\\op.py:249: error: Need type annotation for ""shape_supp""
aesara\\link\\numba\\dispatch\\extra_ops.py:5: error: Module ""numpy.core.multiarray"" has no attribute ""normalize_axis_index""
aesara\\link\\numba\\dispatch\\elemwise.py:216: error: Incompatible types in assignment (expression has type ""str"", variable has type ""Union[ndarray[Any, Any], Number]"")
aesara\\link\\numba\\dispatch\\elemwise.py:218: error: Incompatible types in assignment (expression has type ""str"", variable has type ""Union[ndarray[Any, Any], Number]"")
aesara\\link\\numba\\dispatch\\elemwise.py:220: error: Incompatible types in assignment (expression has type ""str"", variable has type ""Union[ndarray[Any, Any], Number]"")
aesara\\link\\numba\\dispatch\\elemwise.py:246: error: Incompatible types in assignment (expression has type ""str"", variable has type ""List[str]"")
aesara\\link\\numba\\dispatch\\elemwise.py:247: error: Incompatible types in assignment (expression has type ""str"", variable has type ""List[str]"")
aesara\\link\\numba\\dispatch\\elemwise.py:250: error: Argument 2 to ""scalar_in_place_fn"" has incompatible type ""List[str]""; expected ""str""
aesara\\link\\c\\cvm.py:15: error: Name ""lazylinker_c.CLazyLinker"" is not defined
aesara\\tensor\\random\\basic.py:21: error: Module ""numpy.lib.stride_tricks"" has no attribute ""_broadcast_shape""; maybe ""broadcast_shapes""?
aesara\\tensor\\random\\basic.py:208: error: Signature of ""__call__"" incompatible with supertype ""RandomVariable""
aesara\\tensor\\random\\basic.py:208: note:      Superclass:
aesara\\tensor\\random\\basic.py:208: note:          def __call__(self, *args: Any, size: Any = ..., name: Any = ..., rng: Any = ..., dtype: Any = ..., **kwargs: Any) -> Any
aesara\\tensor\\random\\basic.py:208: note:      Subclass:
aesara\\tensor\\random\\basic.py:208: note:          def __call__(self, loc: Union[ndarray[Any, Any], float], scale: Union[ndarray[Any, Any], float] = ..., size: Union[List[int], int, None] = ..., **kwargs: Any) -> RandomVariable
aesara\\tensor\\random\\basic.py:208: error: Signature of ""__call__"" incompatible with supertype ""Op""
aesara\\tensor\\random\\basic.py:208: note:          def __call__(self, *inputs: Any, **kwargs: Any) -> Union[Variable, List[Variable]]
aesara\\tensor\\random\\basic.py:208: note:          def __call__(self, loc: Union[ndarray[Any, Any], float], scale: Union[ndarray[Any, Any], float] = ..., size: Union[List[int], int, None] = ..., **kwargs: Any) -> RandomVariable
aesara\\tensor\\random\\basic.py:218: error: Signature of ""rng_fn_scipy"" incompatible with supertype ""ScipyRandomVariable""
aesara\\tensor\\random\\basic.py:218: note:      Superclass:
aesara\\tensor\\random\\basic.py:218: note:          @classmethod
aesara\\tensor\\random\\basic.py:218: note:          def rng_fn_scipy(cls, rng: Any, *args: Any, **kwargs: Any) -> Any
aesara\\tensor\\random\\basic.py:218: note:      Subclass:
aesara\\tensor\\random\\basic.py:218: note:          @classmethod
aesara\\tensor\\random\\basic.py:218: note:          def rng_fn_scipy(cls, rng: Union[Generator, RandomState], loc: Union[ndarray[Any, Any], float], scale: Union[ndarray[Any, Any], float], size: Union[List[int], int, None]) -> ndarray[Any, Any]
aesara\\link\\jax\\dispatch.py:10: error: Module ""numpy.random.bit_generator"" has no attribute ""_coerce_to_uint32_array""
aesara\\link\\numba\\dispatch\\random.py:237: error: ""Op"" has no attribute ""name""
aesara\\sparse\\type.py:72: error: Incompatible types in assignment (expression has type ""None"", base class ""Type"" defined the type as ""Type[Variable]"")
aesara\\sparse\\type.py:73: error: Incompatible types in assignment (expression has type ""None"", base class ""Type"" defined the type as ""Type[Constant]"")
aesara\\graph\\kanren.py:48: error: Argument 2 to ""next"" has incompatible type ""None""; expected ""List[Union[Any, Variable]]""
aesara\\sparse\\basic.py:253: error: Cannot determine type of ""transpose""
aesara\\sparse\\basic.py:417: error: Cannot determine type of ""Variable""
aesara\\sparse\\basic.py:418: error: Cannot determine type of ""Constant""
aesara\\sparse\\sharedvar.py:9: error: Definition of ""__getitem__"" in base class ""_sparse_py_operators"" is incompatible with definition in base class ""SharedVariable""
Found 468 errors in 67 files (checked 207 source files)
```

</details>

This PR adds a `py.typed` file as shown in the https://github.com/ethanhs/pep-561 example project.

This way type checking in PyMC, aeppl etc. should become more exact, even if there are still some inconsistencies left.",enhancement typing,brandonwillard,,2022-01-30 13:58:55,2022-04-14 20:19:11,aesara/py.typed setup.py,12294711660f1fa5bc698e9b989b60b4fa91cdf1,"brandonwillard convert_to_draft 2022-01-30 23:41:33,michaelosthege head_ref_force_pushed 2022-02-06 20:35:52,brandonwillard labeled 2022-04-14 20:15:34,brandonwillard labeled 2022-04-14 20:15:34,brandonwillard ready_for_review 2022-04-14 20:18:58,brandonwillard referenced 2022-04-14 20:19:11,brandonwillard merged 2022-04-14 20:19:11,brandonwillard closed 2022-04-14 20:19:12,michaelosthege head_ref_deleted 2022-04-14 23:07:02",codecov[bot] michaelosthege brandonwillard,3,True
388,803,Do not allow `PatternSub` to replace nodes with different number of outputs,ricardoV94,"Fix bug where PatternSub could incorrectly replace nodes with different number of outputs

Bug was introduced in b920bd2910e42e72b79dbb3a353505a09b84241e",bug graph rewriting,brandonwillard,ricardoV94,2022-02-02 17:33:01,2022-02-02 18:50:30,tests/graph/utils.py tests/graph/test_opt.py aesara/graph/opt.py,bb8a8b450433f239fead5885d84ef757982dccc4,"ricardoV94 renamed 2022-02-02 17:33:17,ricardoV94 renamed 2022-02-02 17:52:16,brandonwillard labeled 2022-02-02 18:18:31,brandonwillard labeled 2022-02-02 18:18:31,ricardoV94 assigned 2022-02-02 18:18:38,brandonwillard renamed 2022-02-02 18:18:47,brandonwillard referenced 2022-02-02 18:50:30,brandonwillard merged 2022-02-02 18:50:30,brandonwillard closed 2022-02-02 18:50:30",codecov[bot] ricardoV94 brandonwillard,1,True
389,806,Add JAX conversion for CheckAndRaiseOp,rlouf,"In this PR I had a jax conversion for the `CheckAndRaise` op. Closes #629.

The tests are currently not passing; there is an issue linked to JAX's tracing that I did not foresee when I started working on the PR. The following code:

```python
import jax

def fn(x):
    if x < 0:
        return 1
    return x

f = jax.jit(fn)
f(-1)
```
will raise a `ConcretizationTypeError`. One way around it is to specify `x` as a `static_argnum` when jitting the function, but this is not desirable in most cases as a change in `x`'s value will trigger recompilation.

It seems to me that `aesara` automatically jit-compiles the functions, _I thus suggest to simply skip the assertions when compiling to JAX_.

+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.
",JAX,ricardoV94 brandonwillard,,2022-02-04 14:46:37,2022-02-07 19:34:10,tests/link/test_jax.py aesara/link/jax/dispatch.py,ee3b752a5116bf067fa26086a03ccb3145f48ecb,"rlouf head_ref_force_pushed 2022-02-07 16:11:11,brandonwillard labeled 2022-02-07 19:33:57,brandonwillard referenced 2022-02-07 19:34:10,brandonwillard merged 2022-02-07 19:34:10,brandonwillard closed 2022-02-07 19:34:10,rlouf head_ref_deleted 2022-09-05 07:16:01",ricardoV94 rlouf codecov[bot] brandonwillard,14,True
390,809,Add mypy config and fix typing issues,michaelosthege,"This PR adds a `mypy` configuration that should help to diagnose and fix typing problems in the codebase.
(Related to #200, part of #800.)

With a [`mypy_groupby.py` script](https://gist.github.com/michaelosthege/24d0703e5f37850c9e5679f69598930a) the mypy results can be grouped by error code instead of location, making it easier to prioritize certain kinds of problems.

In addition to the configuration, I fixed a bunch of type hints, mostly those with `[has-type]`, `[valid-type]` and `[var-annotated]` error codes.

The majority of the fixes were only the annotations and got bundled in one commit.

For some fixes (like missing returns) I had to modify the code itself and because this could possibly effect behavior these went into their own commit.

--------------

Generally, we should use invariant hints like `Sequence[Variable]`/`Iterable[Variable]` instead of `List[Variable]` in function signatures.
That's because lists are invariant and such annotations will require callers to pass lists with the exact same type.
However, mypy doesn't warn about this per se.
After merging #799 it will be much easier to spot such issues from the PyMC/aeppl side.",enhancement testing typing,ricardoV94 brandonwillard,,2022-02-05 23:43:09,2022-03-01 21:37:12,requirements.txt aesara/configparser.py aesara/tensor/shape.py aesara/ifelse.py .pre-commit-config.yaml aesara/graph/type.py aesara/tensor/random/op.py setup.py tests/link/__init__.py aesara/graph/opt.py setup.cfg aesara/tensor/subtensor.py aesara/graph/utils.py environment.yml aesara/graph/fg.py aesara/link/c/interface.py aesara/tensor/__init__.py aesara/link/utils.py aesara/link/basic.py aesara/scan/opt.py aesara/scan/op.py aesara/compile/debugmode.py aesara/printing.py aesara/gpuarray/type.py aesara/scalar/basic.py aesara/tensor/random/utils.py aesara/scan/utils.py aesara/tensor/basic.py aesara/graph/basic.py aesara/graph/op.py aesara/gpuarray/basic_ops.py,b785f5fe6cfb5b6389a4004ebf19fd6e379cbd2e 066ddffa68a7ab781781c7927708e6a87c5cd980 83f940311edf7220c93273e3c555ac2395a8d2b0 c15128ce0f34d7196f69a805e7a53d6eab4d491a e27a819d8dd89b7d0821b04b73893b876760d851 1d2524052bc7bfe82494c410155bcf189a115268 5f0f089b9841d738b6d4cb6829ec7ae78a8878b7 c44d2bbf886baddccb543d15b39ffbe26fb8c425 e6cd2109a8e8b7a3cf5e1f1b9b620c096a04f786,"michaelosthege closed 2022-02-06 00:05:21,michaelosthege reopened 2022-02-06 00:05:26,michaelosthege head_ref_force_pushed 2022-02-06 00:06:34,michaelosthege head_ref_force_pushed 2022-02-06 11:11:18,michaelosthege head_ref_force_pushed 2022-02-06 11:49:41,michaelosthege head_ref_force_pushed 2022-02-06 12:09:29,michaelosthege ready_for_review 2022-02-06 16:44:22,michaelosthege head_ref_force_pushed 2022-02-06 20:34:08,brandonwillard renamed 2022-02-06 21:55:41,brandonwillard labeled 2022-02-06 21:56:23,brandonwillard labeled 2022-02-06 21:56:23,michaelosthege head_ref_force_pushed 2022-02-15 13:09:02,michaelosthege head_ref_force_pushed 2022-02-21 13:56:14,michaelosthege head_ref_force_pushed 2022-02-21 14:32:51,brandonwillard mentioned 2022-02-21 14:37:31,brandonwillard subscribed 2022-02-21 14:37:31,michaelosthege head_ref_force_pushed 2022-02-27 15:13:28,michaelosthege head_ref_force_pushed 2022-02-27 16:34:41,michaelosthege head_ref_force_pushed 2022-02-27 18:07:02,brandonwillard mentioned 2022-02-27 18:39:52,brandonwillard subscribed 2022-02-27 18:39:52,brandonwillard head_ref_force_pushed 2022-03-01 20:18:52,brandonwillard referenced 2022-03-01 21:37:11,brandonwillard merged 2022-03-01 21:37:11,brandonwillard closed 2022-03-01 21:37:12,michaelosthege head_ref_deleted 2022-03-06 10:41:44,brandonwillard connected 2022-04-06 20:21:04,brandonwillard labeled 2022-04-07 22:17:31",codecov[bot] ricardoV94 michaelosthege brandonwillard,22,True
391,811,Temporarily pin to `scipy<1.8.0`,michaelosthege,"A new SciPy release appeared and broke imports.
According to the [release notes](https://github.com/scipy/scipy/releases), they restructured their private/public API.
At least the `scipy.signal´, but probably many more imports need to be refactored until the imports are compatible.
This will most probably increase the lower limit on the SciPy version.

This PR pins to `scipy<1.8.0` to unblock ongoing activities until SciPy 1.8.0 compatibility is established.

Also see tracking issue #810.",,brandonwillard,,2022-02-06 12:09:01,2022-02-06 18:05:23,environment.yml setup.py,f226e6f817f8e23a0fd66a95170cab7ff2018976,"brandonwillard mentioned 2022-02-06 14:00:30,brandonwillard subscribed 2022-02-06 14:00:30,ricardoV94 mentioned 2022-02-06 14:00:30,ricardoV94 subscribed 2022-02-06 14:00:30,kc611 mentioned 2022-02-06 14:00:30,kc611 subscribed 2022-02-06 14:00:30,brandonwillard connected 2022-02-06 17:47:49,brandonwillard disconnected 2022-02-06 18:04:54,brandonwillard referenced 2022-02-06 18:05:23,brandonwillard merged 2022-02-06 18:05:23,brandonwillard closed 2022-02-06 18:05:23,michaelosthege head_ref_deleted 2022-02-06 18:35:45",codecov[bot] kc611 brandonwillard ricardoV94 michaelosthege,3,True
392,812,Support SciPy >= 1.8,brandonwillard,"This PR make the changes necessary to support SciPy versions greater than 1.8.

- [ ] `numba-scipy` doesn't support SciPy >= 1.8, and that requirement is currently downgrading SciPy to 1.6.1 in CI, so we'll need to alter the CI steps in order to test this.",enhancement important SciPy compatibility,,brandonwillard,2022-02-06 22:40:47,2022-02-07 02:16:31,aesara/tensor/nnet/conv.py requirements.txt .github/workflows/test.yml tests/tensor/nnet/speed_test_conv.py environment.yml setup.py aesara/tensor/nnet/abstract_conv.py,7f32fcd18072bfaf8e9c01bfdac0fa174374ea5e 5cfd20706759929ed017c677f990809a85391eb5 9ec874ddda1cfd65249e188d36a461a0972698dd c1f1d094efdff9a7783858b55775fb6af00be715,"brandonwillard labeled 2022-02-06 22:56:08,brandonwillard labeled 2022-02-06 22:56:08,brandonwillard labeled 2022-02-06 22:56:08,brandonwillard assigned 2022-02-06 22:56:17,brandonwillard head_ref_force_pushed 2022-02-06 23:31:49,brandonwillard head_ref_force_pushed 2022-02-06 23:32:52,brandonwillard head_ref_force_pushed 2022-02-07 00:00:21,brandonwillard head_ref_force_pushed 2022-02-07 00:28:32,brandonwillard head_ref_force_pushed 2022-02-07 00:58:30,brandonwillard referenced 2022-02-07 02:16:31,brandonwillard merged 2022-02-07 02:16:31,brandonwillard closed 2022-02-07 02:16:31,brandonwillard head_ref_deleted 2022-02-07 02:16:34",codecov[bot] brandonwillard,1,True
393,813,Add type hints for default_shape_from_params,danhphan,"Add type hints for `default_shape_from_params` in the issue #794

Change the order of parameters in Docstring to be consistent with the order in the function.

Let me know if it needs to update. Many thanks!",documentation enhancement typing,brandonwillard,,2022-02-08 03:15:37,2022-02-09 19:25:50,aesara/tensor/random/op.py,026ec6c89cbdc3a5895b566b7652d8f648582889 6f6d109adbbfb914cc72b19e6bfa090424b7b7ae,"brandonwillard labeled 2022-02-08 19:44:28,brandonwillard labeled 2022-02-08 19:44:28,brandonwillard referenced 2022-02-09 19:25:50,brandonwillard merged 2022-02-09 19:25:50,brandonwillard closed 2022-02-09 19:25:50,brandonwillard mentioned 2022-02-10 21:49:53,brandonwillard subscribed 2022-02-10 21:49:53,ricardoV94 mentioned 2022-02-10 21:49:53,ricardoV94 subscribed 2022-02-10 21:49:53,danhphan head_ref_deleted 2022-03-19 23:33:01,brandonwillard labeled 2022-04-07 22:17:31",codecov[bot] ricardoV94 brandonwillard danhphan,9,True
394,817,Implement `_get_vector_length` for `Alloc`,ricardoV94,,enhancement,brandonwillard,,2022-02-15 15:06:36,2022-02-15 20:04:08,tests/tensor/test_basic.py aesara/tensor/basic.py,32030c558cc107cc20eeebd7eea3fe87738969e6,"brandonwillard labeled 2022-02-15 16:41:33,brandonwillard renamed 2022-02-15 16:41:45,ricardoV94 referenced 2022-02-15 20:04:08,ricardoV94 merged 2022-02-15 20:04:08,ricardoV94 closed 2022-02-15 20:04:08",codecov[bot] ricardoV94 brandonwillard,1,True
395,820,Get vector length alloc,ricardoV94,"This PR allows for known shapes to be propagated to the outputs of Elemwise Ops

```python
import aesara.tensor as at
x = at.TensorType(""float64"", (3, 3))()
y = x + 1
y.type.shape  # (3, 3)
```

Probably breaks a lot of other things... just checking what",,,,2022-02-16 17:18:24,2022-02-16 17:19:08,aesara/tensor/elemwise.py tests/tensor/test_basic.py aesara/tensor/basic.py,32030c558cc107cc20eeebd7eea3fe87738969e6 0b8fba4b2bfc06262acc85097e8988c4f4164509,ricardoV94 closed 2022-02-16 17:19:09,ricardoV94,0,False
396,821,Use static shape in outputs of `Elemwise`,ricardoV94,"This PR allows for known shapes to be propagated to the outputs of Elemwise OPs

It won't solve #732, but it doesn't seem like there was a good reason not to do it anyway...

```python
import aesara.tensor as at
x = at.TensorType(""float64"", (3, 3))()
y = x + 1
y.type.shape  # (3, 3)
```

Probably breaks a lot of other things... just checking what",enhancement important shape inference Op implementation,brandonwillard,ricardoV94,2022-02-16 17:21:07,2022-09-08 21:58:49,aesara/tensor/elemwise.py tests/tensor/test_elemwise.py aesara/compile/function/pfunc.py aesara/tensor/nnet/conv3d2d.py,22355478b2a2b3af07277d1803908da6fbf6f6dc fbf6a698b703507a3e59c84e7c99b583fd98b2dd 42f50fb6023d3824f4048541d270a2e8bee91c3b,"ricardoV94 head_ref_force_pushed 2022-02-16 19:19:35,ricardoV94 head_ref_force_pushed 2022-02-16 19:22:59,brandonwillard renamed 2022-02-16 21:56:27,brandonwillard labeled 2022-02-16 21:56:44,brandonwillard labeled 2022-02-16 21:57:30,ricardoV94 head_ref_force_pushed 2022-02-17 07:39:44,ricardoV94 head_ref_force_pushed 2022-02-17 08:55:38,ricardoV94 head_ref_force_pushed 2022-02-17 10:49:21,ricardoV94 head_ref_force_pushed 2022-02-17 10:49:48,ricardoV94 head_ref_force_pushed 2022-02-17 11:01:48,brandonwillard labeled 2022-07-11 21:55:23,ricardoV94 head_ref_force_pushed 2022-07-17 13:58:58,ricardoV94 head_ref_force_pushed 2022-07-17 14:22:24,ricardoV94 renamed 2022-07-17 14:25:17,ricardoV94 renamed 2022-07-17 14:25:44,brandonwillard labeled 2022-07-18 16:10:40,ricardoV94 assigned 2022-07-18 16:10:51,ricardoV94 head_ref_force_pushed 2022-08-07 16:37:32,brandonwillard head_ref_force_pushed 2022-08-24 04:18:27,rlouf mentioned 2022-08-24 04:26:36,rlouf subscribed 2022-08-24 04:26:36,ricardoV94 head_ref_force_pushed 2022-09-07 07:17:14,ricardoV94 ready_for_review 2022-09-07 08:32:16,ricardoV94 head_ref_force_pushed 2022-09-08 08:01:29,ricardoV94 review_requested 2022-09-08 08:02:15,brandonwillard referenced 2022-09-08 21:58:49,brandonwillard merged 2022-09-08 21:58:49,brandonwillard closed 2022-09-08 21:58:49,ricardoV94 renamed 2022-09-12 09:18:10",codecov[bot] ricardoV94 rlouf brandonwillard,16,True
397,822,Use `_props_dict` instead of `_props` in `random_make_inplace`,lucianopaz,"Closes #819 

This PR simply uses the Op's `_props_dict` instead of the `_props` list to create the inplace op in `random_make_inplace`. This enables the re-write to handle any potential extra props that could have been defined in a `RandomVariable` subclass",refactor random variables,ricardoV94 brandonwillard,,2022-02-16 21:29:52,2022-02-17 06:25:42,aesara/tensor/random/opt.py tests/tensor/random/test_opt.py,2ec6758a82f55d15de979f435fd2d6a61a6a86c3,"brandonwillard renamed 2022-02-16 21:54:06,brandonwillard labeled 2022-02-16 21:54:25,brandonwillard labeled 2022-02-16 21:54:25,ricardoV94 referenced 2022-02-17 06:25:42,ricardoV94 merged 2022-02-17 06:25:42,ricardoV94 closed 2022-02-17 06:25:42",ricardoV94 lucianopaz codecov[bot] brandonwillard,1,True
398,825,Allow partial shape information in `SpecifyShape` `Op`,ricardoV94,"Shape values of `None` can be used for dimensions that are not fixed

This seemed necessary to replace the more limited use of Rebroadcast in `convert_variable`:
https://github.com/aesara-devs/aesara/blob/c34f37f140a4e3c2006107b7a4dedc26064bb249/aesara/tensor/type.py#L326-L329

The ultimate goal, would be to allow us to work more gradually towards #732, such as in #821

***
Misc ideas:
* Leave original `SpecifyShape` intact and create new `SpecifyPartialShape` (some esoteric optimizations that used to work no longer do, see disabled subtensor tests)",enhancement important shape inference,brandonwillard,ricardoV94,2022-02-18 12:44:45,2022-04-18 18:50:54,aesara/tensor/shape.py tests/tensor/test_shape.py tests/link/test_jax.py tests/tensor/test_subtensor_opt.py tests/tensor/test_basic.py aesara/link/jax/dispatch.py aesara/link/numba/dispatch/basic.py aesara/tensor/basic_opt.py tests/link/test_numba.py tests/tensor/test_sharedvar.py aesara/tensor/subtensor_opt.py tests/tensor/test_basic_opt.py,c4ae86b43b7015ff0aad6c962a2a38532359cc4f c1fb1dbdab7aa17af9e7e539d4e91018a45cf17e f3e02f4dd5731f7c5c637e75733412fc02516730,"ricardoV94 review_requested 2022-02-18 12:44:48,ricardoV94 head_ref_force_pushed 2022-02-18 12:47:25,ricardoV94 head_ref_force_pushed 2022-02-18 13:24:41,ricardoV94 renamed 2022-02-18 13:25:04,ricardoV94 head_ref_force_pushed 2022-02-18 13:27:35,ricardoV94 head_ref_force_pushed 2022-02-18 16:57:19,ricardoV94 head_ref_force_pushed 2022-02-19 10:07:11,ricardoV94 head_ref_force_pushed 2022-02-19 11:22:01,brandonwillard labeled 2022-02-27 02:53:47,brandonwillard labeled 2022-02-27 02:54:02,brandonwillard labeled 2022-02-27 02:54:02,ricardoV94 head_ref_force_pushed 2022-03-13 19:39:19,ricardoV94 head_ref_force_pushed 2022-03-14 14:10:35,ricardoV94 head_ref_force_pushed 2022-03-14 14:46:47,ricardoV94 head_ref_force_pushed 2022-03-14 14:49:01,ricardoV94 head_ref_force_pushed 2022-03-14 18:09:48,ricardoV94 head_ref_force_pushed 2022-03-15 17:47:26,ricardoV94 head_ref_force_pushed 2022-03-15 18:31:56,ricardoV94 head_ref_force_pushed 2022-03-15 18:51:26,ricardoV94 renamed 2022-03-15 19:18:54,ricardoV94 head_ref_force_pushed 2022-03-15 19:34:58,ricardoV94 head_ref_force_pushed 2022-03-16 09:35:26,ricardoV94 head_ref_force_pushed 2022-03-16 17:19:35,ricardoV94 head_ref_force_pushed 2022-03-16 21:02:42,ricardoV94 head_ref_force_pushed 2022-04-05 07:57:39,ricardoV94 head_ref_force_pushed 2022-04-06 08:43:45,ricardoV94 head_ref_force_pushed 2022-04-07 12:22:21,ricardoV94 head_ref_force_pushed 2022-04-13 07:55:57,ricardoV94 head_ref_force_pushed 2022-04-13 09:38:20,ricardoV94 head_ref_force_pushed 2022-04-13 10:02:05,ricardoV94 ready_for_review 2022-04-13 10:02:09,ricardoV94 review_requested 2022-04-13 11:25:03,ricardoV94 head_ref_force_pushed 2022-04-14 08:53:15,ricardoV94 head_ref_force_pushed 2022-04-14 08:54:15,ricardoV94 review_requested 2022-04-14 08:58:50,ricardoV94 head_ref_force_pushed 2022-04-14 09:25:54,ricardoV94 assigned 2022-04-14 17:19:36,ricardoV94 head_ref_force_pushed 2022-04-15 12:35:11,ricardoV94 head_ref_force_pushed 2022-04-15 14:06:06,ricardoV94 head_ref_force_pushed 2022-04-18 11:20:32,ricardoV94 review_requested 2022-04-18 11:22:40,ricardoV94 head_ref_force_pushed 2022-04-18 11:22:56,brandonwillard referenced 2022-04-18 18:50:54,brandonwillard merged 2022-04-18 18:50:54,brandonwillard closed 2022-04-18 18:50:54",codecov[bot] ricardoV94 brandonwillard,53,True
399,826,Rename `*shape_from_params` to `*supp_shape_from_params` for clarity,ricardoV94,"I think this makes it more clear that the methods/functions intend to retrieve the support shape (and not e.g., independent parameters + support shape)",refactor,canyon289 brandonwillard,,2022-02-18 13:59:34,2022-02-20 17:33:23,tests/tensor/random/test_basic.py aesara/tensor/random/op.py tests/tensor/random/test_op.py aesara/tensor/random/basic.py,f0ebc3deb2b966591d4810cbcb670399ff750c03,"ricardoV94 labeled 2022-02-18 13:59:43,ricardoV94 head_ref_force_pushed 2022-02-18 14:01:30,ricardoV94 review_requested 2022-02-18 14:02:02,ricardoV94 head_ref_force_pushed 2022-02-19 07:06:17,ricardoV94 head_ref_force_pushed 2022-02-20 08:06:12,ricardoV94 referenced 2022-02-20 17:33:23,ricardoV94 merged 2022-02-20 17:33:23,ricardoV94 closed 2022-02-20 17:33:23,ricardoV94 head_ref_deleted 2022-03-13 14:54:02",codecov[bot] ricardoV94 canyon289 brandonwillard,7,True
400,827,Add type hint to `RandomVariable.rng_fn`,sujitpal,"Type hint added to `RandomVariable.rng_fn` based on https://github.com/pymc-devs/pymc/issues/5326

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [ ] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",typing,rlouf brandonwillard,,2022-02-18 23:26:37,2022-10-18 01:09:08,aesara/tensor/random/op.py,9614f42f59ba4db21b7a38994de46750ab26138a,"brandonwillard renamed 2022-02-18 23:32:46,rlouf review_dismissed 2022-10-17 08:44:10,brandonwillard labeled 2022-10-17 23:30:03,brandonwillard review_dismissed 2022-10-17 23:31:21,brandonwillard referenced 2022-10-18 01:09:07,brandonwillard merged 2022-10-18 01:09:08,brandonwillard closed 2022-10-18 01:09:08,sujitpal mentioned 2022-10-18 01:09:24,sujitpal subscribed 2022-10-18 01:09:24",codecov[bot] rlouf sujitpal brandonwillard,2,True
401,828,Pin `jaxlib` to a version less than or equal to 0.1.75,brandonwillard,This prevents low-level errors recently introduced by newer versions of `jaxlib` (e.g. see [here](https://github.com/aesara-devs/aesara/runs/5255142205?check_suite_focus=true#step:6:23)).,bug JAX important,,brandonwillard,2022-02-19 00:26:13,2022-02-19 01:50:52,requirements.txt .github/workflows/test.yml,9ef57ac1e4b040ad80e57cbea5a13ba8a8b01117,"brandonwillard labeled 2022-02-19 00:26:54,brandonwillard labeled 2022-02-19 00:26:54,brandonwillard labeled 2022-02-19 00:26:54,brandonwillard assigned 2022-02-19 00:26:59,brandonwillard head_ref_force_pushed 2022-02-19 00:28:10,brandonwillard renamed 2022-02-19 00:28:19,brandonwillard referenced 2022-02-19 01:50:52,brandonwillard merged 2022-02-19 01:50:52,brandonwillard closed 2022-02-19 01:50:52,brandonwillard head_ref_deleted 2022-02-19 01:50:54,xhochy mentioned 2022-03-07 21:31:20,xhochy subscribed 2022-03-07 21:31:20",codecov[bot] xhochy twiecki brandonwillard,6,True
402,829,Make `SequenceDB.register`'s signature conform to its base class',brandonwillard,"This PR fixes an unnecessary discrepancy between the signature of `OptimizationDatabase.register` and its subclass method `SequenceDB.register` by moving `SequenceDB.register`'s `position` argument to the keyword arguments&mdash;and after the set of positional arguments specified by `OptimizationDatabase.perform`.

Also, it contains a small bug fix for `aesara.graph.basic.get_var_by_name`.",bug enhancement refactor,,,2022-02-20 01:16:20,2022-02-20 03:45:49,aesara/tensor/math_opt.py aesara/ifelse.py aesara/gpuarray/blas.py aesara/graph/optdb.py aesara/gpuarray/optdb.py aesara/tensor/random/opt.py aesara/tensor/nnet/conv3d2d.py aesara/tensor/basic_opt.py aesara/gpuarray/dnn_opt.py aesara/gpuarray/opt.py aesara/sandbox/rng_mrg.py aesara/scan/opt.py aesara/tensor/nnet/basic.py aesara/tensor/nnet/batchnorm.py aesara/tensor/blas.py tests/graph/test_optdb.py doc/extending/graph_rewriting.rst aesara/compile/mode.py aesara/typed_list/opt.py aesara/tensor/subtensor_opt.py aesara/sparse/opt.py aesara/compile/builders.py aesara/tensor/blas_scipy.py aesara/graph/basic.py aesara/tensor/blas_c.py aesara/tensor/nnet/opt.py,6043fd6ce926b74c2e61f23117bbafa0b232b8df dedee5800cea0d7d47bf0dfd19fb62046ca2b449,"brandonwillard labeled 2022-02-20 01:17:21,brandonwillard labeled 2022-02-20 01:17:21,brandonwillard labeled 2022-02-20 01:17:21,brandonwillard head_ref_force_pushed 2022-02-20 01:17:37,brandonwillard renamed 2022-02-20 01:22:26,brandonwillard referenced 2022-02-20 03:45:49,brandonwillard merged 2022-02-20 03:45:49,brandonwillard closed 2022-02-20 03:45:49,brandonwillard head_ref_deleted 2022-02-20 03:45:52",codecov[bot] brandonwillard,1,True
403,831,Miscellaneous refactoring and minor bug fixes,brandonwillard,This PR is a collection of stand-alone refactorings and small bug fixes cherry picked from #824.,bug enhancement refactor,,,2022-02-21 22:28:03,2022-02-22 00:30:35,aesara/link/c/basic.py aesara/graph/features.py aesara/tensor/shape.py aesara/scan/basic.py tests/tensor/test_blas.py aesara/graph/destroyhandler.py tests/scan/test_opt.py aesara/gpuarray/opt_util.py tests/tensor/test_opt_uncanonicalize.py tests/tensor/test_basic.py tests/tensor/test_elemwise.py aesara/gradient.py aesara/graph/optdb.py tests/scalar/test_basic_sympy.py aesara/graph/opt.py aesara/tensor/subtensor.py tests/scan/test_views.py aesara/graph/utils.py tests/link/test_link.py aesara/graph/fg.py aesara/compile/__init__.py tests/compile/function/test_types.py tests/link/c/test_basic.py aesara/tensor/basic_opt.py aesara/gpuarray/dnn_opt.py tests/scalar/test_basic.py tests/scalar/test_math.py tests/tensor/test_math.py aesara/compile/profiling.py aesara/gpuarray/opt.py tests/tensor/test_basic_opt.py aesara/compile/function/types.py tests/tensor/test_math_opt.py aesara/link/utils.py aesara/link/basic.py aesara/scan/opt.py aesara/scan/op.py aesara/__init__.py tests/tensor/utils.py aesara/tensor/blas.py aesara/compile/debugmode.py aesara/compile/function/pfunc.py tests/scan/test_utils.py tests/graph/test_features.py tests/graph/test_destroyhandler.py aesara/scalar/basic.py tests/scan/test_basic.py tests/compile/function/test_pfunc.py aesara/scan/utils.py tests/tensor/test_subtensor.py aesara/tensor/basic.py aesara/compile/builders.py tests/graph/test_fg.py aesara/graph/basic.py tests/graph/test_basic.py aesara/graph/op.py doc/sandbox/interactive_debugger.rst tests/graph/test_opt.py,e1942e448aa1e29472cbb4e350e0244ebf982128 54cca88b6649272de2d6dc224dab334f5f55202a 02d8fc57bf43f4155a3207cb2d26d6b99b73c5cc 993e135cffca05a3b93b7888fccdce1325b1533b 504f5df7c3debeeed64c1c4189bb9bb722060fa9 492bed996930fb981c60bf4c21d378902b4e63ce 5bcfc3cddf003a44e7a31db9c49895a5923b9e75 18e5704a57ef7f7258352852d911aa056aec9695 e7cab7513248b31d608bb8027deddc6b9250c67b 16fc9391718300674018df8b46c1354adbda506a 00d521a45622ff53bb4152ac25e982ef794dfc59 890e4a8d5d8f716f13e30a707f6630457bbac73a 5db9a2c1117147f1916d1882e7f6b4b7d920ba7d 5402df106e0e31b04f48c3cc69b30e00c68253ee 3e12b3ec7cedaeeedf8b998a43db823d9b0c0de7 6b8c624345e58d0cce3de28cc14116336778b0bb 65d72d8bffa484128389e613f48edaf8113cdc1f 42b57be706761308f7882e8c75a6d4c104daebe5 f11cdafd5e7aaae79d1f3e38fe24df67e63c9595 b1899c0dab6a41809358d109faf5f14dbbfb945f 6baee1cac6646f8e206f6d6f2dcd2dc020245f6f 6b0ec8b4318617699566b7ae6b69f27c6c0c04a6 12e305cb5f844730d36467719fe1a1400ee5067a 6341fc998c2ea3e43f174b88f9c6355558cdacb9 1bee7d1a56a6fd2b7fd01bd4265e3f4acf56b411 1552e2d5a09e702cc389bbfcb0b759429d9a7432 2b95eed088d1ad1d764b518be732fd39d16026d3 13f538b8601cf7d3ed86322d289425d315e9fae1 c9c138d8bfcbb03ba9766c2d0147281d3498b605 aa0eec27c19756b1e762d2c46c55132a87ebdce4 4d86d8f91877bed0c2006802c6f0d14bb0ee3a54 2e02905f0b4d3a334b40d0ea399a9282630c8f6b 009f9c320ed91dbda7aea8be5d526678d7e5e16c 6cfeb00e0ec2d0b4532e6ccefda001b6acedd6ea 3bfc877bc5c072b3b7daa467a3d180613c9df685 87adf61c3f7d4056e820e18c058e723584475ed8 2b3746a98f524d2a21145b9ce796c2ec5b35229b 3f08ac97dde6e8fef16744cdcc32ecc2e9c69a96 1e2bb628356b3fda27fb604b73dc4456c01fc7fd e3b17db200d7ed6f3751879847cacb2886851e36 f72d28777cd547ae056d890829f062a44e7f52ff 995c17ac250ae04c3d5715d977d5a5b66f3fa471 e434dfaa27797b7da5a36d8d0320ea2eeb5d749f,"brandonwillard labeled 2022-02-21 22:28:32,brandonwillard labeled 2022-02-21 22:28:32,brandonwillard labeled 2022-02-21 22:28:32,brandonwillard head_ref_force_pushed 2022-02-21 22:43:01,brandonwillard head_ref_force_pushed 2022-02-21 23:40:40,brandonwillard referenced 2022-02-22 00:30:35,brandonwillard merged 2022-02-22 00:30:35,brandonwillard closed 2022-02-22 00:30:36,brandonwillard head_ref_deleted 2022-02-22 00:30:38",brandonwillard,0,True
404,832,Make `Feature`s less stateful,brandonwillard,"This PR moves most `Feature`s' state (e.g. variables/collections used to track the state of a `FunctionGraph`) to the `FunctionGraph` upon which the `Feature`s are operating, instead of dedicating one `Feature` and its state to a single `FunctionGraph`&mdash;as is currently done.  With these changes, a few complications surrounding `FunctionGraph` `pickle`ing and the general dynamic addition/attachment of `Feature`s are more easily addressed and/or avoided altogether.

Some more details:
* Many `Feature`s aren't truly stateful in a way that makes the relevant state specific to the `Feature` as much as the `FunctionGraph`.  In other words, most `Feature`s really only care about the state of the `FunctionGraph`s on which they operate, so, if that state is held by the `FunctionGraph`s themselves, `Feature`s can be more versatile.
* It's not possible/easy to transfer `Feature`s from one `FunctionGraph` to another (e.g. as is attempted in `FunctionGraph.clone_get_equiv`), because many `Feature`s are unnecessarily dedicated to a single `FunctionGraph`.",refactor,ricardoV94,brandonwillard,2022-02-21 23:39:03,2023-03-09 22:02:07,aesara/tensor/rewriting/elemwise.py aesara/graph/features.py aesara/tensor/basic.py aesara/compile/builders.py aesara/graph/destroyhandler.py aesara/compile/debugmode.py aesara/graph/type.py doc/config.rst aesara/typed_list/type.py tests/graph/test_features.py aesara/tensor/rewriting/basic.py tests/tensor/test_shape.py aesara/graph/fg.py tests/compile/function/test_types.py tests/graph/test_destroyhandler.py aesara/tensor/rewriting/shape.py aesara/compile/function/types.py,81febfb6fe2a1c034540f3022f056e6cca34d083 55b6e8da6c5b5d8af696afa83d1a807c3f137857 3e014032f4505d80a1bbe8347852f70c4e3b7f47 0383ff38986e2426de51cb23f021435fa9b2e355 036b10e9975976951649692de3904667a3637f8b 09ad95cf0ed2c315947563e776c632aaf995e1c6 880c9fd7b903a8bdae1e1b8c9b084eb8c9ae3093 65de875d5f7f8c2ab0c2bb03bd3eca4990a54c6e 345de4403df095771c43ff912a9fa9e18943c109 534f8bca708be39a8edabb38e86912944d324794 d54ee84351b5fa69f1c6941943b63de1ab534f82 2316b08a579d85573ee1c31a662ec4fb27822096,"brandonwillard head_ref_force_pushed 2022-02-21 23:45:00,brandonwillard review_requested 2022-02-22 00:32:37,brandonwillard review_requested 2022-02-22 00:32:37,brandonwillard assigned 2022-02-22 00:32:46,brandonwillard labeled 2022-02-22 00:32:52,brandonwillard head_ref_force_pushed 2022-02-22 00:44:23,brandonwillard head_ref_force_pushed 2023-03-05 04:41:59,brandonwillard head_ref_force_pushed 2023-03-08 00:51:07,brandonwillard referenced 2023-03-09 22:02:07,brandonwillard merged 2023-03-09 22:02:07,brandonwillard closed 2023-03-09 22:02:08,brandonwillard head_ref_deleted 2023-03-09 22:02:11",codecov[bot] ricardoV94 brandonwillard,6,True
405,833,Simplify `RandomVariable._infer_shape`,ricardoV94,"With the new interpretation of size, some of the logic in `_infer_shape` is no longer relevant.",enhancement refactor random variables,brandonwillard,,2022-02-22 13:33:08,2022-02-22 20:49:54,aesara/tensor/random/op.py,ada8b31a05440737f25dc4737737f432f1d8274a,"ricardoV94 labeled 2022-02-22 13:33:08,brandonwillard labeled 2022-02-22 20:34:13,brandonwillard labeled 2022-02-22 20:34:18,ricardoV94 referenced 2022-02-22 20:49:54,ricardoV94 merged 2022-02-22 20:49:54,ricardoV94 closed 2022-02-22 20:49:54",codecov[bot] ricardoV94 brandonwillard,1,True
406,834,Validate axis in `CAReduce` and handle negative axis in `squeeze`,ricardoV94,,enhancement,kc611 brandonwillard,,2022-02-24 12:10:29,2022-03-23 21:55:36,aesara/tensor/elemwise.py aesara/tensor/extra_ops.py tests/tensor/test_elemwise.py tests/tensor/test_extra_ops.py,c7a8c87fb265c08a394366e96949803ffaf38cca f874d1626cb2b83b4f8241260b2e922bd1294ce4,"ricardoV94 review_requested 2022-02-24 12:10:34,ricardoV94 head_ref_force_pushed 2022-02-24 12:21:34,ricardoV94 review_requested 2022-02-24 12:21:38,ricardoV94 head_ref_force_pushed 2022-02-24 12:27:28,ricardoV94 head_ref_force_pushed 2022-02-25 10:29:19,ricardoV94 head_ref_force_pushed 2022-02-25 10:34:02,ricardoV94 head_ref_force_pushed 2022-02-25 10:36:11,ricardoV94 head_ref_force_pushed 2022-03-02 16:26:38,brandonwillard review_dismissed 2022-03-02 18:56:33,ricardoV94 head_ref_force_pushed 2022-03-02 19:17:53,ricardoV94 review_requested 2022-03-02 20:35:42,ricardoV94 head_ref_force_pushed 2022-03-03 10:32:48,ricardoV94 head_ref_force_pushed 2022-03-13 14:58:00,ricardoV94 head_ref_force_pushed 2022-03-14 17:57:02,ricardoV94 head_ref_force_pushed 2022-03-16 17:25:53,ricardoV94 head_ref_force_pushed 2022-03-16 17:29:06,ricardoV94 head_ref_force_pushed 2022-03-17 08:51:41,ricardoV94 review_requested 2022-03-17 09:44:48,ricardoV94 head_ref_force_pushed 2022-03-21 18:00:22,ricardoV94 review_dismissed 2022-03-23 11:34:14,ricardoV94 head_ref_force_pushed 2022-03-23 11:34:14,brandonwillard labeled 2022-03-23 21:49:42,ricardoV94 referenced 2022-03-23 21:55:35,ricardoV94 merged 2022-03-23 21:55:35,ricardoV94 closed 2022-03-23 21:55:36",codecov[bot] ricardoV94 kc611 brandonwillard,9,True
407,837,Fix typing issues in core modules,brandonwillard,This PR fixes some typing issues in core Aesara modules and enables them for Mypy checking from here on.,enhancement refactor typing,,,2022-03-02 00:35:22,2022-03-02 18:56:31,aesara/sandbox/multinomial.py aesara/tensor/shape.py aesara/gpuarray/ctc.py aesara/graph/fg.py aesara/tensor/extra_ops.py aesara/tensor/blas.py tests/graph/test_compute_test_value.py aesara/scalar/basic.py aesara/graph/params_type.py tests/graph/test_types.py aesara/graph/opt_utils.py aesara/sparse/basic.py aesara/tensor/io.py tests/gpuarray/test_cgpukernelbase.py tests/graph/test_params_type.py aesara/tensor/var.py aesara/tensor/type.py tests/graph/test_op.py tests/tensor/test_io.py aesara/graph/opt.py aesara/tensor/subtensor.py aesara/gpuarray/blocksparse.py tests/link/c/c_code/test_cenum.h aesara/compile/ops.py tests/link/c/test_basic.py aesara/sandbox/fourier.py aesara/typed_list/basic.py tests/link/c/test_op.py aesara/compile/compiledir.py aesara/tensor/nnet/conv.py aesara/tensor/elemwise.py aesara/sparse/type.py doc/extending/using_params.rst aesara/raise_op.py tests/link/c/c_code/test_quadratic_function.c aesara/tensor/nnet/corr3d.py aesara/gpuarray/subtensor.py aesara/gpuarray/linalg.py aesara/configparser.py doc/extending/ctype.rst aesara/gpuarray/dnn.py aesara/graph/optdb.py tests/link/c/test_type.py aesara/tensor/math.py aesara/compile/sharedvalue.py aesara/link/c/type.py aesara/link/basic.py aesara/tensor/nnet/basic.py aesara/tensor/type_other.py aesara/compile/debugmode.py aesara/tensor/signal/pool.py aesara/gpuarray/extra_ops.py tests/link/c/test_params_type.py tests/compile/test_debugmode.py aesara/compile/builders.py aesara/compile/nanguardmode.py tests/graph/test_fg.py tests/compile/test_shared.py aesara/gpuarray/neighbours.py aesara/gpuarray/basic_ops.py aesara/link/c/params_type.py aesara/tensor/nnet/ctc.py doc/extending/other_ops.rst aesara/graph/type.py aesara/gpuarray/blas.py aesara/gpuarray/cudnn_defs.py setup.cfg aesara/gpuarray/pool.py aesara/graph/utils.py aesara/tensor/nnet/corr.py aesara/typed_list/type.py doc/extending/creating_a_c_op.rst aesara/graph/sandbox/typeattr.txt aesara/tensor/nnet/neighbours.py aesara/link/c/op.py aesara/gpuarray/reduction.py aesara/sandbox/rng_mrg.py aesara/graph/kanren.py aesara/gpuarray/type.py aesara/sparse/opt.py tests/test_ifelse.py aesara/tensor/basic.py aesara/graph/basic.py aesara/graph/op.py aesara/tensor/blas_c.py,1a3ab2d4b46bac1da65ed352e286abf77946d2cb ef00cc914f1a2663c5b9b650f20f78f36cc2f691 811dfd54075bfa24e87f0b4875ddfacf8b7f78de 2cf550c81c028390dcd3835a080aff1af21abe21 661035da1c99cccfb660e1bbd4a1681ecff3abca b03c8daa9caa830dbfa0ecf9b0dfcfecc9420d11 2f6609ed92512e7808601dd6e8362bb058823c53 aba6650c68cbd00de9357fafd0f10af2712a6611 fe2f249bcdf978a8b28eb2e91f2a748df6adaa50 89366a229c109c7500a9039df775958ba63ebe20 fc352d16603646f50d058c6e88284c6312c364f6 2ab8c932b6572990aa24e1f5fc6363f36835554b 06dd7d50ef918f35c6b5c7dca57716f8ed23fb15 17f740c20b4b578a1d83aa154942f0882769479c 50e9a19a9c522e1f599cfbaef707bb764051ffd5 5f5ad4a4ab7bab781c32923aa37fe49c5b805467,"brandonwillard head_ref_force_pushed 2022-03-02 01:52:57,brandonwillard head_ref_force_pushed 2022-03-02 01:58:46,brandonwillard head_ref_force_pushed 2022-03-02 02:08:11,brandonwillard head_ref_force_pushed 2022-03-02 02:11:49,brandonwillard head_ref_force_pushed 2022-03-02 02:15:52,brandonwillard labeled 2022-03-02 02:16:11,brandonwillard labeled 2022-03-02 02:16:11,brandonwillard head_ref_force_pushed 2022-03-02 05:08:31,brandonwillard head_ref_force_pushed 2022-03-02 05:13:12,brandonwillard head_ref_force_pushed 2022-03-02 05:24:34,brandonwillard head_ref_force_pushed 2022-03-02 17:26:44,brandonwillard referenced 2022-03-02 18:56:31,brandonwillard merged 2022-03-02 18:56:31,brandonwillard closed 2022-03-02 18:56:31,brandonwillard head_ref_deleted 2022-03-02 18:56:34,brandonwillard labeled 2022-04-07 22:17:32",codecov[bot] brandonwillard,1,True
408,839,Fix typing issues in the `aesara.link` sub-package,brandonwillard,This PR resolves issues and enables type checking for the `aesara.link` sub-package.,enhancement refactor typing,,,2022-03-03 00:14:18,2022-03-03 01:27:31,aesara/link/utils.py aesara/link/basic.py aesara/link/c/cvm.py setup.cfg aesara/link/c/lazylinker_c.py aesara/link/c/cmodule.py aesara/graph/op.py,797b9dd7c8b478de3f612fc82edbea7c1097eaed 10e2a6102ee75821d927f18295984014ef161651 ad8b7799b52b3626ad5f8f52a9608cb628c23e70 014870fc7a6d46d3f2801b8d71dfcdbb8d0b1337 dc9c390322c53dc030bc480f1a766cc9a18a19fd 7adb0354841196cb70fb377f4e8b6d4a510bfa3c,"brandonwillard labeled 2022-03-03 01:27:22,brandonwillard labeled 2022-03-03 01:27:22,brandonwillard referenced 2022-03-03 01:27:31,brandonwillard merged 2022-03-03 01:27:31,brandonwillard closed 2022-03-03 01:27:31,brandonwillard head_ref_deleted 2022-03-03 01:27:34,brandonwillard labeled 2022-04-07 22:17:32",codecov[bot] brandonwillard,1,True
409,840,Remove unaffiliated/invalid funding links,brandonwillard,This PR removes the unaffiliated/invalid funding links.,documentation,,,2022-03-03 18:34:23,2022-03-03 18:49:46,.github/FUNDING.yml README.rst .github/workflows/test.yml,eb87458142c7e5c96f612531dfa5ec67022b8309 f8609cdd2ad137f32182b2095ea9710398728715,"brandonwillard labeled 2022-03-03 18:36:13,brandonwillard renamed 2022-03-03 18:36:43,brandonwillard referenced 2022-03-03 18:49:46,brandonwillard merged 2022-03-03 18:49:46,brandonwillard closed 2022-03-03 18:49:46,brandonwillard head_ref_deleted 2022-03-03 18:49:49",brandonwillard,0,True
410,841,Create a Numba implementation for `CategoricalRV`,brandonwillard,This PR adds a Numba implementation for `CategoricalRV`.,Numba random variables,,brandonwillard,2022-03-03 22:01:24,2022-03-04 00:22:01,tests/link/test_numba.py aesara/link/numba/dispatch/random.py aesara/link/numba/dispatch/elemwise.py,d16a85c2623784b994f83c53cd443461d666ca7d 490c56a2b6fa06aae34e97735f6ca74ea534be8b,"brandonwillard labeled 2022-03-03 22:01:47,brandonwillard assigned 2022-03-03 22:01:56,brandonwillard head_ref_force_pushed 2022-03-03 23:13:33,brandonwillard labeled 2022-03-03 23:14:01,brandonwillard referenced 2022-03-04 00:22:01,brandonwillard merged 2022-03-04 00:22:01,brandonwillard closed 2022-03-04 00:22:01,brandonwillard head_ref_deleted 2022-03-04 00:22:04",codecov[bot] brandonwillard,1,True
411,843,Fix the Numba implementation of `CauchyRV`,brandonwillard,"This PR fixes the Numba implementation of `CauchyRV`.

The current tests for `RandomVariable` implementations that don't match the Aesara/NumPy RNG states need to be updated, because they're all set to `xfail` and&mdash;as a result&mdash;do not really verifying anything.  I might fix that in this PR as well.",Numba random variables,twiecki,brandonwillard,2022-03-03 23:10:44,2022-03-05 23:30:20,tests/link/test_numba.py aesara/link/numba/dispatch/random.py aesara/tensor/random/basic.py,babcc52d7b14f52bd52e370aacac52675f952efe d184c84242f10f9cc57dd94421cd9822e6d52d5a eb9e3700143a97ca2636853c798787426941cf05 9fef9acc95b925a5f934efa37d1b95b19fac3f77 5349add2039e5ee4aec6eb3c6734c5a6098f3de6,"brandonwillard labeled 2022-03-03 23:13:49,brandonwillard labeled 2022-03-03 23:13:54,brandonwillard assigned 2022-03-03 23:14:49,brandonwillard head_ref_force_pushed 2022-03-04 00:24:10,brandonwillard review_dismissed 2022-03-05 00:28:28,brandonwillard head_ref_force_pushed 2022-03-05 00:28:58,brandonwillard head_ref_force_pushed 2022-03-05 05:01:45,brandonwillard referenced 2022-03-05 23:30:20,brandonwillard merged 2022-03-05 23:30:20,brandonwillard closed 2022-03-05 23:30:20,brandonwillard head_ref_deleted 2022-03-05 23:30:23",codecov[bot] twiecki brandonwillard,1,True
412,847,"Revert ""Pin `jaxlib` to a version less than or equal to 0.1.75""",brandonwillard,Reverts aesara-devs/aesara#828,JAX,,,2022-03-07 19:17:56,2022-03-07 20:40:14,requirements.txt .github/workflows/test.yml,2c4b0727544e62b0bae0683ad8c132f9a841d151,"brandonwillard labeled 2022-03-07 19:17:56,brandonwillard referenced 2022-03-07 20:40:14,brandonwillard merged 2022-03-07 20:40:14,brandonwillard closed 2022-03-07 20:40:14,brandonwillard head_ref_deleted 2022-03-07 20:40:18",codecov[bot] brandonwillard,1,True
413,848,Refactor updates functionality and `Scan` inner-graph compilation,brandonwillard,"This PR consists of independent `FunctionGraph`, `Scan`, and `Function` construction changes that have been split off from #824.

One of the main results of these changes is that `Scan`'s inner-graph is handled almost exclusively as a single coherent `FunctionGraph`, and the inner-graph compilation and `Scan.perform` logic is much more concise.  

For instance, when pre-allocation is applied, `Scan` currently removes/reorders some of its inner-graph outputs just before compiling.  This is necessary because the `Function` compilation pipeline is somewhat rigid with respect to the way it handles updates (e.g. it assumes that all update steps are at the end of the outputs list of a `FunctionGraph`).  Those issues have been fixed in this PR and, now, a `Scan`'s inner-graph is consistent for the lifetime of the `Scan` and requires no manipulation before compilation.

This PR also adds some long-overdue refactoring of the `VM` interface and implementations.  Previously, the `CVM` was the only `VM` that would perform updates, and `Function` would perform the updates for all other `VM`s.  This meant that the updating logic needed to be reproduced in `Scan.perform` (see below)&mdash;mostly because `Scan.perform` was (perhaps unnecessarily) designed to use a `Function`'s `VM` and not the `Function` itself.  Now, every `VM` implementation performs updates, so there's no need for that logic/scope leak in `Scan` (or `Function` for that matter, but I've left it in for now).

- [x] Look into removing the [manual update logic](https://github.com/aesara-devs/aesara/blob/4ab08dea1e70e7ecbac65ae1dead415f95e8360d/aesara/scan/op.py#L1837) from `Scan.perform` (and its Cython implementation).
    This would be another big step toward simplifying the `Op.perform` logic in `Scan`.",enhancement important refactor Scan,twiecki,brandonwillard,2022-03-08 05:49:35,2022-05-09 23:10:14,aesara/link/c/basic.py aesara/misc/check_blas.py aesara/graph/features.py aesara/scan/basic.py aesara/link/c/lazylinker_c.py tests/compile/test_builders.py aesara/graph/destroyhandler.py tests/scan/test_opt.py tests/link/test_numba.py tests/sandbox/test_rng_mrg.py aesara/gradient.py aesara/link/numba/dispatch/scan.py tests/graph/utils.py aesara/link/vm.py doc/tutorial/profiling.rst doc/faq.rst aesara/graph/opt.py setup.cfg tests/test_printing.py aesara/graph/utils.py aesara/graph/fg.py tests/scan/test_printing.py tests/compile/function/test_types.py aesara/compile/profiling.py aesara/tensor/basic_opt.py aesara/scan/scan_perform.pyx aesara/compile/io.py aesara/compile/function/types.py tests/link/test_vm.py aesara/link/c/c_code/lazylinker_c.c aesara/scan/scan_perform_ext.py aesara/scan/opt.py aesara/scan/op.py aesara/link/utils.py aesara/sandbox/rng_mrg.py tests/compile/test_mode.py aesara/compile/debugmode.py aesara/configdefaults.py aesara/printing.py tests/scan/test_utils.py aesara/compile/mode.py aesara/compile/function/pfunc.py aesara/scan/c_code/scan_perform.c tests/scan/test_basic.py tests/link/test_numba_performance.py aesara/scan/utils.py doc/tutorial/profiling_example_out.prof aesara/compile/builders.py tests/graph/test_fg.py aesara/graph/basic.py tests/graph/test_basic.py doc/tutorial/debug_faq.rst aesara/graph/op.py aesara/link/jax/dispatch.py tests/tensor/nnet/test_conv.py,22a17ac6385617b37546122f24a1482c778ccb24 c04a99721af15735ecfd1fa482d09eb879f8d35a c51f82cb34fcbe8903f480744f10f4fa51debeab 2fa71f2f3b2d09f16f7af3bd67562d64e37e9298 52ab2f710507d54f29db723596e39e0788ce6130 02c5de59d4e6f929d2843f81bef63f802085b7e0 d4cc01ddafe71a1e4f21f2e4b2f62cb50fa3135d b78401ea71952fce145dbb98f78f81303ceeadfa e4b31b14aa58ea6a8382a7b40064a4774e7e5482 355d77a0d36e826d31b9acebc0d78978474654d9 c720f195550707ec12323afd63cc702393171083 be246b88e8e2871fe37459418382548224925d26 be91f5bd171ebcb2a60f3b1f7983845070dbffb1 e5bb2cf39ed97df83073ae35ef2c25627ebf8872 fba4184a1d25f0088fe724d7935beee071e68d93 95c5c9de3c08a062e7e8d2605fd0eee34c5941d4 74657728a7b942f4e4f6c42aec12cf2e775d6899 a2ce66d8d05bd59a32c0ec719c673adaaebf0a85 37b6bfd763da76bf08014e3024b3d7949f0e15c8 42edb6549cb1e3453102b65b78307c0503c0ae75 955901631ff2e445e09ba3031121bb3f12e7e63a 6a390e448abddeb170a46ed46bde35af8809494c e50d196a96aa819781ab4b9fb00fd20c5d77f89c a66c54979a0bcd1fa98245e14c3496ff782234fb c3d03bd81bcd334bdda334bb40f939ee9a14636c f014757eaca0e2186c6fb1d13a1f82d3340bfc1d a91a5eae43e2b68fd127e9e97f87c00a7316a201 98e32bb2ba24bcb36ad5881fc3243dd7109c7b14 cab491a13bc7170d6db6070e288e1121d60c3c52 0326bf3e22dd480bf1982a4416974306df6a8b01 abcfe4e002e2a254cf2a660efc6be7f647a26853 17e83760b8d8929c3ac2286b899d6aa4102f3bcb f8906292e65fe737a2bb00be9aa8bb323528fda6 4dd636c75a4e3b3069de36f7943581b1ffcee5f8 fc741eba0bb4bc865d8a9b3897cf55055f55cb62,"brandonwillard labeled 2022-03-08 05:49:35,brandonwillard labeled 2022-03-08 05:49:35,brandonwillard labeled 2022-03-08 05:49:35,brandonwillard assigned 2022-03-08 05:49:36,brandonwillard head_ref_force_pushed 2022-03-10 22:38:29,brandonwillard head_ref_force_pushed 2022-03-11 03:04:20,brandonwillard head_ref_force_pushed 2022-03-13 00:39:28,brandonwillard head_ref_force_pushed 2022-03-13 00:39:41,brandonwillard head_ref_force_pushed 2022-03-13 02:23:55,brandonwillard head_ref_force_pushed 2022-03-30 04:29:27,brandonwillard head_ref_force_pushed 2022-04-01 05:00:03,brandonwillard head_ref_force_pushed 2022-04-01 05:00:30,brandonwillard head_ref_force_pushed 2022-04-01 05:00:47,brandonwillard head_ref_force_pushed 2022-04-01 18:05:10,brandonwillard head_ref_force_pushed 2022-04-01 18:08:11,brandonwillard head_ref_force_pushed 2022-04-02 06:20:35,brandonwillard head_ref_force_pushed 2022-04-02 06:47:21,brandonwillard head_ref_force_pushed 2022-04-03 00:23:24,brandonwillard head_ref_force_pushed 2022-04-03 01:15:29,brandonwillard head_ref_force_pushed 2022-04-03 22:38:26,brandonwillard head_ref_force_pushed 2022-04-04 04:27:41,brandonwillard head_ref_force_pushed 2022-04-04 04:27:58,brandonwillard head_ref_force_pushed 2022-04-05 23:50:32,brandonwillard ready_for_review 2022-04-06 00:59:53,brandonwillard review_requested 2022-04-06 00:59:57,brandonwillard review_requested 2022-04-06 01:00:04,brandonwillard labeled 2022-04-06 01:00:54,brandonwillard renamed 2022-04-06 01:02:04,brandonwillard head_ref_force_pushed 2022-04-07 00:50:38,brandonwillard head_ref_force_pushed 2022-04-09 20:01:21,brandonwillard head_ref_force_pushed 2022-04-09 20:29:22,brandonwillard head_ref_force_pushed 2022-04-11 17:17:54,brandonwillard head_ref_force_pushed 2022-04-19 00:53:16,brandonwillard head_ref_force_pushed 2022-04-28 01:30:24,brandonwillard head_ref_force_pushed 2022-04-29 05:30:46,brandonwillard head_ref_force_pushed 2022-04-29 17:36:03,twiecki subscribed 2022-05-01 23:31:36,brandonwillard subscribed 2022-05-01 23:31:36,ricardoV94 subscribed 2022-05-01 23:31:36,kc611 subscribed 2022-05-01 23:31:36,brandonwillard head_ref_force_pushed 2022-05-02 19:35:41,brandonwillard head_ref_force_pushed 2022-05-09 22:03:17,brandonwillard referenced 2022-05-09 23:10:14,brandonwillard merged 2022-05-09 23:10:14,brandonwillard closed 2022-05-09 23:10:14,brandonwillard head_ref_deleted 2022-05-09 23:10:18",codecov[bot] kc611 brandonwillard ricardoV94 twiecki,8,True
414,854,Fix a memory leak in the C implementation of `DimShuffle`,brandonwillard,Closes #852 and #849.,bug important C-backend performance concern,,brandonwillard,2022-03-11 02:00:34,2022-03-11 04:25:55,tests/tensor/test_elemwise.py aesara/tensor/c_code/dimshuffle.c,5cfb7eaf1adb779a51f2bfb8edd26c8d56f8bf70,"brandonwillard connected 2022-03-11 02:04:17,brandonwillard head_ref_force_pushed 2022-03-11 03:00:31,brandonwillard assigned 2022-03-11 03:01:54,brandonwillard labeled 2022-03-11 03:02:03,brandonwillard labeled 2022-03-11 03:02:03,brandonwillard labeled 2022-03-11 03:05:21,brandonwillard labeled 2022-03-11 03:05:21,brandonwillard referenced 2022-03-11 04:25:55,brandonwillard merged 2022-03-11 04:25:55,brandonwillard closed 2022-03-11 04:25:55,brandonwillard head_ref_deleted 2022-03-11 04:25:58",codecov[bot] brandonwillard,1,True
415,855,Fix `DiffOp` output type when input has partially known shape,ricardoV94,Closes #823 ,,brandonwillard,,2022-03-11 11:50:02,2022-03-14 06:18:46,aesara/tensor/extra_ops.py tests/tensor/test_extra_ops.py,8045713499d996782104123e6c09dcde34b14f76 62e75c558744629bca9b0aa6344b43733bd2fe7d,"ricardoV94 review_requested 2022-03-11 11:50:10,ricardoV94 head_ref_force_pushed 2022-03-11 12:07:23,ricardoV94 head_ref_force_pushed 2022-03-13 14:56:26,ricardoV94 review_requested 2022-03-13 14:58:55,ricardoV94 head_ref_force_pushed 2022-03-13 16:34:52,ricardoV94 referenced 2022-03-14 06:18:45,ricardoV94 merged 2022-03-14 06:18:45,ricardoV94 closed 2022-03-14 06:18:46,ricardoV94 head_ref_deleted 2022-03-16 17:23:33",codecov[bot] ricardoV94 brandonwillard,6,True
416,863,Convert shapes to scalar tuples in the Numba `BroadcastTo` implementation,brandonwillard,"This PR converts each element of the varargs `shape` argument of `BroadcastTo` to scalar integers, which enables use of `BroadcastTo` in Numba when the shape inputs aren't already scalars (e.g. when the shape values are `Subtensor` outputs and&mdash;as a result&mdash;scalar `np.ndarray`s).",bug Numba,,brandonwillard,2022-03-17 00:55:45,2022-03-17 06:05:07,aesara/link/numba/dispatch/extra_ops.py aesara/link/numba/dispatch/elemwise.py tests/tensor/test_extra_ops.py tests/link/test_numba.py aesara/link/numba/dispatch/basic.py aesara/tensor/extra_ops.py,5d2cafa047c8605dd3c924fd9eeebc670586c0f1 13724013593f02f29d8e09ebf7e19faa7d3457fc 82d05373df8f1608324e1d59dfcf41e20f02a4cb,"brandonwillard assigned 2022-03-17 00:55:57,brandonwillard labeled 2022-03-17 00:56:07,brandonwillard labeled 2022-03-17 00:56:07,brandonwillard head_ref_force_pushed 2022-03-17 04:28:18,brandonwillard head_ref_force_pushed 2022-03-17 04:54:11,brandonwillard referenced 2022-03-17 06:05:07,brandonwillard merged 2022-03-17 06:05:07,brandonwillard closed 2022-03-17 06:05:07,brandonwillard head_ref_deleted 2022-03-17 06:05:10",codecov[bot] brandonwillard,1,True
417,864,Use new JAX index update approach when available,brandonwillard,This PR uses the new JAX index update approach for `IncSubtensor` when available.,JAX important,,brandonwillard,2022-03-17 03:20:45,2022-03-17 04:27:20,aesara/link/jax/dispatch.py,f5e78a05e1f0157b953f5938489d5f1c30eccec0,"brandonwillard labeled 2022-03-17 03:21:13,brandonwillard labeled 2022-03-17 03:21:13,brandonwillard assigned 2022-03-17 03:21:15,brandonwillard referenced 2022-03-17 04:27:20,brandonwillard merged 2022-03-17 04:27:20,brandonwillard closed 2022-03-17 04:27:20,brandonwillard head_ref_deleted 2022-03-17 04:27:23",codecov[bot] brandonwillard,1,True
418,865,Fix Numba CAReduce infinite identity values for non-floats,brandonwillard,This PR fixes an issue with the Numba implementation of `CAReduce` when the identity values are `inf` and the accumulation dtype is an integer/non-float.,bug Numba,,brandonwillard,2022-03-17 21:31:12,2022-03-17 22:59:37,tests/link/test_numba.py aesara/link/numba/dispatch/elemwise.py,497bd8024d3156bf8d02b0513081525aafa84112,"brandonwillard labeled 2022-03-17 21:32:36,brandonwillard labeled 2022-03-17 21:32:36,brandonwillard assigned 2022-03-17 21:32:43,brandonwillard referenced 2022-03-17 22:59:37,brandonwillard merged 2022-03-17 22:59:37,brandonwillard closed 2022-03-17 22:59:37,brandonwillard head_ref_deleted 2022-03-17 22:59:40",brandonwillard,0,True
419,866,Convert SciPy scalar function inputs to acceptable dtypes in Numba implementations,brandonwillard,This PR converts the inputs of SciPy scalar ufuncs to dtypes that match the ufunc signatures.  This is necessary for some functions provided by the `numba-scipy` package.,bug Numba SciPy compatibility,,brandonwillard,2022-03-17 23:35:08,2022-03-18 01:52:46,aesara/link/utils.py tests/link/test_numba.py aesara/link/numba/dispatch/scalar.py,edf321e099c67e116451ea56e04dc2d79a81d25e 500e9be35dc392b0c1aafe03b76a9808280edf3e,"brandonwillard assigned 2022-03-17 23:35:22,brandonwillard labeled 2022-03-17 23:35:29,brandonwillard labeled 2022-03-17 23:35:29,brandonwillard labeled 2022-03-17 23:35:35,brandonwillard referenced 2022-03-18 01:52:46,brandonwillard merged 2022-03-18 01:52:46,brandonwillard closed 2022-03-18 01:52:47,brandonwillard head_ref_deleted 2022-03-18 01:52:49",brandonwillard,0,True
420,867,Use `params` argument in Numba's default `Op.perform` implementation,brandonwillard,"This PR enables the use of the `params` argument in the default `objmode` implementation for generic `Op.perform` methods.  With this change, `Op`s like `Assert` that don't have explicit Numba implementations and expect an extra `params` argument in their `Op.perform`s should now work correctly.",bug important Numba,,brandonwillard,2022-03-18 05:29:05,2022-03-18 06:59:36,tests/link/test_numba.py aesara/link/numba/dispatch/basic.py,9836962525f91cda5e7f8c2d29041d3055aadb59,"brandonwillard assigned 2022-03-18 05:29:17,brandonwillard labeled 2022-03-18 05:29:27,brandonwillard labeled 2022-03-18 05:29:27,brandonwillard labeled 2022-03-18 05:29:50,brandonwillard referenced 2022-03-18 06:59:36,brandonwillard merged 2022-03-18 06:59:36,brandonwillard closed 2022-03-18 06:59:36",codecov[bot] brandonwillard,1,True
421,868,Rename `Scalar` to `ScalarType`,brandonwillard,This PR renames `Scalar` to `ScalarType` and includes some typing fixes.,refactor,,brandonwillard,2022-03-19 00:39:47,2022-03-19 05:17:51,aesara/sandbox/multinomial.py aesara/link/c/basic.py doc/extending/other_ops.rst doc/extending/ctype.rst aesara/gpuarray/dnn.py aesara/scalar/sharedvar.py tests/tensor/test_basic.py aesara/gpuarray/elemwise.py setup.cfg aesara/tensor/subtensor.py tests/scalar/test_basic.py tests/tensor/test_math.py aesara/gpuarray/opt.py tests/tensor/test_basic_opt.py aesara/tensor/__init__.py aesara/tensor/nnet/basic.py aesara/tensor/nnet/batchnorm.py aesara/tensor/elemwise.py tests/scalar/test_type.py tests/graph/test_unify.py tests/link/c/test_params_type.py aesara/link/numba/dispatch/basic.py aesara/tensor/nnet/sigm.py aesara/scalar/basic.py aesara/tensor/subtensor_opt.py aesara/scan/utils.py tests/tensor/test_subtensor.py aesara/tensor/basic.py tests/link/c/c_code/test_quadratic_function.c aesara/scalar/math.py doc/sandbox/how_to_make_ops.rst aesara/link/c/params_type.py aesara/tensor/nnet/abstract_conv.py,e0384aebb017ffc7c6af2cbb28e7ea399d3038c1 327a95d9b62844230d014b1c36fa29cb1ffa1580 16dc25674aaed822094c571fab36edde03bcf04d 19cad1cf749426ff63727152cf3a90248165b442,"brandonwillard assigned 2022-03-19 00:40:13,brandonwillard labeled 2022-03-19 00:40:40,brandonwillard head_ref_force_pushed 2022-03-19 00:50:41,brandonwillard referenced 2022-03-19 05:17:51,brandonwillard merged 2022-03-19 05:17:51,brandonwillard closed 2022-03-19 05:17:51,brandonwillard head_ref_deleted 2022-03-19 05:17:53",codecov[bot] brandonwillard,1,True
422,869,Add Numba implementation for `DirichletRV` and fix `BroadcastTo` bug,brandonwillard,This PR adds a Numba implementation for `DirichletRV` and fixes a bug that occurs in Numba's `BroadcastTo` implementation when the shape values are not the same NumPy types.,bug enhancement Numba random variables,ricardoV94,brandonwillard,2022-03-19 03:21:25,2022-03-19 21:32:18,aesara/link/numba/dispatch/extra_ops.py tests/link/test_numba.py aesara/link/numba/dispatch/random.py,8d75116040b4614cd3ba53fb7d7279dde2d95a2a 2a6fe542a03178cede39a52d38a9db83f124752f efca2a54979fe30adbfa7311b8d6da58cb27a6a8,"brandonwillard assigned 2022-03-19 03:21:59,brandonwillard labeled 2022-03-19 03:22:08,brandonwillard labeled 2022-03-19 03:22:08,brandonwillard labeled 2022-03-19 03:22:14,brandonwillard renamed 2022-03-19 03:46:31,brandonwillard labeled 2022-03-19 03:47:24,brandonwillard head_ref_force_pushed 2022-03-19 19:37:00,brandonwillard head_ref_force_pushed 2022-03-19 20:01:12,brandonwillard referenced 2022-03-19 21:32:18,brandonwillard merged 2022-03-19 21:32:18,brandonwillard closed 2022-03-19 21:32:18,brandonwillard head_ref_deleted 2022-03-19 21:32:20",codecov[bot] ricardoV94 brandonwillard,3,True
423,872,Use type name in `Elemwise` and `CAReduce` `__str__` implementations,brandonwillard,This PR removes the hard-coded class names from `Elemwise` and `CAReduce` `__str__` implementations.,enhancement refactor,,brandonwillard,2022-03-20 23:04:07,2022-03-21 22:51:49,aesara/tensor/elemwise.py aesara/tensor/math_opt.py tests/tensor/test_elemwise.py,c37f414252bfd3134c45f97a60f41d6d6802e95d,"brandonwillard head_ref_force_pushed 2022-03-21 20:56:30,brandonwillard assigned 2022-03-21 22:51:35,brandonwillard labeled 2022-03-21 22:51:42,brandonwillard labeled 2022-03-21 22:51:42,brandonwillard referenced 2022-03-21 22:51:48,brandonwillard merged 2022-03-21 22:51:49,brandonwillard closed 2022-03-21 22:51:49,brandonwillard head_ref_deleted 2022-03-21 22:51:51",codecov[bot] brandonwillard,1,True
424,873,Remove old warning when using a dict for updates,ricardoV94,,refactor,brandonwillard,,2022-03-22 16:20:23,2022-03-22 19:28:10,aesara/compile/function/__init__.py,3aed88b99b3de5f822ab425d83df8b81356f17a5,"brandonwillard referenced 2022-03-22 19:28:10,brandonwillard merged 2022-03-22 19:28:10,brandonwillard closed 2022-03-22 19:28:10,brandonwillard labeled 2022-03-22 19:28:27",codecov[bot] ricardoV94 brandonwillard,1,True
425,880,Add JAX dispatch for SolveTriangular Op,zaxtax,"This adds a JAX dispatch for the SolveTriangular Op. The unit test isn't the most thorough but it should be sufficient for now.

Resolves #846


Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

",,ricardoV94,,2022-03-30 23:36:12,2022-03-31 18:06:26,tests/link/test_jax.py aesara/link/jax/dispatch.py,605c8b19ef23009d7dc24332e0f0af13fae55fe1,"ricardoV94 renamed 2022-03-31 03:57:42,zaxtax mentioned 2022-03-31 09:27:29,zaxtax subscribed 2022-03-31 09:27:29,zaxtax head_ref_force_pushed 2022-03-31 09:44:47,ricardoV94 referenced 2022-03-31 18:06:26,ricardoV94 merged 2022-03-31 18:06:26,ricardoV94 closed 2022-03-31 18:06:26,zaxtax head_ref_deleted 2022-03-31 20:01:00",codecov[bot] ricardoV94 zaxtax,7,True
426,882,Load the sparse shared constructor support at package-level,brandonwillard,This fixes an issue with `aesara.shared` when it's used with sparse matrices and `aesara.shared` isn't loaded first.,bug,danhphan,brandonwillard,2022-04-04 23:40:45,2022-04-05 19:14:11,tests/tensor/test_slinalg.py tests/gpuarray/test_elemwise.py aesara/configparser.py aesara/tensor/math_opt.py aesara/link/c/cvm.py aesara/ifelse.py .pre-commit-config.yaml tests/compile/test_builders.py tests/gpuarray/test_rng_mrg.py tests/scan/test_opt.py tests/tensor/test_basic.py tests/diverse_tests.py aesara/tensor/nlinalg.py tests/sandbox/test_rng_mrg.py aesara/gradient.py tests/tensor/test_elemwise.py tests/gpuarray/test_opt.py tests/tensor/test_io.py tests/sparse/test_basic.py aesara/misc/may_share_memory.py tests/scalar/test_basic_sympy.py aesara/tensor/math.py tests/gpuarray/test_dnn.py tests/gpuarray/test_fft.py tests/test_gradient.py tests/scan/test_printing.py tests/compile/function/test_types.py aesara/compile/profiling.py tests/scalar/test_basic.py tests/tensor/test_math.py aesara/link/c/op.py tests/tensor/test_basic_opt.py tests/link/test_vm.py tests/tensor/test_math_opt.py tests/typed_list/test_basic.py aesara/sandbox/rng_mrg.py aesara/tensor/nnet/batchnorm.py aesara/__init__.py tests/tensor/test_inplace.py tests/tensor/test_blas_c.py tests/link/c/test_params_type.py aesara/scalar/basic.py tests/compile/function/test_function.py tests/scan/test_basic.py tests/tensor/test_fft.py aesara/tensor/random/utils.py aesara/scan/checkpoints.py tests/compile/function/test_pfunc.py tests/gpuarray/check_dnn_conv.py tests/test_dictionary_output.py tests/tensor/test_subtensor.py tests/gpuarray/test_pool.py tests/tensor/random/test_utils.py tests/link/test_jax.py tests/tensor/nnet/test_abstract_conv.py aesara/scalar/math.py tests/tensor/nnet/test_conv.py tests/sparse/test_sparse.py aesara/tensor/nnet/abstract_conv.py,38a8d04044866bcd37f09b73a6d146bc432f5356 63e058a4ea5d44f0bf275bde654da03b8ddb7d8b,"brandonwillard assigned 2022-04-04 23:41:09,brandonwillard labeled 2022-04-04 23:41:13,brandonwillard head_ref_force_pushed 2022-04-05 01:14:26,brandonwillard head_ref_force_pushed 2022-04-05 17:35:03,brandonwillard referenced 2022-04-05 19:14:11,brandonwillard merged 2022-04-05 19:14:11,brandonwillard closed 2022-04-05 19:14:11,brandonwillard head_ref_deleted 2022-04-05 19:14:14",codecov[bot] danhphan brandonwillard,3,True
427,883,Add JAX implementation for `BroadcastTo`,danhphan,"This PR adds a JAX dispatch for the `BroadcastTo` `Op`. 

Closes #859

The unit tests are similar to Numba's tests, but only cover cases with `shape` is `TensorConstant`, as JAX does not support dynamic shapes yet.",enhancement JAX,twiecki,,2022-04-05 08:40:13,2022-04-07 18:54:22,tests/link/test_jax.py aesara/link/jax/dispatch.py,3fc6c019d513c1adb38c140ae0de23f16ee9336b,"brandonwillard head_ref_force_pushed 2022-04-06 20:00:29,brandonwillard labeled 2022-04-06 20:01:42,brandonwillard labeled 2022-04-06 20:01:42,brandonwillard renamed 2022-04-06 20:02:39,brandonwillard referenced 2022-04-07 18:54:22,brandonwillard merged 2022-04-07 18:54:22,brandonwillard closed 2022-04-07 18:54:22,danhphan head_ref_deleted 2022-04-12 01:51:54",codecov[bot] brandonwillard twiecki danhphan,7,True
428,884,Harmonize softplus implementations,ricardoV94,"There were slight differences between the implementations for different backends. 

* Removed zero cutoff in `C` implementation. As discussed in https://github.com/aesara-devs/aesara/issues/29#issuecomment-681913949, this is probably not that helpful
* Added missing branch in JAX implementation.
* Clarified this Op offers both speed and stability benefits.",enhancement refactor,brandonwillard,ricardoV94,2022-04-05 09:44:48,2022-11-24 14:21:05,aesara/link/jax/dispatch/scalar.py aesara/scalar/math.py,cc3344355b47d1078370b66dd231ddd106488bfc,"brandonwillard labeled 2022-04-07 18:52:02,brandonwillard labeled 2022-04-07 18:52:02,ricardoV94 assigned 2022-04-07 18:52:07,ricardoV94 head_ref_force_pushed 2022-04-08 09:11:53,rlouf review_dismissed 2022-11-24 10:35:26,rlouf head_ref_force_pushed 2022-11-24 10:35:26,rlouf head_ref_force_pushed 2022-11-24 10:51:25,rlouf head_ref_force_pushed 2022-11-24 11:24:03,rlouf head_ref_force_pushed 2022-11-24 12:51:42,rlouf referenced 2022-11-24 14:21:05,rlouf merged 2022-11-24 14:21:05,rlouf closed 2022-11-24 14:21:05",codecov[bot] ricardoV94 rlouf brandonwillard,1,True
429,888,Add JAX implementation for BroadcastTo,danhphan,"This PR adds a JAX dispatch for the BroadcastTo Op. Closes #859  

Re-run with updated `pre-commit` setting.

The unit tests are similar to Numba's tests, but only cover cases with `shape` is `TensorConstant`, as JAX does not support dynamic shapes yet.

UPDATED: keep #883 and close this one. Thanks",duplicate,,,2022-04-06 04:04:32,2022-04-07 18:53:37,tests/link/test_jax.py aesara/link/jax/dispatch.py,e23a3efcc55fcc8a4c397770461a0d4bcad57f12,"brandonwillard closed 2022-04-07 18:53:37,brandonwillard labeled 2022-04-07 18:53:45,danhphan head_ref_deleted 2022-04-08 00:04:59",codecov[bot] brandonwillard danhphan,1,False
430,889,Fix `aesara.tensor.zeros` and `aesara.tensor.ones` with symbolic scalar shape values,danhphan,"This PR addresses `tensor.zeros` fails with symbolic scalar values in the issue #775 
Update tests, and also fixed similar issues for `tensor.ones`.

Both of the follow codes should work now:
`at.zeros(at.constant(5)).eval()`
`at.ones(at.constant(5)).eval()`

",,ricardoV94,,2022-04-06 05:55:59,2022-04-11 07:39:13,tests/tensor/test_basic.py aesara/tensor/basic.py,b82dd9b07d24093da1889afe85c40b591b4763cd,"ricardoV94 mentioned 2022-04-06 07:08:11,ricardoV94 subscribed 2022-04-06 07:08:11,ricardoV94 mentioned 2022-04-06 07:31:35,ricardoV94 subscribed 2022-04-06 07:31:35,brandonwillard renamed 2022-04-07 17:43:06,danhphan review_dismissed 2022-04-10 08:33:16,danhphan head_ref_force_pushed 2022-04-10 08:33:16,danhphan head_ref_force_pushed 2022-04-11 05:57:50,danhphan head_ref_force_pushed 2022-04-11 06:24:44,ricardoV94 mentioned 2022-04-11 07:35:52,ricardoV94 subscribed 2022-04-11 07:35:52,ricardoV94 referenced 2022-04-11 07:39:13,ricardoV94 merged 2022-04-11 07:39:13,ricardoV94 closed 2022-04-11 07:39:13,danhphan head_ref_deleted 2022-04-18 13:01:42,brandonwillard connected 2022-04-28 01:40:24",codecov[bot] ricardoV94 brandonwillard danhphan,22,True
431,891,Raise when SharedVariables are used as inputs of OpFromGraph,ricardoV94,"Like `function` this is not allowed in `OpFromGraph`, otherwise the number of inputs is duplicated.",,brandonwillard,,2022-04-07 13:03:58,2022-04-08 11:21:48,tests/compile/test_builders.py aesara/compile/builders.py,67a2ed31c94717e582b073fb5311c52842295d45,"ricardoV94 head_ref_force_pushed 2022-04-08 09:10:42,ricardoV94 referenced 2022-04-08 11:21:48,ricardoV94 merged 2022-04-08 11:21:48,ricardoV94 closed 2022-04-08 11:21:48",codecov[bot] ricardoV94 brandonwillard,1,True
432,892,Fix `Scan.truncate_gradient` default value and type,brandonwillard,This PR reverts `Scan.truncate_gradient` back to an `int` type.,bug Scan,ricardoV94,brandonwillard,2022-04-07 19:27:49,2022-04-07 20:32:42,aesara/scan/op.py,e76475e96a0cf8e8458ee5cc0243561c590f9301,"brandonwillard assigned 2022-04-07 19:29:08,brandonwillard labeled 2022-04-07 19:29:14,brandonwillard labeled 2022-04-07 19:29:14,brandonwillard referenced 2022-04-07 20:32:42,brandonwillard merged 2022-04-07 20:32:42,brandonwillard closed 2022-04-07 20:32:42,brandonwillard head_ref_deleted 2022-04-07 20:32:45,brandonwillard connected 2022-04-07 20:40:18",codecov[bot] ricardoV94 brandonwillard,1,True
433,894,Fix typing issues in `aesara.scan`,brandonwillard,This PR fixes some basic typing issues in `aesara.scan` and related modules.,enhancement Scan typing,,,2022-04-07 22:13:07,2022-04-09 14:53:05,aesara/scan/utils.py aesara/scan/opt.py aesara/scan/op.py aesara/scan/scan_perform_ext.py setup.cfg aesara/graph/type.py tests/scan/test_utils.py aesara/tensor/type.py aesara/compile/compilelock.py,8cbb28eea6844b2a9b53e2d824c614f7d387ecb4 f79a76152c3382d34819c0bae38815c1f14e8c6f bbfaea40034b4a99ffeff1aa85c222441eb2f002 b01a6e0a2d6039a10cf179d583f525313cfc64d8 2e2a497441633b0fb5380b16b6da338ad70bb461 3f71dbe6be501ac47e986596b560aa57bf7f005c,"brandonwillard labeled 2022-04-07 22:16:45,brandonwillard labeled 2022-04-07 22:16:46,brandonwillard labeled 2022-04-07 22:17:01,brandonwillard head_ref_force_pushed 2022-04-07 22:41:48,brandonwillard head_ref_force_pushed 2022-04-09 00:39:48,brandonwillard head_ref_force_pushed 2022-04-09 04:50:16,brandonwillard head_ref_force_pushed 2022-04-09 05:14:31,brandonwillard head_ref_force_pushed 2022-04-09 13:57:20,brandonwillard referenced 2022-04-09 14:53:05,brandonwillard merged 2022-04-09 14:53:05,brandonwillard closed 2022-04-09 14:53:05,brandonwillard head_ref_deleted 2022-04-09 14:53:09",codecov[bot] brandonwillard,1,True
434,896,Fix `Variable.default_update` and `Variable.update` cloning issues,brandonwillard,"This PR updates the `Variable.[default_update|update]` machinery so that cloning can handle these values (see https://github.com/Theano/Theano/issues/1467).

The first part of these changes involves some refactoring of the graph cloning code, which is currently split between `aesara.graph.basic.clone_replace` and `aesara.compile.function.pfunc.rebuild_collect_shared`.  The latter is a bottom-up approach that  does a lot of other unrelated things as well; it needs to be cleaned up or simply replaced altogether, and the former applies the latter twice in order to achieve the desired replacement semantics.

The first major change:

- [x] Base `clone_replace` on `clone_get_equiv`

With this change, `clone_replace`first toposorts the graph, walking bottom-up to do that, and then clones in a top-down manner.
Although this entails two passes through the graph, `clone_replace` is already performing two bottom-up passes, so that shouldn't be a problem.  This approach is a much simpler and consistent means of performing the replacements, and it should be considerably easier to apply additional replacements&mdash;like the ones involving `Variable.[default_update|update]`, which require a pass through the graph in order to find updates.

The second major change:

- [ ] Change `rebuild_collect_shared` and `clone_get_equiv` so that they can perform consistent replacements when `Variable.[default_update|update]` graphs are discovered

More generally, `rebuild_collect_shared` needs to be cleaned up and made to work in a TCO/stack-like fashion (e.g. something closer to `clone_get_equiv`).

Following (or possibly before) those:

- [x] Change `Variable.[default_update|update]` to `Variable.tag.[default_update|update]`

We shouldn't be dynamically adding fields to `Variable`s, especially not ones like these.  Moving these to `Variable.tag` is a good start, but we really need to handle this functionality differently, or replace it with an entirely different approach.
",graph objects,ricardoV94,brandonwillard,2022-04-10 01:23:39,2022-04-17 02:06:54,tests/compile/function/test_pfunc.py aesara/sandbox/rng_mrg.py doc/tutorial/examples.rst doc/library/tensor/random/utils.rst tests/graph/test_basic.py aesara/compile/function/pfunc.py tests/scan/test_utils.py tests/tensor/random/test_utils.py aesara/graph/basic.py aesara/graph/fg.py tests/sandbox/test_rng_mrg.py tests/tensor/random/test_opt.py doc/library/compile/function.rst aesara/compile/function/types.py aesara/tensor/random/utils.py,8e7bea0936b140bb92155cfcc3d600cf08522c00 9875a4d856a4f595601af6f1f6880e4fa23ee54c acf90120f0c10b338452a69ffe6df43994c48129 d64b5f468887c2026a78c99d2c74e0ff05a86b4a 0c4e9bb072ad868bda405a7a61ba405cf94e7488 409810e62ccd014c635aea6192cfb2d6ba8b170a,"brandonwillard assigned 2022-04-10 01:23:59,brandonwillard labeled 2022-04-10 01:24:06,brandonwillard labeled 2022-04-10 01:24:06,brandonwillard labeled 2022-04-10 01:24:06,brandonwillard labeled 2022-04-10 01:24:24,brandonwillard convert_to_draft 2022-04-10 01:25:11,brandonwillard head_ref_force_pushed 2022-04-10 01:40:41,brandonwillard head_ref_force_pushed 2022-04-10 20:51:05,brandonwillard labeled 2022-04-10 20:51:26,brandonwillard head_ref_force_pushed 2022-04-10 20:58:43,brandonwillard head_ref_force_pushed 2022-04-10 21:18:03,brandonwillard head_ref_force_pushed 2022-04-10 21:23:18,brandonwillard head_ref_force_pushed 2022-04-10 21:52:11,brandonwillard head_ref_force_pushed 2022-04-10 22:14:56,brandonwillard head_ref_force_pushed 2022-04-11 17:13:58,brandonwillard head_ref_force_pushed 2022-04-16 00:41:49,brandonwillard closed 2022-04-17 02:06:54,brandonwillard unlabeled 2022-04-17 02:07:09,brandonwillard unlabeled 2022-04-17 02:07:24,brandonwillard unlabeled 2022-04-17 02:07:24,brandonwillard unlabeled 2022-04-17 02:07:29",codecov[bot] ricardoV94 brandonwillard,8,False
435,899,Do not use CheckAndRaise c_code for non-dense inputs,ricardoV94,"This would fail not only with `Sparse` (as mentioned in #885) but also `Scalar` types

```python
import aesara.scalar
from aesara.raise_op import assert_op
x = aesara.scalar.float64(""x"")
a = assert_op(x, x>0)

(a + 1).eval({x: 1})
# CompileError: Compilation failed (return status=1):
# error: invalid cast from type ‘npy_float64’ {aka ‘double’} to type ‘PyObject*’ {aka ‘_object*’}
```",bug sparse tensors,brandonwillard,,2022-04-12 17:19:35,2022-04-14 13:34:21,aesara/raise_op.py tests/test_raise_op.py,401ce284ee261b9b74102828795233d4deca54c5,"brandonwillard labeled 2022-04-12 18:29:07,brandonwillard labeled 2022-04-12 18:29:07,ricardoV94 head_ref_force_pushed 2022-04-13 08:20:56,ricardoV94 head_ref_force_pushed 2022-04-14 09:11:04,ricardoV94 review_requested 2022-04-14 09:11:30,ricardoV94 head_ref_force_pushed 2022-04-14 09:28:33,brandonwillard referenced 2022-04-14 13:34:21,brandonwillard merged 2022-04-14 13:34:21,brandonwillard closed 2022-04-14 13:34:21",codecov[bot] ricardoV94 brandonwillard,2,True
436,901,Implement `at.diff` using basic slicing and subtraction `Op`s,larryshamalama,"Closes #860.

I'm happy to receive any pointers or suggestions via the creation of this PR. Hopefully, this PR can bring some discussion since there are gaps in my understanding.

Two questions:

- Currently, I did not remove the class `DiffOp` because the [Jax](https://github.com/aesara-devs/aesara/blob/main/aesara/link/jax/dispatch.py#L942) and [Numba](https://github.com/aesara-devs/aesara/blob/main/aesara/link/numba/dispatch/extra_ops.py#L71) seem to use it. Should I delete `DiffOp` altogether or just modify `at.diff` as in the current (first) commit?
- Should the loop be replaced by a implementation that builds on `aesara.scan`?",refactor,brandonwillard,,2022-04-13 02:18:06,2022-04-22 18:32:02,aesara/link/numba/dispatch/extra_ops.py tests/tensor/test_extra_ops.py tests/link/test_numba.py aesara/link/jax/dispatch.py aesara/tensor/extra_ops.py,8b2097a8d6c024bfb1d71cbf012078dbc94cc01d ab00cd5352acf6bd3ba24bf69658e947d4829ad0 93d7c21198b2a73270c90698ef5f3680aee68bdc cfbd24f9c56dec1124229519b22a2583878ac379 55f2d093f30fb5072ca60c3c4c8c71ab51e98331 dbbc85f87f3f002ace3e068b2f3d852213f6862c,"brandonwillard labeled 2022-04-13 20:11:30,brandonwillard renamed 2022-04-14 16:52:50,brandonwillard mentioned 2022-04-18 14:09:55,brandonwillard subscribed 2022-04-18 14:09:55,larryshamalama head_ref_force_pushed 2022-04-21 13:50:22,brandonwillard mentioned 2022-04-21 20:04:39,brandonwillard subscribed 2022-04-21 20:04:39,ricardoV94 mentioned 2022-04-21 20:04:39,ricardoV94 subscribed 2022-04-21 20:04:39,brandonwillard ready_for_review 2022-04-22 18:31:25,brandonwillard referenced 2022-04-22 18:32:02,brandonwillard merged 2022-04-22 18:32:02,brandonwillard closed 2022-04-22 18:32:02,larryshamalama mentioned 2022-04-22 21:36:17,larryshamalama subscribed 2022-04-22 21:36:17,larryshamalama head_ref_deleted 2022-04-23 00:03:33",codecov[bot] larryshamalama ricardoV94 brandonwillard,10,True
437,902,Make `OpFromGraph.make_node` interface consistent with its `Apply` nodes,brandonwillard,This PR closes #900.,bug important Scan,ricardoV94,brandonwillard,2022-04-13 21:10:22,2022-04-14 13:21:56,tests/compile/test_builders.py tests/scan/test_opt.py aesara/compile/builders.py,f07a719074b7411c550555c70b36a2870b1f4d0c 8a35de8e816539776a703586142c0cfd3dda515d,"brandonwillard assigned 2022-04-13 21:10:32,brandonwillard labeled 2022-04-13 21:10:43,brandonwillard labeled 2022-04-13 21:10:43,brandonwillard labeled 2022-04-13 21:11:18,brandonwillard head_ref_force_pushed 2022-04-13 21:47:40,brandonwillard head_ref_force_pushed 2022-04-13 23:13:08,brandonwillard referenced 2022-04-14 13:21:55,brandonwillard merged 2022-04-14 13:21:56,brandonwillard closed 2022-04-14 13:21:56,brandonwillard head_ref_deleted 2022-04-14 13:21:59",codecov[bot] ricardoV94 brandonwillard,2,True
438,903,Remove unnecessary cloning from `Scan` rewrites,brandonwillard,This PR removes a lot of unnecessary graph cloning from the `Scan` rewrites (mostly the push-out ones).,enhancement graph rewriting Scan,,brandonwillard,2022-04-13 23:32:11,2022-04-14 16:51:46,aesara/scan/opt.py,5fbc8ab4df3f86790b210736b41ca73c6f96019f f13f9e1a2cd259e0b4028c7eb093017ec4138637 48005d123a8bfd632579abff297e938743eb204c 51f8a7334b78dfe6a6db16750baf41973ed50a74,"brandonwillard assigned 2022-04-13 23:32:27,brandonwillard labeled 2022-04-13 23:32:32,brandonwillard labeled 2022-04-13 23:33:01,brandonwillard labeled 2022-04-13 23:33:01,brandonwillard referenced 2022-04-14 16:51:46,brandonwillard merged 2022-04-14 16:51:46,brandonwillard closed 2022-04-14 16:51:46,brandonwillard head_ref_deleted 2022-04-14 16:51:51",codecov[bot] brandonwillard,1,True
439,905,Fix shared variable comparisons in `OpFromGraph.make_node`,brandonwillard,This PR fixes an issue in `OpFromGraph.make_node` that prevented the use of `Constant` inputs in some cases.,bug,,brandonwillard,2022-04-14 18:50:30,2022-04-14 19:59:31,tests/compile/test_builders.py aesara/compile/builders.py,5975b9f9dac7dbb27973585e54de4da2accdd070,"brandonwillard assigned 2022-04-14 18:50:53,brandonwillard labeled 2022-04-14 18:50:56,brandonwillard referenced 2022-04-14 19:59:31,brandonwillard merged 2022-04-14 19:59:31,brandonwillard closed 2022-04-14 19:59:31,brandonwillard head_ref_deleted 2022-04-14 19:59:33",codecov[bot] brandonwillard,1,True
440,906,Add a missing inputs check to `OpFromGraph`,brandonwillard,This PR adds a check for missing inputs to `OpFromGraph.__init__`.,enhancement,,brandonwillard,2022-04-15 00:11:13,2022-04-15 01:15:27,tests/compile/test_builders.py aesara/compile/builders.py,bd70e26127ccde4a660352a8b0441d35c6db7d13,"brandonwillard labeled 2022-04-15 00:12:03,brandonwillard assigned 2022-04-15 00:12:05,brandonwillard referenced 2022-04-15 01:15:27,brandonwillard merged 2022-04-15 01:15:27,brandonwillard closed 2022-04-15 01:15:27,brandonwillard head_ref_deleted 2022-04-15 01:15:29",codecov[bot] brandonwillard,1,True
441,907,Allow shared variable input changes in `OpFromGraph.make_node`,brandonwillard,"This PR increases the flexibility of `OpFromGraph` by allowing it to change shared variable inputs to non-shared inputs when a node is (re)constructed via `OpFromGraph.make_node` using non-shared inputs in place of previously shared ones.

This additional functionality allows `OpFromGraph` nodes to work under more cloning scenarios, like the ones induced by nested `Scan`s and `Scan`'s push-out rewrites. Since `Scan` converts shared variables in its inner-graphs to regular non-shared variables and then maps those to variables to the original shared variables in the corresponding `Scan` node's inputs, it poses a real challenge to special `Op`s like `OpFromGraph`, which essential does the same thing with the shared variables in its inner-graphs.

Instead of maintaining the rigidity of `OpFromGraph`'s usage and demanding that other `Op`s like `Scan` handle `OpFromGraph` as a special case, this new functionality makes `OpFromGraph` behave more like every other `Op` by allowing arbitrary input changes that do not break the `Op`'s explicit `Type` contract.

To illustrate the issue, consider the following:

```python
import aesara
import aesara.tensor as at
from aesara.compile.builders import OpFromGraph


y = aesara.shared(1.0, name=""y"")

test_ofg = OpFromGraph([], [y])

def inner_func(x):
    out, _ = aesara.scan(lambda: test_ofg(), n_steps=x)
    return out

out, _ = aesara.scan(inner_func, sequences=[at.arange(1, 2)])

_ = aesara.function([], test_ofg())

out_fn = aesara.function([], out)

assert np.array_equal(out_fn(), [[1.0]])
```

In this example, the inner `Scan`'s `test_ofg()` (i.e. the one in the `lambda`) will be pushed out of the inner `Scan` because it doesn't depend on anything inside of the `Scan`'s loop body.

The inner `Scan` (i.e. the one in `inner_func`) will clone its inner-graph's `test_ofg()` node, replacing its shared variable input, `y`, with a non-shared variable `y_copy`.  In a non-nested `Scan` scenario, the inner-input variable `y_copy` would map to the `Scan`'s one and only non-sequence outer-input, which is the original `y`.  This is the same thing that `OpFromGraph` does: take the shared variables in the inner-graph and make them non-shared inputs to the `Op` that encapsulates/employs the inner-graph.

In the non-nested scenario, the push-out rewrite would replace the `y_copy` input to the new pushed-out `test_ofg()` node with the original `y`, and everything would be fine, because the `test_ofg` `Op` being used would still have a reference to the original `y` in its `test_ofg.shared_inputs` and never attempt to create a new `OpFromGraph`.

Unfortunately, the inner `Scan` itself will be cloned by the outer `Scan`, which will produce a new inner `Scan` that has a clone of the original `y` as its non-sequence outer-inputs. When the push-out rewrite is applied to the inner `Scan`, it will fail, because the rewrite will attempt to replace the inputs of the pushed-out `test_ofg()` node with the cloned `y`, but that cloned `y` will not be present in the `test_ofg` `Op`'s `test_ofg.shared_inputs`, so `test_ofg` will attempt to construct a new `Op` without adding the non-shared `y` clone as an explicit input.


- [x] There are still some issues with `OpFromGraph.shared_inputs` that should be considered carefully, because it would seem like the first time `test_ofg` is cloned by `Scan` the resulting `test_ofg` `Op` shouldn't be holding a reference to the original shared variable `y` in its `test_ofg.shared_inputs`.  The inner-graph of `test_ofg` doesn't use the shared variable `y` in any way, so `test_ofg.shared_inputs` (and `OpFromGraph.[shared_inputs, inputs, outputs]` in general) is always stale and potentially misleading.  Currently, this attribute is used as a means of avoiding unnecessary inner-graph cloning when the shared variables passed as inputs don't change, but, as this PR demonstrates, strict reliance on this value can cause problems.",bug enhancement important Scan,,brandonwillard,2022-04-15 05:17:33,2022-04-15 14:50:13,tests/compile/test_builders.py tests/scan/test_opt.py aesara/compile/builders.py,874af1832da3cb60952b69d73a759380b8a9b06e,"brandonwillard renamed 2022-04-15 05:18:23,brandonwillard assigned 2022-04-15 05:18:34,brandonwillard labeled 2022-04-15 05:18:48,brandonwillard labeled 2022-04-15 05:18:48,brandonwillard labeled 2022-04-15 05:18:48,brandonwillard labeled 2022-04-15 05:18:48,brandonwillard head_ref_force_pushed 2022-04-15 05:23:58,brandonwillard referenced 2022-04-15 14:50:13,brandonwillard merged 2022-04-15 14:50:13,brandonwillard closed 2022-04-15 14:50:14,brandonwillard head_ref_deleted 2022-04-15 14:50:16,brandonwillard renamed 2022-04-15 17:39:22",codecov[bot] brandonwillard,1,True
442,908,Make SciPy-based `RandomVariable` return values writeable,brandonwillard,"This PR fixes a read-only return value disparity between Aesara's `RandomVariable`s and SciPy's samplers. More specifically, Aesara returns read-only views, while SciPy doesn't, and this can lead to issues in compiled Aesara graphs.

For example, if we compile the following using the Python-only linker, we get an error during an in-place write attempt on the read-only return value produced by a `RandomVariable` `Op`:

```python
import aesara
import aesara.tensor as at
from aesara.compile.mode import Mode


X_rv = at.random.invgamma(0.5, 0.5)
Y_rv = at.sqrt(X_rv)

with aesara.config.change_flags(mode=Mode(linker=""py"")):
    Y_fn = aesara.function((), Y_rv)

# Make sure the `at.sqrt` operates in-place
assert Y_fn.maker.fgraph.outputs[0].owner.op.inplace_pattern == {0: 0}

aesara.dprint(Y_fn)
# Elemwise{Sqrt}[(0, 0)] [id A] ''   1
#  |invgamma_rv{0, (0, 0), floatX, False}.1 [id B] ''   0
#    |RandomGeneratorSharedVariable(<Generator(PCG64) at 0x7F62910AA580>) [id C]
#    |TensorConstant{[]} [id D]
#    |TensorConstant{11} [id E]
#    |TensorConstant{0.5} [id F]
#    |TensorConstant{0.5} [id F]

y_res = Y_fn()
# ValueError: assignment destination is read-only
# Apply node that caused the error: Elemwise{Sqrt}[(0, 0)](invgamma_rv{0, (0, 0), floatX, False}.out)
# Toposort index: 1
# Inputs types: [TensorType(float64, ())]
# Inputs shapes: [()]
# Inputs strides: [()]
# Inputs values: [array(23.19769934)]
# Outputs clients: [['output']]
```

Here's a more direct comparison showing the discrepancy:

```python
import scipy.stats


x_res = aesara.function([], at.random.invgamma(0.5, 0.5, size=(1,)))()

x_res.flags.writeable
# False


x_sp_res = scipy.stats.invgamma(0.5, 0.5).rvs(size=(1,))
x_sp_res.flags.writeable
# True
```",bug important random variables SciPy compatibility,,brandonwillard,2022-04-16 00:22:04,2022-04-16 01:15:47,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,bbc93dd6180103b04b088994a2ce13d2b107d9d6 231eb9063c686dda84b7bffb3c26ec89a4c367e1,"brandonwillard assigned 2022-04-16 00:22:23,brandonwillard labeled 2022-04-16 00:22:35,brandonwillard labeled 2022-04-16 00:22:35,brandonwillard labeled 2022-04-16 00:22:35,brandonwillard labeled 2022-04-16 00:22:35,brandonwillard referenced 2022-04-16 01:15:47,brandonwillard merged 2022-04-16 01:15:47,brandonwillard closed 2022-04-16 01:15:47,brandonwillard head_ref_deleted 2022-04-16 01:15:49",codecov[bot] brandonwillard,1,True
443,910,Remove `default_update`s from variables created in a `Scan` loop function,brandonwillard,"This PR closes #579 by removing the `.default_update` attribute on shared inner-graph variables during `Scan` node construction.

Simply put, shared variables currently do not honor the closed context/scope of inner-graph-having `Op`s, and this PR fixes that.

This work also fixes another shortcoming of the `RandomVariable` + `Scan`'s interaction: `Scan` inner-functions pick up the `.default_update`s for RNG states outside of their scopes.

A demonstration:
```python
import aesara
import aesara.tensor as at


srng = at.random.RandomStream()

x = srng.normal(name=""x"")

out, out_updates = aesara.scan(lambda: x, n_steps=4)

out_fn = aesara.function((), out, updates=out_updates)

# The values are all different, which is wrong, so this fails
assert len(set(out_fn())) == 1
```
What happens in this example is that the `Scan` takes responsibility for computing the `.default_update` on `x`'s RNG state, making the RNG state and&mdash;as a result&mdash;`x` change on every iteration within the `Scan`.

Currently, we are required to specify the scope manually via `non_sequences`:
```python
out_2, out_2_updates = aesara.scan(lambda x: x, non_sequences=[x], n_steps=4)
out_2_fn = aesara.function((), out_2, updates=out_2_updates)

# This works
assert len(set(out_2_fn())) == 1
```

With the changes in this PR, `Scan`s will only perform the shared variable updates specified by a user (e.g. by returning an updates `dict`) or created within the body of a `Scan` loop.",bug important random variables,ricardoV94,brandonwillard,2022-04-17 02:06:20,2022-04-18 22:27:05,aesara/scan/utils.py aesara/scan/basic.py aesara/compile/sharedvalue.py aesara/tensor/random/var.py tests/scan/test_utils.py tests/scan/test_basic.py,18c7cfc24049146e4afbae9ebe9d2d37826a9cfa ef5b968924f17ce7e417aa51b05fc4a6d43154ad 0f9976e8b6b050f8cbd5b043593e7837b3c906dd 1277c2a7442e38583dd54bfe949b8025b6ba78eb 904ead12521f2ca4ce3fb45c338910b23f0b2448,"brandonwillard labeled 2022-04-17 02:06:33,brandonwillard labeled 2022-04-17 02:06:34,brandonwillard assigned 2022-04-17 02:07:37,brandonwillard head_ref_force_pushed 2022-04-17 02:09:54,brandonwillard head_ref_force_pushed 2022-04-18 03:33:37,brandonwillard review_requested 2022-04-18 03:35:02,brandonwillard review_requested 2022-04-18 03:46:09,brandonwillard labeled 2022-04-18 03:46:58,brandonwillard head_ref_force_pushed 2022-04-18 03:52:43,brandonwillard head_ref_force_pushed 2022-04-18 07:25:40,brandonwillard head_ref_force_pushed 2022-04-18 17:43:24,brandonwillard review_requested 2022-04-18 17:59:04,brandonwillard head_ref_force_pushed 2022-04-18 18:51:23,brandonwillard referenced 2022-04-18 22:27:04,brandonwillard merged 2022-04-18 22:27:04,brandonwillard closed 2022-04-18 22:27:05,brandonwillard head_ref_deleted 2022-04-18 22:27:07",codecov[bot] ricardoV94 brandonwillard,13,True
444,911,Update the Cython `Scan` implementation's version number,brandonwillard,This PR fixes an issue that prevents recompilation of the Cython `Scan.perform` code.,bug important Scan,,brandonwillard,2022-04-17 18:21:09,2022-04-17 19:34:24,aesara/scan/scan_perform_ext.py aesara/scan/scan_perform.pyx aesara/scan/c_code/scan_perform.c,eafee83aceddecea8ec60e6bc55196619fddb874,"brandonwillard assigned 2022-04-17 18:21:19,brandonwillard labeled 2022-04-17 18:21:26,brandonwillard labeled 2022-04-17 18:21:26,brandonwillard labeled 2022-04-17 18:21:26,brandonwillard referenced 2022-04-17 19:34:24,brandonwillard merged 2022-04-17 19:34:24,brandonwillard closed 2022-04-17 19:34:24,brandonwillard head_ref_deleted 2022-04-17 19:34:26",codecov[bot] brandonwillard,1,True
445,914,Fix error with scalar inputs in CAReduce and squeeze,ricardoV94,Closes #913 ,bug,brandonwillard,,2022-04-19 09:33:29,2022-04-19 20:06:20,aesara/tensor/elemwise.py aesara/tensor/extra_ops.py tests/tensor/test_elemwise.py tests/tensor/test_extra_ops.py,a5fe874fbd8c422ce45b1e9e5edd86c1fda36658,"ricardoV94 labeled 2022-04-19 09:33:29,ricardoV94 review_requested 2022-04-19 09:33:29,ricardoV94 review_dismissed 2022-04-19 18:42:51,ricardoV94 head_ref_force_pushed 2022-04-19 18:45:05,ricardoV94 review_requested 2022-04-19 18:45:30,ricardoV94 referenced 2022-04-19 20:06:19,ricardoV94 merged 2022-04-19 20:06:19,ricardoV94 closed 2022-04-19 20:06:20",codecov[bot] ricardoV94 brandonwillard,7,True
446,915,Replace uses of Rebroadcast by SpecifyShape,ricardoV94,"This one is not as straightforward as I was hoping, mainly because of the current dependency on the ability to ""unbroadcast"" variables (i.e., to mask known broadcastable dimensions). This was done via `unbroadcast` and `patternbroadcast` which combined both `unbroadcast` and `addbroadcast`

""Unbroadcasting"" is still used explicitly in `Scan` and `broadcast_like`.

### Changes
For now explicit ""unbroadcasting"" goes through the more limited `MaskBroadcastable` `Op`, adapted from the old `Rebroadcast`. Everything else that used to rely on `Rebroadcast` uses `SpecifyShape` or the new thin wrapper `specify_broadcastable`.

Addresses part of #748 and #917

Closes #955",important refactor shape inference,brandonwillard,ricardoV94,2022-04-19 12:07:25,2022-07-07 22:09:19,aesara/tensor/shape.py aesara/link/numba/dispatch/tensor_basic.py aesara/scan/basic.py aesara/ifelse.py tests/tensor/test_type.py tests/link/test_numba.py tests/tensor/test_basic.py tests/tensor/test_opt_uncanonicalize.py aesara/tensor/type.py doc/extending/type.rst aesara/tensor/math.py aesara/tensor/subtensor.py tests/scan/test_printing.py tests/test_rop.py aesara/tensor/basic_opt.py tests/tensor/test_math.py tests/tensor/test_basic_opt.py aesara/tensor/nnet/conv.py aesara/scan/op.py aesara/tensor/nnet/batchnorm.py aesara/__init__.py aesara/tensor/blas.py aesara/compile/function/pfunc.py tests/tensor/test_shape.py doc/tutorial/shape_info.rst tests/tensor/nnet/test_batchnorm.py aesara/tensor/subtensor_opt.py aesara/tensor/nnet/opt.py aesara/sparse/opt.py tests/tensor/test_subtensor.py aesara/tensor/basic.py tests/link/test_jax.py tests/tensor/test_subtensor_opt.py aesara/link/jax/dispatch.py aesara/sparse/basic.py aesara/tensor/nnet/abstract_conv.py,11b0fbc965bbdb5f02c96f1cc63af08da68a10fa 34a235d536213f81f931e297ead7005ed278f72f 1b0c7d42e1a851af253d21f6ea6d2f2e10bfb2d5 902266709f733b736840c13193e880f5e21b485f 232f3ae651d4fd661802127752dadb8fcebce186 6084c79459e89ac4ba47117414a9724c996fa455 8a6a8719c5f600eae31324d4826dde134bcd863d 92cc10a231bce41d9ef23e10a5e1ffa9698a2358 5173587ab24dc47f8bf752420715b3fdd6e2f308,"ricardoV94 head_ref_force_pushed 2022-04-19 12:50:01,brandonwillard labeled 2022-04-19 16:48:58,brandonwillard labeled 2022-04-19 16:48:58,brandonwillard labeled 2022-04-19 16:48:58,ricardoV94 assigned 2022-04-19 16:49:04,ricardoV94 head_ref_force_pushed 2022-05-09 12:31:52,ricardoV94 head_ref_force_pushed 2022-05-09 12:54:31,ricardoV94 head_ref_force_pushed 2022-05-09 13:02:53,ricardoV94 head_ref_force_pushed 2022-05-09 13:09:00,ricardoV94 head_ref_force_pushed 2022-05-10 07:21:14,ricardoV94 head_ref_force_pushed 2022-05-10 07:26:27,ricardoV94 head_ref_force_pushed 2022-05-10 09:53:38,ricardoV94 head_ref_force_pushed 2022-05-10 09:56:16,ricardoV94 head_ref_force_pushed 2022-05-10 10:27:30,ricardoV94 head_ref_force_pushed 2022-05-10 11:35:08,ricardoV94 head_ref_force_pushed 2022-05-10 15:52:38,ricardoV94 head_ref_force_pushed 2022-05-10 16:00:54,ricardoV94 head_ref_force_pushed 2022-05-10 16:03:29,ricardoV94 head_ref_force_pushed 2022-05-11 07:55:12,ricardoV94 head_ref_force_pushed 2022-05-11 10:07:14,ricardoV94 ready_for_review 2022-05-11 10:09:28,ricardoV94 head_ref_force_pushed 2022-05-11 10:39:48,ricardoV94 head_ref_force_pushed 2022-05-12 10:43:26,ricardoV94 head_ref_force_pushed 2022-05-12 14:06:13,ricardoV94 head_ref_force_pushed 2022-05-17 15:58:28,ricardoV94 head_ref_force_pushed 2022-05-17 16:23:18,ricardoV94 head_ref_force_pushed 2022-05-17 16:36:17,ricardoV94 head_ref_force_pushed 2022-05-17 16:44:57,ricardoV94 head_ref_force_pushed 2022-05-28 09:56:40,ricardoV94 head_ref_force_pushed 2022-05-28 10:19:47,ricardoV94 head_ref_force_pushed 2022-05-28 16:50:29,ricardoV94 convert_to_draft 2022-05-28 17:54:32,ricardoV94 head_ref_force_pushed 2022-05-30 17:08:30,ricardoV94 head_ref_force_pushed 2022-05-31 07:30:09,ricardoV94 head_ref_force_pushed 2022-06-07 10:06:33,ricardoV94 ready_for_review 2022-06-07 11:20:17,ricardoV94 head_ref_force_pushed 2022-07-07 12:48:47,ricardoV94 review_requested 2022-07-07 12:48:57,ricardoV94 head_ref_force_pushed 2022-07-07 13:37:09,brandonwillard referenced 2022-07-07 22:09:19,brandonwillard merged 2022-07-07 22:09:19,brandonwillard closed 2022-07-07 22:09:19",codecov[bot] ricardoV94 brandonwillard,23,True
447,916,Deprecate patternbroadcast,ricardoV94,"This is a spinoff from #915 

This makes sure that direct calls to `patternbroadcast` in the library were not being done in order to `unbroadcast` inputs but only to specialize static shapes (i.e., to `addbroadcast`s). Such behavior is well supported by `SpecifyShape`. 

It's possible that some of the `specify_shape` used to replace `patternbroadcast` could be even more precise (i.e., not limited to broadcastable/or not), but that would require a bit more careful investigation.

This is related to #651 and #748, in that it removes one source of `Rebroadcast` in the graphs",important refactor shape inference,brandonwillard,ricardoV94,2022-04-19 13:19:19,2022-05-09 12:32:19,aesara/tensor/nnet/conv.py aesara/tensor/nnet/batchnorm.py aesara/tensor/basic.py aesara/tensor/math.py aesara/tensor/blas.py aesara/tensor/subtensor_opt.py tests/tensor/test_opt_uncanonicalize.py aesara/tensor/basic_opt.py tests/tensor/test_math.py aesara/sparse/basic.py aesara/tensor/nnet/opt.py aesara/sparse/opt.py aesara/tensor/nnet/abstract_conv.py,1ee1cf98f1c41de3b16f5ba4379eaae2a75115ed 72b5970840900bbccaf1a0ef1bebd025d7b9d09f 79d02213814a2713399f221e608eb1fdc0dffe47 58344b46671a8bf023d7af6ffb380a48d0c69df2 4847dad941070461f304a672bad2a6d7b8e17fed,"ricardoV94 head_ref_force_pushed 2022-04-19 13:45:28,ricardoV94 head_ref_force_pushed 2022-04-19 14:08:02,ricardoV94 head_ref_force_pushed 2022-04-19 15:22:49,brandonwillard labeled 2022-04-19 16:47:17,brandonwillard labeled 2022-04-19 16:47:17,brandonwillard labeled 2022-04-19 16:47:17,ricardoV94 assigned 2022-04-19 16:47:46,ricardoV94 review_requested 2022-04-19 16:55:34,ricardoV94 head_ref_force_pushed 2022-04-20 07:15:51,ricardoV94 head_ref_force_pushed 2022-04-20 07:16:08,ricardoV94 head_ref_force_pushed 2022-04-20 07:22:35,ricardoV94 head_ref_force_pushed 2022-04-20 07:28:04,ricardoV94 head_ref_force_pushed 2022-04-20 13:31:36,ricardoV94 convert_to_draft 2022-04-25 21:07:35,ricardoV94 closed 2022-05-09 12:32:19",codecov[bot] ricardoV94 brandonwillard,11,False
448,920,Add `kwargs` to `OpFromGraph`s constructed in `OpFromGraph.make_node`,brandonwillard,This PR fixes an issue caused by not copying the `OpFromGraph.kwargs` values to newly created `OpFromGraph` `Op`s produced by `OpFromGraph.make_node`.,bug,,brandonwillard,2022-04-20 00:50:36,2022-04-20 02:14:06,tests/compile/test_builders.py aesara/compile/builders.py,9531a61ba8e713f44461c99b093629170bc1304a,"brandonwillard head_ref_force_pushed 2022-04-20 00:56:57,brandonwillard head_ref_force_pushed 2022-04-20 00:59:34,brandonwillard assigned 2022-04-20 01:01:11,brandonwillard labeled 2022-04-20 01:01:14,brandonwillard referenced 2022-04-20 02:14:06,brandonwillard merged 2022-04-20 02:14:06,brandonwillard closed 2022-04-20 02:14:06,brandonwillard head_ref_deleted 2022-04-20 02:14:08",codecov[bot] brandonwillard,1,True
449,925,Fix a type consistency issue in `Apply.clone_with_new_inputs`,brandonwillard,This PR fixes a bug in `Apply.clone_with_new_inputs` that prevents the method from computing a new output `Type` when the input `Type`s change.  This bug causes graph cloning (e.g. via `aesara.graph.basic.clone_get_equiv`) to produce inconsistent `Apply` nodes.,bug important graph objects shape inference,,brandonwillard,2022-04-23 00:43:05,2022-04-23 02:14:08,tests/graph/test_basic.py aesara/graph/type.py aesara/graph/basic.py,f0d2276f3c5cf675c015d8b9840449cacf028ba1 00d8e7e16683b11abf3f0fe385986dea8d7e0fb5,"brandonwillard assigned 2022-04-23 00:43:21,brandonwillard labeled 2022-04-23 00:43:32,brandonwillard labeled 2022-04-23 00:43:32,brandonwillard labeled 2022-04-23 00:43:32,brandonwillard labeled 2022-04-23 00:43:32,brandonwillard referenced 2022-04-23 02:14:08,brandonwillard merged 2022-04-23 02:14:08,brandonwillard closed 2022-04-23 02:14:08,brandonwillard head_ref_deleted 2022-04-23 02:14:12",codecov[bot] brandonwillard,1,True
450,926,Fix `ScipyRandomVariable` issue when `size` is `None` and parameters are all broadcastable,brandonwillard,This PR fixes an issue that prevents `ScipyRandomVariable` from un-squeezing SciPy sample results.,bug important random variables SciPy compatibility,,brandonwillard,2022-04-24 16:53:57,2022-04-24 18:06:20,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,a004ac0a6ccea117597c9b7aa51e5e41e32831e7,"brandonwillard assigned 2022-04-24 16:54:09,brandonwillard labeled 2022-04-24 16:54:29,brandonwillard labeled 2022-04-24 16:54:29,brandonwillard labeled 2022-04-24 16:54:29,brandonwillard labeled 2022-04-24 16:56:52,brandonwillard referenced 2022-04-24 18:06:20,brandonwillard merged 2022-04-24 18:06:20,brandonwillard closed 2022-04-24 18:06:20,brandonwillard head_ref_deleted 2022-04-24 18:06:24",codecov[bot] brandonwillard,1,True
451,927,Use new JAX index update approach for `AdvancedIncSubtensor`,qipengchen,"This PR uses the new JAX index update approach for `jax_funcify_AdvancedIncSubtensor()`.
Like :
[Use new JAX index update approach when available #864](https://github.com/aesara-devs/aesara/pull/864)",enhancement JAX,ricardoV94 brandonwillard,,2022-04-25 12:36:55,2022-06-15 13:45:32,tests/link/test_jax.py aesara/link/jax/dispatch.py,802eef6fc80db543dfffb1f5235dba18c576ddea 2f31c00df8a012ae17251aa870983bd4429af53a,"ricardoV94 labeled 2022-04-25 12:43:46,brandonwillard labeled 2022-04-25 19:39:08,brandonwillard renamed 2022-04-25 19:43:08,qipengchen closed 2022-05-02 02:13:23,brandonwillard reopened 2022-05-02 05:16:23,qipengchen mentioned 2022-05-09 21:54:45,qipengchen subscribed 2022-05-09 21:54:45,qipengchen mentioned 2022-05-10 03:54:41,qipengchen subscribed 2022-05-10 03:54:41,qipengchen mentioned 2022-05-13 11:09:20,qipengchen subscribed 2022-05-13 11:09:20,qipengchen mentioned 2022-05-13 16:33:37,qipengchen subscribed 2022-05-13 16:33:38,brandonwillard convert_to_draft 2022-05-16 17:17:46,ricardoV94 head_ref_force_pushed 2022-05-26 12:56:09,qipengchen mentioned 2022-05-26 12:56:57,qipengchen subscribed 2022-05-26 12:56:57,ricardoV94 head_ref_force_pushed 2022-05-26 12:59:39,ricardoV94 head_ref_force_pushed 2022-06-15 07:50:54,ricardoV94 ready_for_review 2022-06-15 07:51:02,ricardoV94 head_ref_force_pushed 2022-06-15 08:12:27,ricardoV94 head_ref_force_pushed 2022-06-15 08:15:13,ricardoV94 review_requested 2022-06-15 08:15:26,brandonwillard referenced 2022-06-15 13:45:32,brandonwillard merged 2022-06-15 13:45:32,brandonwillard closed 2022-06-15 13:45:32",codecov[bot] brandonwillard ricardoV94 qipengchen twiecki,20,True
452,928,Allow broadcasting in `Elemwise.c_code`,ricardoV94,"I think this removes any necessity for `unbroadcast` uses mentioned in #915 and #916.

Closes #335 ",enhancement important C-backend NumPy compatibility,brandonwillard,ricardoV94,2022-04-25 12:50:52,2022-05-06 20:56:04,aesara/scalar/basic.py tests/tensor/test_elemwise.py aesara/tensor/elemwise_cgen.py aesara/tensor/elemwise.py,aaa9c3b19e66344d3aaa64533550bcfe96ba6ca5,"ricardoV94 labeled 2022-04-25 12:50:52,ricardoV94 labeled 2022-04-25 12:50:52,ricardoV94 head_ref_force_pushed 2022-04-25 12:51:36,ricardoV94 head_ref_force_pushed 2022-04-25 12:55:36,ricardoV94 convert_to_draft 2022-04-25 13:13:24,ricardoV94 head_ref_force_pushed 2022-04-25 13:57:36,ricardoV94 head_ref_force_pushed 2022-04-25 13:59:53,ricardoV94 head_ref_force_pushed 2022-04-25 14:07:08,ricardoV94 head_ref_force_pushed 2022-04-25 14:15:17,ricardoV94 ready_for_review 2022-04-25 15:19:11,ricardoV94 review_requested 2022-04-25 15:19:36,brandonwillard labeled 2022-04-25 18:44:24,ricardoV94 assigned 2022-04-25 18:44:32,brandonwillard labeled 2022-04-25 18:44:37,brandonwillard renamed 2022-04-29 18:49:45,ricardoV94 head_ref_force_pushed 2022-05-02 07:20:48,ricardoV94 review_requested 2022-05-02 07:24:04,ricardoV94 head_ref_force_pushed 2022-05-03 07:43:53,ricardoV94 head_ref_force_pushed 2022-05-06 10:06:37,ricardoV94 review_requested 2022-05-06 10:53:25,ricardoV94 referenced 2022-05-06 20:56:04,ricardoV94 merged 2022-05-06 20:56:04,ricardoV94 closed 2022-05-06 20:56:04,ricardoV94 head_ref_deleted 2022-07-17 13:18:41",codecov[bot] ricardoV94 brandonwillard,19,True
453,932,Add code of conduct,dgerlanc,"Add an Aesara code of conduct adapted from the Django code of conduct.

Resolves #931.
",documentation,ricardoV94 kc611 twiecki brandonwillard,dgerlanc,2022-04-25 23:34:50,2022-04-29 17:29:05,CODE_OF_CONDUCT.md,af93ba2e3144ec3908f62b77964c7059463a0922,"dgerlanc review_requested 2022-04-25 23:34:50,brandonwillard labeled 2022-04-26 00:15:30,brandonwillard review_requested 2022-04-26 00:16:05,brandonwillard review_requested 2022-04-26 00:16:05,brandonwillard review_requested 2022-04-26 00:16:05,dgerlanc review_dismissed 2022-04-26 16:51:59,dgerlanc head_ref_force_pushed 2022-04-26 16:55:05,dgerlanc review_requested 2022-04-26 16:55:16,dgerlanc review_requested 2022-04-26 16:55:22,dgerlanc review_requested 2022-04-26 16:55:23,brandonwillard mentioned 2022-04-26 16:55:53,brandonwillard subscribed 2022-04-26 16:55:53,dgerlanc assigned 2022-04-26 17:01:05,brandonwillard referenced 2022-04-29 17:29:05,brandonwillard merged 2022-04-29 17:29:05,brandonwillard closed 2022-04-29 17:29:06,dgerlanc head_ref_deleted 2022-05-08 17:17:49",kc611 brandonwillard ricardoV94 dgerlanc twiecki,10,True
454,939,Use `SeedSequence` in `RandomStream`,brandonwillard,"This PR closes #936 and removes the old/deprecated attributes that `RandomStream` adds to the variables it generates (e.g. `.rng`, `.update`).",enhancement important random variables,ricardoV94,brandonwillard,2022-04-29 03:02:37,2022-04-29 15:26:45,aesara/sandbox/rng_mrg.py aesara/compile/nanguardmode.py doc/library/tensor/random/utils.rst tests/tensor/random/test_utils.py tests/sandbox/test_rng_mrg.py tests/scan/test_basic.py aesara/tensor/random/utils.py,b6dc5233ee7e534430e4aa34ec93fb8df265a605 b6b7aef7b2e7ad461519064b9471d0ab8fba3861 a933bb3a0b88e47721fee75320be4023ca4932c5,"brandonwillard assigned 2022-04-29 03:02:46,brandonwillard labeled 2022-04-29 03:02:55,brandonwillard labeled 2022-04-29 03:02:55,brandonwillard labeled 2022-04-29 03:03:03,brandonwillard head_ref_force_pushed 2022-04-29 05:14:53,brandonwillard head_ref_force_pushed 2022-04-29 05:20:04,brandonwillard head_ref_force_pushed 2022-04-29 05:24:30,brandonwillard referenced 2022-04-29 15:26:44,brandonwillard merged 2022-04-29 15:26:44,brandonwillard closed 2022-04-29 15:26:45,brandonwillard head_ref_deleted 2022-04-29 15:26:47",codecov[bot] ricardoV94 brandonwillard,2,True
455,941,Fix static shape inference in `DimShuffle`,brandonwillard,This PR allows `DimShuffle` to perform static shape inference (instead of broadcast-only shape inference).,bug important,ricardoV94,brandonwillard,2022-04-29 20:58:19,2022-04-29 22:12:35,aesara/tensor/elemwise.py tests/tensor/test_elemwise.py,b1f088a5cef6875e4ceec89dc80eb32245fc2aaf,"brandonwillard labeled 2022-04-29 21:15:19,brandonwillard labeled 2022-04-29 21:15:19,brandonwillard assigned 2022-04-29 21:21:39,brandonwillard referenced 2022-04-29 22:12:35,brandonwillard merged 2022-04-29 22:12:35,brandonwillard closed 2022-04-29 22:12:35,brandonwillard head_ref_deleted 2022-04-29 22:12:38",codecov[bot] ricardoV94 brandonwillard,1,True
456,946,Add `Scan` input/output type annotations to `debugprint` output,brandonwillard,"Closes #945

Here are the results of printing a somewhat complicated `Scan` under these changes:
```python

Sum{acc_dtype=float64} [id A]
 |for{cpu,scan_fn} [id B] (outer_out_nit_sot-0)
 |Elemwise{scalar_minimum,no_inplace} [id C] (outer_in_nit_sot-0)
 | |Subtensor{int64} [id D]
 | | |Shape [id E]
 | | | |Subtensor{int64::} [id F] 'coefficients[0:]'
 | | |   |coefficients [id G]
 | | |   |ScalarConstant{0} [id H]
 | | |ScalarConstant{0} [id I]
 | |Subtensor{int64} [id J]
 |   |Shape [id K]
 |   | |Subtensor{int64::} [id L]
 |   |   |ARange{dtype='int64'} [id M]
 |   |   | |TensorConstant{0} [id N]
 |   |   | |TensorConstant{10} [id O]
 |   |   | |TensorConstant{1} [id P]
 |   |   |ScalarConstant{0} [id Q]
 |   |ScalarConstant{0} [id R]
 |Subtensor{:int64:} [id S] (outer_in_seqs-0)
 | |Subtensor{int64::} [id F] 'coefficients[0:]'
 | |ScalarFromTensor [id T]
 |   |Elemwise{scalar_minimum,no_inplace} [id C]
 |Subtensor{:int64:} [id U] (outer_in_seqs-1)
 | |Subtensor{int64::} [id L]
 | |ScalarFromTensor [id V]
 |   |Elemwise{scalar_minimum,no_inplace} [id C]
 |Elemwise{scalar_minimum,no_inplace} [id C] (outer_in_nit_sot-0)
 |A [id W] (outer_in_non_seqs-0)
 |k [id X] (outer_in_non_seqs-1)
 
 Inner graphs:
 
 for{cpu,scan_fn} [id B] (outer_out_nit_sot-0)
 >Elemwise{mul,no_inplace} [id Y] (inner_out_nit_sot-0)
 > |InplaceDimShuffle{x} [id Z]
 > | |coefficients[t] [id BA] -> [id S] (inner_in_seqs-0)
 > |Elemwise{pow,no_inplace} [id BB]
 >   |Subtensor{int64} [id BC]
 >   | |Subtensor{int64::} [id BD]
 >   | | |for{cpu,scan_fn} [id BE] (outer_out_sit_sot-0)
 >   | | | |k_copy [id BF] -> [id X] (inner_in_non_seqs-1) (n_steps)
 >   | | | |IncSubtensor{Set;:int64:} [id BG] (outer_in_sit_sot-0)
 >   | | | | |AllocEmpty{dtype='float64'} [id BH]
 >   | | | | | |Elemwise{add,no_inplace} [id BI]
 >   | | | | | | |k_copy [id BF] -> [id X] (inner_in_non_seqs-1)
 >   | | | | | | |Subtensor{int64} [id BJ]
 >   | | | | | |   |Shape [id BK]
 >   | | | | | |   | |Rebroadcast{(0, False)} [id BL]
 >   | | | | | |   |   |InplaceDimShuffle{x,0} [id BM]
 >   | | | | | |   |     |Elemwise{second,no_inplace} [id BN]
 >   | | | | | |   |       |A_copy [id BO] -> [id W] (inner_in_non_seqs-0)
 >   | | | | | |   |       |InplaceDimShuffle{x} [id BP]
 >   | | | | | |   |         |TensorConstant{1.0} [id BQ]
 >   | | | | | |   |ScalarConstant{0} [id BR]
 >   | | | | | |Subtensor{int64} [id BS]
 >   | | | | |   |Shape [id BT]
 >   | | | | |   | |Rebroadcast{(0, False)} [id BL]
 >   | | | | |   |ScalarConstant{1} [id BU]
 >   | | | | |Rebroadcast{(0, False)} [id BL]
 >   | | | | |ScalarFromTensor [id BV]
 >   | | | |   |Subtensor{int64} [id BJ]
 >   | | | |A_copy [id BO] -> [id W] (inner_in_non_seqs-0) (outer_in_non_seqs-0)
 >   | | |ScalarConstant{1} [id BW]
 >   | |ScalarConstant{-1} [id BX]
 >   |InplaceDimShuffle{x} [id BY]
 >     |<TensorType(int64, ())> [id BZ] -> [id U] (inner_in_seqs-1)
 
 for{cpu,scan_fn} [id BE] (outer_out_sit_sot-0)
 >Elemwise{mul,no_inplace} [id CA] (inner_out_sit_sot-0)
 > |<TensorType(float64, (None,))> [id CB] -> [id BG] (inner_in_sit_sot-0)
 > |A_copy [id CC] -> [id BO] (inner_in_non_seqs-0)
```

- [x] Decouple/remove the `Scan`-specific code from `aesara.printing`
  - We could add a dispatch function&mdash;based on the `Op`&mdash;that computes the `extra_information` used by this new feature.",enhancement tooling,ricardoV94,brandonwillard,2022-05-04 21:48:46,2022-05-07 00:37:30,aesara/scan/op.py tests/compile/test_builders.py tests/test_printing.py aesara/printing.py tests/scan/test_printing.py,c9aea93288d7821cba9e1ed79b80cb7c101cae52 13c370c46b38ba65f4fccb41c4da5fe3a23b0227,"brandonwillard assigned 2022-05-04 21:48:54,brandonwillard labeled 2022-05-04 21:49:02,brandonwillard labeled 2022-05-04 21:49:02,brandonwillard convert_to_draft 2022-05-04 21:49:09,brandonwillard head_ref_force_pushed 2022-05-05 00:22:03,brandonwillard head_ref_force_pushed 2022-05-05 00:32:45,brandonwillard head_ref_force_pushed 2022-05-05 00:49:36,brandonwillard head_ref_force_pushed 2022-05-05 00:57:21,brandonwillard review_dismissed 2022-05-05 20:34:54,brandonwillard head_ref_force_pushed 2022-05-05 20:34:54,brandonwillard ready_for_review 2022-05-05 20:35:01,brandonwillard head_ref_force_pushed 2022-05-05 21:17:15,brandonwillard head_ref_force_pushed 2022-05-06 01:30:04,brandonwillard head_ref_force_pushed 2022-05-06 01:36:24,brandonwillard head_ref_force_pushed 2022-05-06 03:44:52,brandonwillard head_ref_force_pushed 2022-05-06 21:02:25,brandonwillard head_ref_force_pushed 2022-05-06 21:03:22,brandonwillard referenced 2022-05-07 00:37:29,brandonwillard merged 2022-05-07 00:37:29,brandonwillard closed 2022-05-07 00:37:30,brandonwillard head_ref_deleted 2022-05-07 00:37:32",codecov[bot] ricardoV94 brandonwillard,2,True
457,947,Patch ldflags and libs in GCC_compile under windows,lucianopaz,"Closes #944

On windows systems, the dll or lib libraries don't follow gcc's library naming convention, which means that their file name doesn't have the lib prefix (e.g. libmkl_core.dll). For this reason, gcc's library search fails to find these dynamic link libraries or static libs. An undesired consequence was that aesara (and old theano) was not able to set the correct blas__ldflags to link with mkl, even if the library had been correctly installed.

This PR introduces two GCC_compiler static methods that patch the libs or ldflags that are used during compilation. The static methods specifically target dll and lib files. They search for the library files in the provided library directories, and if a dll or lib is found, the ldflag is set to the absolute path that points to the dll or lib file. As a sidenote, dlls are preferred over libs.

As a consequence, the normal unix-like ldflags will be patched to work in windows as they do in unix. Thanks to this, aesara is now able to set the correct ldflags in windows to link to mkl installations.",bug Windows performance concern,brandonwillard,,2022-05-05 13:44:58,2022-05-07 16:20:58,aesara/link/c/cmodule.py tests/link/c/test_cmodule.py,0dc06efe59cf0455a5b9a5f7d14e587e3cde714e,"brandonwillard labeled 2022-05-05 20:07:38,brandonwillard labeled 2022-05-05 20:07:38,brandonwillard labeled 2022-05-05 20:07:38,lucianopaz head_ref_force_pushed 2022-05-06 12:23:12,lucianopaz mentioned 2022-05-07 02:06:53,lucianopaz subscribed 2022-05-07 02:06:53,lucianopaz head_ref_force_pushed 2022-05-07 13:19:30,brandonwillard referenced 2022-05-07 16:20:58,brandonwillard merged 2022-05-07 16:20:58,brandonwillard closed 2022-05-07 16:20:58,lucianopaz head_ref_deleted 2022-05-07 20:24:32",codecov[bot] lucianopaz hectormz brandonwillard,9,True
458,948,Remove deprecated `Flatten` and `Tile` `Op`s,hectormz,"This PR closes #399 and removes long deprecated `Flatten` and `Tile` `Op`s.

I'm not sure if `unittest.rst` is maintained, but I made a change to the code there.

My dev environment is not quite right, so I couldn't confirm if the debug output in `debug_faq.rst` (line 158) needed to be updated.


Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,ricardoV94 brandonwillard,,2022-05-07 01:39:02,2022-05-12 20:55:17,tests/tensor/test_basic.py aesara/tensor/basic.py doc/library/gradient.rst aesara/tensor/basic_opt.py,7ff73e6cd5c47e63e95a4e84d0c75f3a93db33f0 2249969183833ca122edfaaf39e9b63bf648bc74,"hectormz review_dismissed 2022-05-11 13:06:51,brandonwillard mentioned 2022-05-11 13:09:24,brandonwillard subscribed 2022-05-11 13:09:24,ricardoV94 mentioned 2022-05-11 13:09:25,ricardoV94 subscribed 2022-05-11 13:09:25,brandonwillard mentioned 2022-05-11 13:13:22,brandonwillard subscribed 2022-05-11 13:13:22,hectormz head_ref_force_pushed 2022-05-11 13:35:19,ricardoV94 head_ref_force_pushed 2022-05-12 14:08:42,ricardoV94 referenced 2022-05-12 20:55:17,ricardoV94 merged 2022-05-12 20:55:17,ricardoV94 closed 2022-05-12 20:55:17,hectormz head_ref_deleted 2022-05-12 21:06:20",codecov[bot] ricardoV94 brandonwillard hectormz,8,True
459,949,"Update `np.random` usage, improve test seeding, and other misc. refactoring",brandonwillard,"This PR updates our usage of `numpy.random` functions to follow NumPy's recommendations a little more closely and performs some related documentation and test refactoring.

This fixes the `test_maxpool` issue observed in https://github.com/aesara-devs/aesara/pull/947.",documentation enhancement testing refactor NumPy compatibility,,brandonwillard,2022-05-07 21:01:23,2022-05-08 21:22:18,tests/sparse/test_opt.py tests/tensor/test_blas.py tests/compile/test_builders.py tests/sparse/sandbox/test_sp.py tests/misc/test_may_share_memory.py tests/tensor/test_opt_uncanonicalize.py doc/extending/extending_aesara_solution_1.py aesara/gradient.py tests/tensor/test_complex.py doc/library/config.rst tests/tensor/nnet/test_corr.py tests/tensor/nnet/test_corr3d.py tests/graph/test_op.py tests/sparse/test_utils.py tests/sparse/test_basic.py tests/link/c/test_type.py doc/faq.rst tests/tensor/_test_mpi_roundtrip.py doc/sandbox/logistic_regression_example.rst aesara/tensor/math.py tests/tensor/test_var.py tests/tensor/nnet/test_basic.py tests/tensor/test_mlp.py tests/tensor/test_xlogx.py doc/library/compile/nanguardmode.rst tests/tensor/test_keepdims.py doc/tutorial/profiling_example.py tests/compile/function/test_types.py doc/tutorial/modes.rst tests/tensor/test_math.py doc/sandbox/sparse.rst tests/sandbox/test_multinomial.py doc/tutorial/modes_solution_1.py tests/tensor/nnet/test_conv3d2d.py tests/link/test_vm.py tests/typed_list/test_basic.py aesara/tensor/nnet/conv.py aesara/sandbox/rng_mrg.py doc/tutorial/printing_drawing.rst tests/link/c/test_cmodule.py doc/tutorial/examples.rst doc/extending/unittest.rst aesara/tensor/elemwise.py aesara/configdefaults.py tests/graph/test_compute_test_value.py tests/tensor/test_extra_ops.py doc/tutorial/shape_info.rst tests/tensor/nnet/test_blocksparse.py tests/sandbox/test_multinomial_wo_replacement.py aesara/scalar/basic.py tests/compile/function/test_function.py tests/tensor/test_utils.py doc/library/tensor/basic.rst aesara/compile/builders.py tests/tensor/test_casting.py doc/tutorial/debug_faq.rst tests/compile/test_shared.py tests/graph/test_basic.py tests/tensor/nnet/test_neighbours.py tests/tensor/test_subtensor_opt.py tests/tensor/nnet/test_abstract_conv.py doc/extending/creating_an_op.rst tests/sparse/test_sp2.py tests/compile/test_nanguardmode.py tests/tensor/nnet/test_conv.py,e6478e2077f79622e0f076463458419221804366 c7cb6a36af4809579d40bdb7aebe9ed5111741e4 f1cbf075600b95caca46a482c3ceed65f4322295 fb275c312ccaf145564191812e39027e3c046e60 6a9f9495f6d04436bd733a29ebc57a4c9ee107c7 9757016861d0ff1e18a6d26d27103894ca34b59c e5252b28c790817028548033aeb34d049aa38dff e592dcfa51aff802f39865a89d9dbcea77a3cf04 0615286d6b5ef957df7b81f71d38a3ecf540f8bb,"brandonwillard head_ref_force_pushed 2022-05-07 21:01:45,brandonwillard head_ref_force_pushed 2022-05-07 21:14:31,brandonwillard assigned 2022-05-07 21:15:35,brandonwillard labeled 2022-05-07 21:15:48,brandonwillard labeled 2022-05-07 21:15:48,brandonwillard labeled 2022-05-07 21:15:48,brandonwillard labeled 2022-05-07 21:15:54,brandonwillard labeled 2022-05-07 21:16:00,brandonwillard head_ref_force_pushed 2022-05-07 21:54:30,brandonwillard head_ref_force_pushed 2022-05-08 00:07:00,brandonwillard referenced 2022-05-08 21:22:18,brandonwillard merged 2022-05-08 21:22:18,brandonwillard closed 2022-05-08 21:22:18,brandonwillard head_ref_deleted 2022-05-08 21:22:21",codecov[bot] brandonwillard,1,True
460,951,Parameterize the types of some core graph objects,brandonwillard,"This PR adds parameterized generic types for some of the core graph objects (e.g. `Apply`, `Variable`).  These changes improve type inference for expressions like `node.op`, which is currently only as specific as the broad type `Op`&mdash;complicating type inference for attributes and methods specific to `Op` subclasses.

There is one major code-related change in this PR: the `owner` argument to `Variable.__init__` is no longer optional.  This change was required because of the following Mypy issue: https://github.com/python/mypy/issues/3737.  As far as interface changes are concerned, creating a `Variable` instance using `Variable.__init__`&mdash;including subclasses&mdash;is pretty rare (and basically unnecessary), so this is a very low-impact change.",enhancement typing,,brandonwillard,2022-05-08 00:18:37,2022-06-15 10:45:59,aesara/link/basic.py aesara/scan/opt.py aesara/scan/op.py aesara/tensor/io.py tests/tensor/test_io.py aesara/tensor/random/type.py tests/tensor/test_var.py aesara/tensor/type_other.py aesara/link/c/type.py aesara/graph/type.py aesara/graph/basic.py tests/graph/test_basic.py tests/tensor/test_shape.py aesara/tensor/type.py aesara/graph/op.py aesara/tensor/var.py aesara/scalar/basic.py doc/sandbox/how_to_make_ops.rst,772adba2fd24ae17371406dcd969fce89fbf1e53 af718e94dec82f96ee870c708fb57b681d14de4f 29b1d250d42e8ad7a829719df4aabe6382032ec9 e9f86f4ff6fbd56d52e3a28696d4a83d16b2954d,"brandonwillard head_ref_force_pushed 2022-05-08 00:42:39,brandonwillard head_ref_force_pushed 2022-05-08 19:39:12,brandonwillard head_ref_force_pushed 2022-05-08 19:43:24,brandonwillard head_ref_force_pushed 2022-05-09 01:13:10,brandonwillard labeled 2022-05-09 17:32:16,brandonwillard labeled 2022-05-09 17:32:16,brandonwillard assigned 2022-05-09 17:32:23,brandonwillard head_ref_force_pushed 2022-05-09 18:58:35,brandonwillard head_ref_force_pushed 2022-06-04 11:53:35,brandonwillard head_ref_force_pushed 2022-06-04 15:52:53,brandonwillard head_ref_force_pushed 2022-06-04 15:58:59,brandonwillard head_ref_force_pushed 2022-06-14 18:32:26,brandonwillard head_ref_force_pushed 2022-06-14 21:02:32,brandonwillard head_ref_force_pushed 2022-06-14 22:30:45,brandonwillard referenced 2022-06-15 10:45:59,brandonwillard merged 2022-06-15 10:45:59,brandonwillard closed 2022-06-15 10:46:00,brandonwillard head_ref_deleted 2022-06-15 10:46:05",codecov[bot] brandonwillard,1,True
461,952,Fix some input conversion issues in `aesara.tensor`,brandonwillard,This PR fixes some bugs in `aesara.tensor` helper functions caused by a lack of `as_tensor_variable` conversions.,bug refactor NumPy compatibility,,brandonwillard,2022-05-09 01:06:37,2022-05-09 18:36:39,tests/tensor/test_slinalg.py aesara/link/c/basic.py aesara/tensor/math_opt.py aesara/scan/basic.py tests/tensor/test_blas.py aesara/link/c/cmodule.py tests/tensor/test_basic.py tests/sandbox/test_rng_mrg.py aesara/tensor/var.py tests/graph/test_op.py tests/sparse/test_basic.py aesara/graph/opt.py aesara/tensor/subtensor.py tests/test_gradient.py tests/tensor/test_mlp.py tests/tensor/nnet/test_basic.py aesara/compile/profiling.py aesara/tensor/basic_opt.py doc/tutorial/modes.rst tests/tensor/test_math.py aesara/compile/compiledir.py aesara/tensor/extra_ops.py tests/tensor/test_basic_opt.py aesara/compile/function/types.py aesara/tensor/__init__.py tests/tensor/test_math_opt.py aesara/scan/opt.py aesara/scan/op.py aesara/tensor/nnet/basic.py tests/tensor/utils.py aesara/tensor/elemwise.py aesara/tensor/blas.py aesara/link/numba/dispatch/basic.py tests/tensor/nnet/test_batchnorm.py tests/tensor/test_sharedvar.py aesara/scalar/basic.py aesara/sparse/opt.py tests/scan/test_basic.py aesara/tensor/basic.py tests/record.py tests/tensor/nnet/test_neighbours.py tests/tensor/test_sort.py tests/tensor/test_subtensor_opt.py aesara/link/jax/dispatch.py tests/tensor/nnet/test_abstract_conv.py,5d3976979aea2311a89ce9c24712d41e1484b2fe abe58444eaf458c1fea254e95b5e5eaf9fc57aa2 9cc9d6cfdbc365c9e699d39b51530a08bc17b290 d2b4b2f9854fd926b527b8d13d9c251f455d190b 70c5a9b9d125b1beee104d1d2424521f904dd423 cfbe867374731fa7db770e2b94361465dabdaf87 fbae6f652785763ca305217f1d7a3aa4affaef0a,"brandonwillard assigned 2022-05-09 01:06:49,brandonwillard labeled 2022-05-09 01:07:04,brandonwillard labeled 2022-05-09 01:07:04,brandonwillard labeled 2022-05-09 01:07:04,brandonwillard head_ref_force_pushed 2022-05-09 01:29:42,brandonwillard head_ref_force_pushed 2022-05-09 02:09:11,brandonwillard head_ref_force_pushed 2022-05-09 03:55:26,brandonwillard head_ref_force_pushed 2022-05-09 17:12:33,brandonwillard referenced 2022-05-09 18:36:39,brandonwillard merged 2022-05-09 18:36:39,brandonwillard closed 2022-05-09 18:36:39,brandonwillard head_ref_deleted 2022-05-09 18:36:43",codecov[bot] brandonwillard,1,True
462,953,Print inner-graphs only once in `debugprint`,brandonwillard,"This PR prevents `debugprint` from printing inner-graphs more than once.

It also adds a `print_fgraph_inputs` option that explicitly shows all the inputs (even unused ones) for every `FunctionGraph`. An example:
```python
-c [id A]
-k [id B]
-A [id C]
Sum{acc_dtype=float64} [id D] 13
|for{cpu,scan_fn} [id E] 12 (outer_out_nit_sot-0)
|Elemwise{scalar_minimum,no_inplace} [id F] 7 (outer_in_nit_sot-0)
| |Subtensor{int64} [id G] 6
| | |Shape [id H] 5
| | | |Subtensor{int64::} [id I] 'c[0:]' 4
| | |   |c [id A]
| | |   |ScalarConstant{0} [id J]
| | |ScalarConstant{0} [id K]
| |Subtensor{int64} [id L] 3
|   |Shape [id M] 2
|   | |Subtensor{int64::} [id N] 1
|   |   |ARange{dtype='int64'} [id O] 0
|   |   | |TensorConstant{0} [id P]
|   |   | |TensorConstant{10} [id Q]
|   |   | |TensorConstant{1} [id R]
|   |   |ScalarConstant{0} [id S]
|   |ScalarConstant{0} [id T]
|Subtensor{:int64:} [id U] 11 (outer_in_seqs-0)
| |Subtensor{int64::} [id I] 'c[0:]' 4
| |ScalarFromTensor [id V] 10
|   |Elemwise{scalar_minimum,no_inplace} [id F] 7
|Subtensor{:int64:} [id W] 9 (outer_in_seqs-1)
| |Subtensor{int64::} [id N] 1
| |ScalarFromTensor [id X] 8
|   |Elemwise{scalar_minimum,no_inplace} [id F] 7
|Elemwise{scalar_minimum,no_inplace} [id F] 7 (outer_in_nit_sot-0)
|A [id C] (outer_in_non_seqs-0)
|k [id B] (outer_in_non_seqs-1)

Inner graphs:

for{cpu,scan_fn} [id E] (outer_out_nit_sot-0)
-*0-<TensorType(float64, ())> [id Y] -> [id U] (inner_in_seqs-0)
-*1-<TensorType(int64, ())> [id Z] -> [id W] (inner_in_seqs-1)
-*2-<TensorType(float64, (None,))> [id BA] -> [id C] (inner_in_non_seqs-0)
-*3-<TensorType(int32, ())> [id BB] -> [id B] (inner_in_non_seqs-1)
>Elemwise{mul,no_inplace} [id BC] (inner_out_nit_sot-0)
> |InplaceDimShuffle{x} [id BD]
> | |*0-<TensorType(float64, ())> [id Y] (inner_in_seqs-0)
> |Elemwise{pow,no_inplace} [id BE]
>   |Subtensor{int64} [id BF]
>   | |Subtensor{int64::} [id BG]
>   | | |for{cpu,scan_fn} [id BH] (outer_out_sit_sot-0)
>   | | | |*3-<TensorType(int32, ())> [id BB] (inner_in_non_seqs-1) (n_steps)
>   | | | |IncSubtensor{Set;:int64:} [id BI] (outer_in_sit_sot-0)
>   | | | | |AllocEmpty{dtype='float64'} [id BJ]
>   | | | | | |Elemwise{add,no_inplace} [id BK]
>   | | | | | | |*3-<TensorType(int32, ())> [id BB] (inner_in_non_seqs-1)
>   | | | | | | |Subtensor{int64} [id BL]
>   | | | | | |   |Shape [id BM]
>   | | | | | |   | |Rebroadcast{(0, False)} [id BN]
>   | | | | | |   |   |InplaceDimShuffle{x,0} [id BO]
>   | | | | | |   |     |Elemwise{second,no_inplace} [id BP]
>   | | | | | |   |       |*2-<TensorType(float64, (None,))> [id BA] (inner_in_non_seqs-0)
>   | | | | | |   |       |InplaceDimShuffle{x} [id BQ]
>   | | | | | |   |         |TensorConstant{1.0} [id BR]
>   | | | | | |   |ScalarConstant{0} [id BS]
>   | | | | | |Subtensor{int64} [id BT]
>   | | | | |   |Shape [id BU]
>   | | | | |   | |Rebroadcast{(0, False)} [id BN]
>   | | | | |   |ScalarConstant{1} [id BV]
>   | | | | |Rebroadcast{(0, False)} [id BN]
>   | | | | |ScalarFromTensor [id BW]
>   | | | |   |Subtensor{int64} [id BL]
>   | | | |*2-<TensorType(float64, (None,))> [id BA] (inner_in_non_seqs-0) (outer_in_non_seqs-0)
>   | | |ScalarConstant{1} [id BX]
>   | |ScalarConstant{-1} [id BY]
>   |InplaceDimShuffle{x} [id BZ]
>     |*1-<TensorType(int64, ())> [id Z] (inner_in_seqs-1)

for{cpu,scan_fn} [id BH] (outer_out_sit_sot-0)
-*0-<TensorType(float64, (None,))> [id CA] -> [id BI] (inner_in_sit_sot-0)
-*1-<TensorType(float64, (None,))> [id CB] -> [id BA] (inner_in_non_seqs-0)
>Elemwise{mul,no_inplace} [id CC] (inner_out_sit_sot-0)
> |*0-<TensorType(float64, (None,))> [id CA] (inner_in_sit_sot-0)
> |*1-<TensorType(float64, (None,))> [id CB] (inner_in_non_seqs-0)
```",enhancement tooling,,brandonwillard,2022-05-09 23:48:44,2022-05-11 15:23:52,tests/scan/test_printing.py aesara/printing.py,8592ed35e4b0a63c4adc4e36cdda482094b6c66c 0e378636fdd66b1fdf152f72ca95ba48998579fd,"brandonwillard assigned 2022-05-09 23:48:55,brandonwillard labeled 2022-05-09 23:49:07,brandonwillard labeled 2022-05-09 23:49:07,brandonwillard head_ref_force_pushed 2022-05-10 22:28:05,brandonwillard referenced 2022-05-11 15:23:52,brandonwillard merged 2022-05-11 15:23:52,brandonwillard closed 2022-05-11 15:23:52,brandonwillard head_ref_deleted 2022-05-11 15:24:03",codecov[bot] brandonwillard,1,True
463,956,Consider type ordering in MergeOptimization,ricardoV94,Closes #955 ,important graph rewriting shape inference,brandonwillard,,2022-05-12 10:04:04,2022-07-08 08:26:40,tests/graph/utils.py tests/graph/test_opt.py aesara/graph/opt.py,c11fe9aa9fc5dcc13b036d424ab6c2b9e0af486b,"ricardoV94 review_requested 2022-05-12 10:04:04,ricardoV94 convert_to_draft 2022-05-12 10:17:17,ricardoV94 ready_for_review 2022-05-12 11:18:34,ricardoV94 head_ref_force_pushed 2022-05-12 11:22:55,ricardoV94 labeled 2022-05-12 11:30:16,brandonwillard labeled 2022-05-12 19:42:27,brandonwillard labeled 2022-05-12 19:42:27,brandonwillard labeled 2022-05-12 19:42:27,brandonwillard unlabeled 2022-05-12 19:42:35,ricardoV94 closed 2022-07-08 08:26:40",codecov[bot] ricardoV94 brandonwillard,16,False
464,960,Add ARM dev environment dependencies,dgerlanc,"The `environment-arm.yml` file is a copy of `environment.yml` with
Intel MKL dependencies replaced with OpenBLAS.

We may want to update the documentation on installing `aesara` on
Mac OS or complete the fix for #127 before merging this PR. Without
resolving #127, `aesara` will continue to have problems on Mac OS.

I have started a branch re: #127 [here](https://github.com/dgerlanc/aesara/tree/fix-narrowing-error).

Currently, with this environment, you can create a working OS X
environment for `aesara` so long as you update the `cxxflags`, e.g.
setting `~/.aesararc` to:

```
[global]

[gcc]
cxxflags=-Wno-c++11-narrowing
```

Resolves: #934
",MacOS Conda,twiecki brandonwillard,,2022-05-16 00:00:07,2022-11-26 23:09:19,environment-arm.yml,4048a9b1755e947dce839dbd92ccce9356143d70,"brandonwillard labeled 2022-05-16 01:26:03,brandonwillard labeled 2022-05-16 01:26:03,brandonwillard labeled 2022-05-16 01:26:03,brandonwillard unlabeled 2022-05-16 01:26:32,brandonwillard unlabeled 2022-05-16 01:26:32,brandonwillard labeled 2022-05-16 01:26:32,ivaquero subscribed 2022-05-22 14:18:27,dgerlanc head_ref_force_pushed 2022-05-24 18:01:15,dgerlanc head_ref_force_pushed 2022-05-31 17:37:55,dgerlanc ready_for_review 2022-05-31 20:24:15,dgerlanc review_dismissed 2022-11-02 16:31:40,dgerlanc head_ref_force_pushed 2022-11-02 16:31:40,dgerlanc head_ref_force_pushed 2022-11-21 16:29:12,dgerlanc head_ref_force_pushed 2022-11-21 17:18:16,dgerlanc head_ref_force_pushed 2022-11-21 18:10:25,brandonwillard referenced 2022-11-22 04:08:24,dgerlanc head_ref_force_pushed 2022-11-26 21:46:31,dgerlanc referenced 2022-11-26 23:09:19,dgerlanc merged 2022-11-26 23:09:19,dgerlanc closed 2022-11-26 23:09:19,dgerlanc head_ref_deleted 2022-11-26 23:09:30",dgerlanc ivaquero twiecki brandonwillard,3,True
465,962,Fix the type of `t_fn` in `scan_perform.pyx`,brandonwillard,This PR changes the type of `t_fn` to `float` so that call-time measurements in the Cython implementation of `Scan.perform` are non-zero.,bug Scan,,brandonwillard,2022-05-17 21:12:32,2022-05-17 22:22:22,aesara/scan/scan_perform_ext.py aesara/scan/scan_perform.pyx aesara/scan/c_code/scan_perform.c,a14497c23028439fc0075737549ed1ec8592b542,"brandonwillard assigned 2022-05-17 21:12:47,brandonwillard labeled 2022-05-17 21:12:53,brandonwillard labeled 2022-05-17 21:12:53,brandonwillard referenced 2022-05-17 22:22:22,brandonwillard merged 2022-05-17 22:22:22,brandonwillard closed 2022-05-17 22:22:22,brandonwillard head_ref_deleted 2022-05-17 22:22:24",codecov[bot] brandonwillard,1,True
466,963,Refine `Scan`'s Cython implementation,brandonwillard,"This PR makes some minor adjustments to `Scan`'s Cython implementation (e.g. more accurate type information, move pre-allocations to the thunk creation stage, etc.)

See the new `tests.scan.test_basic.test_cython_performance` for a benchmark.
With these changes, `Scan` is consistently faster than a direct Python implementation at 50 iterations and up.  Numbers of iterations below that appear to be confounded&mdash;under the same benchmark&mdash;by smaller things like the `Function` call overhead.

- [x] Set `wraparound` to `False`",enhancement Scan performance concern,,brandonwillard,2022-05-17 23:13:03,2022-06-14 17:08:12,aesara/scan/scan_perform_ext.py aesara/scan/op.py aesara/scan/scan_perform.pyx aesara/scan/c_code/scan_perform.c tests/scan/test_basic.py,8943ea734cef91d72f717803205273d1126f4935 e7d914cfd130f3e9667c816992fc137b13c48609 8a903616568661c40df872dca5c0be6e5b51ea36 c5a5aac1c674ea595fb83c65eae26798f2986cfb 8600aad5c648d333f0335d09d7a447f6c41c1be2 708a57e2fbd5ce84c07043c2ce2a2b358b714e01 81a3b63ea29b4ab26881147738386bdee8a70c81 66569cd88017da96151e3bb1c3fa3dd55ee0de38 ff07070eaaafe85af62ac09f9716dd58522812fc 7a8572e6f9b9bc72a16ff4028e57ddced1f3a948 5c1327a536c68c484216b27cc00998b8ac3cd4f7,"brandonwillard assigned 2022-05-18 00:07:04,brandonwillard labeled 2022-05-18 00:07:14,brandonwillard labeled 2022-05-18 00:07:14,brandonwillard labeled 2022-05-18 00:07:14,brandonwillard head_ref_force_pushed 2022-05-18 18:17:29,brandonwillard head_ref_force_pushed 2022-05-18 18:44:04,brandonwillard head_ref_force_pushed 2022-05-18 23:19:07,brandonwillard head_ref_force_pushed 2022-05-18 23:26:54,brandonwillard head_ref_force_pushed 2022-05-20 02:32:10,brandonwillard head_ref_force_pushed 2022-05-20 02:43:38,brandonwillard head_ref_force_pushed 2022-05-20 03:19:16,brandonwillard head_ref_force_pushed 2022-05-21 02:21:31,brandonwillard head_ref_force_pushed 2022-05-23 17:02:49,brandonwillard referenced 2022-06-14 17:08:12,brandonwillard merged 2022-06-14 17:08:12,brandonwillard closed 2022-06-14 17:08:12,brandonwillard head_ref_deleted 2022-06-14 17:08:15",codecov[bot] brandonwillard,1,True
467,968,Add missing properties to copied `Function` objects,brandonwillard,Closes #964,bug,,brandonwillard,2022-05-20 03:14:15,2022-05-20 04:29:12,tests/compile/function/test_types.py aesara/compile/function/types.py,573d40356bac5f5ea76f8dbace02cc3e57765271,"brandonwillard assigned 2022-05-20 03:14:42,brandonwillard labeled 2022-05-20 03:14:47,brandonwillard referenced 2022-05-20 04:29:12,brandonwillard merged 2022-05-20 04:29:12,brandonwillard closed 2022-05-20 04:29:12,brandonwillard head_ref_deleted 2022-05-20 04:29:15",codecov[bot] brandonwillard,1,True
468,969,Increase lock scope in `ModuleCache.refresh`,brandonwillard,"Closes #858

I was able to confirm that the newly added test raises exceptions&mdash;due to the race condition&mdash;when the fix isn't in place (see [here](https://github.com/aesara-devs/aesara/runs/6533553124?check_suite_focus=true#step:6:1169)).",bug C-backend,,brandonwillard,2022-05-21 00:13:49,2022-05-21 02:24:12,aesara/link/c/cmodule.py tests/link/c/test_cmodule.py,f739a924f15b9481aa054ff29df91da8ee11f694,"brandonwillard assigned 2022-05-21 00:14:07,brandonwillard labeled 2022-05-21 00:14:32,brandonwillard labeled 2022-05-21 00:14:32,brandonwillard head_ref_force_pushed 2022-05-21 00:43:33,brandonwillard head_ref_force_pushed 2022-05-21 01:01:15,brandonwillard referenced 2022-05-21 02:24:12,brandonwillard merged 2022-05-21 02:24:12,brandonwillard closed 2022-05-21 02:24:12,brandonwillard head_ref_deleted 2022-05-21 02:24:15",codecov[bot] brandonwillard,1,True
469,970,"Added ""What is Aesara"" section to documentation",Mount-Blanc,"**Thank you for opening a PR!**
Issue: #967 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",documentation,brandonwillard,,2022-05-22 00:39:01,2022-06-04 10:17:11,doc/introduction.rst README.rst,4549564eed49c8466fb73b09fbaa82d4ab836a16 40f2fb28f0e6de5abee5555e1ab45d13a581464f 8efc784eaad018fdd50d2016d90ddf6c5a809551,"twiecki review_requested 2022-05-29 04:54:33,brandonwillard labeled 2022-06-04 10:07:20,brandonwillard renamed 2022-06-04 10:16:52,brandonwillard referenced 2022-06-04 10:17:10,brandonwillard merged 2022-06-04 10:17:11,brandonwillard closed 2022-06-04 10:17:11",twiecki ricardoV94 Mount-Blanc brandonwillard,1,True
470,972,Fix C++11 narrowing error on Mac OS,dgerlanc,"Resolves #127

Previously, tests including the following would fail with the following errors:

```
FAILED tests/graph/test_compute_test_value.py::TestComputeTestValue::test_empty_elemwise - aesara.link.c.exceptions.CompileError: Compilation failed (return status=1):
FAILED tests/graph/test_compute_test_value.py::TestComputeTestValue::test_overided_function - aesara.link.c.exceptions.CompileError: Compilation failed (return status=1):
FAILED tests/graph/test_compute_test_value.py::TestComputeTestValue::test_scan_err1 - aesara.link.c.exceptions.CompileError: Compilation failed (return status=1):
FAILED tests/graph/test_compute_test_value.py::TestComputeTestValue::test_scan_err2 - aesara.link.c.exceptions.CompileError: Compilation failed (return status=1):
```


TODO: Add tests to verify modification of `config.gcc__cxxflags`

- [x] No `gcc_cxxflags`
  - Darwin -> Add `-Wno-c++11-narrowing`
  - Other `sys.platform` -> No-Op
- [x] Has `gcc__cxxflags` but no `-Wno-c++11-narrowing`
  - Darwin -> Add `-Wno-c++11-narrowing` and other flags preserved
  - Other platform -> other flags preserved
- [x] Has `gcc_cxxflags` including `-Wno-c++11-narrowing`
  - All platforms -> `gcc__cxxflags` remain the same
",bug C-backend MacOS,brandonwillard,,2022-05-31 20:27:30,2023-02-17 02:49:19,aesara/link/c/cmodule.py tests/link/c/test_cmodule.py,2bef458dc1d46f2d773d952462095b0d5162d210,"dgerlanc labeled 2022-05-31 20:28:06,dgerlanc labeled 2022-05-31 20:28:06,dgerlanc labeled 2022-05-31 20:28:06,dgerlanc head_ref_force_pushed 2022-05-31 20:39:16,dgerlanc head_ref_force_pushed 2022-05-31 20:50:19,twiecki mentioned 2022-05-31 22:39:24,twiecki subscribed 2022-05-31 22:39:24,brandonwillard mentioned 2022-05-31 22:39:24,brandonwillard subscribed 2022-05-31 22:39:24,dgerlanc head_ref_force_pushed 2022-06-07 16:15:10,dgerlanc head_ref_force_pushed 2022-06-09 18:12:12,dgerlanc head_ref_force_pushed 2022-06-14 15:16:22,dgerlanc head_ref_force_pushed 2022-10-09 23:24:16,dgerlanc head_ref_force_pushed 2022-11-29 02:39:24,dgerlanc head_ref_force_pushed 2022-11-30 01:29:52,dgerlanc head_ref_force_pushed 2022-12-02 21:03:46,brandonwillard mentioned 2022-12-07 21:35:36,brandonwillard subscribed 2022-12-07 21:35:36,brandonwillard mentioned 2022-12-08 01:50:44,brandonwillard subscribed 2022-12-08 01:50:44,brandonwillard connected 2023-02-15 22:18:32,brandonwillard review_dismissed 2023-02-15 22:50:34,brandonwillard head_ref_force_pushed 2023-02-15 22:50:34,brandonwillard review_requested 2023-02-15 22:50:51,brandonwillard ready_for_review 2023-02-15 22:51:15,dgerlanc review_dismissed 2023-02-17 01:56:11,dgerlanc head_ref_force_pushed 2023-02-17 01:56:11,brandonwillard head_ref_force_pushed 2023-02-17 02:04:13,dgerlanc referenced 2023-02-17 02:49:19,dgerlanc merged 2023-02-17 02:49:19,dgerlanc closed 2023-02-17 02:49:20,dgerlanc head_ref_deleted 2023-02-18 14:51:07",codecov[bot] dgerlanc twiecki brandonwillard,8,True
471,974,GitHub actions: run test workflow on Mac,tal66,"Hi, I think this will close #973 ",CI MacOS,brandonwillard,,2022-06-01 11:51:37,2022-06-16 13:24:12,.github/workflows/test.yml tests/link/c/test_cmodule.py,0a740c7279e6d4174b4d27c01be2a9b51d76f99d 64b4672c8299348f7751ac59d8dcd7ef7192f2f8,"brandonwillard review_requested 2022-06-03 05:15:48,brandonwillard review_requested 2022-06-03 05:15:48,brandonwillard review_requested 2022-06-03 05:15:48,brandonwillard labeled 2022-06-03 05:15:58,brandonwillard labeled 2022-06-03 05:15:58",codecov[bot] brandonwillard tal66,5,False
472,975,Allow newlines in `__str__` output printed by `fgraph_to_python`,brandonwillard,This PR fixes a bug in `aesara.link.utils.fgraph_to_python` that doesn't handle multi-line `Apply` and/or `Op` `__str__`s.,bug JAX Numba,,brandonwillard,2022-06-03 07:07:44,2022-06-03 08:27:35,aesara/link/utils.py tests/link/test_utils.py,d2ed945f75f2e3ba017aec71e9a015ef063360c4,"brandonwillard connected 2022-06-03 07:08:03,brandonwillard assigned 2022-06-03 07:31:13,brandonwillard labeled 2022-06-03 07:32:11,brandonwillard labeled 2022-06-03 07:32:11,brandonwillard labeled 2022-06-03 07:32:11,brandonwillard referenced 2022-06-03 08:27:35,brandonwillard merged 2022-06-03 08:27:35,brandonwillard closed 2022-06-03 08:27:35,brandonwillard head_ref_deleted 2022-06-03 08:27:38",codecov[bot] brandonwillard,1,True
473,976,Clone inner-graph before compiling in `OpFromGraph`,brandonwillard,"This PR changes the behavior or `OpFromGraph.fn` so that it clones the inner-graph before compiling.  Without this clone step, `aesara.graph.op.compute_test_value` would change the form of `OpFromGraph.inner_outputs` by updating the inner-`FunctionGraph` in-place.  Such changes could&mdash;in turn&mdash;affect the ""differentiability"" of `OpFromGraph` instances, by, for instance, replacing `Op`s in inner-graphs with ""optimized"" non-differentiable counterparts.",bug important,,brandonwillard,2022-06-03 20:20:53,2022-06-04 12:09:31,tests/compile/test_builders.py aesara/compile/builders.py,4382beda9d5550c4867085220c92ef9d80b13ca1,"brandonwillard assigned 2022-06-03 20:21:22,brandonwillard labeled 2022-06-03 20:21:28,brandonwillard labeled 2022-06-03 20:21:28,brandonwillard head_ref_force_pushed 2022-06-04 09:36:06,brandonwillard referenced 2022-06-04 12:09:31,brandonwillard merged 2022-06-04 12:09:31,brandonwillard closed 2022-06-04 12:09:31,brandonwillard head_ref_deleted 2022-06-04 12:09:34",codecov[bot] brandonwillard,1,True
474,977,Update versioneer to fix build_ext bug,mgorny,"Update the generated versioneer fixes to the current git, in order
to pull a bugfix that fixes the support for calling `build_ext` prior
to `build_py`.  This is part of Gentoo's workflow, and the current
version of generated files is requiring us to use workarounds.

--------

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] <del>There are tests covering the changes introduced in the PR.</del> [n/a]",,brandonwillard,,2022-06-04 05:48:14,2022-06-04 10:01:51,versioneer.py aesara/_version.py,8de6e93fe4153c3504b56f38762f7afee76a6f2c,"brandonwillard referenced 2022-06-04 10:01:51,brandonwillard merged 2022-06-04 10:01:51,brandonwillard closed 2022-06-04 10:01:51",codecov[bot] brandonwillard mgorny,3,True
475,980,"Catch Numpy ""Could not locate executable"" warnings",maresb,"Closes https://github.com/conda-forge/aesara-feedstock/issues/54 by capturing stderr while reading `blas_info` from Numpy.

Specifically, the suppressed errors appear on Windows and look like
```
>>> import aesara
WARN: Could not locate executable g77
WARN: Could not locate executable f77
WARN: Could not locate executable ifort
WARN: Could not locate executable ifl
WARN: Could not locate executable f90
WARN: Could not locate executable DF
WARN: Could not locate executable efl
```

I am having trouble running the pytest suite locally. Additionally, I have no means of testing this locally since I don't have Windows.

I have not yet written any tests, but I'm open to advice.

I did this a bit rushed, so apologies in advance in case I missed some guideline.

---

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",testing CI Windows,lucianopaz brandonwillard,,2022-06-06 20:42:49,2022-07-13 14:23:52,aesara/tensor/shape.py aesara/link/c/cmodule.py setup.py tests/sparse/test_basic.py tests/tensor/test_var.py tests/scan/test_printing.py tests/test_rop.py aesara/compile/profiling.py aesara/tensor/extra_ops.py tests/tensor/test_basic_opt.py aesara/scan/scan_perform_ext.py aesara/scan/opt.py aesara/__init__.py aesara/tensor/blas.py tests/tensor/test_shape.py aesara/link/c/cutils.py tests/tensor/nnet/test_batchnorm.py aesara/scalar/basic.py aesara/scan/c_code/scan_perform.c aesara/tensor/random/type.py doc/library/tensor/basic.rst .github/workflows/pypi.yml tests/record.py tests/sparse/test_var.py aesara/link/jax/dispatch.py aesara/sparse/basic.py aesara/tensor/io.py aesara/graph/features.py aesara/link/numba/dispatch/tensor_basic.py aesara/tensor/var.py aesara/tensor/type.py doc/dev_start_guide.rst tests/graph/test_op.py tests/tensor/test_io.py aesara/tensor/subtensor.py tests/test_gradient.py tests/compile/function/test_types.py aesara/tensor/basic_opt.py MANIFEST.in aesara/compile/compiledir.py tests/tensor/test_math_opt.py aesara/tensor/nnet/conv.py aesara/tensor/elemwise.py doc/tutorial/loading_and_saving.rst aesara/sparse/type.py doc/tutorial/shape_info.rst aesara/misc/pkl_utils.py tests/scan/test_basic.py tests/tensor/test_subtensor.py .github/workflows/test.yml tests/graph/test_basic.py tests/link/test_jax.py aesara/tensor/nnet/opt.py aesara/ifelse.py tests/tensor/test_type.py tests/link/test_numba.py tests/tensor/test_elemwise.py doc/troubleshooting.rst aesara/gradient.py tests/test_updates.py doc/extending/type.rst aesara/tensor/math.py tests/test_determinism.py tests/tensor/test_math.py aesara/scan/scan_perform.pyx aesara/link/c/type.py .github/workflows/nightly.yml aesara/link/basic.py aesara/scan/op.py aesara/tensor/nnet/batchnorm.py aesara/tensor/type_other.py tests/test_dictionary_output.py tests/compile/test_debugmode.py aesara/tensor/nnet/abstract_conv.py aesara/tensor/math_opt.py aesara/scan/basic.py tests/tensor/test_blas.py aesara/link/c/lazylinker_c.py tests/scan/test_opt.py aesara/graph/type.py tests/tensor/test_basic.py tests/diverse_tests.py tests/tensor/test_opt_uncanonicalize.py tests/test_printing.py tests/tensor/random/test_type.py tests/link/c/test_cmodule.py aesara/configdefaults.py aesara/compile/function/pfunc.py tests/test_record.py aesara/link/c/exceptions.py aesara/tensor/subtensor_opt.py aesara/sparse/opt.py aesara/tensor/basic.py tests/misc/test_pkl_utils.py aesara/graph/basic.py aesara/graph/op.py tests/tensor/test_subtensor_opt.py doc/sandbox/how_to_make_ops.rst,65d7e36e0aff8697e10b170dff79a16406dfba37 7a5b404eec14e293410da69ca4186692893114cb 8bfb1ca91ae08e3fb11ee677cb2436ef59e7f1c1 97fbbbfdf9f312abfe9accdaa62d5d101ea9724c 538c8b00e255de66dc9b6da3e14070f739055ebe d48f056f17d41a1e77426e05857f509cf32e6363 e3d2febbcb18998b4fff8af4f1395d6b08104b72 c42f6f172aec47ae2a35f79e63f6d0c58eeb3894 6f3fadfb5bec5fc193cd9b829933415d620fa734 569aa33a9c8bdb1459da912b21c972079cf4daaa 6c6f615a27c5b15473be67aa356ef5a8f0a07b07 d38b753d5829450f9ab2de1151b9e0362a3ac47f 5d96d9e665da5439cc80e17f7ffb47404644a890 6e51d4c3a13dce62917b945d063a2fd1fd8d28fb adb032836da5be1cd47c20838c8fbb2bedf9771c 8f362616ec176003afde27d740d99bc5b6c412f7 daad8af48e36c8f6206d21bd582985462403f742 f9badf3b485552e912c23e0d3a583192ebbf8fd0 b6b80ee7825213718f1ee24f282f914894e89ad4 b88a5023fe43594560f39534585140dfc0dfb04d 0b89bc462d29308b23c823a8edb1b685e420347d 4dccc09ecc4b65233ea61351e80afe6ceb5ba3ae 46c1f287019a233b185eab21f224e5f0b362e3eb 95b347544219f0737d38b353ba1dc0363ae9e3c1 825662b1e801a23e9ae6a1689abd0d3b11776b97,"twiecki review_requested 2022-06-06 21:32:18,brandonwillard labeled 2022-06-07 09:56:11,brandonwillard labeled 2022-06-07 09:56:11,maresb referenced 2022-06-10 21:49:34,lucianopaz mentioned 2022-06-11 22:15:25,lucianopaz subscribed 2022-06-11 22:15:25,brandonwillard labeled 2022-06-15 11:04:47,brandonwillard convert_to_draft 2022-06-15 11:05:13,brandonwillard mentioned 2022-06-15 14:02:16,brandonwillard subscribed 2022-06-15 14:02:16,brandonwillard mentioned 2022-06-15 14:12:12,brandonwillard subscribed 2022-06-15 14:12:12,twiecki ready_for_review 2022-06-17 06:47:58,maresb convert_to_draft 2022-06-18 09:46:24,maresb ready_for_review 2022-06-19 10:47:37,brandonwillard mentioned 2022-06-20 18:53:30,brandonwillard subscribed 2022-06-20 18:53:30,brandonwillard connected 2022-06-20 19:15:33,brandonwillard mentioned 2022-06-20 22:38:07,brandonwillard subscribed 2022-06-20 22:38:07,brandonwillard mentioned 2022-06-24 21:09:20,brandonwillard subscribed 2022-06-24 21:09:20,brandonwillard mentioned 2022-07-02 10:46:25,brandonwillard subscribed 2022-07-02 10:46:25,maresb closed 2022-07-13 14:23:52,brandonwillard mentioned 2022-07-13 14:23:53,brandonwillard subscribed 2022-07-13 14:23:53,maresb head_ref_deleted 2022-08-03 21:56:08",lucianopaz codecov[bot] brandonwillard maresb twiecki,37,False
476,981,Use input shapes to compute output shape in `Elemwise.infer_shape`,brandonwillard,Closes #979,bug important shape inference,ricardoV94,brandonwillard,2022-06-06 22:41:46,2022-06-08 12:25:50,aesara/tensor/elemwise.py tests/tensor/test_elemwise.py aesara/tensor/extra_ops.py tests/tensor/test_basic_opt.py tests/tensor/test_math_opt.py,3c7591b7eef94b2844d3ec70f0effa886c1aca44 d2a498041d4e020bc4237e7dade10a74de018b50 078aafd1f167efd6f6cc5d3892f49344466aed71,"brandonwillard labeled 2022-06-06 22:42:02,brandonwillard labeled 2022-06-06 22:42:02,brandonwillard labeled 2022-06-06 22:42:02,brandonwillard assigned 2022-06-06 22:42:03,brandonwillard head_ref_force_pushed 2022-06-06 22:53:11,brandonwillard head_ref_force_pushed 2022-06-07 16:36:24,brandonwillard head_ref_force_pushed 2022-06-07 16:36:42,brandonwillard head_ref_force_pushed 2022-06-07 16:42:33,brandonwillard head_ref_force_pushed 2022-06-07 22:30:15,brandonwillard review_requested 2022-06-08 11:24:57,brandonwillard referenced 2022-06-08 12:25:50,brandonwillard merged 2022-06-08 12:25:50,brandonwillard closed 2022-06-08 12:25:50,brandonwillard head_ref_deleted 2022-06-08 12:25:53",codecov[bot] ricardoV94 brandonwillard,3,True
477,983,Only attempt nightly builds on aesara-devs/aesara,lucianopaz,"This is kind of a dumb PR. I was getting annoyed by the daily email notifications saying that my fork's nightly build action had failed. I made that action only run on the `aesara-devs/aesara` repo.

I basically copied the code from [here](https://docs.github.com/en/actions/using-jobs/using-conditions-to-control-job-execution)",CI,brandonwillard,,2022-06-07 09:19:09,2022-06-07 16:40:26,.github/workflows/nightly.yml,653700afb32eb57dabb7b0bd9901b830355612f3,"brandonwillard labeled 2022-06-07 16:39:25,brandonwillard connected 2022-06-07 16:40:05,brandonwillard referenced 2022-06-07 16:40:25,brandonwillard merged 2022-06-07 16:40:25,brandonwillard closed 2022-06-07 16:40:26",codecov[bot] lucianopaz brandonwillard,1,True
478,986,Broadcast matrix inputs to Gemm,ricardoV94,"The `Gemm` `Op` is only applicable when there is no broadcasting between `Z` and `dot(A, B)` in the expression `Z + dot(A, B)`. This PR broadcasts the matrix inputs when the Op was inserted for a mix of matrices that weren't known to be row / column matrices until runtime.

Closes #984 ",bug request discussion performance concern,brandonwillard,,2022-06-08 12:17:31,2022-06-13 17:35:45,aesara/tensor/blas.py tests/tensor/test_blas.py,6b677e2fd1cd06eca2de42067e4db79961ed6102 7f04cbba6ff894b4ae520613d4740ffdccbdf8d1 5def19a1fb81bfadea334603482f12ab5ad4a442 47cc1f06537553e20fc2bd9a845ca10c73de5731,"ricardoV94 review_requested 2022-06-08 12:17:31,ricardoV94 head_ref_force_pushed 2022-06-08 12:18:04,ricardoV94 labeled 2022-06-08 12:25:10,ricardoV94 labeled 2022-06-08 12:25:17,ricardoV94 head_ref_force_pushed 2022-06-08 12:34:16,ricardoV94 labeled 2022-06-08 12:35:25,ricardoV94 convert_to_draft 2022-06-08 12:41:43,ricardoV94 head_ref_force_pushed 2022-06-09 06:45:20,ricardoV94 head_ref_force_pushed 2022-06-09 14:22:46,ricardoV94 ready_for_review 2022-06-09 14:52:13,ricardoV94 head_ref_force_pushed 2022-06-09 15:17:31,ricardoV94 renamed 2022-06-09 19:48:50,ricardoV94 renamed 2022-06-09 19:48:58,ricardoV94 head_ref_force_pushed 2022-06-10 09:17:42,ricardoV94 head_ref_force_pushed 2022-06-10 10:56:48,ricardoV94 convert_to_draft 2022-06-11 08:54:16,ricardoV94 review_dismissed 2022-06-13 15:52:48,ricardoV94 head_ref_force_pushed 2022-06-13 15:52:48,ricardoV94 head_ref_force_pushed 2022-06-13 16:03:36,ricardoV94 ready_for_review 2022-06-13 17:16:46,ricardoV94 review_requested 2022-06-13 17:16:50,ricardoV94 referenced 2022-06-13 17:35:45,ricardoV94 merged 2022-06-13 17:35:45,ricardoV94 closed 2022-06-13 17:35:46",codecov[bot] ricardoV94 brandonwillard,10,True
479,993,Prevent unnecessary `Scan` inplace rewrites,brandonwillard,This PR prevents `ScanInplaceOptimizer` from making unnecessary replacements.  It also adds some long needed direct tests for `ScanInplaceOptimizer`.,bug graph rewriting Scan,,brandonwillard,2022-06-13 17:56:45,2022-06-13 19:07:20,aesara/scan/opt.py tests/scan/test_opt.py,e8c8a75a5242cd59a546b5f8bbf176ed0d299a78,"brandonwillard assigned 2022-06-13 17:57:09,brandonwillard labeled 2022-06-13 17:57:21,brandonwillard labeled 2022-06-13 17:57:21,brandonwillard labeled 2022-06-13 17:57:21,brandonwillard referenced 2022-06-13 19:07:20,brandonwillard merged 2022-06-13 19:07:20,brandonwillard closed 2022-06-13 19:07:20,brandonwillard head_ref_deleted 2022-06-13 19:07:23",codecov[bot] brandonwillard,1,True
480,994,Jax implementation of `log1mexp`,kylejcaron,"This PR creates a Jjax implementation of the log1mexp op, to resolve issue #990 

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement JAX,ricardoV94 brandonwillard,,2022-06-14 02:40:27,2022-06-15 16:22:35,tests/link/test_jax.py aesara/link/jax/dispatch.py,f3c430ae678f01a82fc9f6885266cfefdaee662c,"kylejcaron ready_for_review 2022-06-14 02:42:26,brandonwillard labeled 2022-06-14 11:04:54,brandonwillard labeled 2022-06-14 11:05:04,brandonwillard connected 2022-06-14 11:05:20,brandonwillard renamed 2022-06-14 11:05:37,kylejcaron review_requested 2022-06-14 14:28:05,brandonwillard review_dismissed 2022-06-15 13:13:07,ricardoV94 referenced 2022-06-15 16:22:34,ricardoV94 merged 2022-06-15 16:22:34,ricardoV94 closed 2022-06-15 16:22:35,kylejcaron mentioned 2022-06-15 16:22:46,kylejcaron subscribed 2022-06-15 16:22:46,kylejcaron mentioned 2022-06-15 16:41:26,kylejcaron subscribed 2022-06-15 16:41:26",codecov[bot] kylejcaron ricardoV94 brandonwillard,9,True
481,995,Add optional `strict` argument to `Type.is_valid_value`,brandonwillard,"This PR fixes the `RandomType` by making `RandomType.is_valid_value` depend on `RandomType.filter`, as the base `Type` implementation does.  It also adds some typing information to `RandomType`.

Closes #992",bug important random variables typing,ricardoV94,brandonwillard,2022-06-14 17:50:52,2022-06-14 21:01:16,tests/tensor/random/test_type.py aesara/tensor/random/type.py aesara/graph/type.py,a2e37abf2b76391c4210f0a26f590d23413dfcdf,"brandonwillard assigned 2022-06-14 17:51:03,brandonwillard labeled 2022-06-14 17:51:20,brandonwillard labeled 2022-06-14 17:51:20,brandonwillard labeled 2022-06-14 17:51:20,brandonwillard labeled 2022-06-14 17:51:20,brandonwillard renamed 2022-06-14 17:58:01,brandonwillard referenced 2022-06-14 21:01:16,brandonwillard merged 2022-06-14 21:01:16,brandonwillard closed 2022-06-14 21:01:16,brandonwillard head_ref_deleted 2022-06-14 21:01:19",codecov[bot] ricardoV94 brandonwillard,1,True
482,997,Clean up top-level tests,brandonwillard,"This PR cleans up the test modules at the top-level (i.e. in `tests`).  Some belonged in other, existing test modules, and others were weak tests apparently meant to be run locally for someone's one-off debugging purposes.",testing refactor,,brandonwillard,2022-06-15 11:54:31,2022-06-15 13:13:05,tests/compile/test_debugmode.py tests/test_updates.py tests/record.py tests/test_determinism.py tests/test_record.py tests/compile/function/test_types.py tests/diverse_tests.py tests/test_dictionary_output.py,eb1d6f69b0ecafbec3ec067d03c21780b2f7acad 21a9de2971ce5312290d03b4004b7e928e8ca6db 9a7d014b160e12a383a083856fdf30cf71ab8e56 8970a22d6566c307c0b29a10ffbaf8c383466594,"brandonwillard assigned 2022-06-15 11:54:54,brandonwillard labeled 2022-06-15 11:55:02,brandonwillard labeled 2022-06-15 11:55:02,brandonwillard referenced 2022-06-15 13:13:05,brandonwillard merged 2022-06-15 13:13:05,brandonwillard closed 2022-06-15 13:13:05,brandonwillard head_ref_deleted 2022-06-15 13:13:08",codecov[bot] brandonwillard,1,True
483,1003,Make `Elemwise.infer_shape` return `TensorType`ed values,brandonwillard,This PR fixes a source of some `Op.infer_shape` issues that can occur when shapes tracked by `ShapeFeature` are expected to be `TensorType`ed (e.g. `ifelse` assumes this).,bug important shape inference,,brandonwillard,2022-06-18 02:25:10,2022-06-18 04:14:47,aesara/tensor/elemwise.py aesara/tensor/extra_ops.py tests/tensor/test_elemwise.py,9f4a5f3a7b664450c4ec1ec121e91d69713fb6c3 7767c96b4ad338a94790d6807d2b63f9f25cfe25,"brandonwillard assigned 2022-06-18 02:26:28,brandonwillard labeled 2022-06-18 02:26:36,brandonwillard labeled 2022-06-18 02:26:36,brandonwillard labeled 2022-06-18 02:26:36,brandonwillard head_ref_force_pushed 2022-06-18 03:11:24,brandonwillard referenced 2022-06-18 04:14:47,brandonwillard merged 2022-06-18 04:14:47,brandonwillard closed 2022-06-18 04:14:47,brandonwillard head_ref_deleted 2022-06-18 04:14:50",brandonwillard,0,True
484,1008,Refactoring for C compilation thread safety,ferrine,"I went deeper into the code and removed overcomplicated caching for compiled modules. This enabled compilation threadsafety feature that was assumed by the old implementation (but had bugs).

## Prior approach to compilaton
To grasp an idea about what is going on with the implementation before the refactoring we should first look into:
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/basic.py#L1629
Here we see 3 things:
1. there is some ""key"" for modules
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/basic.py#L1619 
2. some modules do not have the ""key"", they are always compiled 
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/basic.py#L1624
3. other modules are tried to be fetched from cache
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/basic.py#L1629

### The key
The key seems to be the some sort of compilation context
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/basic.py#L1206
```
The key returned by this function is of the form (version, signature)
        The signature has the following form:
        {{{
            'CLinker.cmodule_key', compilation args, libraries,
            header_dirs, numpy ABI version, config hash,
            (op0, input_signature0, output_signature0),
            (op1, input_signature1, output_signature1),
            ...
            (opK, input_signatureK, output_signatureK),
        }}}
```
Which is quite important because of compilation flags and other parameters that do not affect the c code directly. Let's just keep this in mind. Note it does not contain hash for the source code. So key is about the compilation context.

### Caching system
This is where `get_module_cache().module_from_key(key=key, lnk=self)` leads
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/cmodule.py#L1165

To start with, let's figure out, how existing, compiled modules are recognized? This moves us here
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/cmodule.py#L1182

We should note that `get_module_cache()` is mutating global state cache or tries to create it from disk
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/cmodule.py#L1612

This is exactly the place that raised my concerns. Any change of the cache should be reflected on the disk somehow. It even required atexit callbacks
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/cmodule.py#L1628

So the read/writes should be protected with the lock not to mess up the persistent cache. But what is lock and where it is used?

The first reference to lock is found here
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/cmodule.py#L1193

Where we try to enter the compilation path. If we look into the refresh called couple of lines below, we'll see another interesting thing
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/cmodule.py#L795

The lock is called again. What it means? dead lock. We can't lock the same filelock. Why is it called?
```
            # 1) Maybe somebody else compiled it for us while we
            #    where waiting for the lock. Try to load it again.
            # 2) If other repo that import Aesara have Aesara ops defined,
            #    we need to refresh the cache here. Otherwise, there are import
            #    order problems.
            #    (Outdated) When device=gpu, we compile during Aesara
            #    import. This triggers the loading of the cache. But
            #    unpickling the cache asks that the external Ops are
            #    completely loaded, which isn't always the case!
            #    If a module isn't completely loaded and its unpickling
            #    fails, it means it is safe for this function
            #    compilation to skip them, but not for future
            #    compilations. So reloading the cache here
            #    compilation fixes this problem. (we could do that only once)
```
It is well explained in the docstring. We hope to avoid compilation reloading the on disk cache with filepaths. This can't be true, we should have errors with dead lock when compiling a simple function? Right. Let's go to the lock implementation itself:
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/compile/compilelock.py#L71

Why would we need to remember paths? They are random!
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/basic.py#L1528
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/link/c/cmodule.py#L342

You see this, `local_mem._locks`. When you aquire the lock for the first time, you'll set local memlock to True and next time (in the same process) you'll not hit the dead lock. The idea is clear, the implementation makes sense with the threading.local objects
https://github.com/aesara-devs/aesara/blob/d6858fe23af29cb28379723175895c9d02fdca51/aesara/compile/compilelock.py#L21

## Theory against practice
Theoretically, this should result into a thread safe compilation. But it does not. The caching system seems to do many things and store cache efficiently, might be too efficient. A single mistake might result into race conditions. I did not manage to find that mistake. That is why I tried to reconstruct the logic of the caching from scratch. The idea is to keep the functionality and limitations but to reimplement it in a better and more reliable way. Let's start.

### Ideas found in the old implementation

1. We cache the context for the compilation, graph + config are the keys. graphs are stored in the dict.
2. Calling compilation request for the graph for the second time should result into a cache hit and return the compiled module.
3. Compilation results should communicate between processes and threads

How to address the points in the way that does the same thing but safely operates under concurrency? 

## Overcoming in the new implementation
New implementation gets rid of redundant code and reimplements the ideas

### Lock
FileLock. It was used before, it is good, we should definitely use that.

### Cache Storage
The best cache storage is no storage at all. Previously, it was a python object synced with on disk analog. Having no storage would mean we have deterministic mapping to the compilation result on the disk. If we want to compile a graph, we should see it is already compiled or not.

(will be updated on request)

",C-backend,brandonwillard,,2022-06-22 18:53:51,2023-12-13 21:22:18,aesara/tensor/nnet/ctc.py aesara/link/c/basic.py aesara/scan/scan_perform_ext.py requirements.txt .github/workflows/test.yml tests/link/c/test_cmodule.py aesara/link/c/lazylinker_c.py tests/compile/test_compilelock.py aesara/link/c/cmodule.py aesara/tensor/blas_headers.py aesara/link/c/cutils.py aesara/tensor/blas_c.py aesara/utils.py aesara/graph/callcache.py aesara/link/c/op.py aesara/compile/compilelock.py aesara/compile/function/types.py,add259b62560b30f7725f65d5a885a49184b8815 aaabd19e7a0c8f53c92195100bfc6591f4d43e71 7ed1e2d12fa5597c6870c8911a8c298f18a45dbd e25fc44f7dc5719d93a3c6c0c290b29de51a6269 fab2cd90c52f53488a23d92b68ac6f813db70029 13e5daa011bfe0298b2f873efea25e05256737bc 85383cf9665135275b4aa4d456a952bf58cd4bd9 6b7676efca10f14fbf11b00666cb41497c41dfb6 1fdde4b5b76d0c60e3bd2f12a6dcd46a22383b91 31c30c982fd1e952f11c2eeeeafe5f2fd056ce24 b840cc160306888af9db90ea339e8ddf3e2c08c5 5ce7f4afbd375e8dc6ff64360248caa54b8d69c4 9d656205a0a4e483f074d4f6b790e8359094521b b392b0b363e776e1fe7103eee4d8b7100c4e5796 82f12cf8e8816c1ccf12bb303eb49aa5652643f6 b8532ecaf7a90dbf3627cd3ae4eba187e0b07a68 17d9355981286ac1e712078f2932f111b83a082a 434c4f7b638a23f16ebd79cffea7fd5e3e0e2ace 5b92d6cc54ab390a987aafde426519e536190403,"brandonwillard convert_to_draft 2022-06-22 19:45:41,brandonwillard labeled 2022-06-22 19:45:52,brandonwillard renamed 2022-06-22 19:48:58,brandonwillard mentioned 2022-06-22 20:50:37,brandonwillard subscribed 2022-06-22 20:50:37,brandonwillard mentioned 2022-06-23 11:20:58,brandonwillard subscribed 2022-06-23 11:20:58,brandonwillard mentioned 2022-06-23 18:07:52,brandonwillard subscribed 2022-06-23 18:07:52,ferrine review_requested 2022-06-23 19:09:32,brandonwillard mentioned 2022-06-23 20:35:26,brandonwillard subscribed 2022-06-23 20:35:26,brandonwillard mentioned 2022-06-23 20:38:40,brandonwillard subscribed 2022-06-23 20:38:40,ferrine closed 2022-12-12 15:00:35,dgerlanc reopened 2022-12-12 15:06:58,ferrine closed 2023-12-13 21:22:19",ferrine dgerlanc brandonwillard,18,False
485,1010,Make `Apply.itypes`'s `Type` signature covariant,aseyboldt,"Here are a few important guidelines and requirements to check before your PR can be merged:
+ [ ] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts). (I won't but I called black manually)
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Currently this fails, because `SomeOp` expects an input of type `TensorType(f64, [None])`, but gets one of type `TensorType(f64, [1])`. Shouldn't we be a bit more permissive by default and expect things that are subtypes of what we expect?
```python
import aesara
import aesara.tensor as at


class SomeOp(aesara.tensor.Op):
    itypes = [at.dvector]
    otypes = [at.dvector]
    
    def perform(self, node, inputs, outputs):
        raise NotImplementedError()


x = at.dscalar(""x"")
SomeOp()(x[None])
```

This fails with error:
```
TypeError: Invalid input types for Op SomeOp:
Input 1/1: Expected TensorType(float64, (None,)), got TensorType(float64, (1,))
```",,ricardoV94,,2022-06-24 08:10:52,2022-06-25 04:31:27,aesara/graph/op.py tests/graph/test_op.py,7e24441273c990534b36f31d1eb8916becbc6432,"aseyboldt head_ref_force_pushed 2022-06-24 08:16:01,aseyboldt head_ref_force_pushed 2022-06-24 09:42:32,aseyboldt head_ref_force_pushed 2022-06-24 11:23:59,aseyboldt head_ref_force_pushed 2022-06-24 11:29:36,aseyboldt ready_for_review 2022-06-24 12:50:52,aseyboldt review_dismissed 2022-06-24 13:05:38,ricardoV94 head_ref_force_pushed 2022-06-24 13:08:36,ricardoV94 head_ref_force_pushed 2022-06-24 13:11:17,ricardoV94 review_requested 2022-06-24 13:11:38,ricardoV94 review_dismissed 2022-06-24 13:22:42,ricardoV94 head_ref_force_pushed 2022-06-24 13:22:42,brandonwillard renamed 2022-06-24 17:12:44,ricardoV94 referenced 2022-06-25 04:31:27,ricardoV94 merged 2022-06-25 04:31:27,ricardoV94 closed 2022-06-25 04:31:27",codecov[bot] ricardoV94 aseyboldt brandonwillard,15,True
486,1016,Fix `Op.perform` type hint,michaelosthege,"The type hint of the `inputs` parameter to `Op.perform` was wrong.
The docstring was correct.

This PR fixes the type hint.
",bug typing,twiecki brandonwillard,,2022-06-26 15:36:36,2022-07-08 05:52:22,aesara/graph/op.py,4a4dc3d6fdd1bb93a92c66a25c4ea1f2b1ff36f2,"michaelosthege head_ref_force_pushed 2022-07-01 18:15:31,michaelosthege ready_for_review 2022-07-01 20:05:42,twiecki review_requested 2022-07-03 20:14:48,brandonwillard labeled 2022-07-04 16:48:16,brandonwillard review_dismissed 2022-07-08 00:51:39,brandonwillard head_ref_force_pushed 2022-07-08 00:51:39,brandonwillard labeled 2022-07-08 00:52:12,ricardoV94 referenced 2022-07-08 05:52:22,ricardoV94 merged 2022-07-08 05:52:22,ricardoV94 closed 2022-07-08 05:52:22,michaelosthege head_ref_deleted 2022-07-08 08:15:25",codecov[bot] brandonwillard ricardoV94 michaelosthege twiecki,8,True
487,1018,Add dtype option to identity_like,guyrt,"Resolves #816 - adds optional dtype parameter to identity_like which makes it more like the existing *_like functions. 

This is a relatively minor improvement that I pulled off the ""good first issue"" task. New here (but interested in being more involved) so apologies for any annoying formatting fixes needed. 

Note that mypy seemed to trigger one unrelated problem:

    aesara/link/c/cmodule.py:2439: error: Unused ""type: ignore"" comment

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [ ] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,ricardoV94,,2022-06-27 18:31:55,2022-06-30 05:21:55,tests/tensor/test_basic.py doc/library/tensor/basic.rst aesara/tensor/basic.py,83ec7ea2fc7382009bab9fbc4bfc3a14295394fb,"guyrt head_ref_force_pushed 2022-06-28 15:26:05,guyrt head_ref_force_pushed 2022-06-28 15:39:31,guyrt head_ref_force_pushed 2022-06-28 19:32:14,guyrt head_ref_force_pushed 2022-06-29 15:05:48,ricardoV94 referenced 2022-06-30 05:21:55,ricardoV94 merged 2022-06-30 05:21:55,ricardoV94 closed 2022-06-30 05:21:56,guyrt mentioned 2022-06-30 05:22:16,guyrt subscribed 2022-06-30 05:22:16,guyrt head_ref_deleted 2022-06-30 14:20:39",codecov[bot] ricardoV94 guyrt,13,True
488,1020,Add `Op`s for `solve_discrete_lyapunov` and `solve_continuous_lyapunov`,jessegrabowski,"Following our discussions in #1015 and #1011, this PR adds Ops to `aesara.tensor.slinalg` that wrap `scipy.linalg.solve_discrete_lyapunov` and `scipy.linalg.solve_continuous_lyapunov`, as well as compute the reverse-mode gradients for each.

One note, I had an error from mypy when running the pre-commit hooks:
`aesara\\link\\c\\cmodule.py:2439: error: Unused ""type: ignore"" comment`

But this is unrelated to any changes i made, so I didn't know what to do with it.
",SciPy compatibility tensor algebra Op implementation,ricardoV94 aseyboldt brandonwillard,,2022-06-29 14:55:39,2022-11-24 11:45:01,tests/tensor/test_slinalg.py aesara/tensor/slinalg.py,48965b288a414549c79fc3eaea6ab73e55e6f29e,"brandonwillard labeled 2022-06-30 06:07:13,brandonwillard labeled 2022-06-30 06:07:19,twiecki subscribed 2022-06-30 23:25:16,brandonwillard subscribed 2022-06-30 23:25:16,ricardoV94 subscribed 2022-06-30 23:25:16,kc611 subscribed 2022-06-30 23:25:16,brandonwillard mentioned 2022-07-03 18:50:53,brandonwillard subscribed 2022-07-03 18:50:54,brandonwillard mentioned 2022-07-03 19:01:54,brandonwillard subscribed 2022-07-03 19:01:54,brandonwillard renamed 2022-07-03 19:08:03,brandonwillard labeled 2022-07-03 19:08:22,aseyboldt mentioned 2022-07-06 18:44:43,aseyboldt subscribed 2022-07-06 18:44:43,brandonwillard mentioned 2022-07-06 19:16:28,brandonwillard subscribed 2022-07-06 19:16:28,jessegrabowski mentioned 2022-07-06 19:16:28,jessegrabowski subscribed 2022-07-06 19:16:28,brandonwillard mentioned 2022-07-07 01:12:24,brandonwillard subscribed 2022-07-07 01:12:24,brandonwillard labeled 2022-07-11 18:03:16,brandonwillard unlabeled 2022-07-11 18:03:31,brandonwillard mentioned 2022-09-27 17:32:22,brandonwillard subscribed 2022-09-27 17:32:22,brandonwillard head_ref_force_pushed 2022-09-29 18:54:41,brandonwillard head_ref_force_pushed 2022-09-29 19:12:18,rlouf head_ref_force_pushed 2022-11-24 10:24:36,rlouf review_dismissed 2022-11-24 11:25:23,rlouf referenced 2022-11-24 11:45:01,rlouf merged 2022-11-24 11:45:01,rlouf closed 2022-11-24 11:45:01",rlouf andrejmuhic codecov[bot] kc611 brandonwillard ricardoV94 aseyboldt jessegrabowski twiecki,35,True
489,1024,Remove superfluous test value warning in `Elemwise` fusion rewrite,brandonwillard,Closes #1021,enhancement refactor,,brandonwillard,2022-06-30 23:55:48,2022-07-04 00:58:55,tests/tensor/test_basic_opt.py aesara/tensor/basic_opt.py,6bcbb9a1de4023d8181ba83c5c97720a962a7df5,"brandonwillard head_ref_force_pushed 2022-07-03 20:40:11,brandonwillard assigned 2022-07-03 20:45:32,brandonwillard labeled 2022-07-03 20:45:40,brandonwillard labeled 2022-07-03 20:45:40,brandonwillard referenced 2022-07-04 00:58:55,brandonwillard merged 2022-07-04 00:58:55,brandonwillard closed 2022-07-04 00:58:56,brandonwillard head_ref_deleted 2022-07-04 00:58:58",codecov[bot] brandonwillard,1,True
490,1025,Remove useless complex conjugate `Op`s from graphs,brandonwillard,This PR adds some simple checks and rewrites that avoid adding useless complex conjugate `Op`s to graphs.,enhancement graph rewriting,,,2022-07-01 01:00:35,2022-07-04 00:56:46,tests/sparse/test_basic.py aesara/tensor/math_opt.py aesara/tensor/math.py aesara/sparse/type.py tests/sparse/test_var.py tests/tensor/test_math.py aesara/sparse/basic.py tests/tensor/test_math_opt.py,199b4ebad31270b273287c21e7f511c423c76f7a,"brandonwillard labeled 2022-07-01 01:01:11,brandonwillard labeled 2022-07-01 01:01:11,brandonwillard head_ref_force_pushed 2022-07-01 01:08:10,brandonwillard head_ref_force_pushed 2022-07-03 19:06:33,brandonwillard head_ref_force_pushed 2022-07-03 21:20:01,brandonwillard head_ref_force_pushed 2022-07-03 23:47:21,brandonwillard referenced 2022-07-04 00:56:46,brandonwillard merged 2022-07-04 00:56:46,brandonwillard closed 2022-07-04 00:56:46",codecov[bot] brandonwillard,1,True
491,1026,Generalize `tril` and `triu` beyond 2D arrays,purna135,This PR enables batch data (>2D data) support for `aesara.tensor.tril` and `aesara.tensor.triu`.,enhancement tensor algebra,ricardoV94,,2022-07-01 08:55:38,2022-07-07 13:36:43,tests/tensor/test_basic.py aesara/tensor/basic.py,241868bdd5eadaa5e539bf43a6cbe45071aa5905,"brandonwillard labeled 2022-07-03 19:07:17,brandonwillard labeled 2022-07-03 19:07:18,brandonwillard renamed 2022-07-03 19:07:39,purna135 head_ref_force_pushed 2022-07-06 08:41:11,purna135 head_ref_force_pushed 2022-07-06 09:18:06,purna135 head_ref_force_pushed 2022-07-06 14:58:56,ricardoV94 review_dismissed 2022-07-07 12:31:03,ricardoV94 head_ref_force_pushed 2022-07-07 12:31:03,ricardoV94 referenced 2022-07-07 13:36:43,ricardoV94 merged 2022-07-07 13:36:43,ricardoV94 closed 2022-07-07 13:36:43",codecov[bot] purna135 ricardoV94 brandonwillard,8,True
492,1027,Implement work-around for numba issue causing a segfault on M1 when using literal_unroll() with bools.,twiecki,"Closes https://github.com/aesara-devs/aesara/issues/1023, which is actually several numba issues described in https://github.com/numba/numba/issues/8215.

Implemented with help from @aseyboldt and @stuartarchibald.

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",bug backend compatibility Numba,stuartarchibald,,2022-07-01 15:53:00,2022-07-01 18:21:49,aesara/link/numba/dispatch/tensor_basic.py,b70821326c827046faed6c6d257988e9659d1921,"twiecki labeled 2022-07-01 15:53:57,twiecki labeled 2022-07-01 15:53:57,twiecki labeled 2022-07-01 15:53:57,aseyboldt mentioned 2022-07-01 15:54:52,aseyboldt subscribed 2022-07-01 15:54:52,stuartarchibald mentioned 2022-07-01 15:54:53,stuartarchibald subscribed 2022-07-01 15:54:53,twiecki head_ref_force_pushed 2022-07-01 16:01:45,twiecki head_ref_force_pushed 2022-07-01 16:36:55,brandonwillard referenced 2022-07-01 18:21:48,brandonwillard merged 2022-07-01 18:21:48,brandonwillard closed 2022-07-01 18:21:49",codecov[bot] brandonwillard aseyboldt stuartarchibald twiecki,10,True
493,1033,Fix NumPy docstring link,brandonwillard,This PR fixes the link to NumPy's docstring standard in the documentation.,documentation,,,2022-07-04 00:10:47,2022-07-04 01:00:07,doc/dev_start_guide.rst,ed400936445ed8c69298aa59d122eed497758cf0,"brandonwillard labeled 2022-07-04 00:59:23,brandonwillard referenced 2022-07-04 01:00:07,brandonwillard merged 2022-07-04 01:00:07,brandonwillard closed 2022-07-04 01:00:07,brandonwillard head_ref_deleted 2022-07-04 01:00:09",brandonwillard,0,True
494,1035,Fix a `Scan` Cython issue involving output storage lengths,brandonwillard,"This PR fixes an issue in `Scan`'s Cython implementation where an attempt is made to overwrite an output storage array with one of a different shape.


This issue was seen in https://github.com/aesara-devs/aehmc/pull/64 [here](https://github.com/aesara-devs/aehmc/runs/7074712615?check_suite_focus=true#step:6:159), when an outer-output array wasn't sliced before attempting an in-place update with a smaller outer-input array (during outer-output initialization).",bug important Scan,rlouf,brandonwillard,2022-07-04 02:10:13,2022-07-06 04:16:30,aesara/scan/scan_perform_ext.py aesara/scan/scan_perform.pyx aesara/scan/c_code/scan_perform.c tests/scan/test_basic.py,42b3b218bd2eb6aed6b9447f292e08b6bbc38d7e,"brandonwillard assigned 2022-07-04 02:10:51,brandonwillard labeled 2022-07-04 02:11:06,brandonwillard labeled 2022-07-04 02:11:06,brandonwillard labeled 2022-07-04 02:11:06,brandonwillard review_dismissed 2022-07-06 02:54:30,brandonwillard head_ref_force_pushed 2022-07-06 02:54:30,brandonwillard head_ref_force_pushed 2022-07-06 03:10:41,brandonwillard referenced 2022-07-06 04:16:30,brandonwillard merged 2022-07-06 04:16:30,brandonwillard closed 2022-07-06 04:16:30,brandonwillard head_ref_deleted 2022-07-06 04:16:33",codecov[bot] rlouf brandonwillard,3,True
495,1038,"Update `Op.grad`, `Op.L_op`, and `aesara.gradient` docstrings and type hints",brandonwillard,"This PR adds a much more informative set of docstrings for `Op.grad` and `Op.L_op`.  The updated docstrings are clearer about the method inputs and outputs, as well as their underlying mathematical interpretations and relationships.

There is also a bit of refactoring of `aesara.gradient`;the kind that clarifies function interfaces and helps with typing.",documentation enhancement gradient implementations typing,zoj613,brandonwillard,2022-07-05 23:39:05,2022-07-07 00:11:32,tests/test_gradient.py aesara/graph/op.py aesara/gradient.py,62f50bbdbbcd3e7604ffc0137ed280b3e16ec3d6 844f293b57f81a2dcd13d55c96ae927aabecc987,"brandonwillard assigned 2022-07-05 23:44:14,brandonwillard labeled 2022-07-05 23:44:30,brandonwillard labeled 2022-07-05 23:44:30,brandonwillard labeled 2022-07-05 23:44:30,brandonwillard labeled 2022-07-05 23:44:36,brandonwillard head_ref_force_pushed 2022-07-06 03:29:44,brandonwillard head_ref_force_pushed 2022-07-06 04:23:04,brandonwillard head_ref_force_pushed 2022-07-06 04:26:51,brandonwillard head_ref_force_pushed 2022-07-06 04:28:58,brandonwillard head_ref_force_pushed 2022-07-06 04:30:24,brandonwillard head_ref_force_pushed 2022-07-06 04:39:13,brandonwillard referenced 2022-07-07 00:11:32,brandonwillard merged 2022-07-07 00:11:32,brandonwillard closed 2022-07-07 00:11:32,brandonwillard head_ref_deleted 2022-07-07 00:11:35",codecov[bot] zoj613 brandonwillard,3,True
496,1042,Fix warning in `ReplaceValide.replace_all_validate_remove`,brandonwillard,This PR fixes a broken warning in `ReplaceValide.replace_all_validate_remove`.,bug graph rewriting,ricardoV94,,2022-07-09 08:08:43,2022-07-10 17:43:49,aesara/graph/features.py,375f528cf4149efc9e2cea55f8c45e8d64fb5487,"brandonwillard head_ref_force_pushed 2022-07-09 08:09:54,brandonwillard head_ref_force_pushed 2022-07-09 08:10:00,brandonwillard labeled 2022-07-10 17:43:43,brandonwillard labeled 2022-07-10 17:43:43,brandonwillard referenced 2022-07-10 17:43:49,brandonwillard merged 2022-07-10 17:43:49,brandonwillard closed 2022-07-10 17:43:49,brandonwillard head_ref_deleted 2022-07-10 17:43:52",codecov[bot] ricardoV94 brandonwillard,1,True
497,1045,add deps to `requirements.txt` to match `install_requires` in `setup.py`,keesterbrugge,"Add the modules etuples, logical-unification, miniKanren, cons to requirement.txt. They are already included in setup.py under install_requires. 

I'm working with self hosted pip repo. Currently when I add pymc to the repo these dependencies of aesara don't automatically get added to the repo. I hope this resolves it.


**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,,,2022-07-11 13:50:59,2022-07-11 15:31:39,requirements.txt,a636a66789286e9b50445ee946d97dbd7b1d4dbf,"keesterbrugge renamed 2022-07-11 13:51:40,keesterbrugge closed 2022-07-11 15:31:39",keesterbrugge,0,False
498,1048,Update PyPI workflow to also build a wheel,keesterbrugge,"Hello Y'all,

PR solves https://github.com/aesara-devs/aesara/issues/1047. TLDR: pypi can't figure the dependencies of aesara if the wheel isn't uploaded.

During the github action that publishes to pypi make sure to not only build a sdist but also a wheel. This is similar to what happens when executing `make pypi`.  Twine (inside pypa/gh-action-pypi-publish@master) will automatically upload the wheel first such that [pypi can extract the dependencies better](https://github.com/pypa/pypi-legacy/issues/622#issuecomment-305829257) and the pypi json api doesn't return `requires_dist = null`

Thank you for this awesome tool!   🙇‍♂️
",enhancement CI,brandonwillard,,2022-07-11 16:25:39,2022-07-11 23:19:40,.github/workflows/pypi.yml MANIFEST.in,ca9c5b3cb8454aac97b855a121d1ddd95875ad32 0e57576f105841dee30ccc0768016cd0adcafc7d,"brandonwillard labeled 2022-07-11 18:02:03,brandonwillard labeled 2022-07-11 18:02:03,brandonwillard head_ref_force_pushed 2022-07-11 23:15:40,brandonwillard referenced 2022-07-11 23:19:39,brandonwillard merged 2022-07-11 23:19:40,brandonwillard closed 2022-07-11 23:19:40,brandonwillard renamed 2022-07-11 23:20:04,brandonwillard connected 2022-07-11 23:20:17,brandonwillard renamed 2022-07-11 23:22:03",codecov[bot] keesterbrugge brandonwillard,2,True
499,1049,Use context managers with `open`,brandonwillard,"This PR changes invocations of `open` to ones that use a `with` context managers.  Hopefully, this will help avoid unclosed file handles, especially the ones observed in https://github.com/sympy/sympy/pull/23745#discussion_r917398141.",bug important C-backend,mattearllongshot,brandonwillard,2022-07-12 00:49:15,2022-07-12 15:53:26,aesara/link/c/lazylinker_c.py aesara/link/c/cmodule.py aesara/misc/pkl_utils.py aesara/configdefaults.py doc/tutorial/loading_and_saving.rst tests/misc/test_pkl_utils.py aesara/link/c/cutils.py aesara/compile/profiling.py aesara/compile/compiledir.py,f8f092e567a7d4cab793ccd5bbde1c4f57c0153d,"brandonwillard assigned 2022-07-12 00:49:44,brandonwillard labeled 2022-07-12 00:49:59,brandonwillard labeled 2022-07-12 00:49:59,brandonwillard labeled 2022-07-12 00:49:59,brandonwillard referenced 2022-07-12 15:53:26,brandonwillard merged 2022-07-12 15:53:26,brandonwillard closed 2022-07-12 15:53:27,brandonwillard head_ref_deleted 2022-07-12 15:53:30",codecov[bot] mattearllongshot brandonwillard,4,True
500,1050,Replace `distutils` with `setuptools`,brandonwillard,"This PR replaces `distutils` imports with the equivalent `setuptools` imports, in anticipation of [`distutils`'s deprecation](https://peps.python.org/pep-0632/).

The `numpy.distutils` changes in this PR may affect the ""dynamic"" determination of build settings, since the old `numpy.distutils.system_info.get_info` appears to rely on the discovered `pkg-config` binary in one step, and that binary could be arbitrarily changed.  The approach used in this PR&mdash;i.e. `numpy.__config__.get_info`&mdash;relies on the `system_info` settings at the time when `numpy` was built, and appears to return the appropriate environment-specific library/include paths.

Since the underlying parameters are all still configurable via `aesara.config` and/or environment variables, I'm not too concerned about losing any fringe functionality with this change, especially not when the parameters we're trying to obtain are explicitly the parameters used by NumPy (i.e. the ones given by `numpy.__config__.get_info`), and not the ones given by an arbitrary `pkg-config` in one's path or the like.  My guess is that the latter actually leads to more errors and confusion than benefits.",enhancement important C-backend NumPy compatibility,,brandonwillard,2022-07-12 16:15:20,2022-07-12 20:33:55,aesara/tensor/blas.py aesara/link/c/cmodule.py aesara/configdefaults.py aesara/link/c/exceptions.py doc/troubleshooting.rst setup.py,efd87cf4cab18dd06bda7ad961c9365c92bfeba6 1f31a979b7609a57352f2d16c19dd3567f803d44,"brandonwillard labeled 2022-07-12 16:15:51,brandonwillard labeled 2022-07-12 16:15:51,brandonwillard assigned 2022-07-12 16:15:53,brandonwillard head_ref_force_pushed 2022-07-12 16:24:34,brandonwillard head_ref_force_pushed 2022-07-12 17:02:39,brandonwillard connected 2022-07-12 17:03:25,brandonwillard head_ref_force_pushed 2022-07-12 17:14:44,brandonwillard labeled 2022-07-12 17:31:47,brandonwillard labeled 2022-07-12 17:31:53,twiecki subscribed 2022-07-12 19:38:31,dgerlanc subscribed 2022-07-12 19:38:31,brandonwillard subscribed 2022-07-12 19:38:31,ricardoV94 subscribed 2022-07-12 19:38:31,kc611 subscribed 2022-07-12 19:38:31,brandonwillard referenced 2022-07-12 20:33:55,brandonwillard merged 2022-07-12 20:33:55,brandonwillard closed 2022-07-12 20:33:55,brandonwillard head_ref_deleted 2022-07-12 20:33:58",codecov[bot] kc611 brandonwillard maresb ricardoV94 dgerlanc twiecki,4,True
501,1053,Make `topogroup_optimizer` use `order` argument,brandonwillard,This PR fixes a bug in `aesara.graph.opt.topogroup_optimizer` that prevents the `order` argument from being used correctly.,bug graph rewriting,,brandonwillard,2022-07-14 16:07:13,2022-07-14 17:20:25,aesara/graph/opt.py,c945458767a17dbaa1977fdac1ae05ac3a106b14,"brandonwillard labeled 2022-07-14 16:07:45,brandonwillard labeled 2022-07-14 16:07:45,brandonwillard assigned 2022-07-14 16:07:51,brandonwillard referenced 2022-07-14 17:20:25,brandonwillard merged 2022-07-14 17:20:25,brandonwillard closed 2022-07-14 17:20:25,brandonwillard head_ref_deleted 2022-07-14 17:20:27",codecov[bot] brandonwillard,1,True
502,1054,"Change use of ""optimize"" to ""rewrite""",brandonwillard,"This PR introduces a lot of refactoring that changes object names and comments to use the term ""rewrite"" instead of ""optimize"" when appropriate.

Also, modules with the name `opt`&mdash;or a prefix/suffix of `opt`&mdash;have either been renamed to `rewriting` or moved to a sub-package with that name.",documentation important refactor,ricardoV94,brandonwillard,2022-07-14 22:50:54,2022-08-17 17:00:42,aesara/sandbox/multinomial.py tests/compile/test_builders.py aesara/graph/__init__.py tests/sparse/test_basic.py doc/tutorial/profiling.rst doc/faq.rst tests/graph/test_opt_utils.py doc/sandbox/performance.rst aesara/tensor/rewriting/basic.py aesara/graph/fg.py aesara/tensor/slinalg.py aesara/compile/profiling.py aesara/graph/rewriting/unify.py tests/graph/rewriting/__init__.py aesara/tensor/rewriting/uncanonicalize.py tests/tensor/test_basic_opt.py aesara/compile/function/types.py aesara/scan/opt.py aesara/__init__.py aesara/sparse/__init__.py doc/extending/unittest.rst aesara/tensor/blas.py aesara/graph/rewriting/db.py doc/extending/extending_faq.rst doc/tutorial/gradients.rst doc/library/compile/opfromgraph.rst tests/graph/test_features.py doc/library/printing.rst tests/tensor/test_shape.py aesara/tensor/rewriting/__init__.py tests/graph/rewriting/test_basic.py aesara/scalar/basic.py aesara/typed_list/opt.py doc/extending/scan.rst doc/library/tensor/basic.rst tests/tensor/rewriting/test_math.py tests/graph/rewriting/test_kanren.py tests/tensor/random/test_utils.py tests/tensor/rewriting/test_basic.py tests/tensor/nnet/test_abstract_conv.py aesara/graph/opt_utils.py doc/extending/creating_an_op.rst tests/graph/test_opt.py doc/index.rst aesara/typed_list/__init__.py aesara/graph/features.py .pre-commit-config.yaml doc/extending/graphstructures.rst doc/optimizations.rst doc/library/config.rst aesara/graph/opt.py tests/test_gradient.py aesara/graph/rewriting/__init__.py tests/compile/function/test_types.py aesara/tensor/basic_opt.py doc/tutorial/modes.rst aesara/tensor/utils.py tests/tensor/test_math_opt.py doc/library/tensor/index.rst aesara/tensor/nnet/conv.py aesara/graph/rewriting/utils.py aesara/tensor/elemwise.py doc/extending/tips.rst aesara/compile/mode.py doc/tutorial/faq_tutorial.rst doc/tutorial/shape_info.rst aesara/tensor/nnet/sigm.py tests/sandbox/test_multinomial_wo_replacement.py doc/library/compile/function.rst tests/scan/test_basic.py doc/introduction.rst tests/tensor/test_subtensor.py .github/workflows/test.yml aesara/graph/rewriting/kanren.py doc/tutorial/aliasing.rst aesara/tensor/blas_scipy.py aesara/tensor/random/__init__.py tests/link/test_jax.py aesara/tensor/rewriting/math.py doc/library/scan.rst aesara/tensor/nnet/opt.py doc/extending/op.rst doc/library/tensor/basic_opt.rst aesara/configparser.py tests/tensor/rewriting/__init__.py aesara/tensor/nnet/__init__.py aesara/tensor/nnet/rewriting.py aesara/ifelse.py aesara/sparse/rewriting.py aesara/scan/rewriting.py aesara/graph/unify.py tests/link/test_numba.py doc/library/tensor/math_opt.rst tests/sandbox/test_rng_mrg.py aesara/gradient.py doc/troubleshooting.rst tests/graph/rewriting/test_db.py tests/tensor/test_elemwise.py doc/tutorial/conditions.rst aesara/graph/optdb.py doc/extending/type.rst aesara/tensor/math.py tests/tensor/nnet/test_basic.py doc/extending/pipeline.rst aesara/tensor/nnet/conv3d2d.py tests/tensor/nnet/test_rewriting.py tests/graph/test_kanren.py doc/library/sparse/index.rst tests/tensor/nnet/test_conv3d2d.py tests/graph/rewriting/test_unify.py aesara/typed_list/rewriting.py aesara/tensor/__init__.py aesara/tensor/nnet/basic.py aesara/tensor/nnet/batchnorm.py doc/extending/graph_rewriting.rst doc/glossary.rst doc/sandbox/elemwise_compiler.rst doc/library/tensor/nnet/basic.rst tests/link/test_numba_performance.py tests/compile/test_debugmode.py aesara/compile/builders.py tests/tensor/random/test_rewriting.py doc/extending/index.rst tests/tensor/test_merge.py tests/graph/test_fg.py tests/tensor/random/test_opt.py aesara/utils.py aesara/tensor/opt_uncanonicalize.py doc/tutorial/nan_tutorial.rst tests/tensor/random/test_basic.py aesara/link/numba/dispatch/scalar.py aesara/tensor/nnet/abstract_conv.py aesara/tensor/nnet/ctc.py aesara/tensor/math_opt.py tests/tensor/test_blas.py aesara/scan/__init__.py tests/tensor/test_basic.py tests/tensor/test_opt_uncanonicalize.py aesara/sandbox/linalg/ops.py aesara/graph/rewriting/basic.py doc/extending/inplace.rst aesara/tensor/random/opt.py setup.cfg tests/scan/test_rewriting.py doc/library/compile/mode.rst aesara/graph/utils.py tests/tensor/rewriting/test_uncanonicalize.py tests/tensor/nnet/test_sigm.py tests/sparse/test_rewriting.py doc/library/compile/debugmode.rst doc/tutorial/printing_drawing.rst aesara/sandbox/rng_mrg.py aesara/graph/kanren.py tests/tensor/rewriting/test_subtensor.py tests/compile/test_mode.py aesara/tensor/rewriting/subtensor.py tests/graph/test_optdb.py aesara/configdefaults.py tests/tensor/test_extra_ops.py tests/graph/test_destroyhandler.py tests/graph/rewriting/test_utils.py tests/tensor/nnet/test_opt.py aesara/tensor/subtensor_opt.py aesara/sparse/opt.py aesara/tensor/random/rewriting.py aesara/tensor/basic.py doc/tutorial/profiling_example_out.prof doc/tutorial/debug_faq.rst tests/typed_list/test_rewriting.py tests/tensor/test_subtensor_opt.py aesara/tensor/blas_c.py doc/sandbox/how_to_make_ops.rst,f774af99bf145d840e10cdebf512c4b7bd7d18c6 f34419095e27f5768c821f7977f115c7c407c0a2 b2cb0dd9fdd5a75de44a4139cd5b102a364a9e03 f829123356d3dafa4691d38ff8831031adcdcab3 4ba42b772db866573660127cb553fc6223ceab62 b0cd076307904573bb3ce1e38d413d0c32db9a86 4ab3814498875fe34da9c244ab0fe57cb48b179e a81201fd659ba1c3933453b163a0a3ca9fb3d38b d8ea54ba716340dfd13933a16b293e5f6ce7ffd0 00e6e8d1147c6c7d40ce5b93cc20f9993fc27c5d 92042e9e80e79a0afa06b022fcf3fb06c2b94e15 4b386f4434730779a463854f461b551d9e864533 8c848720932059d4cf7630639ad6dc76847c53af bd4eb1ce0e4319bcea613ad379a01cde821563e1 f622b55192de92cdd1187565fd1e3dd70fc311db c117470395b61374693006acd866f8074ff1802e 5549ec915ee77c218d5cfbb03fa598d044284702 69b8dab986b83ceccff13430694913757e1279ec 51fa424262e7b58af36da6fa42de1d6eb1c6374f 251cfb8fa05f3510d3fe06088a7a9dcb5839567f 3c7353586b70d02df71697cccd65a17503ccab35 5bbdf2d9cbd73c6136ca1fd86e2860f8caf8451c d53ea75aa2545bffccf82e2467e669520d359795 ae9ea0342b2aadde80e9375f3a4d3699174b7ceb 04da8cdb175b96c881e76007b3313e0fe88202a1 539addb0bc36b29d182b07f0d9d77a1620ec9699 562f095e29163c52f49edff141e3b2b2efccf1df cc85f21dca4d72316e8d58d823401564fbb7b6ad 1a6fecf9b4cd47b59727e9f01d6981c17018b291 64fbd180745f9ec9451173b5c590d0a09507d6a0 0a1752dcac5b96268d7a043bc887292d0c6ae92b 5730c5681eae4d358037e025419f3d250461d47b 9d4e7415bceead7a5dc6095e80e3848b710f5bb3 e7ecee1aac1245d1300bbc533527a895598038f2 180397f723241220a5539ac84a6ec7030e19b428 e8bbfd5996f1fbfb3125d071895758fad6b14a19 c305e398c04676cf6e28dc752b269f540d4d7b60 7b6d91903ee8db0cc64a520c7b91e878305fa405 848aaff7ce4b4ad905d91ee788cbb69bdcce2e28 9c6b3dc59425ff392d0816eeb96afceeb62724c3 6d193330c643a889b8bac8baa020a3fbe4281426,"brandonwillard assigned 2022-07-14 22:51:43,brandonwillard labeled 2022-07-14 22:51:57,brandonwillard labeled 2022-07-14 22:51:57,brandonwillard labeled 2022-07-14 22:51:57,brandonwillard head_ref_force_pushed 2022-07-14 22:54:05,brandonwillard head_ref_force_pushed 2022-07-14 23:12:39,brandonwillard review_dismissed 2022-07-15 22:25:55,brandonwillard head_ref_force_pushed 2022-07-15 22:25:55,brandonwillard head_ref_force_pushed 2022-07-15 23:03:39,brandonwillard head_ref_force_pushed 2022-07-16 01:30:40,brandonwillard head_ref_force_pushed 2022-07-16 02:39:26,brandonwillard head_ref_force_pushed 2022-07-18 16:22:33,brandonwillard head_ref_force_pushed 2022-07-18 16:28:00,brandonwillard head_ref_force_pushed 2022-07-19 01:25:33,brandonwillard head_ref_force_pushed 2022-07-19 01:33:24,brandonwillard head_ref_force_pushed 2022-07-19 01:57:44,brandonwillard head_ref_force_pushed 2022-07-19 02:42:25,brandonwillard head_ref_force_pushed 2022-07-19 03:41:22,brandonwillard head_ref_force_pushed 2022-07-19 04:41:52,brandonwillard head_ref_force_pushed 2022-07-19 04:47:42,brandonwillard head_ref_force_pushed 2022-07-19 04:48:05,brandonwillard head_ref_force_pushed 2022-07-19 04:48:50,brandonwillard head_ref_force_pushed 2022-07-19 17:37:12,brandonwillard head_ref_force_pushed 2022-07-20 00:35:13,brandonwillard head_ref_force_pushed 2022-07-20 00:35:27,brandonwillard head_ref_force_pushed 2022-07-20 00:39:55,brandonwillard head_ref_force_pushed 2022-07-31 21:05:04,brandonwillard head_ref_force_pushed 2022-08-16 17:23:26,brandonwillard head_ref_force_pushed 2022-08-16 17:38:04,brandonwillard head_ref_force_pushed 2022-08-16 19:00:02,twiecki subscribed 2022-08-16 22:16:46,brandonwillard subscribed 2022-08-16 22:16:46,maresb subscribed 2022-08-16 22:16:46,ricardoV94 subscribed 2022-08-16 22:16:46,kc611 subscribed 2022-08-16 22:16:46,brandonwillard referenced 2022-08-17 17:00:42,brandonwillard merged 2022-08-17 17:00:42,brandonwillard closed 2022-08-17 17:00:42,brandonwillard head_ref_deleted 2022-08-17 17:00:46,oscarbenjamin mentioned 2022-08-22 18:15:19,oscarbenjamin subscribed 2022-08-22 18:15:19",oscarbenjamin codecov[bot] kc611 brandonwillard maresb ricardoV94 michaelosthege twiecki,9,True
503,1056,Fix `size` issue when using broadcastable dimensions in multivariate `RandomVariable`s,ricardoV94,"Closes #1055 

The original issue seems to have been misunderstood. This PR allows size to broadcast multivariate distribution parameters in exactly the same way that it broadcasts univariate distribution parameters. It does not allow size to be shorter or inconsistent with the original parameter shapes, which seems to be the reason why the more restrictive checks were introduced originally. The following cases are now both possible:

```python
import numpy as np
import aesara.tensor as at

# Already allowed before
at.random.normal(np.ones((3, 1, 3)), size=(3, 10, 3)).eval().shape  # (3, 10, 3)

# Allowed now
at.random.dirichlet(np.ones((3, 1, 3)), size=(3, 10)).eval().shape  # (3, 10, 3)
```",bug,brandonwillard,,2022-07-17 14:56:06,2022-07-17 23:49:30,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,c3a34ea9a5977792bffe93762876fe479768d9ed,"ricardoV94 head_ref_force_pushed 2022-07-17 15:01:38,brandonwillard connected 2022-07-17 23:30:26,brandonwillard renamed 2022-07-17 23:30:56,brandonwillard renamed 2022-07-17 23:31:22,brandonwillard labeled 2022-07-17 23:31:32,brandonwillard review_requested 2022-07-17 23:36:29,brandonwillard referenced 2022-07-17 23:49:30,brandonwillard merged 2022-07-17 23:49:30,brandonwillard closed 2022-07-17 23:49:30",codecov[bot] ricardoV94 brandonwillard,2,True
504,1059,Implement generalized gamma distribution,kylejcaron,"**Thank you for opening a PR!**

This PR implements an Op for a Generalized Gamma Random Variable with the parameterization GG(alpha, p, lambd). This corresponds to scipy in the following mapping: `scipy.stats.gengamma(a=alpha/p, c=p, scale=lambd)`.

This goes along with the following [PyMC PR to implement the Generalized Gamma distribution](https://github.com/pymc-devs/pymc/pull/5985)

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement random variables Op implementation,brandonwillard,,2022-07-18 14:30:02,2022-07-19 02:03:32,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,d9ede7dc50cfeaf29f3d1cfbccf2a85cec777d4d,"kylejcaron head_ref_force_pushed 2022-07-18 15:01:26,kylejcaron ready_for_review 2022-07-18 15:03:02,brandonwillard labeled 2022-07-18 16:12:42,brandonwillard labeled 2022-07-18 16:12:42,brandonwillard labeled 2022-07-18 16:12:47,kylejcaron head_ref_force_pushed 2022-07-18 16:34:20,brandonwillard referenced 2022-07-19 02:03:32,brandonwillard merged 2022-07-19 02:03:32,brandonwillard closed 2022-07-19 02:03:32,kylejcaron head_ref_deleted 2022-07-19 13:34:27",codecov[bot] kylejcaron brandonwillard,3,True
505,1061,Add numba implementation for split,aseyboldt,"Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.",enhancement Numba Op implementation,twiecki,,2022-07-19 16:28:15,2022-07-19 20:27:53,tests/link/test_numba.py aesara/link/numba/dispatch/tensor_basic.py,ecd939069fa8d739f426dcf4c719677697c836d3,"brandonwillard labeled 2022-07-19 16:55:59,brandonwillard labeled 2022-07-19 16:55:59,brandonwillard labeled 2022-07-19 16:55:59,brandonwillard referenced 2022-07-19 20:27:53,brandonwillard merged 2022-07-19 20:27:53,brandonwillard closed 2022-07-19 20:27:53",codecov[bot] aseyboldt twiecki brandonwillard,1,True
506,1062,Add numba sigmoid and GammaLn implementation,aseyboldt,"Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Currently unless numba-scipy is installed (and it isn't a dependency) compiling pymc models that use sigmoid fails, eg

```python
with pm.Model() as model:
    pm.Uniform(""a"", lower=0, upper=1)
```

Sigmoid is so simple however, that I'm not sure we really need to call into scipy for it, we could just provide a custom implementation directly as in this PR?",enhancement Numba Op implementation,twiecki brandonwillard,,2022-07-19 17:29:26,2022-07-24 18:08:45,aesara/configdefaults.py aesara/link/numba/dispatch/elemwise.py tests/link/test_numba.py aesara/link/numba/dispatch/basic.py aesara/link/numba/dispatch/scalar.py,02d1f3e835a3962dfa34469e21d283dbca4d03a5 ef1042810a73903532d09afcda1c2d0a0f395b1a 5a6f238e87d086a1164467c0c297ecefbcf76db9 1c88f4f060426d6b08d2d5adb5814f54bad17ea7 26d7dd45b9fdc8e2dcc18367fefdaa133c4f0f5e,"brandonwillard labeled 2022-07-19 20:28:15,brandonwillard labeled 2022-07-19 20:28:15,brandonwillard labeled 2022-07-19 20:28:15,aseyboldt review_dismissed 2022-07-20 00:03:08,aseyboldt head_ref_force_pushed 2022-07-20 00:03:08,brandonwillard mentioned 2022-07-20 00:10:11,brandonwillard subscribed 2022-07-20 00:10:11,twiecki renamed 2022-07-21 07:48:01,aseyboldt head_ref_force_pushed 2022-07-22 23:45:08,aseyboldt head_ref_force_pushed 2022-07-22 23:45:24,aseyboldt closed 2022-07-24 18:08:45",codecov[bot] aseyboldt twiecki brandonwillard,12,False
507,1064,Fix the type hints in `aesara.printing`,brandonwillard,This PR fixes and adds type hints to `aesara.printing`.  I'm hoping that these changes resolve the intermittent Mypy errors related to the `op_debug_information.register` line in `aesara.scan.op`.,enhancement typing,,brandonwillard,2022-07-19 23:07:05,2022-07-20 00:36:02,aesara/link/vm.py setup.cfg tests/test_printing.py aesara/printing.py aesara/compile/profiling.py,53a8ba515a0cc78b394a10af24dde6242abe0a2c,"brandonwillard head_ref_force_pushed 2022-07-19 23:09:25,brandonwillard head_ref_force_pushed 2022-07-19 23:09:41,brandonwillard head_ref_force_pushed 2022-07-19 23:11:20,brandonwillard head_ref_force_pushed 2022-07-19 23:17:05,brandonwillard labeled 2022-07-19 23:24:12,brandonwillard labeled 2022-07-19 23:24:12,brandonwillard head_ref_force_pushed 2022-07-19 23:25:57,brandonwillard assigned 2022-07-19 23:26:28,brandonwillard referenced 2022-07-20 00:36:02,brandonwillard merged 2022-07-20 00:36:02,brandonwillard closed 2022-07-20 00:36:02,brandonwillard head_ref_deleted 2022-07-20 00:36:05",codecov[bot] brandonwillard,1,True
508,1066,Enable type checking for NumPy types,brandonwillard,This PR enables type checking for NumPy types and starts making use of NumPy's `ArrayLike` and `DTypeLike` generics.,enhancement important NumPy compatibility typing,,brandonwillard,2022-07-20 20:01:35,2022-07-20 22:38:25,aesara/tensor/random/type.py setup.cfg .pre-commit-config.yaml aesara/graph/basic.py aesara/printing.py aesara/link/c/op.py aesara/tensor/__init__.py,edbff9111eb8ddd75dbda1238feb9bfca038aa70,"brandonwillard assigned 2022-07-20 20:01:47,brandonwillard labeled 2022-07-20 20:02:00,brandonwillard labeled 2022-07-20 20:02:00,brandonwillard labeled 2022-07-20 20:02:00,brandonwillard labeled 2022-07-20 20:02:00,brandonwillard head_ref_force_pushed 2022-07-20 20:53:22,brandonwillard referenced 2022-07-20 22:38:25,brandonwillard merged 2022-07-20 22:38:25,brandonwillard closed 2022-07-20 22:38:25,brandonwillard head_ref_deleted 2022-07-20 22:38:29",codecov[bot] brandonwillard,1,True
509,1070,Fix typing error in numba MakeVector impl,aseyboldt,"Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

In numba `np.array([], dtype=np.bool)` doesn't typecheck, but `np.array([], dtype=bool)` does:

```python
import numba
import numpy as np

@numba.njit
def foo():
    return np.array([True], dtype=np.bool)  # doesn't work
    # return np.array([True], dtype=bool)  # works
```

This leads to compilation errors for graphs like this:
```python
import aesara
import aesara.tensor as at

x = at.scalar(dtype=bool)
make_vector = aesara.tensor.basic.MakeVector(dtype=bool)
y = make_vector(x)
func = aesara.function([x], y, mode=""NUMBA"")
func(True)
```

We can fix this by passing the dtype as an object into the jited function, instead of relying on string formatting.",bug Numba,brandonwillard,,2022-07-21 15:00:26,2022-07-21 16:53:52,tests/link/test_numba.py aesara/link/numba/dispatch/tensor_basic.py,4cad636014bcb3ca0ec8c2ac8492600555de4d98,"brandonwillard labeled 2022-07-21 16:53:25,brandonwillard labeled 2022-07-21 16:53:25,brandonwillard referenced 2022-07-21 16:53:52,brandonwillard merged 2022-07-21 16:53:52,brandonwillard closed 2022-07-21 16:53:52",codecov[bot] aseyboldt brandonwillard,1,True
510,1071,Prevent `Print` from being constant folded,brandonwillard,"This PR prevents the `Print` `Op` from being constant folded and, as a result, unintentionally removed from graphs compiled in modes like `FAST_RUN`.",bug Op implementation,,brandonwillard,2022-07-22 00:15:53,2022-07-22 01:22:06,tests/test_printing.py aesara/printing.py,b805f830e589e71c4fd483c83e8890e93455c914,"brandonwillard assigned 2022-07-22 00:16:08,brandonwillard labeled 2022-07-22 00:16:12,brandonwillard labeled 2022-07-22 00:16:16,brandonwillard referenced 2022-07-22 01:22:06,brandonwillard merged 2022-07-22 01:22:06,brandonwillard closed 2022-07-22 01:22:06,brandonwillard head_ref_deleted 2022-07-22 01:22:09",codecov[bot] brandonwillard,1,True
511,1073,Convert Numba scalar outputs to `ndarray`s,brandonwillard,This PR closes #1063.,bug refactor Numba,,brandonwillard,2022-07-22 23:55:07,2022-07-23 01:27:44,aesara/link/basic.py tests/link/test_numba.py aesara/link/numba/linker.py,971644fbe89621e576f5a4bdeb97282230d97683 852d2844946264f3524853a332f5c1af3b4476bf,"brandonwillard labeled 2022-07-22 23:55:25,brandonwillard labeled 2022-07-22 23:55:25,brandonwillard labeled 2022-07-22 23:55:32,brandonwillard assigned 2022-07-22 23:55:36,brandonwillard head_ref_force_pushed 2022-07-22 23:55:46,brandonwillard referenced 2022-07-23 01:27:44,brandonwillard merged 2022-07-23 01:27:44,brandonwillard closed 2022-07-23 01:27:44,brandonwillard head_ref_deleted 2022-07-23 01:27:47",codecov[bot] brandonwillard,1,True
512,1077,Add some more numba special functions,aseyboldt,"Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

This is extracted from #1062, but only the special functions.
I'll open a separate PR for the remaining parts of the original PR.",enhancement Numba SciPy compatibility,,,2022-07-23 14:25:09,2022-07-23 19:37:43,tests/link/test_numba.py aesara/link/numba/dispatch/scalar.py,67367b7076a2e809f1d82b7b2b6b9e0870ca591e 3009fc6392e86c69639dfcbb6b30b9719fcdd862 54bcc361282d5450383e38c0b1ca6340549e6902,"brandonwillard labeled 2022-07-23 19:36:40,brandonwillard labeled 2022-07-23 19:36:40,brandonwillard labeled 2022-07-23 19:36:49,brandonwillard referenced 2022-07-23 19:37:43,brandonwillard merged 2022-07-23 19:37:43,brandonwillard closed 2022-07-23 19:37:44",codecov[bot] aseyboldt brandonwillard,1,True
513,1080,Add a JAX implementation for `FillDiagonal`,ferrine,"Adds the missing fill_diagonal implementation and closes #1079 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [ ] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement JAX Op implementation,ricardoV94 twiecki brandonwillard,,2022-07-28 18:37:09,2022-07-31 20:41:00,tests/link/test_jax.py aesara/scan/op.py aesara/link/jax/dispatch.py,0e2f53d189aef117a8b311e018eeab5b399b6d2e 88cd9b64ee1b2b2d2b9cc727dd0a9325c51ecab7 4f7048e56c4777589ca501e7c31743ca763fc4ad 3ce3f6699e460c3948e2c0ead4877f5fe7008162,"ricardoV94 convert_to_draft 2022-07-28 19:28:23,ricardoV94 ready_for_review 2022-07-28 19:29:17,brandonwillard renamed 2022-07-28 23:21:18,brandonwillard renamed 2022-07-28 23:21:50,brandonwillard labeled 2022-07-28 23:21:57,brandonwillard labeled 2022-07-28 23:21:57,brandonwillard labeled 2022-07-31 20:40:27,brandonwillard referenced 2022-07-31 20:41:00,brandonwillard merged 2022-07-31 20:41:00,brandonwillard closed 2022-07-31 20:41:00,ferrine head_ref_deleted 2022-07-31 21:22:44",codecov[bot] brandonwillard ricardoV94 ferrine twiecki,11,True
514,1081,Handle duplicate indices in Numba implementation of `AdvancedIncSubtensor1`,aseyboldt,"Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

First, this PR removes the incorrect numba implementation of `AdvancedIncSubtensor`, so this will now just fall back to objectmode, and be slow and correct. (We should also provide a numba impl for this, but that will be a separate PR).

But we do add a new implementation for `AdvancedIncSubtensor1` (the much more common case). Here, we also take advantage of the fact that sometimes we know the indices beforehand, so we can simplify bounds checks, and generate cleaner and faster assembly code.

Also a one line fix for cumop accidentally made its way into the PR, but this is simple enough that maybe we can just keep it here? (it has its own commit).
The problem was that the `numba.prange` loop had data races.

fixes https://github.com/aesara-devs/aesara/issues/603",bug important Numba,ricardoV94 brandonwillard,,2022-07-28 19:11:45,2022-08-23 15:40:37,aesara/link/numba/dispatch/extra_ops.py tests/tensor/rewriting/test_subtensor.py aesara/tensor/rewriting/subtensor.py aesara/tensor/subtensor.py tests/link/test_numba.py aesara/link/numba/dispatch/basic.py,f3f65ad61493585fd0c7e84770ecf7618ff0dab4 4e9597ffcf1a4c2191fa3391f7b0e35e2f26eebe 5bf0febe743a1aef017fca983265050784475138 3a3075642e641348d27e5b9ac7dac580052a961b c27c28cf1ebda5f8d54e507209f39b962414fc76,"aseyboldt head_ref_force_pushed 2022-07-28 22:34:30,brandonwillard connected 2022-07-28 22:39:07,brandonwillard labeled 2022-07-28 22:39:33,brandonwillard labeled 2022-07-28 22:39:33,brandonwillard labeled 2022-07-28 22:39:33,aseyboldt renamed 2022-07-28 22:52:17,aseyboldt ready_for_review 2022-07-28 23:10:36,aseyboldt review_requested 2022-08-03 01:28:04,brandonwillard renamed 2022-08-04 18:12:12,aseyboldt head_ref_force_pushed 2022-08-12 22:39:23,aseyboldt head_ref_force_pushed 2022-08-12 23:06:01,aseyboldt head_ref_force_pushed 2022-08-23 01:20:11,aseyboldt head_ref_force_pushed 2022-08-23 02:27:05,aseyboldt closed 2022-08-23 15:40:37,ricardoV94 mentioned 2022-08-23 15:40:37,ricardoV94 subscribed 2022-08-23 15:40:37",codecov[bot] ricardoV94 aseyboldt brandonwillard,26,False
515,1083,Add Owens-T Function `Op`,RuneDominik,"This draft PR adds `scipy.special's` `owens_t`-function, needed primarily in the computation of a skewed Gaussian's CDF [1]. The gradient is taken from wolfram alpha ([2] and [3]).

As I've never contributed to aesara before I'm open for any feedback. 

[1] https://en.wikipedia.org/wiki/Skew_normal_distribution
[2] https://www.wolframalpha.com/input?i=d%2Fdh+OwenT%5Bh%2C+a%5D
[3] https://www.wolframalpha.com/input?i=d%2Fda+OwenT%5Bh%2C+a%5D

Here are a few important guidelines and requirements to check before your PR can be merged:

- [x] There is an informative high-level description of the changes.
- [x] The description and/or commit message(s) references the relevant GitHub issue(s).
- [x] [pre-commit](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
- [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
- [x] The commits correspond to [relevant logical changes](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are no commits that fix changes introduced by other commits in the same branch/BR.
- [x] There are tests covering the changes introduced in the PR.",enhancement SciPy compatibility Op implementation,ricardoV94 brandonwillard,,2022-07-29 13:13:09,2022-08-11 16:44:27,aesara/tensor/math.py aesara/tensor/inplace.py aesara/scalar/math.py tests/tensor/test_math_scipy.py,14f113b2b80cce884015107aa3793cde52da633d,"brandonwillard labeled 2022-07-29 18:17:00,brandonwillard labeled 2022-07-29 18:17:00,brandonwillard labeled 2022-07-29 18:17:00,brandonwillard labeled 2022-07-29 18:17:00,brandonwillard unlabeled 2022-07-29 18:17:38,RuneDominik head_ref_force_pushed 2022-08-02 08:38:47,RuneDominik ready_for_review 2022-08-02 08:40:23,RuneDominik head_ref_force_pushed 2022-08-05 09:17:30,ricardoV94 head_ref_force_pushed 2022-08-07 08:49:25,ricardoV94 review_requested 2022-08-07 08:49:55,brandonwillard renamed 2022-08-09 00:30:35,brandonwillard renamed 2022-08-09 00:30:44,RuneDominik review_dismissed 2022-08-09 09:53:30,RuneDominik review_dismissed 2022-08-09 09:53:30,RuneDominik head_ref_force_pushed 2022-08-09 09:53:30,RuneDominik review_requested 2022-08-09 09:54:33,RuneDominik review_requested 2022-08-09 09:54:33,brandonwillard referenced 2022-08-11 16:44:27,brandonwillard merged 2022-08-11 16:44:27,brandonwillard closed 2022-08-11 16:44:27,RuneDominik head_ref_deleted 2022-08-11 20:00:01",codecov[bot] ricardoV94 RuneDominik brandonwillard,6,True
516,1084,Add docstring for the `GammaRV` Op,rlouf,"In this PR I add a docstring for the `GammaRV` Op.

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [NA] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [NA] There are tests covering the changes introduced in the PR.",,twiecki brandonwillard,,2022-07-29 22:29:32,2022-08-01 18:31:09,doc/library/tensor/random/basic.rst aesara/tensor/random/basic.py,bec1d3f8fd89e04ba6a5e1b25cccf186a2dfe26e,"rlouf review_dismissed 2022-08-01 16:52:48,rlouf head_ref_force_pushed 2022-08-01 16:52:48,brandonwillard referenced 2022-08-01 18:31:08,brandonwillard merged 2022-08-01 18:31:09,brandonwillard closed 2022-08-01 18:31:09",codecov[bot] rlouf twiecki brandonwillard,6,True
517,1087,Change R-operator to L-operator in `Lop` docstring,brandonwillard,This PR fixes some typos in the `Lop` docstring.,bug documentation,,,2022-07-30 21:19:27,2022-07-30 21:20:41,aesara/gradient.py,1b4b3b77eaef9ba5f76f66d7454772fdf2db08a8,"brandonwillard head_ref_force_pushed 2022-07-30 21:19:38,brandonwillard labeled 2022-07-30 21:20:09,brandonwillard labeled 2022-07-30 21:20:09,brandonwillard referenced 2022-07-30 21:20:41,brandonwillard merged 2022-07-30 21:20:41,brandonwillard closed 2022-07-30 21:20:41,brandonwillard head_ref_deleted 2022-07-30 21:20:44",brandonwillard,0,True
518,1088,Allow `size` to broadcast `CategoricalRV` `p` argument,ricardoV94,Follow up to https://github.com/aesara-devs/aesara/pull/1056,bug random variables Op implementation,brandonwillard,,2022-08-01 17:01:56,2022-08-06 17:47:46,tests/link/test_numba.py aesara/link/numba/dispatch/random.py tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,3706c2c7982ebba86ba8a1f2ad4a8d21f45f4028,"ricardoV94 head_ref_force_pushed 2022-08-01 17:21:56,brandonwillard renamed 2022-08-01 18:17:58,brandonwillard labeled 2022-08-01 18:18:30,brandonwillard labeled 2022-08-01 18:18:31,brandonwillard labeled 2022-08-01 18:18:31,ricardoV94 head_ref_force_pushed 2022-08-04 17:44:52,ricardoV94 head_ref_force_pushed 2022-08-05 11:55:42,ricardoV94 review_requested 2022-08-05 11:58:01,brandonwillard referenced 2022-08-06 17:47:46,brandonwillard merged 2022-08-06 17:47:46,brandonwillard closed 2022-08-06 17:47:47",codecov[bot] ricardoV94 brandonwillard,4,True
519,1091,Add docstrings for `RandomVariable`s,rlouf,"+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [NA] There are tests covering the changes introduced in the PR.",documentation random variables,brandonwillard,,2022-08-02 20:11:15,2022-08-04 23:34:34,doc/library/tensor/random/basic.rst aesara/tensor/random/basic.py,3842270ccd8c21de0de990fb7a04bb624df3f769 5af9bf3d3188a7d4ec4c0177cf75089ea0456bd4 efbed71d1e85a0ac58c66a088ceee3d6cfbc3b13 b580fb8fac68d2ba8cab945808d6862712ecc993 3f422a5d93f0b9fd4856b45f098f4238e865c2d3 aaa67e762556a535f5706c2d2eb4cbcd805bd688 787bff75165f62e40028528e7889773d23846abd d42fa473c9f1690d4957b6f56cd562395e22f9ba 0b2cf063f1a5407edef4c4625aee54ca9d19824f e2bd6424e0b0c2065e38a9e7b5a31176a63d49f3 9f85539352d72b15c55c745f78910acaf8276310 b348901ddebb4bc6b7c41295d9ce08fb2a18b4c8 abab519319cd79a44f55863a2687ad724c0631a9 e4a9db27e3b747d4016762443cb381a8d7d6b601,"rlouf labeled 2022-08-02 20:11:26,rlouf labeled 2022-08-02 20:11:26,rlouf head_ref_force_pushed 2022-08-02 23:34:22,rlouf renamed 2022-08-03 03:49:39,rlouf head_ref_force_pushed 2022-08-04 15:25:58,rlouf head_ref_force_pushed 2022-08-04 15:26:30,brandonwillard referenced 2022-08-04 23:34:34,brandonwillard merged 2022-08-04 23:34:34,brandonwillard closed 2022-08-04 23:34:34,rlouf head_ref_deleted 2022-08-04 23:39:22",codecov[bot] rlouf brandonwillard,4,True
520,1095,Refactor and fix static shape issues in `IfElse`,brandonwillard,Closes #985,bug important shape inference Op implementation,ricardoV94,brandonwillard,2022-08-04 03:09:01,2022-08-04 14:37:05,aesara/ifelse.py tests/test_ifelse.py,e470fcb86cbe68b32e630d09463b411bd1ba34cf,"brandonwillard head_ref_force_pushed 2022-08-04 03:09:20,brandonwillard labeled 2022-08-04 03:18:55,brandonwillard labeled 2022-08-04 03:18:55,brandonwillard labeled 2022-08-04 03:18:55,brandonwillard labeled 2022-08-04 03:18:55,brandonwillard head_ref_force_pushed 2022-08-04 03:26:00,brandonwillard head_ref_force_pushed 2022-08-04 03:27:43,brandonwillard assigned 2022-08-04 03:27:50,brandonwillard head_ref_force_pushed 2022-08-04 04:54:59,brandonwillard referenced 2022-08-04 14:37:04,brandonwillard merged 2022-08-04 14:37:04,brandonwillard closed 2022-08-04 14:37:05,brandonwillard head_ref_deleted 2022-08-04 14:37:08",codecov[bot] ricardoV94 brandonwillard,3,True
521,1099,"Add docstrings for dirichlet, geometric and hypergeometric distributions",rlouf,"+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [NA] There are tests covering the changes introduced in the PR.",documentation random variables,twiecki brandonwillard,,2022-08-05 17:17:16,2022-08-06 15:54:55,doc/library/tensor/random/basic.rst aesara/tensor/random/basic.py,b5f3117b57e9375c974748a09b280c02046af682 63e9817acd62b9e971a31cc97e403b200d9ef83b 142b979c3e69092d9d95ec13d9c546bf041f76d6,"rlouf labeled 2022-08-05 17:17:16,rlouf labeled 2022-08-05 17:17:16,brandonwillard referenced 2022-08-06 15:54:55,brandonwillard merged 2022-08-06 15:54:55,brandonwillard closed 2022-08-06 15:54:55",codecov[bot] rlouf twiecki brandonwillard,1,True
522,1100,Fix incorrect setuptools minimum version number,maresb,"With setuptools < 48.0.0, Aesara causes the following exception:

```
/opt/hostedtoolcache/Python/3.7.13/x64/lib/python3.7/site-packages/aesara/configdefaults.py:11: in <module>
    from setuptools._distutils.spawn import find_executable
E   ModuleNotFoundError: No module named 'setuptools._distutils'
```

For full details, see https://github.com/pymc-devs/pymc/issues/6013. In particular, my reasoning for determining 48.0.0 is explained in https://github.com/pymc-devs/pymc/issues/6013#issuecomment-1196435732.

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.
",bug,brandonwillard,,2022-08-05 20:59:03,2022-08-06 01:08:49,setup.py,ef591eff3b2c9c034f5f9938a5b581266db2153e,"brandonwillard labeled 2022-08-05 21:19:33,brandonwillard referenced 2022-08-06 01:08:49,brandonwillard merged 2022-08-06 01:08:49,brandonwillard closed 2022-08-06 01:08:49,maresb head_ref_deleted 2022-08-06 07:44:07",maresb codecov[bot] brandonwillard,1,True
523,1102,Remove strict `TensorType.broadcastable` usage from `local_elemwise_alloc`,brandonwillard,"Closes #1094

- [x] Inspect the types of graphs produced by the broadcasting used in this approach and make sure they're fully reduced.
- [x] Investigate the effects on in-placing given the new `BroadcastTo` `Op`s introduced.  Would reordering the broadcasted element(s) help guarantee that the resulting `Elemwise` can be in-placed. ",bug important graph rewriting,ricardoV94,brandonwillard,2022-08-08 04:29:18,2022-08-13 23:37:54,tests/tensor/test_extra_ops.py tests/tensor/test_subtensor_opt.py aesara/tensor/basic_opt.py aesara/tensor/subtensor_opt.py aesara/tensor/extra_ops.py tests/tensor/test_basic_opt.py,f604e1f7ff9348bf4323ae01320f92f74fea5ce7 9ef9c8c920a4740c79b7613bc6da7029a1d98a1b b07bc497f8734adf26c402a3b4aa0ae7a8159e37 61d19d365f9cf0e937364396818ae38a05abd750,"brandonwillard head_ref_force_pushed 2022-08-08 04:29:38,brandonwillard renamed 2022-08-08 04:29:48,brandonwillard convert_to_draft 2022-08-08 04:29:59,brandonwillard assigned 2022-08-08 04:30:04,brandonwillard labeled 2022-08-08 04:30:15,brandonwillard labeled 2022-08-08 04:30:15,brandonwillard labeled 2022-08-08 04:30:15,brandonwillard head_ref_force_pushed 2022-08-11 06:26:44,brandonwillard head_ref_force_pushed 2022-08-11 06:49:01,brandonwillard head_ref_force_pushed 2022-08-11 16:18:26,brandonwillard ready_for_review 2022-08-11 16:24:42,brandonwillard head_ref_force_pushed 2022-08-12 01:49:32,brandonwillard head_ref_force_pushed 2022-08-12 01:51:55,brandonwillard head_ref_force_pushed 2022-08-12 04:33:53,brandonwillard head_ref_force_pushed 2022-08-12 04:37:29,brandonwillard head_ref_force_pushed 2022-08-12 04:57:40,brandonwillard review_requested 2022-08-12 06:47:51,brandonwillard head_ref_force_pushed 2022-08-13 22:16:07,brandonwillard referenced 2022-08-13 23:37:54,brandonwillard merged 2022-08-13 23:37:54,brandonwillard closed 2022-08-13 23:37:54,brandonwillard head_ref_deleted 2022-08-13 23:37:57",codecov[bot] ricardoV94 brandonwillard,9,True
524,1105,Add docstrings for `RandomVariable` Ops,rlouf,"Also, for some reason, the `__call__` method of `InvGammaRV` required a `rate` parameter; I checked the scipy documentation, compared their definition to Wikipedia's and the distribution is indeed parametrized in terms of the scale.

+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.",documentation enhancement random variables,ricardoV94 brandonwillard,rlouf,2022-08-08 16:13:48,2022-08-25 19:30:00,doc/library/tensor/random/basic.rst aesara/tensor/random/basic.py,318e89b4dbfeabcd8dfee2377d0c8839fb2489c6 91d6d6cffc249e486589529dddc1972520d39ba5 f70a24a0735d535d99d7da14494c75444e1378ae 5f60a66402ae8b3bdff0781d2e49df30ea3c6f84 523f724786976296fd53468bc975866367a98be2 fe3d188e1d9f63e48f4bbf4fd3c41278ffdd8cc6 28a72e4b9631ad4af89c4edd7746f8a3fa0011a1 02132d9beba274eec14bd10fe35a598289061431 6ef4c18557fd0c88c838a70a9206c4924f57f2e3 d50fc0192966c7d35a84bfd5e4fbe76aa19f227b 87d3aecd2f6df02ac435b7d301d9a61622d36901 ecb6e57282115f9aa916328ea707c7cd93c2b548 8546aff304a72f0b155532535261dce9284f1798 589fbaa1199b229b5739ed9d9d70b8aeb1a3b1e9 594f79b114d49b323e38c5e0b20063f0866968bc e79bcfcdcceab08995b108c8f5bdfd1c93fb9eb2 9515a1ba0431d163788c8317c653d89f49efb590 8a14d796aeef8e82a362669a5698cf5d8de10b20 0a1387e58c81c5fa9a92fd5260119922005edb84 a3a8782cc3ffd4e123b98e2bb6df15825b898c41 9f5efbafce1b0b0652a0075890093b3a3d6b90c9 35f61859ee434f20e030e5b952f8758e5943317b e6575ac7643269127e74d4e6179dec47a9a572fd 46aead3a913b5f33017bcc82e155778a198b5bc1,"brandonwillard labeled 2022-08-15 20:37:56,brandonwillard labeled 2022-08-15 20:37:56,brandonwillard labeled 2022-08-15 20:37:56,rlouf assigned 2022-08-15 20:38:06,rlouf head_ref_force_pushed 2022-08-17 00:31:34,rlouf head_ref_force_pushed 2022-08-17 18:08:06,rlouf head_ref_force_pushed 2022-08-17 18:33:38,rlouf review_requested 2022-08-17 18:50:00,rlouf head_ref_force_pushed 2022-08-17 18:58:41,rlouf head_ref_force_pushed 2022-08-24 03:23:50,brandonwillard review_dismissed 2022-08-24 19:47:24,rlouf renamed 2022-08-24 19:54:18,rlouf head_ref_force_pushed 2022-08-25 03:12:11,rlouf review_requested 2022-08-25 03:22:23,rlouf review_requested 2022-08-25 03:22:25,brandonwillard referenced 2022-08-25 19:30:00,brandonwillard merged 2022-08-25 19:30:00,brandonwillard closed 2022-08-25 19:30:01,rlouf head_ref_deleted 2022-08-25 19:55:46",ricardoV94 rlouf codecov[bot] brandonwillard,77,True
525,1108,Fix cache versioning of empty `Op.__props__`,brandonwillard,"This PR closes #1101 and #1097 by fixing the way C cache version tuples are generated when `Op.__props__` is empty and removing the use of `hash` in `ExternalCOp`.  More specifically, these changes prevent the addition of empty tuples to the C cache version tuples, because empty entries in a C cache version tuple indicate that an `Op` is un-versionable and cannot be cached. ",bug important C-backend,,brandonwillard,2022-08-10 01:20:49,2022-08-12 00:40:06,conftest.py aesara/link/c/basic.py tests/link/c/test_type.py tests/link/c/test_cmodule.py aesara/link/c/cmodule.py doc/extending/creating_a_c_op.rst aesara/link/c/interface.py tests/link/c/test_op.py tests/link/c/test_basic.py aesara/graph/callcache.py aesara/link/c/op.py,98293770d59fe457d1eee65c4c138fb9df8514ab d6933c7055f90fc9ca283d9aec7c4a3efc521f56 bce680cdccc4d2b6dba9aeba1a535807c47a2f4c 3ebb9e58ad96a7946cac39c89f94fb44d25ac540 7a44d081bf704f580bb6201dfec34a2e0171be94 cdde595dbcfba3a8132a53baeb490091d0728bf3 d9a1cceb647ccaf45dc2734a6145a33bfa6897b6 ce5cf54c460f7dc7440e638b9541717ddb903d95 79a4f452ae48e8171168be7c007ba2adbeaed7a9,"brandonwillard labeled 2022-08-10 01:22:54,brandonwillard labeled 2022-08-10 01:22:54,brandonwillard labeled 2022-08-10 01:22:54,brandonwillard assigned 2022-08-10 01:23:00,brandonwillard head_ref_force_pushed 2022-08-10 01:56:44,brandonwillard review_requested 2022-08-10 18:29:09,brandonwillard connected 2022-08-11 18:23:40,brandonwillard head_ref_force_pushed 2022-08-11 18:23:58,brandonwillard referenced 2022-08-12 00:40:06,brandonwillard merged 2022-08-12 00:40:06,brandonwillard closed 2022-08-12 00:40:06,brandonwillard head_ref_deleted 2022-08-12 00:40:09",codecov[bot] brandonwillard,1,True
526,1111,Allow JAX Reshape to work with constant shape inputs,ricardoV94,"This limitation is found very frequently by users: 
* https://github.com/pymc-devs/pymc/issues/5927
* https://github.com/pymc-devs/pymc/issues/6050
* https://discourse.pymc.io/t/getting-typeerror-shapes-must-be-1d-sequences-of-concrete-values-of-integer-type/10084

Related to https://github.com/aesara-devs/aesara/discussions/807",JAX,brandonwillard,,2022-08-12 10:31:13,2022-08-12 20:59:23,tests/link/test_jax.py aesara/link/jax/dispatch.py,cb7d3c503d451f4ed1a220d9a43028c53f04a046,"ricardoV94 labeled 2022-08-12 10:31:13,ricardoV94 review_requested 2022-08-12 10:31:14,ricardoV94 review_requested 2022-08-12 10:31:14,ricardoV94 referenced 2022-08-12 20:59:23,ricardoV94 merged 2022-08-12 20:59:23,ricardoV94 closed 2022-08-12 20:59:24",codecov[bot] ricardoV94 brandonwillard,1,True
527,1112,Remove unnecessary code in `local_useless_AdvancedSubtensor1` and refactor tests,brandonwillard,This PR adds some updates to `local_useless_AdvancedSubtensor1` and its tests.,testing graph rewriting refactor,,brandonwillard,2022-08-13 23:41:30,2022-08-14 01:18:01,aesara/tensor/subtensor_opt.py tests/tensor/test_subtensor_opt.py,9f4bccf893c2292203023937d51ece5fc3b609b9,"brandonwillard assigned 2022-08-13 23:41:46,brandonwillard labeled 2022-08-13 23:41:55,brandonwillard labeled 2022-08-13 23:41:55,brandonwillard labeled 2022-08-13 23:42:02,brandonwillard referenced 2022-08-14 01:18:01,brandonwillard merged 2022-08-14 01:18:01,brandonwillard closed 2022-08-14 01:18:01,brandonwillard head_ref_deleted 2022-08-14 01:18:04",brandonwillard,0,True
528,1124,Add a C implementation for `TensorFromScalar`,brandonwillard,"Closes #1123

While inspecting the generated C code, I noticed that there might be an unnecessary call to `PyArray_ScalarAsCtype` introduced by `ScalarType.c_extract`.",enhancement C-backend Op implementation,ricardoV94,brandonwillard,2022-08-17 23:01:35,2022-08-20 17:45:11,aesara/tensor/basic.py,0a16c225ef8f2de1205bc1494a4ecb50108ce4b6,"brandonwillard labeled 2022-08-17 23:01:57,brandonwillard labeled 2022-08-17 23:01:57,brandonwillard labeled 2022-08-17 23:01:57,brandonwillard review_requested 2022-08-17 23:02:00,brandonwillard assigned 2022-08-19 20:15:31,brandonwillard referenced 2022-08-20 17:45:11,brandonwillard merged 2022-08-20 17:45:11,brandonwillard closed 2022-08-20 17:45:11,brandonwillard head_ref_deleted 2022-08-20 17:45:14",codecov[bot] ricardoV94 mattearllongshot brandonwillard,9,True
529,1127,Remove warnings from `tests.tensor.test_[basic|var]`,brandonwillard,This PR performs some refactoring that removes warnings in our tests for `aesara.tensor.[basic|var]`.,enhancement testing refactor,,brandonwillard,2022-08-18 22:45:48,2022-08-20 21:07:19,tests/tensor/test_var.py tests/tensor/utils.py tests/compile/test_shared.py tests/tensor/test_basic.py tests/tensor/test_math.py aesara/tensor/var.py aesara/tensor/type.py,873a5b65c04824c87d2028c3c9edd234ddf1bea4 1c0ddbbf7b1bab8017924802d511703151085db6 4038df19035ab9122561bb0e28b5ce3fb47a9390 71c70540e595a454ff3199afabc540e610945538 b111087ac54cbc41ab91b2bce0cc02f6e5ff139e,"brandonwillard labeled 2022-08-18 23:52:58,brandonwillard labeled 2022-08-18 23:52:58,brandonwillard labeled 2022-08-18 23:52:58,brandonwillard assigned 2022-08-18 23:53:02,brandonwillard head_ref_force_pushed 2022-08-18 23:53:14,brandonwillard head_ref_force_pushed 2022-08-19 00:01:53,brandonwillard renamed 2022-08-19 00:13:52,brandonwillard head_ref_force_pushed 2022-08-19 17:34:38,brandonwillard head_ref_force_pushed 2022-08-19 19:57:25,brandonwillard referenced 2022-08-20 21:07:19,brandonwillard merged 2022-08-20 21:07:19,brandonwillard closed 2022-08-20 21:07:19,brandonwillard head_ref_deleted 2022-08-20 21:07:22",codecov[bot] brandonwillard,1,True
530,1130,Add a C implementation for `BroadcastTo`,brandonwillard,Closes #1128,enhancement C-backend performance concern Op implementation,,zoj613,2022-08-19 23:29:58,2022-08-26 21:32:10,aesara/tensor/extra_ops.py tests/tensor/test_extra_ops.py,d73ad01036e5c5174c42ef176dd1686bb552247f,"brandonwillard labeled 2022-08-19 23:31:44,brandonwillard labeled 2022-08-19 23:31:44,brandonwillard labeled 2022-08-19 23:31:44,brandonwillard labeled 2022-08-19 23:31:44,zoj613 assigned 2022-08-19 23:31:51,brandonwillard head_ref_force_pushed 2022-08-20 21:10:52,brandonwillard review_requested 2022-08-20 22:07:29,brandonwillard review_requested 2022-08-20 22:07:29,brandonwillard head_ref_force_pushed 2022-08-20 23:31:04,brandonwillard head_ref_force_pushed 2022-08-21 00:34:00,brandonwillard head_ref_force_pushed 2022-08-21 00:52:29,brandonwillard referenced 2022-08-26 21:32:09,brandonwillard merged 2022-08-26 21:32:10,brandonwillard closed 2022-08-26 21:32:10,brandonwillard head_ref_deleted 2022-08-26 21:32:12",codecov[bot] ricardoV94 zoj613 brandonwillard,7,True
531,1131,Revert to lazy loaded `aesara.link.c.cutils`,brandonwillard,Fixes #1129,bug important,,brandonwillard,2022-08-20 21:03:26,2022-08-20 23:23:39,aesara/link/c/basic.py,6542063f83db70705be972c5083012c7c50308b5,"brandonwillard assigned 2022-08-20 21:03:50,brandonwillard labeled 2022-08-20 21:03:57,brandonwillard labeled 2022-08-20 21:03:57,brandonwillard head_ref_force_pushed 2022-08-20 21:09:33,brandonwillard head_ref_force_pushed 2022-08-20 21:10:39,brandonwillard head_ref_force_pushed 2022-08-20 22:04:43,brandonwillard head_ref_force_pushed 2022-08-20 22:07:08,brandonwillard referenced 2022-08-20 23:23:39,brandonwillard merged 2022-08-20 23:23:39,brandonwillard closed 2022-08-20 23:23:39,brandonwillard head_ref_deleted 2022-08-20 23:23:43",codecov[bot] brandonwillard,1,True
532,1132,Add pip as an explicit docs dependency,maresb,"It looks weird, but Conda expects `pip` to be both a string and a dictionary key in the dependency list.

Adding `pip` as an explicit dependency suppresses the warning seen [here](https://readthedocs.org/projects/aesara/builds/17851436/) and reprinted below. (Regarding the error which occurred, it looks unrelated and I suspect it's transitory since I don't get a 404 on the channel URL.)


>Warning: you have pip-installed dependencies in your environment file, but you do not list pip itself as one of your conda dependencies.  Conda may not use the correct pip to install your packages, and they may end up in the wrong place.  Please add an explicit pip dependency.  I'm adding one for you, but still nagging you.


**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",bug,brandonwillard,,2022-08-20 21:34:14,2022-08-20 22:00:31,doc/environment.yml,afc64de2c580f1b452872bbfb11745145505001a,"brandonwillard labeled 2022-08-20 22:00:05,brandonwillard referenced 2022-08-20 22:00:31,brandonwillard merged 2022-08-20 22:00:31,brandonwillard closed 2022-08-20 22:00:31,maresb head_ref_deleted 2022-08-20 22:04:11",maresb brandonwillard,0,True
533,1133,Fix handling of `numpy.dtype` input in `TensorType`,brandonwillard,"This PR fixes a bug caused by string comparisons of `numpy.dtype` instances with `""floatX""`.",bug important,,brandonwillard,2022-08-20 23:53:52,2022-08-21 01:49:12,aesara/tensor/type.py tests/tensor/test_type.py,19588c6821a2dac666dade669436037455b76384,"brandonwillard assigned 2022-08-20 23:54:27,brandonwillard labeled 2022-08-20 23:54:33,brandonwillard labeled 2022-08-20 23:54:33,brandonwillard referenced 2022-08-21 01:49:11,brandonwillard merged 2022-08-21 01:49:12,brandonwillard closed 2022-08-21 01:49:12,brandonwillard head_ref_deleted 2022-08-21 01:49:16",codecov[bot] brandonwillard,1,True
534,1135,Refactor setuptools to use declarative setup.cfg,maresb,"Declarative configuration makes metadata introspection much easier. (Currently, parsing `install_requires` technically requires evaluating `setup.py`, but after this PR it will be parseable from a simple config file.) This will make it easier to reduce duplication, e.g. in the CI jobs, and possibly eventually syncing with the conda-forge feedstock.

Ideally I would have moved everything to `pyproject.toml`, but unfortunately Versioneer is incompatible: Versioneer makes the version number non-declarative, and `version` is a required field in the schema. Luckily, there is currently [active progress](https://github.com/python-versioneer/python-versioneer/pull/294) in this direction, so it may be possible with patience.

To test the result, I built before/after sdists, extracted them, and performed a directory comparison with Meld. The only effective difference was to `PKG-INFO`:
1. Keywords are now comma-separated instead of space-separated. Apparently space-separated is legacy and comma-separated is recommended.
2. I added `Requires-Python: >=3.7` because we didn't have it before, and it seems like a good idea.

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement,brandonwillard,,2022-08-21 11:17:17,2022-08-22 00:40:27,setup.py setup.cfg,ffa7de6e75a0bda3bbea099070eab37d43dfb1fd 38ff225e729aaa658c272ed9df87754b03abede9 d421d1b1f5b88bbe77d9f882b5589e8ce92a372b d9fcbe2656c2831268e671a1c3e4c30d0a6b535f,"brandonwillard labeled 2022-08-22 00:39:42,brandonwillard referenced 2022-08-22 00:40:27,brandonwillard merged 2022-08-22 00:40:27,brandonwillard closed 2022-08-22 00:40:27,maresb head_ref_deleted 2022-08-22 06:19:32",maresb codecov[bot] brandonwillard,1,True
535,1136,Remove defaults channel from conda env for docs,maresb,"All the packages are available through conda-forge, and mixing different channels is just a recipe for trouble.

Motivation: for reasons which I don't understand, building the docs has been failing with a 404 error for the `defaults` Conda channel. But everything is available from the `conda-forge` channel, so having the `defaults` channel is pointless. Moreover, if anything does sneak in through the `defaults` channel, it may cause conflicts with the `conda-forge` packages. Thus it's best to just remove it.

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",bug documentation,brandonwillard,,2022-08-21 12:22:27,2022-08-22 18:51:04,readthedocs.yml doc/environment.yml,8e4c211ba7187834f4d84ff414fcd87b14635826 b535f7c14ba64a50b650136f91f6c0261e7f89f5,"maresb convert_to_draft 2022-08-21 12:26:36,maresb ready_for_review 2022-08-22 07:19:31,brandonwillard mentioned 2022-08-22 18:10:20,brandonwillard subscribed 2022-08-22 18:10:20,brandonwillard mentioned 2022-08-22 18:25:45,brandonwillard subscribed 2022-08-22 18:25:45,maresb review_dismissed 2022-08-22 18:38:19,maresb head_ref_force_pushed 2022-08-22 18:38:19,maresb head_ref_force_pushed 2022-08-22 18:39:12,brandonwillard labeled 2022-08-22 18:45:36,brandonwillard labeled 2022-08-22 18:45:36,maresb referenced 2022-08-22 18:51:04,maresb merged 2022-08-22 18:51:04,maresb closed 2022-08-22 18:51:04,maresb head_ref_deleted 2022-08-22 18:51:09",maresb brandonwillard,14,True
536,1138,Fix broadcasting conditions in `broadcast_shape_iter`,brandonwillard,This PR fixes faulty broadcast conditions in some of the `Assert`s produced by `broadcast_shape_iter`.,bug important,,brandonwillard,2022-08-21 21:42:17,2022-08-21 23:06:41,aesara/tensor/extra_ops.py tests/tensor/test_subtensor.py tests/tensor/test_extra_ops.py aesara/tensor/rewriting/basic.py,58b322bfe50d3729f23f7a84255a8204f3d66282 6e8ec8293c8e9f6dee480c65a1664f6b780f8df5 43fc102316cf0275c41bb2d3d5560c87a3b928e0,"brandonwillard assigned 2022-08-21 21:42:38,brandonwillard labeled 2022-08-21 21:42:48,brandonwillard labeled 2022-08-21 21:42:48,brandonwillard head_ref_force_pushed 2022-08-21 22:01:00,brandonwillard referenced 2022-08-21 23:06:41,brandonwillard merged 2022-08-21 23:06:41,brandonwillard closed 2022-08-21 23:06:41,brandonwillard head_ref_deleted 2022-08-21 23:06:43",codecov[bot] brandonwillard,1,True
537,1139,Split `aesara.tensor.rewriting.basic` rewrites by their `aesara.tensor` modules,brandonwillard,"This PR moves rewrite code corresponding to distinct `aesara.tensor` modules into their own modules (e.g. shape rewrites are moved to `aesara.tensor.rewriting.shape`, etc.)  

These changes should prevent us from creating a giant `aesara.tensor.rewriting.basic` file as we expand rewrite coverage for shapes, `Elemwise`/`CAReduce` fusing, and so on.  It should also make it much easier for people to see and/or find all the relevant rewrites for a given subject.",enhancement graph rewriting refactor,ricardoV94,brandonwillard,2022-08-22 16:49:02,2022-08-24 03:05:26,tests/compile/test_builders.py aesara/scan/rewriting.py tests/tensor/test_elemwise.py aesara/tensor/rewriting/elemwise.py tests/tensor/rewriting/test_shape.py aesara/tensor/rewriting/extra_ops.py aesara/tensor/rewriting/basic.py aesara/tensor/basic_opt.py aesara/tensor/rewriting/shape.py aesara/tensor/utils.py aesara/tensor/blas.py tests/tensor/test_shape.py aesara/tensor/rewriting/__init__.py tests/tensor/rewriting/test_elemwise.py aesara/tensor/basic.py aesara/compile/builders.py tests/tensor/rewriting/test_math.py aesara/tensor/rewriting/math.py tests/tensor/rewriting/test_basic.py tests/tensor/rewriting/test_extra_ops.py tests/tensor/random/test_basic.py,6233cf4317f672e755a50dc5d0e325252580ab22,"brandonwillard assigned 2022-08-22 16:49:19,brandonwillard labeled 2022-08-22 16:49:28,brandonwillard labeled 2022-08-22 16:49:28,brandonwillard labeled 2022-08-22 16:49:32,brandonwillard head_ref_force_pushed 2022-08-22 17:15:18,brandonwillard head_ref_force_pushed 2022-08-22 17:18:20,brandonwillard head_ref_force_pushed 2022-08-22 17:21:54,brandonwillard head_ref_force_pushed 2022-08-22 17:25:49,brandonwillard head_ref_force_pushed 2022-08-22 17:27:08,brandonwillard head_ref_force_pushed 2022-08-22 17:27:54,brandonwillard head_ref_force_pushed 2022-08-22 18:01:17,brandonwillard review_requested 2022-08-22 22:53:10,brandonwillard referenced 2022-08-24 03:05:26,brandonwillard merged 2022-08-24 03:05:26,brandonwillard closed 2022-08-24 03:05:26,brandonwillard head_ref_deleted 2022-08-24 03:05:29",rlouf ricardoV94 brandonwillard,1,True
538,1143,Support duplicate indices in `AdvancedIncSubtensor1`'s Numba implementation,brandonwillard,Closes #603,bug Numba,,,2022-08-24 01:21:23,2022-08-25 19:56:42,tests/link/test_numba.py aesara/link/numba/dispatch/basic.py,f6a54162004d0a990ed59e908fff6ab34fbdb40c,"brandonwillard labeled 2022-08-24 01:27:49,brandonwillard labeled 2022-08-24 01:27:49,brandonwillard review_requested 2022-08-24 01:28:02,brandonwillard head_ref_force_pushed 2022-08-24 01:29:36,brandonwillard referenced 2022-08-25 19:56:42,brandonwillard merged 2022-08-25 19:56:42,brandonwillard closed 2022-08-25 19:56:42,brandonwillard head_ref_deleted 2022-08-25 19:56:45",codecov[bot] brandonwillard,2,True
539,1144,Move `tensor_copy` rewrite to `aesara.tensor.rewriting.basic`,brandonwillard,This PR corrects the placement of a `tensor_copy` rewrite.,bug refactor,,brandonwillard,2022-08-24 04:32:12,2022-08-24 06:00:02,aesara/tensor/rewriting/shape.py aesara/tensor/rewriting/basic.py,d47fb7c37f5d4944fd84a98bac6e7cc491c3d0dc,"brandonwillard head_ref_force_pushed 2022-08-24 04:32:33,brandonwillard assigned 2022-08-24 04:32:47,brandonwillard labeled 2022-08-24 04:32:55,brandonwillard labeled 2022-08-24 04:32:55,brandonwillard referenced 2022-08-24 06:00:02,brandonwillard merged 2022-08-24 06:00:02,brandonwillard closed 2022-08-24 06:00:02,brandonwillard head_ref_deleted 2022-08-24 06:00:06",codecov[bot] brandonwillard,1,True
540,1149,Fix a numpy deprecation related to dtype,Armavica,"Deprecated in numpy 1.21.0.
This fixes 369 deprecation warnings in PyMC's test suite.

See https://numpy.org/doc/stable/release/1.21.0-notes.html#the-dtype-attribute-must-return-a-dtype


**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",bug refactor NumPy compatibility,brandonwillard,,2022-08-26 20:17:34,2022-08-27 00:38:00,aesara/misc/safe_asarray.py aesara/tensor/basic.py,bd3a4e45450e0ddb2bf43c7713fa9ee6bd66fd38,"brandonwillard labeled 2022-08-26 21:43:42,brandonwillard labeled 2022-08-26 21:43:42,brandonwillard labeled 2022-08-26 21:43:42,Armavica closed 2022-08-27 00:38:00,Armavica referenced 2022-08-27 06:34:46,ricardoV94 referenced 2022-08-29 10:32:00",ricardoV94 Armavica brandonwillard,5,False
541,1150,Add a rewrite that changes constant indices to unsigned integers,brandonwillard,"Closes #1147


- This implementation only changes the dtype sizes when they're also being converted to unsigned integers.
- Slice indices are not converted.

- [ ] Some comparisons with and without the rewrite enabled.",graph rewriting performance concern,ricardoV94 aseyboldt,,2022-08-27 01:39:19,2022-08-28 18:03:56,tests/tensor/test_subtensor.py tests/tensor/rewriting/test_subtensor.py aesara/tensor/rewriting/subtensor.py tests/tensor/test_var.py aesara/tensor/subtensor.py tests/scan/test_printing.py aesara/tensor/var.py aesara/tensor/type.py,02b77f98d23b044fc314b5c70971603352fcf12c c107f9b4e1ade040f294f6d295e0f3f47a78a7e8 41b234fa44fd17ae39aeff23f39583578cf1f578,"brandonwillard labeled 2022-08-27 01:39:48,brandonwillard labeled 2022-08-27 01:39:48,brandonwillard convert_to_draft 2022-08-27 01:40:17,brandonwillard head_ref_force_pushed 2022-08-27 01:55:35,brandonwillard head_ref_force_pushed 2022-08-27 02:00:09,brandonwillard head_ref_force_pushed 2022-08-27 03:56:51,brandonwillard head_ref_force_pushed 2022-08-27 16:18:06,brandonwillard ready_for_review 2022-08-27 16:28:57,brandonwillard referenced 2022-08-28 18:03:56,brandonwillard merged 2022-08-28 18:03:56,brandonwillard closed 2022-08-28 18:03:56,brandonwillard head_ref_deleted 2022-08-28 18:03:59",codecov[bot] ricardoV94 aseyboldt brandonwillard,3,True
542,1153,Move Numba tests to their own sub-package,brandonwillard,This PR moves the Numba tests into their own sub-package and separate modules.,enhancement testing refactor Numba,,brandonwillard,2022-08-27 23:54:29,2022-08-28 04:10:21,tests/link/numba/test_scan.py tests/link/numba/test_performance.py tests/link/numba/test_basic.py tests/link/numba/__init__.py setup.cfg tests/link/numba/test_elemwise.py tests/link/numba/test_nlinalg.py tests/link/numba/test_scalar.py aesara/tensor/rewriting/shape.py tests/link/numba/test_tensor_basic.py tests/link/numba/test_random.py tests/link/numba/test_extra_ops.py,a855c9407ded02b494ea23d040139e9223cadefd 34261cd3e98af4bb08c68585219a628c407839d3 6550bc541495fc6c36a860c45a9454e865a1e3c9 436f724d1c0852f4c53748248c2b9685786a09af 3ce9ef2e9cd3dd4523b9bc0dbb3ce649bf42bb6b e5f4cb0e46458a063869ad14492afb05ad600d09 6008866d05949469fa4d5c17f9600d2fa40a1fe1 87e458e5d2a7db6a28e6c29d16c12dbc62937be5 593026f235a091f7746a36260bd73df583c2296f,"brandonwillard assigned 2022-08-27 23:54:41,brandonwillard labeled 2022-08-27 23:54:54,brandonwillard labeled 2022-08-27 23:54:54,brandonwillard labeled 2022-08-27 23:54:54,brandonwillard labeled 2022-08-27 23:54:54,brandonwillard head_ref_force_pushed 2022-08-28 01:00:20,brandonwillard head_ref_force_pushed 2022-08-28 01:01:23,brandonwillard head_ref_force_pushed 2022-08-28 01:27:08,brandonwillard head_ref_force_pushed 2022-08-28 01:27:20,brandonwillard referenced 2022-08-28 04:10:21,brandonwillard merged 2022-08-28 04:10:21,brandonwillard closed 2022-08-28 04:10:21,brandonwillard head_ref_deleted 2022-08-28 04:10:24",codecov[bot] brandonwillard,1,True
543,1154,Add tensor conversion to Numpy-like helper functions,ltoniazzi,"Fixing [Issue 876](https://github.com/aesara-devs/aesara/issues/876) by adding tensor conversion to Numpy-like helper functions. Tests added by passing a list to these functions.

I fixed the bug fix + added a test for `at.roll`. Can it be reviewed and then, if ok, I can fix the other functions as well?

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement NumPy compatibility,brandonwillard,,2022-08-28 12:33:19,2022-08-28 18:19:09,tests/tensor/test_basic.py aesara/tensor/basic.py,c22234522c03c31116b562b448112f2e4a03879a,"brandonwillard labeled 2022-08-28 18:17:08,brandonwillard connected 2022-08-28 18:17:18,brandonwillard labeled 2022-08-28 18:17:23,brandonwillard disconnected 2022-08-28 18:18:55,brandonwillard ready_for_review 2022-08-28 18:18:59,brandonwillard referenced 2022-08-28 18:19:09,brandonwillard merged 2022-08-28 18:19:09,brandonwillard closed 2022-08-28 18:19:09,ltoniazzi head_ref_deleted 2022-08-29 11:16:33",codecov[bot] ltoniazzi brandonwillard,1,True
544,1160,Add gufunc signature to `RandomVariable`'s docstrings,rlouf,"In this PR I add [gufunc](https://numpy.org/doc/stable/reference/c-api/generalized-ufuncs.html#:~:text=Definitions,-Elementary%20Function&text=Each%20ufunc%20consists%20of%20an,different%20parts%20of%20the%20arrays.) signatures to the `RandomVariable`s docstrings. The notation is clear and concise; with knoweldge of broadcasting rules and the definition of `size` the signature makes shapes predictible.

Most distributions behave like `Elemwise` `Op`s, with the exception of:
- Multinomial `(), (n) -> (n)`
- Dirichlet `(k) -> (k)`
- MvNormal `(n), (n,n) -> (n)`
- Categorical `(p) -> ()`
- Choice `(x) -> ()`
- Permutation `(x) -> (x)`
",documentation random variables,ricardoV94 brandonwillard,,2022-08-31 20:24:03,2022-10-05 18:48:15,doc/library/tensor/random/basic.rst aesara/tensor/random/basic.py,4b3af516763200653a526a706d7062e55c1965b8,"rlouf renamed 2022-08-31 20:24:13,rlouf labeled 2022-08-31 20:27:44,rlouf labeled 2022-08-31 20:27:51,rlouf review_dismissed 2022-09-13 07:55:24,rlouf head_ref_force_pushed 2022-09-13 07:55:24,rlouf review_requested 2022-09-17 10:30:49,rlouf head_ref_force_pushed 2022-09-21 20:56:39,rlouf head_ref_force_pushed 2022-09-26 14:54:46,rlouf head_ref_force_pushed 2022-10-04 13:02:09,rlouf head_ref_force_pushed 2022-10-04 15:54:12,brandonwillard review_dismissed 2022-10-04 23:09:33,rlouf head_ref_force_pushed 2022-10-05 16:26:04,brandonwillard referenced 2022-10-05 18:48:15,brandonwillard merged 2022-10-05 18:48:15,brandonwillard closed 2022-10-05 18:48:15,rlouf head_ref_deleted 2022-10-05 19:07:38",ricardoV94 rlouf codecov[bot] brandonwillard,11,True
545,1163,Make `ChoiceRV` behave like NumPy's `choice`,rlouf,"`ChoiceRV` currently does not behave like its NumPy equivalent when its `a` parameters is an `int` or an array with more than one dimension. We implement the necessary changes so that it does. Closes #1146 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.",bug random variables,brandonwillard,,2022-09-01 08:40:17,2022-09-02 15:03:45,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,3fcfd28a295948274d641f5f0e706576abdf5e88 1bcf36f0984e52746f2dc879ff3f4a52279e54eb,"rlouf head_ref_force_pushed 2022-09-01 08:41:03,brandonwillard labeled 2022-09-01 15:35:38,brandonwillard labeled 2022-09-01 15:35:38,rlouf head_ref_force_pushed 2022-09-01 20:45:05,brandonwillard referenced 2022-09-02 15:03:45,brandonwillard merged 2022-09-02 15:03:45,brandonwillard closed 2022-09-02 15:03:45,rlouf head_ref_deleted 2022-09-02 15:32:35",codecov[bot] rlouf brandonwillard,5,True
546,1166,"Add tensor conversion to `flatnonzero`, `nonzero_values`, `tile`, `inverse_permutation`, and `diag`",ltoniazzi,"Fixing [Issue](https://github.com/aesara-devs/aesara/issues/876) by adding tensor conversion to Numpy-like helper functions. Tests added by passing a list/float to these functions.

Functions addressed:
- `flatnonzero`
- `diag`
- `inverse_permutation`
- `tile`
- `identity_like`

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,brandonwillard,,2022-09-02 15:20:41,2022-09-02 22:41:31,tests/tensor/test_basic.py aesara/tensor/basic.py,df00335aadddd934dd27306258550480dbed4a39 6862df2ca4988e6d503cab7f84c23827fabceede,"ltoniazzi renamed 2022-09-02 15:21:20,brandonwillard renamed 2022-09-02 17:40:38,ltoniazzi head_ref_force_pushed 2022-09-02 20:20:24,ltoniazzi head_ref_force_pushed 2022-09-02 20:21:25,ltoniazzi review_requested 2022-09-02 20:25:42,brandonwillard referenced 2022-09-02 22:41:31,brandonwillard merged 2022-09-02 22:41:31,brandonwillard closed 2022-09-02 22:41:31,ltoniazzi head_ref_deleted 2022-09-04 09:48:35",codecov[bot] ltoniazzi brandonwillard,12,True
547,1168,Refactor the JAX dispatcher,rlouf,"In this PR we refactor the JAX dispatcher to mirror the way files are organized in the Numba dispatcher.

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [NA] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.",enhancement JAX refactor,brandonwillard,rlouf,2022-09-06 19:34:41,2022-09-13 14:36:39,aesara/link/jax/dispatch/elemwise.py tests/link/jax/test_elemwise.py aesara/link/jax/dispatch/extra_ops.py aesara/link/jax/dispatch/slinalg.py aesara/link/jax/dispatch/__init__.py tests/link/jax/test_shape.py aesara/link/jax/dispatch/shape.py aesara/link/jax/dispatch/tensor_basic.py aesara/link/jax/dispatch/basic.py tests/link/jax/test_extra_ops.py tests/link/jax/test_basic.py aesara/link/jax/dispatch/test_subtensor.py aesara/link/jax/dispatch/random.py aesara/scan/op.py aesara/graph/rewriting/db.py aesara/link/jax/dispatch/scan.py aesara/link/jax/dispatch/nlinalg.py tests/link/jax/test_slinalg.py tests/link/jax/test_scalar.py tests/link/jax/test_nlinalg.py tests/link/jax/test_tensor_basic.py tests/link/jax/test_random.py aesara/link/jax/dispatch/scalar.py tests/link/jax/test_scan.py tests/link/test_jax.py aesara/link/jax/dispatch.py aesara/link/jax/dispatch/subtensor.py,fbc7af67d86cfea122c8ba902f390734e1924d13 6fe2521e08fef76d3d1c877b0f335e05d8d21231 a93a7075f37d4306deb5c8cd55bae071ea5d5ce1,"brandonwillard labeled 2022-09-06 20:37:02,brandonwillard labeled 2022-09-06 20:37:02,brandonwillard labeled 2022-09-06 20:37:02,rlouf assigned 2022-09-06 20:37:10,rlouf head_ref_force_pushed 2022-09-07 13:11:33,rlouf head_ref_force_pushed 2022-09-07 16:38:55,rlouf head_ref_force_pushed 2022-09-07 16:39:10,rlouf head_ref_force_pushed 2022-09-09 14:38:08,rlouf ready_for_review 2022-09-09 14:42:33,rlouf head_ref_force_pushed 2022-09-09 14:45:26,rlouf review_requested 2022-09-12 21:48:55,rlouf review_requested 2022-09-12 21:49:01,rlouf head_ref_force_pushed 2022-09-13 07:47:04,rlouf head_ref_force_pushed 2022-09-13 07:51:22,rlouf review_requested 2022-09-13 14:32:53,brandonwillard referenced 2022-09-13 14:36:39,brandonwillard merged 2022-09-13 14:36:39,brandonwillard closed 2022-09-13 14:36:39",codecov[bot] rlouf brandonwillard,7,True
548,1173,Use folded shape in output of `Alloc`,ricardoV94,"Follow up to #821 

```python
import aesara.tensor as at

at.zeros((50,)).type.shape  # (50,)
```

This however leads to a weird failing Scan test that still has to be figured out.",important refactor shape inference,,,2022-09-12 09:20:02,2022-11-25 15:56:00,tests/tensor/rewriting/test_basic.py aesara/tensor/basic.py tests/tensor/test_basic.py,7109c485c3a7f96c35ab9a49c7a70a4027ec1e60,"brandonwillard labeled 2022-09-12 22:28:06,brandonwillard labeled 2022-09-12 22:28:06,brandonwillard labeled 2022-09-12 22:28:06,ricardoV94 closed 2022-11-25 15:56:00,ricardoV94 head_ref_deleted 2022-11-25 15:56:10",ricardoV94 brandonwillard,2,False
549,1181,Update `CheckAndRaise` to handle `ScalarType` inputs,brandonwillard,"Closes #1180.

This should also improve the situation for broadcasting-related `CheckAndRaise` usage.  For example, under these changes the following no longer includes some of the unnecessary `TensorFromScalar` conversions within the `Assert`s:
```python
import aesara
import aesara.tensor as at


X = at.matrix(""X"")
Y = at.matrix(""Y"")

X_bcast, Y_bcast = at.broadcast_arrays(X, Y)

aesara.dprint(X_bcast)
# BroadcastTo [id A]
#  |X [id B]
#  |TensorFromScalar [id C]
#  | |Assert{msg=Could not broadcast dimensions} [id D]
#  |   |Abs [id E]
#  |   | |maximum [id F]
#  |   |   |Switch [id G]
#  |   |   | |EQ [id H]
#  |   |   | | |ScalarFromTensor [id I]
#  |   |   | | | |Subtensor{int64} [id J]
#  |   |   | | |   |Shape [id K]
#  |   |   | | |   | |X [id B]
#  |   |   | | |   |ScalarConstant{0} [id L]
#  |   |   | | |ScalarConstant{1} [id M]
#  |   |   | |neg [id N]
#  |   |   | | |ScalarConstant{1} [id O]
#  |   |   | |ScalarFromTensor [id P]
#  |   |   |   |Subtensor{int64} [id J]
#  |   |   |Switch [id Q]
#  |   |     |EQ [id R]
#  |   |     | |ScalarFromTensor [id S]
#  |   |     | | |Subtensor{int64} [id T]
#  |   |     | |   |Shape [id U]
#  |   |     | |   | |Y [id V]
#  |   |     | |   |ScalarConstant{0} [id W]
#  |   |     | |ScalarConstant{1} [id X]
#  |   |     |neg [id Y]
#  |   |     | |ScalarConstant{1} [id O]
#  |   |     |ScalarFromTensor [id Z]
#  |   |       |Subtensor{int64} [id T]
#  |   |AND [id BA]
#  |     |OR [id BB]
#  |     | |EQ [id BC]
#  |     | | |Switch [id G]
#  |     | | |neg [id BD]
#  |     | |   |ScalarConstant{1} [id O]
#  |     | |EQ [id BE]
#  |     |   |Switch [id G]
#  |     |   |Abs [id E]
#  |     |OR [id BF]
#  |       |EQ [id BG]
#  |       | |Switch [id Q]
#  |       | |neg [id BH]
#  |       |   |ScalarConstant{1} [id O]
#  |       |EQ [id BI]
#  |         |Switch [id Q]
#  |         |Abs [id E]
#  |TensorFromScalar [id BJ]
#    |Assert{msg=Could not broadcast dimensions} [id BK]
#      |Abs [id BL]
#      | |maximum [id BM]
#      |   |Switch [id BN]
#      |   | |EQ [id BO]
#      |   | | |ScalarFromTensor [id BP]
#      |   | | | |Subtensor{int64} [id BQ]
#      |   | | |   |Shape [id K]
#      |   | | |   |ScalarConstant{1} [id BR]
#      |   | | |ScalarConstant{1} [id BS]
#      |   | |neg [id BT]
#      |   | | |ScalarConstant{1} [id O]
#      |   | |ScalarFromTensor [id BU]
#      |   |   |Subtensor{int64} [id BQ]
#      |   |Switch [id BV]
#      |     |EQ [id BW]
#      |     | |ScalarFromTensor [id BX]
#      |     | | |Subtensor{int64} [id BY]
#      |     | |   |Shape [id U]
#      |     | |   |ScalarConstant{1} [id BZ]
#      |     | |ScalarConstant{1} [id CA]
#      |     |neg [id CB]
#      |     | |ScalarConstant{1} [id O]
#      |     |ScalarFromTensor [id CC]
#      |       |Subtensor{int64} [id BY]
#      |AND [id CD]
#        |OR [id CE]
#        | |EQ [id CF]
#        | | |Switch [id BN]
#        | | |neg [id CG]
#        | |   |ScalarConstant{1} [id O]
#        | |EQ [id CH]
#        |   |Switch [id BN]
#        |   |Abs [id BL]
#        |OR [id CI]
#          |EQ [id CJ]
#          | |Switch [id BV]
#          | |neg [id CK]
#          |   |ScalarConstant{1} [id O]
#          |EQ [id CL]
#            |Switch [id BV]
#            |Abs [id BL]
```",C-backend performance concern,ricardoV94,,2022-09-13 23:14:31,2022-09-16 16:47:35,aesara/scalar/basic.py aesara/raise_op.py tests/scalar/test_basic.py tests/test_raise_op.py,771679df36fe0b0bcbb51512050a83bd50d84a6a,"brandonwillard labeled 2022-09-13 23:14:47,brandonwillard labeled 2022-09-13 23:14:47,brandonwillard review_requested 2022-09-13 23:22:00,brandonwillard head_ref_force_pushed 2022-09-14 23:26:46,brandonwillard head_ref_force_pushed 2022-09-14 23:30:41,brandonwillard head_ref_force_pushed 2022-09-15 00:09:13,brandonwillard head_ref_force_pushed 2022-09-15 00:11:07,brandonwillard review_requested 2022-09-15 15:10:23,brandonwillard head_ref_force_pushed 2022-09-16 15:25:09,brandonwillard referenced 2022-09-16 16:47:35,brandonwillard merged 2022-09-16 16:47:35,brandonwillard closed 2022-09-16 16:47:35,brandonwillard head_ref_deleted 2022-09-16 16:47:38",codecov[bot] ricardoV94 brandonwillard,5,True
550,1183,Update `options.package_data` section,eganster,"Fixes #1182

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",bug important,maresb brandonwillard,,2022-09-14 15:59:34,2022-09-14 19:56:04,setup.cfg,364b9f364de550f6c94f748687eec81c97db921e,"ricardoV94 review_requested 2022-09-14 16:04:10,brandonwillard renamed 2022-09-14 18:28:40,brandonwillard labeled 2022-09-14 18:28:48,brandonwillard labeled 2022-09-14 18:28:48,brandonwillard referenced 2022-09-14 19:56:04,brandonwillard merged 2022-09-14 19:56:04,brandonwillard closed 2022-09-14 19:56:04",codecov[bot] brandonwillard maresb ricardoV94 eganster,2,True
551,1185,Remove JAX omnistaging warning and add a warning for `CheckAndRaise` transpilation,rlouf,Following the discussion in https://github.com/aesara-devs/aesara/discussions/1184#discussioncomment-3648343 and #1001 I am removing the omnistaging warning and warning users when transpiling a `CheckAndRaise` Op instead of raising an exception. Closes #1001 #629,JAX,brandonwillard,,2022-09-15 07:44:20,2022-09-15 17:01:49,tests/link/jax/test_basic.py aesara/link/jax/dispatch/basic.py,f799962b1b3fb6f0c6a7044b1c6a4fda4ee2a745 e77a09391500418574325046ca37f118c3aea965,"rlouf connected 2022-09-15 07:44:33,rlouf labeled 2022-09-15 13:23:02,brandonwillard referenced 2022-09-15 17:01:49,brandonwillard merged 2022-09-15 17:01:49,brandonwillard closed 2022-09-15 17:01:50,brandonwillard renamed 2022-09-15 17:02:42",codecov[bot] rlouf brandonwillard,1,True
552,1186,Implement moveaxis helper,ricardoV94,"Equivalent to https://github.com/numpy/numpy/blob/v1.23.0/numpy/core/numeric.py#L1410-L1478

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.
",NumPy compatibility,rlouf brandonwillard,,2022-09-15 07:49:46,2022-09-21 08:44:28,tests/tensor/test_basic.py aesara/tensor/basic.py,7061bea3f6ad03696242bf14dff92809addad9fe,"ricardoV94 labeled 2022-09-15 07:49:46,ricardoV94 review_requested 2022-09-15 07:49:46,junpenglao mentioned 2022-09-15 07:49:58,junpenglao subscribed 2022-09-15 07:49:58,ricardoV94 review_requested 2022-09-15 08:08:44,ricardoV94 head_ref_force_pushed 2022-09-16 13:07:13,ricardoV94 review_requested 2022-09-16 13:07:28,ricardoV94 head_ref_force_pushed 2022-09-21 06:41:58,ricardoV94 review_requested 2022-09-21 06:42:10,ricardoV94 referenced 2022-09-21 08:44:28,ricardoV94 merged 2022-09-21 08:44:28,ricardoV94 closed 2022-09-21 08:44:28",rlouf junpenglao codecov[bot] brandonwillard ricardoV94,11,True
553,1187,Add deprecation warning for `rng_mrg`,rlouf,"The deprecation warning is only about `rng_mrg`. However I find not reference to `DotModulo` and the other functions defined in `aesara.sandbox.rng_mrg.py` anywhere else in the library and we should probably get rid of them as well.

Closes #324.",refactor,brandonwillard,,2022-09-15 19:33:21,2022-09-22 09:59:16,aesara/sandbox/rng_mrg.py,b7c9c4bf2a307153061add9decd5be416f74fcea,"rlouf convert_to_draft 2022-09-15 20:24:47,brandonwillard labeled 2022-09-16 01:02:13,rlouf head_ref_force_pushed 2022-09-16 06:55:46,rlouf ready_for_review 2022-09-16 17:44:24,rlouf head_ref_force_pushed 2022-09-21 20:55:44,rlouf referenced 2022-09-22 09:59:16,rlouf merged 2022-09-22 09:59:16,rlouf closed 2022-09-22 09:59:16,rlouf head_ref_deleted 2022-09-22 09:59:20",codecov[bot] rlouf brandonwillard,2,True
554,1188,Deprecate `nnet` and `signal` modules,rlouf,"In this PR we begin phasing the `nnet` and `signal` modules outside of Aesara, following discussion in https://github.com/aesara-devs/aesara/issues/674.

- [x] Disable auto-importing from `aesara.tensor`
- [x] Remove `aesara.tensor.nnet` and `aesara.tensor.signal` tests
- [x] Add deprecation warnings in `nnet` module 
- [x] Add deprecation warnings in `signal` module 
- [x] Move `Softmax` out of `aesara.tensor.nnet.basic` -> `aesara.tensor.math`
- [x] Move `LogSoftmax` out of `aesara.tensor.nnet.basic` -> `aesara.tensor.math`
- [x] Move `SoftmaxGrad` out of `aesara.tensor.nnet` -> `aesara.tensor.math`
- [x] Move tests for `Softmax`, `LogSoftmax`, `SoftmaxGrad`
- [x] Move rewrites related to `Softmax`, `LogSoftmax`, `SoftmaxGrad`
- [x] Rename `logsoftmax` -> `log_softmax`
- [x] Remove `nnet` and `signal` from the documentation, and any mention of anything NN-related

Anything else we want to salvage ?",important refactor,brandonwillard,rlouf,2022-09-15 20:30:05,2022-10-17 23:08:56,doc/tutorial/conv_arithmetic.rst aesara/sandbox/neighbours.py aesara/link/jax/dispatch/elemwise.py tests/link/jax/test_elemwise.py doc/tutorial/conv_arithmetic_figures/same_padding_no_strides.gif tests/d3viz/models.py doc/library/tensor/signal/conv.rst doc/library/d3viz/index.ipynb doc/library/tensor/nnet/neighbours.rst tests/tensor/test_mlp.py doc/tutorial/conv_arithmetic_figures/same_padding_no_strides_transposed.pdf tests/test_rop.py doc/tutorial/conv_arithmetic_figures/arbitrary_padding_no_strides.pdf doc/tutorial/conv_arithmetic_figures/same_padding_no_strides.pdf doc/tutorial/conv_arithmetic_figures/sep2D.jpg doc/extending/unittest.rst doc/library/tensor/nnet/sigmoid_prec.png doc/tutorial/conv_arithmetic_figures/full_padding_no_strides.gif aesara/tensor/rewriting/__init__.py doc/library/tensor/signal/index.rst doc/tutorial/conv_arithmetic_figures/padding_strides_odd.pdf tests/link/jax/test_scalar.py doc/tutorial/conv_arithmetic_figures/no_padding_strides_transposed.gif tests/tensor/rewriting/test_special.py doc/library/tensor/signal/downsample.rst tests/tensor/rewriting/test_math.py doc/tutorial/conv_arithmetic_figures/no_padding_strides.gif doc/tutorial/conv_arithmetic_figures/full_padding_no_strides_transposed.gif doc/tutorial/conv_arithmetic_figures/numerical_no_padding_no_strides.pdf doc/tutorial/conv_arithmetic_figures/no_padding_no_strides.gif doc/tutorial/conv_arithmetic_figures/dilation.gif tests/scalar/test_basic.py doc/library/sandbox/neighbours.rst doc/library/tensor/index.rst doc/tutorial/conv_arithmetic_figures/arbitrary_padding_no_strides_transposed.pdf tests/tensor/test_special.py doc/tutorial/conv_arithmetic_figures/numerical_padding_strides.gif doc/library/tensor/nnet/batchnorm.rst aesara/tensor/special.py tests/scan/test_basic.py .github/workflows/test.yml doc/tutorial/conv_arithmetic_figures/no_padding_strides.pdf doc/tutorial/conv_arithmetic_figures/full_padding_no_strides_transposed.pdf doc/tutorial/conv_arithmetic_figures/padding_strides.gif aesara/tensor/nnet/__init__.py doc/library/tensor/nnet/ctc.rst doc/troubleshooting.rst doc/library/tensor/nnet/blocksparse.rst aesara/tensor/math.py tests/tensor/nnet/test_basic.py doc/library/tensor/nnet/conv.rst doc/library/tensor/nnet/index.rst tests/tensor/test_math.py doc/library/tensor/signal/pool.rst doc/tutorial/conv_arithmetic_figures/numerical_no_padding_no_strides.gif doc/tutorial/conv_arithmetic_figures/same_padding_no_strides_transposed.gif aesara/tensor/__init__.py aesara/tensor/nnet/basic.py aesara/scan/op.py tests/link/numba/test_elemwise.py aesara/tensor/signal/pool.py aesara/tensor/signal/conv.py doc/library/tensor/nnet/basic.rst doc/tutorial/conv_arithmetic_figures/full_padding_no_strides.pdf doc/tutorial/conv_arithmetic_figures/arbitrary_padding_no_strides.gif doc/tutorial/conv_arithmetic_figures/no_padding_no_strides_transposed.gif aesara/link/numba/dispatch/elemwise.py doc/tutorial/conv_arithmetic_figures/padding_strides_transposed.gif doc/tutorial/conv_arithmetic_figures/padding_strides_transposed.pdf doc/tutorial/conv_arithmetic_figures/dilation.pdf doc/tutorial/conv_arithmetic_figures/padding_strides_odd_transposed.gif doc/library/d3viz/index.rst doc/tutorial/conv_arithmetic_figures/no_padding_no_strides_transposed.pdf aesara/tensor/rewriting/special.py doc/tutorial/conv_arithmetic_figures/no_padding_strides_transposed.pdf doc/tutorial/conv_arithmetic_figures/arbitrary_padding_no_strides_transposed.gif doc/tutorial/conv_arithmetic_figures/numerical_padding_strides.pdf doc/tutorial/conv_arithmetic_figures/padding_strides_odd.gif doc/tutorial/conv_arithmetic_figures/no_padding_no_strides.pdf doc/tutorial/conv_arithmetic_figures/padding_strides_odd_transposed.pdf doc/tutorial/conv_arithmetic_figures/padding_strides.pdf doc/tutorial/index.rst,09dbf0699dc5adeb582e18897faff4a540340222 aed5986dfd25025e76a08f981d15984efba89d64 b2c4dae9604913b111bc57c9507babd0707e2283 91da53502444bd4cd995b99b12ad0b22ff9a1d82 483190c9e27f7809326d29ce453ada924a65fd54 3ea559cf2f9a5c9d030d3cf6cfc8b663fce2865a 3e232b4d3ccfd09e21830a897939bdc1cf2dcbd0 c3e19041b1053e55a9bdeeda3e9b2d6ca14a6ae1 0f850755c39da5fe6c5d1c0e157956bf795c4da0 45047d31ec4fe3767e756a221f6e5fa1b2ffc25f 5dcda4ff5c11bb19ef54715923555702ff189775 5f11bdc1a63af0ea266c14b7b7496e44129b37aa,"rlouf connected 2022-09-15 20:32:00,rlouf connected 2022-09-15 20:34:09,brandonwillard labeled 2022-09-16 01:00:07,brandonwillard labeled 2022-09-16 01:00:36,twiecki mentioned 2022-09-26 09:28:57,twiecki subscribed 2022-09-26 09:28:57,rlouf head_ref_force_pushed 2022-09-29 21:26:10,rlouf head_ref_force_pushed 2022-09-29 21:30:51,rlouf head_ref_force_pushed 2022-09-29 21:32:01,twiecki closed 2022-09-30 14:19:48,twiecki reopened 2022-09-30 14:19:52,rlouf head_ref_force_pushed 2022-09-30 17:58:56,rlouf head_ref_force_pushed 2022-09-30 18:09:42,rlouf head_ref_force_pushed 2022-09-30 20:09:55,rlouf head_ref_force_pushed 2022-09-30 20:14:14,rlouf head_ref_force_pushed 2022-09-30 20:25:32,rlouf head_ref_force_pushed 2022-09-30 21:09:43,rlouf head_ref_force_pushed 2022-10-01 11:57:00,rlouf head_ref_force_pushed 2022-10-01 12:29:05,rlouf ready_for_review 2022-10-01 13:44:51,rlouf head_ref_force_pushed 2022-10-01 21:39:04,rlouf head_ref_force_pushed 2022-10-01 21:50:01,rlouf head_ref_force_pushed 2022-10-03 13:19:19,rlouf head_ref_force_pushed 2022-10-05 14:32:56,brandonwillard head_ref_force_pushed 2022-10-05 18:49:57,brandonwillard assigned 2022-10-05 18:50:15,brandonwillard unassigned 2022-10-05 18:50:19,rlouf assigned 2022-10-05 18:50:24,brandonwillard milestoned 2022-10-05 18:50:35,rlouf head_ref_force_pushed 2022-10-12 14:24:48,brandonwillard mentioned 2022-10-12 14:25:27,brandonwillard subscribed 2022-10-12 14:25:27,twiecki mentioned 2022-10-12 14:32:32,twiecki subscribed 2022-10-12 14:32:32,rlouf review_requested 2022-10-14 08:03:17,rlouf head_ref_force_pushed 2022-10-17 20:00:37,rlouf head_ref_force_pushed 2022-10-17 20:43:04,brandonwillard referenced 2022-10-17 23:08:56,brandonwillard merged 2022-10-17 23:08:56,brandonwillard closed 2022-10-17 23:08:56",rlouf codecov[bot] brandonwillard ricardoV94 twiecki,23,True
555,1189,Update Scan Gibbs sampling example,LegrandNico,"This PR tries to fix #890.

The example is now working with the last version of Aesara.",documentation,rlouf brandonwillard,,2022-09-16 09:06:06,2022-09-23 21:56:25,doc/library/scan.rst,4e0dfe8fcafdd229a182895df8101f22489d1866 37652ebb63d5d34e967bd082fff74243549a2162 804375e074ac5fc41bc7e3bf398726e28d4475c2 95838d25cf511c5fa705b3ee127ff1a06baf2574 211e9cf321bb837e9e73744ecfa6ac4b4777ea1e 4b8997bda95efa7949bf693603249e0f64b05a63 7de7148da1bc2d5a35e199cac5c011ebe728dc41 73a7c54d146fb6e34fdbe54fc70837ca97fc1a5c 0eec3f3e710b89b695407c272a94709beb2894ea 58fafa048285d47736913f1042c49e2e3fd84be0,"rlouf renamed 2022-09-16 09:16:43,rlouf labeled 2022-09-16 09:16:53,LegrandNico head_ref_force_pushed 2022-09-17 09:27:36,LegrandNico review_requested 2022-09-17 12:53:43,LegrandNico head_ref_force_pushed 2022-09-20 09:38:41,LegrandNico head_ref_force_pushed 2022-09-21 16:05:43,brandonwillard referenced 2022-09-23 21:56:25,brandonwillard merged 2022-09-23 21:56:25,brandonwillard closed 2022-09-23 21:56:26",rlouf LegrandNico brandonwillard,17,True
556,1190,Allow `TensorType.convert_variable` to work with mixed static shapes,ricardoV94,Fixes issue revealed in https://github.com/aesara-devs/aeppl/pull/181,refactor graph objects,brandonwillard,ricardoV94,2022-09-16 13:18:14,2022-09-19 13:14:57,aesara/tensor/type.py tests/tensor/test_type.py,e6cd12189ff134a9114c866895a08dabc022b038,"ricardoV94 review_requested 2022-09-16 13:18:14,brandonwillard renamed 2022-09-16 15:52:17,brandonwillard labeled 2022-09-16 15:56:30,brandonwillard labeled 2022-09-16 15:56:30,ricardoV94 assigned 2022-09-16 15:56:43,ricardoV94 head_ref_force_pushed 2022-09-16 16:19:50,ricardoV94 head_ref_force_pushed 2022-09-19 07:32:43,ricardoV94 head_ref_force_pushed 2022-09-19 08:34:51,ricardoV94 head_ref_force_pushed 2022-09-19 09:09:11,ricardoV94 head_ref_force_pushed 2022-09-19 09:11:07,ricardoV94 review_requested 2022-09-19 10:53:56,brandonwillard referenced 2022-09-19 13:14:56,brandonwillard merged 2022-09-19 13:14:57,brandonwillard closed 2022-09-19 13:14:57",codecov[bot] ricardoV94 brandonwillard,6,True
557,1192,Clean up `SparseTensorType`,brandonwillard,This PR cleans up the interface and error behavior of `SparseTensorType`&mdash;mostly relative to `TensorType`.  It also contains some docstring and comment refactoring in the `aesara.sparse` sub-package.,refactor sparse tensors,ricardoV94,,2022-09-16 23:12:30,2022-09-17 17:44:37,aesara/sparse/sharedvar.py tests/test_ifelse.py aesara/sparse/__init__.py aesara/ifelse.py aesara/sparse/type.py tests/sparse/test_type.py aesara/sparse/basic.py,485e9af0bf753f12586be92305b6cfde0c68adb4 7abb0a86d28dd2b6cd84c00209c5ceede5f18060 798847f640b6aacd5d3e6fe1dda9d91f90d7bbf6 dc294fca2e927fc032830cca86aebf4dc5a69a97 d89d4e6a17aa91db5ef966444268ec424863a7cf e6d70785c8c7d43eb5d051f28843a0a008d3633e,"brandonwillard labeled 2022-09-16 23:14:37,brandonwillard labeled 2022-09-16 23:14:37,brandonwillard head_ref_force_pushed 2022-09-16 23:15:55,brandonwillard head_ref_force_pushed 2022-09-17 00:35:39,rlouf connected 2022-09-17 05:44:44,rlouf disconnected 2022-09-17 05:46:18,rlouf connected 2022-09-17 05:46:19,brandonwillard referenced 2022-09-17 17:44:37,brandonwillard merged 2022-09-17 17:44:37,brandonwillard closed 2022-09-17 17:44:37,brandonwillard head_ref_deleted 2022-09-17 17:44:40",codecov[bot] ricardoV94 rlouf brandonwillard,2,True
558,1198,Avoid duplicate input names in Numba's `Scan` transpilation,rlouf,"This PR fixes the issue seen in #1176 when several elements of `output_infos` are `None`. The example in the issue now works, but I feel that we are just making up for the underlying issue explained in #1176.",bug Numba Scan,,,2022-09-20 13:14:47,2022-09-21 03:24:15,aesara/link/numba/dispatch/scan.py tests/link/numba/test_scan.py,53744c99e88e8b5287db2f77105047839a04c47a,"rlouf head_ref_force_pushed 2022-09-20 13:22:21,rlouf connected 2022-09-20 13:23:52,brandonwillard head_ref_force_pushed 2022-09-20 23:20:02,brandonwillard renamed 2022-09-20 23:20:55,brandonwillard head_ref_force_pushed 2022-09-20 23:21:05,brandonwillard referenced 2022-09-21 03:24:15,brandonwillard merged 2022-09-21 03:24:15,brandonwillard closed 2022-09-21 03:24:15,brandonwillard labeled 2022-09-21 03:24:49,brandonwillard labeled 2022-09-21 03:24:49,brandonwillard labeled 2022-09-21 03:24:54",codecov[bot] rlouf brandonwillard,3,True
559,1199,Fix type inference in Elemwise when inputs have 0 shape,ricardoV94,"This bug was introduced in #821 because I forgot to account for static shapes of 0

Revealed in https://github.com/pymc-devs/pymc/pull/6140",bug shape inference,brandonwillard,,2022-09-20 14:39:12,2022-09-20 20:07:05,aesara/tensor/elemwise.py tests/tensor/test_elemwise.py,38ea760740e89d8f7c3aa9448bb74e1d9ecdbd57,"ricardoV94 labeled 2022-09-20 14:39:12,ricardoV94 labeled 2022-09-20 14:39:12,ricardoV94 review_requested 2022-09-20 14:39:12,brandonwillard referenced 2022-09-20 20:07:05,brandonwillard merged 2022-09-20 20:07:05,brandonwillard closed 2022-09-20 20:07:05",codecov[bot] ricardoV94 brandonwillard,1,True
560,1201,Fix split output type,ricardoV94,Closes #1200 ,bug important shape inference,brandonwillard,,2022-09-20 16:24:43,2022-09-20 21:12:48,tests/tensor/test_basic.py aesara/tensor/basic.py,b53c80a463faa140a22c96cd864ae49019729ee5 6c4933b5d988082c946f3e50d6855e1cdc80a65e,"ricardoV94 labeled 2022-09-20 16:24:43,ricardoV94 labeled 2022-09-20 16:24:43,ricardoV94 review_requested 2022-09-20 16:24:43,ricardoV94 renamed 2022-09-20 16:26:27,brandonwillard labeled 2022-09-20 19:53:13,brandonwillard referenced 2022-09-20 21:12:48,brandonwillard merged 2022-09-20 21:12:48,brandonwillard closed 2022-09-20 21:12:48",codecov[bot] ricardoV94 brandonwillard,1,True
561,1203,Fix storage and mit-mot handling in `numba_funcify_Scan`,brandonwillard,"This PR fixes some storage allocation and access/usage issues in `numba_funcify_Scan`.

Closes #923

- [x] Fix truncated `Scan` input storage support
- [x] Support basic mit-mots
",bug important Numba Scan,,brandonwillard,2022-09-21 20:02:03,2022-10-04 23:09:30,conftest.py aesara/link/numba/dispatch/scan.py aesara/link/utils.py tests/link/numba/test_scan.py aesara/link/numba/dispatch/tensor_basic.py tests/link/numba/test_basic.py tests/link/test_link.py aesara/link/numba/dispatch/basic.py tests/link/jax/test_basic.py tests/link/test_utils.py,ad53fbebf49eb0ae1eb40ffd68cba0fce7197a49 58065025d191eff42589ed94f226eeb0ee6b0bd2 7dd429204b5f02cfdcc21a0f8475035a2aa5b9f6 15b388b44487d9dc4a4e052ced32bc5d9779dfa3 aefeeefc5d9b747562a5e7a4e6b3977f3387fff9 eea8e8fffc2b5a2855095e85ee7ad59b00c53568 bcab706fdfb9c33ca3cfd4ac9153559f3876b9ef,"brandonwillard assigned 2022-09-21 20:02:12,brandonwillard labeled 2022-09-21 20:02:25,brandonwillard labeled 2022-09-21 20:02:25,brandonwillard labeled 2022-09-21 20:02:25,brandonwillard labeled 2022-09-21 20:02:25,brandonwillard head_ref_force_pushed 2022-09-21 20:03:18,brandonwillard head_ref_force_pushed 2022-09-21 21:14:52,brandonwillard head_ref_force_pushed 2022-09-23 17:25:19,brandonwillard head_ref_force_pushed 2022-09-23 21:10:47,brandonwillard head_ref_force_pushed 2022-09-23 21:15:37,brandonwillard head_ref_force_pushed 2022-09-24 00:00:15,brandonwillard head_ref_force_pushed 2022-09-27 23:10:24,brandonwillard head_ref_force_pushed 2022-09-27 23:19:56,brandonwillard head_ref_force_pushed 2022-09-29 19:12:59,brandonwillard head_ref_force_pushed 2022-10-03 05:53:20,brandonwillard head_ref_force_pushed 2022-10-03 06:04:11,brandonwillard head_ref_force_pushed 2022-10-03 06:06:09,brandonwillard head_ref_force_pushed 2022-10-03 06:20:50,brandonwillard head_ref_force_pushed 2022-10-03 06:25:08,brandonwillard head_ref_force_pushed 2022-10-03 23:15:11,brandonwillard head_ref_force_pushed 2022-10-04 00:28:00,brandonwillard review_requested 2022-10-04 00:28:09,brandonwillard review_requested 2022-10-04 00:28:10,brandonwillard referenced 2022-10-04 23:09:30,brandonwillard merged 2022-10-04 23:09:30,brandonwillard closed 2022-10-04 23:09:31,brandonwillard head_ref_deleted 2022-10-04 23:09:35,brandonwillard renamed 2022-10-04 23:13:25",codecov[bot] brandonwillard,2,True
562,1205,Fix `None` output node bug in `JITLinker.create_jitable_thunk`,ricardoV94,"* Also fixes bug in JITCompiler when first output of inner fgraph is an input variable, as can happen in some specific functions with updates

Closes #1195 ",bug Numba,rlouf brandonwillard,,2022-09-22 09:42:19,2022-09-23 04:28:30,aesara/link/utils.py aesara/link/basic.py tests/link/jax/test_basic.py tests/link/numba/test_basic.py,0a34abd0593b0084f20d7b5b8928f9953cf23570,"ricardoV94 head_ref_force_pushed 2022-09-22 09:43:39,ricardoV94 head_ref_force_pushed 2022-09-22 09:50:20,ricardoV94 review_dismissed 2022-09-22 09:54:39,ricardoV94 head_ref_force_pushed 2022-09-22 09:54:39,ricardoV94 head_ref_force_pushed 2022-09-22 10:31:05,ricardoV94 head_ref_force_pushed 2022-09-22 14:37:18,brandonwillard referenced 2022-09-23 04:28:30,brandonwillard merged 2022-09-23 04:28:30,brandonwillard closed 2022-09-23 04:28:30,brandonwillard renamed 2022-09-23 04:29:40,brandonwillard labeled 2022-09-23 04:29:47,brandonwillard labeled 2022-09-23 04:29:47",rlouf ricardoV94 codecov[bot] brandonwillard,3,True
563,1208,Update `pre-commit` hooks,brandonwillard,Closes #1206,bug testing CI,,,2022-09-23 20:53:41,2022-09-23 20:55:47,.pre-commit-config.yaml,6ba89201138f51d1d4ae9d7eca73517f613fb506,"brandonwillard labeled 2022-09-23 20:54:00,brandonwillard labeled 2022-09-23 20:54:00,brandonwillard labeled 2022-09-23 20:54:00,brandonwillard referenced 2022-09-23 20:55:47,brandonwillard merged 2022-09-23 20:55:47,brandonwillard closed 2022-09-23 20:55:47,brandonwillard head_ref_deleted 2022-09-23 20:55:49",brandonwillard,0,True
564,1209,Make `isort` ignore Cython files,brandonwillard,"This is a follow-up to #1208, after which `isort` is applied to `scan_perform.pyx`.",bug testing CI,,,2022-09-23 21:07:46,2022-09-23 21:14:09,setup.cfg,5c8674ab96e09154d99df8499c2366c7db99692e,"brandonwillard labeled 2022-09-23 21:08:37,brandonwillard labeled 2022-09-23 21:08:37,brandonwillard labeled 2022-09-23 21:08:57,brandonwillard referenced 2022-09-23 21:14:09,brandonwillard merged 2022-09-23 21:14:09,brandonwillard closed 2022-09-23 21:14:09,brandonwillard head_ref_deleted 2022-09-23 21:14:12",brandonwillard,0,True
565,1210,Pin style CI job to Python 3.9,brandonwillard,Closes #1206,bug testing CI,,,2022-09-23 22:18:02,2022-09-23 23:57:31,.github/workflows/test.yml,1263df9810971560a1f984ad079f3f3368f0095c,"brandonwillard head_ref_force_pushed 2022-09-23 23:50:14,brandonwillard labeled 2022-09-23 23:57:04,brandonwillard labeled 2022-09-23 23:57:04,brandonwillard labeled 2022-09-23 23:57:14,brandonwillard referenced 2022-09-23 23:57:31,brandonwillard merged 2022-09-23 23:57:31,brandonwillard closed 2022-09-23 23:57:31,brandonwillard head_ref_deleted 2022-09-23 23:57:34",codecov[bot] brandonwillard,1,True
566,1211,Add Student's t `RandomVariable`,rlouf,"Numpy only defines `standard_t` (it has inconsistent naming with the location-scale library), so I defined it as a `ScipyRandomVariables` instead. I followed what was done for the other members of the location-scale family.

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Ticks one off of https://github.com/aesara-devs/aesara/discussions/1093",random variables,ricardoV94 brandonwillard,,2022-09-24 19:39:08,2022-11-03 16:45:39,doc/library/tensor/random/basic.rst tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,4be8bc0ecab89e7b1e96c6b7d79b6a515554484d,"rlouf renamed 2022-09-25 20:55:57,rlouf head_ref_force_pushed 2022-09-30 21:07:30,rlouf head_ref_force_pushed 2022-10-01 08:10:15,rlouf head_ref_force_pushed 2022-10-01 08:11:41,rlouf convert_to_draft 2022-10-17 20:12:17,rlouf head_ref_force_pushed 2022-11-03 14:39:49,rlouf ready_for_review 2022-11-03 14:43:41,rlouf head_ref_force_pushed 2022-11-03 14:46:41,brandonwillard labeled 2022-11-03 15:20:14,brandonwillard referenced 2022-11-03 16:45:39,brandonwillard merged 2022-11-03 16:45:39,brandonwillard closed 2022-11-03 16:45:39,rlouf head_ref_deleted 2022-11-03 16:46:59",ricardoV94 rlouf codecov[bot] brandonwillard,16,True
567,1214,Allow shared RandomState/Generator updates in JAX backend,ricardoV94,"Closes #982

A more clean solution would be to replace the SharedRandomState/Generator variables by Shared JAX [PRNGKeys](https://jax.readthedocs.io/en/latest/_autosummary/jax.random.PRNGKey.html#jax.random.PRNGKey), but this works for now.

",JAX backend compatibility random variables,brandonwillard,,2022-09-26 11:43:09,2022-09-30 13:33:14,tests/link/jax/test_random.py aesara/link/jax/linker.py,90d8920a6559b1bb91f66c68cc202290e0aa386c,"ricardoV94 labeled 2022-09-26 11:43:09,ricardoV94 labeled 2022-09-26 11:43:09,ricardoV94 review_requested 2022-09-26 11:43:09,ricardoV94 review_requested 2022-09-26 11:43:09,ricardoV94 renamed 2022-09-26 11:43:18,ricardoV94 labeled 2022-09-26 11:43:23,ricardoV94 head_ref_force_pushed 2022-09-26 11:54:48,ricardoV94 head_ref_force_pushed 2022-09-26 12:02:44,ricardoV94 head_ref_force_pushed 2022-09-30 07:39:15,ricardoV94 review_requested 2022-09-30 07:41:58,ricardoV94 referenced 2022-09-30 13:33:14,ricardoV94 merged 2022-09-30 13:33:14,ricardoV94 closed 2022-09-30 13:33:14",codecov[bot] ricardoV94 brandonwillard,5,True
568,1218,Stop renaming variables in `Scan`'s merge rewrite,brandonwillard,Closes #1216,graph rewriting Scan unexpected behavior,,,2022-09-28 20:46:57,2022-09-29 22:00:28,aesara/scan/rewriting.py,b6ea0fea2bde05f572e09b2a339a3ff9498fa742,"brandonwillard labeled 2022-09-28 21:07:59,brandonwillard labeled 2022-09-28 21:07:59,brandonwillard labeled 2022-09-28 21:07:59,brandonwillard head_ref_force_pushed 2022-09-29 19:21:04,brandonwillard referenced 2022-09-29 22:00:28,brandonwillard merged 2022-09-29 22:00:28,brandonwillard closed 2022-09-29 22:00:28,brandonwillard head_ref_deleted 2022-09-29 22:00:33",codecov[bot] brandonwillard,1,True
569,1219,Fix outdated stride logic in `GEMM`'s C implementation,brandonwillard,"Closes #1220.

It looks like `jaxlib` has been update and is now required (e.g. [here](https://github.com/aesara-devs/aesara/actions/runs/3146762303/jobs/5115620271#step:6:38)), so this PR reverts the CI version pin, as well.",JAX important C-backend NumPy compatibility,rlouf,brandonwillard,2022-09-28 21:07:40,2022-09-29 19:11:50,aesara/tensor/sort.py tests/tensor/test_subtensor.py .github/workflows/test.yml tests/tensor/signal/test_pool.py aesara/tensor/blas.py,1e36f60d79067836f69da8a1c931aa53ef45c713 3bf35069d722e46538c6ff6c6911f23fd770e42a 6dd2af8aeff9bf82611a020ddb07ca9c9df1e85e,"brandonwillard labeled 2022-09-28 21:26:18,brandonwillard labeled 2022-09-28 21:26:23,brandonwillard review_dismissed 2022-09-29 04:42:01,brandonwillard connected 2022-09-29 04:44:09,brandonwillard assigned 2022-09-29 04:44:12,brandonwillard labeled 2022-09-29 04:45:33,brandonwillard renamed 2022-09-29 04:48:41,brandonwillard labeled 2022-09-29 16:01:50,brandonwillard head_ref_force_pushed 2022-09-29 16:46:31,brandonwillard head_ref_force_pushed 2022-09-29 17:40:37,brandonwillard referenced 2022-09-29 19:11:50,brandonwillard merged 2022-09-29 19:11:50,brandonwillard closed 2022-09-29 19:11:50,brandonwillard head_ref_deleted 2022-09-29 19:11:53",codecov[bot] rlouf brandonwillard,1,True
570,1224,Fix `_debugprint`'s handling of empty profile data,brandonwillard,This PR fixes a bug that prevents `_debugprint` from printing when `profile=True` and there is no profile data.,bug tooling,,brandonwillard,2022-09-30 18:45:18,2022-09-30 21:02:46,tests/test_printing.py aesara/printing.py,91599732d420d3ecd98578c267d282788b500e74,"brandonwillard assigned 2022-09-30 18:45:43,brandonwillard labeled 2022-09-30 18:45:54,brandonwillard labeled 2022-09-30 18:45:54,brandonwillard head_ref_force_pushed 2022-09-30 18:55:45,brandonwillard head_ref_force_pushed 2022-09-30 18:56:29,brandonwillard referenced 2022-09-30 21:02:46,brandonwillard merged 2022-09-30 21:02:46,brandonwillard closed 2022-09-30 21:02:46,brandonwillard head_ref_deleted 2022-09-30 21:02:49",codecov[bot] brandonwillard,1,True
571,1234,Make `fgraph_to_python` process `Constant` `FunctionGraph` outputs correctly,brandonwillard,This is a fix for the first issue mentioned in #1233 involving the `NameError` raised when `Constant`s are used as outputs in a `FunctionGraph` with no other references to said `Constant`s.,bug JAX important Numba,,brandonwillard,2022-10-04 23:05:16,2022-10-05 01:05:53,aesara/link/utils.py tests/link/test_utils.py,a84e1532748a85fc18bc10c75babae9917d76685,"brandonwillard labeled 2022-10-04 23:05:42,brandonwillard labeled 2022-10-04 23:05:42,brandonwillard labeled 2022-10-04 23:05:42,brandonwillard labeled 2022-10-04 23:05:59,brandonwillard assigned 2022-10-04 23:06:00,brandonwillard head_ref_force_pushed 2022-10-04 23:10:59,brandonwillard connected 2022-10-04 23:12:23,brandonwillard referenced 2022-10-05 01:05:53,brandonwillard merged 2022-10-05 01:05:53,brandonwillard closed 2022-10-05 01:05:53,brandonwillard head_ref_deleted 2022-10-05 01:05:56",codecov[bot] brandonwillard,1,True
572,1241,Add support for shared inputs in `numba_funcify_Scan`,brandonwillard,This PR adds missing shared input support to `numba_funcify_Scan` and fixes a `Type` check bug in `make_numba_random_fn`.,Numba random variables Scan,,brandonwillard,2022-10-06 05:35:21,2022-10-07 23:10:28,aesara/link/numba/dispatch/scan.py tests/link/numba/test_scan.py tests/link/numba/test_basic.py .pre-commit-config.yaml tests/link/numba/test_random.py aesara/link/numba/dispatch/random.py,b748c1ffd17db24ca0bfe57b5bc27f8cc460ce9a 0ce3812ea3adda2cb93d3b01727bea28fb023bd3 bc73460a242ae12b8164053cd26596fcc8ad0297 d7666703506ef2860f6b11fd8e83f6689c7c7c59,"brandonwillard convert_to_draft 2022-10-06 14:58:12,brandonwillard labeled 2022-10-06 14:58:28,brandonwillard labeled 2022-10-06 14:58:28,brandonwillard labeled 2022-10-06 14:58:40,brandonwillard head_ref_force_pushed 2022-10-07 06:43:03,brandonwillard head_ref_force_pushed 2022-10-07 06:55:58,brandonwillard ready_for_review 2022-10-07 06:56:08,brandonwillard assigned 2022-10-07 06:56:43,brandonwillard head_ref_force_pushed 2022-10-07 17:05:39,brandonwillard head_ref_force_pushed 2022-10-07 19:01:11,brandonwillard head_ref_force_pushed 2022-10-07 19:03:39,brandonwillard referenced 2022-10-07 23:10:28,brandonwillard merged 2022-10-07 23:10:28,brandonwillard closed 2022-10-07 23:10:28,brandonwillard head_ref_deleted 2022-10-07 23:10:31",codecov[bot] brandonwillard,1,True
573,1245,Use Numba's `Generator` support,brandonwillard,"Closes #814.

- [x] Find a combination of packages that works with the required dev version of Numba
- [x] `dirichlet` isn't currently supported in Numba.
- [x] `gumbel` isn't currently supported in Numba.
- [x] `binomial` isn't currently supported in Numba.
    Object-mode is being used.  This will need a follow-up issue for a non-object-mode implementation.
- [x] `hypergeometric` isn't currently supported in Numba.
    Object-mode is being used.  This will need a follow-up issue for a non-object-mode implementation.
- [x] `scan` runs performed without merging produce slightly different sample results between Numba and Python modes.
    This might be due to the extra RNG state `copy`s in the Python `RandomVariable.perform` implementations, but I haven't checked yet.
    Update: It was due to the `copy`s, and they've been added to the Numba implementations; however, they require the use of object-mode, which is somewhat undesirable.  This will need a follow-up issue for a non-object-mode implementation.",important Numba random variables,ricardoV94 Smit-create,brandonwillard,2022-10-09 05:59:24,2023-05-09 05:45:42,requirements.txt tests/link/numba/test_scan.py .github/workflows/test.yml tests/link/numba/test_basic.py aesara/link/numba/linker.py aesara/tensor/signal/pool.py environment.yml tests/link/numba/test_random.py environment-arm.yml aesara/sparse/sandbox/sp.py aesara/link/numba/dispatch/random.py,e486e669bdc2f9883bcdffa1e018bab276120009 cbec1373f7d92e0c124e95f4e54b1f9c5a12e7ec b1fc0312d3dbe817751290175da8ce3f0c235aff adf2d0c8c1fc32c49c078994b7b0dfa5271302e6 4d1c47759ae8a05d331f4c6c58cda63f1bb384a0 e2cf284b92411bc14f6fdb525515e4a64bcd3432 c18d455585430a14fed143be9d3481abb39858a6,"brandonwillard labeled 2022-10-09 06:00:27,brandonwillard labeled 2022-10-09 06:00:27,brandonwillard labeled 2022-10-09 06:00:27,brandonwillard milestoned 2022-10-09 06:00:36,brandonwillard assigned 2022-10-09 06:00:46,brandonwillard head_ref_force_pushed 2022-10-09 06:16:41,brandonwillard convert_to_draft 2022-10-09 06:19:43,brandonwillard head_ref_force_pushed 2022-10-09 06:29:12,brandonwillard head_ref_force_pushed 2022-10-09 06:30:35,brandonwillard head_ref_force_pushed 2022-10-09 06:43:10,brandonwillard head_ref_force_pushed 2022-10-09 07:05:35,brandonwillard head_ref_force_pushed 2022-10-09 07:18:03,brandonwillard head_ref_force_pushed 2022-10-09 07:29:21,brandonwillard head_ref_force_pushed 2022-10-09 18:19:42,brandonwillard head_ref_force_pushed 2022-10-09 20:13:55,brandonwillard head_ref_force_pushed 2022-10-09 20:27:59,brandonwillard head_ref_force_pushed 2022-10-09 23:45:57,brandonwillard head_ref_force_pushed 2022-10-10 00:00:12,brandonwillard head_ref_force_pushed 2022-10-10 00:17:54,brandonwillard head_ref_force_pushed 2022-10-10 00:52:08,brandonwillard head_ref_force_pushed 2022-10-10 01:37:34,brandonwillard ready_for_review 2022-10-10 20:18:08,brandonwillard head_ref_force_pushed 2022-10-14 19:33:50,brandonwillard head_ref_force_pushed 2022-10-14 20:52:25,brandonwillard head_ref_force_pushed 2022-10-16 16:02:38,brandonwillard head_ref_force_pushed 2022-11-10 00:10:00,brandonwillard closed 2022-11-11 16:00:50,brandonwillard head_ref_force_pushed 2022-11-11 16:00:50,brandonwillard reopened 2022-11-11 16:05:28,brandonwillard convert_to_draft 2022-11-11 16:05:39,brandonwillard head_ref_force_pushed 2022-11-11 18:27:09,brandonwillard head_ref_force_pushed 2023-02-21 00:59:24,brandonwillard head_ref_force_pushed 2023-02-21 01:11:54,brandonwillard head_ref_force_pushed 2023-02-21 01:12:56,brandonwillard head_ref_force_pushed 2023-02-21 01:25:41,brandonwillard head_ref_force_pushed 2023-05-06 22:17:20,brandonwillard head_ref_force_pushed 2023-05-06 22:38:38,brandonwillard head_ref_force_pushed 2023-05-07 00:32:43,soraros unsubscribed 2023-05-07 01:05:10,brandonwillard ready_for_review 2023-05-08 14:59:56,brandonwillard review_requested 2023-05-08 15:00:16,brandonwillard referenced 2023-05-09 05:45:42,brandonwillard merged 2023-05-09 05:45:42,brandonwillard closed 2023-05-09 05:45:42,brandonwillard head_ref_deleted 2023-05-09 05:45:46",soraros codecov[bot] brandonwillard ricardoV94 Smit-create,6,True
574,1253,Refactor output `Type` inference in `RandomVariable` and `Scan`,brandonwillard,"This PR provides initial fixes for #1252, and similar faulty logic that's based on the deprecated strict `TensorType.broadcastable`.",bug shape inference,,,2022-10-13 01:46:51,2022-10-21 17:41:34,tests/compile/test_debugmode.py aesara/scan/op.py aesara/tensor/basic.py tests/scan/test_rewriting.py aesara/compile/debugmode.py aesara/sparse/type.py tests/tensor/test_type.py tests/tensor/rewriting/test_basic.py tests/tensor/test_basic.py aesara/tensor/random/op.py aesara/tensor/type.py aesara/tensor/extra_ops.py,6c978d8eedd979f319c8e46b9d96c9ed14fdebd5 272880e64ae13b4fc2652510e9fc8d1e0d6fca90 b11a9a0a8c553491b57bf8b35dffdb35a1b792f1 97954597ca29c8ed9423f61c0c678d97ed96be1e e6b39a51666b90c064daf46e8821b9dcac69671a 69b80f7650e1ce6ed129c03617291c4e68801c30,"brandonwillard head_ref_force_pushed 2022-10-13 01:50:59,brandonwillard labeled 2022-10-13 01:51:14,brandonwillard labeled 2022-10-13 01:51:14,brandonwillard convert_to_draft 2022-10-13 01:53:01,brandonwillard renamed 2022-10-13 01:53:35,brandonwillard head_ref_force_pushed 2022-10-13 02:33:43,brandonwillard head_ref_force_pushed 2022-10-13 02:42:32,brandonwillard head_ref_force_pushed 2022-10-16 01:37:36,brandonwillard renamed 2022-10-16 01:41:01,brandonwillard head_ref_force_pushed 2022-10-16 01:57:05,brandonwillard head_ref_force_pushed 2022-10-20 23:56:44,brandonwillard head_ref_force_pushed 2022-10-21 00:13:00,brandonwillard head_ref_force_pushed 2022-10-21 02:44:14,brandonwillard ready_for_review 2022-10-21 03:51:28,brandonwillard renamed 2022-10-21 17:40:55,brandonwillard referenced 2022-10-21 17:41:34,brandonwillard merged 2022-10-21 17:41:34,brandonwillard closed 2022-10-21 17:41:34,brandonwillard head_ref_deleted 2022-10-21 17:41:38",codecov[bot] brandonwillard,3,True
575,1256,Remove redundant install/update instructions and Python/NumPy primers from documentation,rlouf,"Closes #753, #750.",documentation refactor,brandonwillard,,2022-10-14 09:07:28,2022-10-14 22:46:54,doc/install_ubuntu.rst doc/updating.rst doc/requirements.inc doc/requirements.rst doc/install_macos.rst doc/tutorial/python.rst doc/install_windows.rst doc/aesara_installer_for_anaconda.bat doc/install.rst doc/tutorial/index.rst doc/tutorial/numpy.rst doc/dev_start_guide.rst doc/install_centos6.rst doc/index.rst doc/install_generic.inc,404a96343c68c240bba467e90189ae3546b69193 b4b4192905c055b54588aa116b07b820b8f31c5c 33137066e2b1a64e95c09d13b8529a86d67e9e71 7c013e9bcb4d65beebb76643fbde8c8b35c88f64,"rlouf labeled 2022-10-14 09:07:28,rlouf connected 2022-10-14 09:09:44,brandonwillard labeled 2022-10-14 22:46:41,brandonwillard referenced 2022-10-14 22:46:54,brandonwillard merged 2022-10-14 22:46:54,brandonwillard closed 2022-10-14 22:46:54",rlouf brandonwillard,0,True
576,1262,Use `time.perf_counter` for `aesara.function` timing results,anirudhacharya,"closes #1246 

Changing the timing function for high-precision performance measurement.

_Note to reviewers_ - `time_ns()` function is only available from Python 3.7 onwards. Let me know if that is an issue for the library.",,rlouf brandonwillard,,2022-10-16 09:07:34,2022-10-25 01:29:53,tests/compile/test_debugmode.py aesara/scan/op.py aesara/tensor/basic.py tests/scan/test_rewriting.py aesara/compile/debugmode.py aesara/sparse/type.py tests/tensor/test_type.py tests/tensor/rewriting/test_basic.py tests/tensor/test_basic.py aesara/tensor/random/op.py aesara/tensor/type.py aesara/tensor/extra_ops.py aesara/compile/function/types.py,fd8d2da1eb9e171ab31543d45c8a314fc5911620 e1de4c12ee32bbef097fba3e26302494659c3c7e 958632900a3adf8e52de513150c30210c934a08f,"brandonwillard mentioned 2022-10-16 09:22:19,brandonwillard subscribed 2022-10-16 09:22:19,michaelosthege mentioned 2022-10-16 09:22:19,michaelosthege subscribed 2022-10-16 09:22:19,ricardoV94 mentioned 2022-10-16 13:37:54,ricardoV94 subscribed 2022-10-16 13:37:54,rlouf mentioned 2022-10-16 19:16:03,rlouf subscribed 2022-10-16 19:16:03,anirudhacharya head_ref_force_pushed 2022-10-17 09:42:36,anirudhacharya review_dismissed 2022-10-19 21:06:33,anirudhacharya head_ref_force_pushed 2022-10-19 21:06:33,brandonwillard mentioned 2022-10-20 23:57:09,brandonwillard subscribed 2022-10-20 23:57:09,brandonwillard mentioned 2022-10-24 19:41:50,brandonwillard subscribed 2022-10-24 19:41:50,brandonwillard renamed 2022-10-25 01:28:54,brandonwillard referenced 2022-10-25 01:29:52,brandonwillard merged 2022-10-25 01:29:53,brandonwillard closed 2022-10-25 01:29:53,anirudhacharya head_ref_deleted 2022-10-25 03:01:45",rlouf codecov[bot] brandonwillard ricardoV94 anirudhacharya michaelosthege,12,True
577,1265,Add documentation for `aesara.as_symbolic`,anirudhacharya,"Add documentation for `aesara.as_symbolic()` function.

closes https://github.com/aesara-devs/aesara/issues/746

This is how it looks when I built the documentation locally -

<img width=""806"" alt=""Screenshot 2022-10-17 at 6 48 58 PM"" src=""https://user-images.githubusercontent.com/2778341/196187350-7c6bc678-a240-432f-a062-0d1ea0c327be.png"">
",documentation,,,2022-10-17 13:20:13,2022-10-17 23:31:19,doc/library/index.rst,f58affc0afa8cb1a95ed475c14e1ebe8adbbfc66,"brandonwillard mentioned 2022-10-17 13:21:04,brandonwillard subscribed 2022-10-17 13:21:05,rlouf mentioned 2022-10-17 13:21:05,rlouf subscribed 2022-10-17 13:21:05,brandonwillard labeled 2022-10-17 23:30:41,brandonwillard referenced 2022-10-17 23:31:19,brandonwillard merged 2022-10-17 23:31:19,brandonwillard closed 2022-10-17 23:31:19,brandonwillard renamed 2022-10-17 23:31:41,anirudhacharya head_ref_deleted 2022-10-18 02:59:47",anirudhacharya rlouf brandonwillard,2,True
578,1266,Mention common cases in issue template,brandonwillard,This PR adds instructions for some common non-issue cases to our issue template.,enhancement,dgerlanc twiecki,brandonwillard,2022-10-17 18:38:11,2022-10-17 19:56:11,.github/ISSUE_TEMPLATE.md,a1d1e93422977576abac3ed92df35b7ef79c6f86,"brandonwillard assigned 2022-10-17 18:39:07,brandonwillard labeled 2022-10-17 18:39:16,brandonwillard head_ref_force_pushed 2022-10-17 18:52:26,brandonwillard review_requested 2022-10-17 18:53:08,brandonwillard review_requested 2022-10-17 18:53:08,brandonwillard referenced 2022-10-17 19:56:11,brandonwillard merged 2022-10-17 19:56:11,brandonwillard closed 2022-10-17 19:56:11",dgerlanc twiecki brandonwillard,0,True
579,1268,Move misplaced JAX linker test file,rlouf,Working on #1168 I accidentaly moved `test_subtensor.py` from the test suite to `link/jax/dispatch`. This PR moves the file back to where it belongs.,,,,2022-10-17 19:55:04,2022-10-18 07:46:40,tests/link/jax/test_subtensor.py aesara/scan/op.py,c7af87eefce02e3a5991adc3f994ed6c86c7bd3f 7c5512853127d3fb2f9096483fd2dd7c82cadc7b,"rlouf head_ref_force_pushed 2022-10-17 20:05:55,rlouf convert_to_draft 2022-10-17 20:10:07,rlouf closed 2022-10-18 07:46:40",rlouf,1,False
580,1269,Fix `SharedVariable.value` usage in `broadcast_shape_iter`,brandonwillard,Closes #1255,bug,,brandonwillard,2022-10-17 21:22:07,2022-10-17 22:50:22,aesara/tensor/extra_ops.py tests/tensor/test_extra_ops.py,588313b4996efa1985d5b1d081c9f15cae49a980,"brandonwillard labeled 2022-10-17 21:22:24,brandonwillard assigned 2022-10-17 21:22:26,brandonwillard renamed 2022-10-17 21:23:03,brandonwillard referenced 2022-10-17 22:50:22,brandonwillard merged 2022-10-17 22:50:22,brandonwillard closed 2022-10-17 22:50:22",codecov[bot] brandonwillard,1,True
581,1272,Implement numba dispatcher for MaxAndArgmax,ferrine,"**Thank you for opening a PR!**
A part of #423 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [ ] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement Numba,brandonwillard,,2022-10-19 12:30:15,2022-11-04 21:10:32,tests/link/numba/test_basic.py,4aa3e307a7e9ae15e1e08d10ef51bf77b9dbc320 8c75001b3ef941c773eebb4bac1af4b1e91dca8b,"ferrine renamed 2022-10-19 12:30:35,ferrine renamed 2022-10-19 12:31:34,ferrine convert_to_draft 2022-10-19 14:10:28,brandonwillard labeled 2022-10-20 18:29:33,brandonwillard labeled 2022-10-20 18:29:33,brandonwillard closed 2022-11-04 21:10:32",ferrine brandonwillard,1,False
582,1278,Update flake8 repo and version in `pre-commit` config,brandonwillard,This PR fixes issues related to https://github.com/PyCQA/flake8/issues/1701.,testing tooling,rlouf,brandonwillard,2022-10-28 21:27:03,2022-10-28 21:31:03,.pre-commit-config.yaml,2bcc72b128538dcfda965743e565bce7c8af430b,"brandonwillard assigned 2022-10-28 21:27:15,brandonwillard labeled 2022-10-28 21:27:42,brandonwillard labeled 2022-10-28 21:27:42,rlouf review_requested 2022-10-28 21:28:33,rlouf review_request_removed 2022-10-28 21:29:11,brandonwillard renamed 2022-10-28 21:30:38,brandonwillard referenced 2022-10-28 21:31:03,brandonwillard merged 2022-10-28 21:31:03,brandonwillard closed 2022-10-28 21:31:04,brandonwillard head_ref_deleted 2022-10-28 21:31:06",rlouf brandonwillard,0,True
583,1282,Add `name` argument to `Variable.clone`,wd60622,"**Thank you for opening a PR!**

This PR addresses this [enhancement issue](https://github.com/aesara-devs/aesara/issues/1281) and adds an optional name argument when cloning a Variable

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [ ] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement,rlouf brandonwillard,,2022-11-01 22:03:31,2022-11-19 07:05:14,aesara/compile/sharedvalue.py tests/graph/test_basic.py aesara/graph/basic.py,1af253fa3def317746c2b8262a4fc6193910e4fb,"rlouf renamed 2022-11-01 22:11:30,rlouf labeled 2022-11-01 22:14:57,rlouf convert_to_draft 2022-11-01 22:33:47,rlouf review_requested 2022-11-13 08:57:32,brandonwillard mentioned 2022-11-18 15:56:14,brandonwillard subscribed 2022-11-18 15:56:14,wd60622 head_ref_force_pushed 2022-11-18 19:02:41,wd60622 ready_for_review 2022-11-18 19:04:35,brandonwillard head_ref_force_pushed 2022-11-18 22:31:43,brandonwillard head_ref_force_pushed 2022-11-18 22:41:39,rlouf referenced 2022-11-19 07:05:14,rlouf merged 2022-11-19 07:05:14,rlouf closed 2022-11-19 07:05:14",codecov[bot] rlouf wd60622 brandonwillard,28,True
584,1283,Add documentation for contributing to Aesara,dgerlanc,"Add a ""Contributing"" section in the `README.rst` and update `CONTRIBUTING.md`",documentation,rlouf brandonwillard,,2022-11-02 23:11:28,2022-11-10 05:48:18,CONTRIBUTING.md README.rst,9773227a409895bf9bee71f845ea418b3756d8f5,"dgerlanc review_requested 2022-11-02 23:11:28,dgerlanc review_requested 2022-11-02 23:11:28,brandonwillard labeled 2022-11-03 04:45:54,dgerlanc review_dismissed 2022-11-09 23:28:25,dgerlanc head_ref_force_pushed 2022-11-09 23:28:25,dgerlanc head_ref_force_pushed 2022-11-09 23:42:56,dgerlanc review_requested 2022-11-09 23:43:38,dgerlanc review_requested 2022-11-09 23:43:40,rlouf referenced 2022-11-10 05:48:17,rlouf merged 2022-11-10 05:48:17,rlouf closed 2022-11-10 05:48:18,dgerlanc head_ref_deleted 2022-11-10 15:46:52",dgerlanc rlouf brandonwillard,1,True
585,1284,Fix the JAX `RandomVariable` dispatcher,rlouf,"The JAX dispatcher for `RandomVariable` `Op`s is currently broken, testing is lacking and the shapes are not handled at all. 

- [x] Refactor the dispatcher to handle the API differences in JAX;
- [x] Handle the shape when specified as a constant, or the output of a `Shape` operator (two cases were the shape is a `ConcreteArray`); fail gracefully otherwise;
- [x] Register an implementation for `StudentTRV`
- [x] Add comprehensive test suite
    - [x] Every implementation needs to be tested;
    - [x] Add test where the `size` parameter is the (dynamic) shape of a tensor.
    - [x] Add test with implementation for custom `RandomVariable` definition 
- [x] Register implementation for `GumbelRV`
- [x] Register implementation for `StandardNormalRV`
- [x] Open an issue for each missing `RandomVariable` implementation
- [x] Rewrite `MakeVector` and `DimShuffle` when passed as `size` parameter",enhancement testing JAX important random variables,brandonwillard,,2022-11-03 21:56:14,2022-12-09 15:57:20,tests/link/jax/test_random.py aesara/tensor/random/rewriting/__init__.py aesara/compile/mode.py aesara/tensor/random/rewriting/basic.py tests/link/jax/test_basic.py aesara/tensor/random/rewriting/jax.py aesara/link/jax/dispatch/shape.py aesara/link/jax/dispatch/random.py,91cbc86bf9e3d3c924f6b91ee4b6ad147a8bec5d d3f44cdcc60dba5dfc003f81e8b4235a9711baa2 1211a2e60e00bb42c7c255db41e630468151c30f 155e089a1b60c28cf10c721a128cde092960c852 0cd4bc1a420339b25c8a1bd8dd23d294a48b3b6d 67de8846cdd68865617076cc38722039ba86fd3d 640e0f8b0815d4cf332836b938e18267f14ebbc8 e4090a90cf167be55d4d3313ff77f1979cee8dfb,"rlouf labeled 2022-11-03 21:56:14,rlouf labeled 2022-11-03 21:56:14,rlouf labeled 2022-11-03 21:56:14,rlouf labeled 2022-11-03 21:56:14,brandonwillard labeled 2022-11-03 22:06:59,rlouf head_ref_force_pushed 2022-11-30 12:33:35,rlouf head_ref_force_pushed 2022-12-01 15:27:33,rlouf head_ref_force_pushed 2022-12-01 15:28:11,rlouf head_ref_force_pushed 2022-12-01 16:50:29,rlouf head_ref_force_pushed 2022-12-02 15:03:40,rlouf head_ref_force_pushed 2022-12-02 15:06:47,rlouf head_ref_force_pushed 2022-12-02 15:50:20,rlouf head_ref_force_pushed 2022-12-02 16:06:00,rlouf ready_for_review 2022-12-02 21:08:40,rlouf convert_to_draft 2022-12-03 08:02:42,rlouf closed 2022-12-03 08:02:44,rlouf reopened 2022-12-03 08:03:06,rlouf head_ref_force_pushed 2022-12-03 19:43:18,rlouf head_ref_force_pushed 2022-12-04 18:42:52,rlouf head_ref_force_pushed 2022-12-04 19:32:04,rlouf head_ref_force_pushed 2022-12-04 19:38:19,rlouf ready_for_review 2022-12-04 19:38:49,rlouf head_ref_force_pushed 2022-12-05 07:04:08,rlouf head_ref_force_pushed 2022-12-05 09:47:37,rlouf head_ref_force_pushed 2022-12-05 17:12:20,rlouf head_ref_force_pushed 2022-12-06 13:44:00,rlouf head_ref_force_pushed 2022-12-07 09:51:33,rlouf head_ref_force_pushed 2022-12-07 09:57:44,rlouf head_ref_force_pushed 2022-12-07 10:08:12,brandonwillard head_ref_force_pushed 2022-12-08 21:25:55,brandonwillard head_ref_force_pushed 2022-12-08 21:32:27,rlouf head_ref_force_pushed 2022-12-09 08:55:21,rlouf referenced 2022-12-09 15:57:19,rlouf merged 2022-12-09 15:57:20,rlouf closed 2022-12-09 15:57:20,rlouf head_ref_deleted 2022-12-09 15:57:24",codecov[bot] rlouf brandonwillard,9,True
586,1285,Add a fusion rewrite for `CAReduce`s with `Elemwise` inputs,brandonwillard,"This PR adds fusion rewrites for `CAReduce` nodes with `Elemwise`-derived inputs.

- [x] Make the Python backend work for the `Composite` `Op`s generated by this fusion
- [x] Do something about `CAReduceDtype`
    It's a fairly redundant subclass that probably should be merged with `CAReduce` anyway.
- [x] Add more/better tests
    - ~E.g. test the `axis` parameter~
- [x] Consider only performing the rewrite when not using the Python backend (for performance reasons)
- ~[ ] Support multiple inputs (optional)~
    This will require some refactoring of `CAReduce` or a new subclass and should be split off into its own issue/PR.  See https://github.com/aesara-devs/aesara/issues/1307.",graph rewriting performance concern,,brandonwillard,2022-11-04 22:37:41,2022-11-22 15:57:38,aesara/tensor/rewriting/elemwise.py tests/compile/test_mode.py aesara/tensor/elemwise.py aesara/tensor/math.py aesara/compile/function/pfunc.py aesara/compile/mode.py tests/compile/test_modes.py tests/tensor/test_elemwise.py tests/scalar/test_basic.py tests/tensor/rewriting/test_elemwise.py aesara/scalar/basic.py aesara/compile/function/types.py,c0e47340220c7a3f0f65bea97875e47b98238e67 2228ddc9b6f44f099234defd32bffc820fcd70a7 5b3a6c867ed2a3ceeb824c2d0119e77d54097eb1 4a4b084a301633442431a5b97ef86cf751f27ca3 91f343892ed0a5f24076997c72f2c2aa3f620ed4 57fba5c7d71a3cea35f521aea8a316c25cd50f50,"brandonwillard convert_to_draft 2022-11-04 22:38:35,brandonwillard labeled 2022-11-04 22:38:45,brandonwillard connected 2022-11-04 22:38:55,brandonwillard head_ref_force_pushed 2022-11-04 22:48:48,brandonwillard head_ref_force_pushed 2022-11-04 22:56:49,brandonwillard labeled 2022-11-05 17:37:08,brandonwillard head_ref_force_pushed 2022-11-06 00:47:01,brandonwillard head_ref_force_pushed 2022-11-06 00:52:22,brandonwillard head_ref_force_pushed 2022-11-06 05:00:16,brandonwillard head_ref_force_pushed 2022-11-06 05:04:09,brandonwillard head_ref_force_pushed 2022-11-06 05:18:12,brandonwillard head_ref_force_pushed 2022-11-06 14:50:09,brandonwillard head_ref_force_pushed 2022-11-06 18:17:19,brandonwillard head_ref_force_pushed 2022-11-11 23:55:12,brandonwillard assigned 2022-11-20 19:49:05,brandonwillard head_ref_force_pushed 2022-11-20 19:57:25,brandonwillard head_ref_force_pushed 2022-11-21 01:53:05,brandonwillard ready_for_review 2022-11-21 01:58:01,brandonwillard head_ref_force_pushed 2022-11-21 02:02:59,brandonwillard review_requested 2022-11-21 05:22:04,brandonwillard head_ref_force_pushed 2022-11-21 18:21:05,brandonwillard head_ref_force_pushed 2022-11-22 01:21:20,brandonwillard referenced 2022-11-22 15:57:38,brandonwillard merged 2022-11-22 15:57:38,brandonwillard closed 2022-11-22 15:57:38,brandonwillard head_ref_deleted 2022-11-22 15:57:42",codecov[bot] ricardoV94 brandonwillard,4,True
587,1288,Add Gaussian Hypergeometric Function `Hyp2F1`,ColtAllen,"This PR is in reference to https://github.com/aesara-devs/aesara/issues/1046 and adds `Op`s for `scipy.special.hyp2f1`, `scipy.special.poch`, and `scipy.special.factorial`. Currently all three are failing the `test_grad` tensor broadcasting tests in `aesara/tests/tensor/test_math_scipy.py`. Here are the results from `pytest`:

#### TestHyp2F1Broadcast & TestHyp2F1InplaceBroadcast
```
test_grad - ValueError: ('abs_err not finite', 'array([[nan, nan, nan],\\n       [nan, nan, nan]])', '
Test Elemwise{hyp2f1,no_inplace}::normal: Error occurred while computing the gradient on the following inputs:
[array([[764.16214925, 550.49823533, 542.19109217],\\n       [613.93532095, 341.6967123 , 284.38215306]]), 
array([[764.16214925, 550.49823533, 542.19109217],\\n       [613.93532095, 341.6967123 , 284.38215306]]), 
array([[764.16214925, 550.49823533, 542.19109217],\\n       [613.93532095, 341.6967123 , 284.38215306]]),
array([[0.76416215, 0.55049824, 0.54219109],\\n       [0.61393532, 0.34169671, 0.28438215]])]')
```

#### TestPochBroadcast & TestPochInplaceBroadcast
```
test_grad - aesara.gradient.GradientError: GradientError: numeric gradient and analytic gradient exceed tolerance:
E                       At position 1 of argument 0 with shape (2, 1),
E                           val1 = -130.220047      ,  val2 = 172.029567
E                           abs. error = 302.249614,  abs. tolerance = 0.050000
E                           rel. error = 1.000000,  rel. tolerance = 0.000100
E               Exception args: Test Elemwise{poch,no_inplace}::normal: Error occurred while computing the gradient on the following inputs: [array([[0.87809993],
E                      [0.8534127 ]]), array([[2.58322029],
E                      [4.84803489]])]
```

#### TestFactorialBroadcast & TestFactorialInplaceBroadcast 
```
test_grad - TypeError: ('verify_grad can work only with floating point inputs, but input 0 has dtype ""int64"".', 
'Test Elemwise{factorial,no_inplace}::int: 
Error occurred while computing the gradient on the following inputs: 
[array([[ 1,  6,  3],\\n       [10,  4,  2]])]')
```",SciPy compatibility Op implementation,brandonwillard,,2022-11-09 18:36:14,2023-01-30 21:49:50,aesara/tensor/math.py tests/tensor/test_special.py aesara/scalar/math.py aesara/tensor/special.py aesara/tensor/inplace.py tests/tensor/test_math_scipy.py,c6926900c54b439de8f62be1745adb02ccb3d459,"brandonwillard labeled 2022-11-09 19:11:22,brandonwillard connected 2022-11-10 20:36:10,brandonwillard labeled 2022-11-11 23:53:51,brandonwillard renamed 2022-11-13 22:05:07,brandonwillard head_ref_force_pushed 2022-11-23 02:08:09,brandonwillard ready_for_review 2022-11-23 02:08:39,brandonwillard head_ref_force_pushed 2022-11-23 02:17:54,brandonwillard head_ref_force_pushed 2022-11-23 02:27:05,ColtAllen mentioned 2023-01-01 23:11:30,ColtAllen subscribed 2023-01-01 23:11:30,brandonwillard mentioned 2023-01-02 13:57:25,brandonwillard subscribed 2023-01-02 13:57:25,brandonwillard head_ref_force_pushed 2023-01-18 20:47:57,brandonwillard head_ref_force_pushed 2023-01-18 20:56:21,brandonwillard head_ref_force_pushed 2023-01-18 23:27:49,brandonwillard head_ref_force_pushed 2023-01-30 20:19:53,brandonwillard auto_rebase_enabled 2023-01-30 20:19:58,brandonwillard referenced 2023-01-30 21:49:50,brandonwillard merged 2023-01-30 21:49:50,brandonwillard closed 2023-01-30 21:49:51",codecov[bot] brandonwillard ColtAllen,35,True
588,1291,Do not always remap storage in `fgraph_to_python`,brandonwillard,"This PR fixes an issue resulting from re-mapped storage cells in `fgraph_to_python`.  The issue was discovered in #1289 via `TestOpFromGraph.test_grad`.

Basic `OpFromGraph` support for Numba is added in this PR as well.

- [x] Write more direct/explicit tests",bug important Numba,,,2022-11-10 20:21:59,2022-11-11 05:26:59,aesara/link/utils.py aesara/link/numba/dispatch/scalar.py tests/link/numba/test_basic.py aesara/link/numba/dispatch/basic.py tests/link/test_utils.py,d56381e85e36c05d96e8c2fdc90ab93a5dce5a1d c9c7b799463abb97a2439d0bcce829c01baf74c7 d1af711bfeb75bfa4e9922b86626e2986e7d4a4c,"brandonwillard labeled 2022-11-10 20:22:19,brandonwillard labeled 2022-11-10 20:22:19,brandonwillard convert_to_draft 2022-11-10 20:22:21,brandonwillard head_ref_force_pushed 2022-11-10 20:22:33,brandonwillard head_ref_force_pushed 2022-11-10 22:35:38,brandonwillard renamed 2022-11-10 22:35:59,brandonwillard head_ref_force_pushed 2022-11-10 23:40:16,brandonwillard renamed 2022-11-10 23:40:44,brandonwillard head_ref_force_pushed 2022-11-11 00:14:59,brandonwillard labeled 2022-11-11 00:18:47,brandonwillard ready_for_review 2022-11-11 00:54:49,brandonwillard referenced 2022-11-11 05:26:59,brandonwillard merged 2022-11-11 05:26:59,brandonwillard closed 2022-11-11 05:26:59,brandonwillard head_ref_deleted 2022-11-11 05:27:03",codecov[bot] brandonwillard,1,True
589,1293,Update time.clock() to time.perf_counter() in documentation under tutorial/conditions,ntmkhanh,"With the issue #1292 
I have just modify time.clock() to time.perf_counter():
![image](https://user-images.githubusercontent.com/106447791/201286522-364681c0-c642-4aeb-a185-12436033df5a.png)

Hope it can help you.


**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",documentation refactor,brandonwillard,,2022-11-11 07:15:18,2022-11-11 17:35:22,doc/tutorial/conditions.rst,3da5ad743bd0648119edaa2cb11c4eb22c6ca852,"ntmkhanh closed 2022-11-11 12:23:48,ntmkhanh reopened 2022-11-11 12:24:22,brandonwillard connected 2022-11-11 17:34:24,brandonwillard labeled 2022-11-11 17:34:39,brandonwillard labeled 2022-11-11 17:34:39,brandonwillard referenced 2022-11-11 17:35:21,brandonwillard merged 2022-11-11 17:35:21,brandonwillard closed 2022-11-11 17:35:22",ntmkhanh brandonwillard,0,True
590,1296,Add `kwargs` to `aesara.graph.basic.clone_get_equiv`,brandonwillard,This allows one to specify the options passed to `Apply.clone_with_new_inputs`.,,rlouf,,2022-11-12 02:06:43,2022-11-12 08:50:11,aesara/graph/basic.py,ca56923c545e0ec20546a79877c6b46fe888f4b7,"brandonwillard referenced 2022-11-12 08:50:11,brandonwillard merged 2022-11-12 08:50:11,brandonwillard closed 2022-11-12 08:50:11,brandonwillard head_ref_deleted 2022-11-12 08:50:15",codecov[bot] rlouf brandonwillard,1,True
591,1297,Replace some uses of `TensorType.broadcastable` with `TensorType.shape`,brandonwillard,"This PR contains important and independent `TensorType.shape` refactoring from #1280.  Aside from superficial `TensorType.broadcastable`-to-`TensorType.shape` refactoring, these changes contain improvements to our static `Type`-level shape inference capabilities.",important shape inference,,brandonwillard,2022-11-14 23:25:58,2022-11-15 20:38:00,aesara/sandbox/multinomial.py aesara/tensor/shape.py doc/extending/creating_a_numba_jax_op.rst tests/compile/test_builders.py tests/link/jax/test_elemwise.py tests/sparse/test_basic.py tests/tensor/test_var.py tests/tensor/signal/test_conv.py aesara/tensor/rewriting/basic.py tests/scan/test_printing.py aesara/tensor/slinalg.py aesara/tensor/rewriting/shape.py aesara/tensor/extra_ops.py tests/typed_list/test_basic.py tests/tensor/utils.py aesara/tensor/blas.py tests/tensor/test_blas_c.py tests/tensor/test_shape.py tests/tensor/nnet/test_batchnorm.py doc/library/tensor/basic.rst tests/tensor/rewriting/test_math.py aesara/tensor/fourier.py tests/tensor/random/test_utils.py tests/tensor/test_sort.py tests/tensor/rewriting/test_basic.py tests/tensor/nnet/test_abstract_conv.py aesara/sparse/basic.py aesara/tensor/io.py doc/extending/graphstructures.rst aesara/tensor/type.py tests/tensor/random/test_op.py tests/tensor/test_io.py aesara/tensor/subtensor.py tests/tensor/nnet/speed_test_conv.py aesara/tensor/sort.py aesara/tensor/nnet/conv.py aesara/tensor/elemwise.py tests/tensor/test_subtensor.py doc/library/scan.rst aesara/tensor/nnet/corr3d.py tests/tensor/test_type.py aesara/sparse/rewriting.py tests/tensor/test_elemwise.py aesara/gradient.py tests/link/c/test_type.py doc/extending/type.rst tests/tensor/rewriting/test_shape.py aesara/tensor/math.py tests/tensor/test_math.py tests/tensor/test_blas_scipy.py tests/graph/rewriting/test_unify.py aesara/tensor/__init__.py aesara/tensor/nnet/basic.py tests/typed_list/test_type.py tests/link/numba/test_elemwise.py aesara/compile/debugmode.py aesara/tensor/signal/pool.py tests/link/c/test_params_type.py tests/tensor/rewriting/test_elemwise.py tests/link/numba/test_random.py tests/compile/test_debugmode.py tests/compile/test_shared.py aesara/sparse/sandbox/sp.py tests/tensor/random/test_basic.py aesara/link/c/params_type.py aesara/tensor/nnet/abstract_conv.py tests/tensor/test_slinalg.py tests/tensor/test_blas.py aesara/tensor/fft.py tests/tensor/test_basic.py doc/extending/extending_aesara_solution_1.py aesara/tensor/sharedvar.py tests/tensor/signal/test_pool.py tests/test_printing.py aesara/tensor/nnet/corr.py tests/tensor/rewriting/test_uncanonicalize.py doc/extending/creating_a_c_op.rst aesara/sandbox/rng_mrg.py tests/tensor/rewriting/test_subtensor.py tests/tensor/test_extra_ops.py tests/tensor/test_sharedvar.py aesara/tensor/basic.py tests/tensor/test_casting.py doc/tutorial/debug_faq.rst tests/typed_list/test_rewriting.py,a5802c004ffffa5510214f75b8b1ec3d2eeed5b6 3c67cd3def3d3089f506c3edcbeb63f112923676 9e36ce83ab0c10bd03f2bf51a715cd9cdd4c6e42 9f088f8f24e80e71bfccfbecf194c69d91413176 cc44170f5b6de4cb4b2bab2686315ca76b0be1d1 75274ef4f6e3a530771942971d4a86b72ff6f35a bfe2c14891985bdfd12d455647bf70e3b979d664 ecdc779de58e1d871323f527b09a76ac1a9c2ca9 e3b528b91055d7343030a8a68f5fb1948ab26d7e 294b0b83db2571d57fca4a907beb0ed4eaa4a2ef 230902e42e0fbde70726d269a2f7eebdc579c0b9 5da147669ae933aaa63d78349101d596d25cc9fe,"brandonwillard renamed 2022-11-14 23:26:57,brandonwillard assigned 2022-11-14 23:26:59,brandonwillard labeled 2022-11-14 23:27:05,brandonwillard labeled 2022-11-14 23:27:05,brandonwillard review_requested 2022-11-14 23:27:10,brandonwillard head_ref_force_pushed 2022-11-15 19:27:36,brandonwillard referenced 2022-11-15 20:38:00,brandonwillard merged 2022-11-15 20:38:00,brandonwillard closed 2022-11-15 20:38:00,brandonwillard head_ref_deleted 2022-11-15 20:38:03",codecov[bot] brandonwillard,1,True
592,1298,Make `as_symbolic` work with sparse matrices,brandonwillard,This PR adds sparse matrix conversion support to `aesara.as_symbolic`.,enhancement sparse tensors,,brandonwillard,2022-11-15 19:56:57,2022-11-15 23:41:03,aesara/sparse/basic.py,46bdc59085ef9e9e684dcefd2a28451dd0112f90,"brandonwillard labeled 2022-11-15 19:57:30,brandonwillard labeled 2022-11-15 19:57:30,brandonwillard assigned 2022-11-15 19:57:32,brandonwillard referenced 2022-11-15 23:41:03,brandonwillard merged 2022-11-15 23:41:03,brandonwillard closed 2022-11-15 23:41:03,brandonwillard head_ref_deleted 2022-11-15 23:41:07",brandonwillard,0,True
593,1299,Use `numba.jit` to create Numba functions,brandonwillard,"This PR attempts to broaden Numba support by using the object-mode fallback provided by `numba.jit`.

Closes #1294",important Numba,,brandonwillard,2022-11-15 20:23:47,2023-01-30 20:17:41,aesara/link/numba/dispatch/scan.py aesara/link/numba/dispatch/extra_ops.py aesara/link/numba/dispatch/tensor_basic.py tests/link/numba/test_basic.py aesara/link/numba/linker.py aesara/link/numba/dispatch/__init__.py aesara/link/numba/dispatch/elemwise.py aesara/link/numba/dispatch/nlinalg.py aesara/link/numba/dispatch/basic.py aesara/link/numba/dispatch/random.py aesara/link/numba/dispatch/scalar.py,63943c0edf58ce8059dd2dc7b0f2cdcda1ce4f6a,"brandonwillard assigned 2022-11-15 20:23:56,brandonwillard labeled 2022-11-15 20:24:11,brandonwillard labeled 2022-11-15 20:24:11,brandonwillard milestoned 2022-11-15 20:24:17,brandonwillard convert_to_draft 2022-11-15 20:29:13,brandonwillard head_ref_force_pushed 2022-11-20 19:44:41,brandonwillard head_ref_force_pushed 2022-11-21 02:10:02,brandonwillard head_ref_force_pushed 2022-11-22 21:23:10,brandonwillard head_ref_force_pushed 2022-12-02 00:43:59,brandonwillard closed 2023-01-30 20:17:42",codecov[bot] brandonwillard,1,False
594,1300,Update codecov-action version,brandonwillard,This PR is an update to our Codecov Action in response to some recent token failures.,bug CI,,,2022-11-15 22:59:02,2022-11-16 02:16:18,.github/workflows/test.yml,e212ce81f8c4cc0f721905225c8f52d5118fe474,"brandonwillard labeled 2022-11-15 22:59:36,brandonwillard labeled 2022-11-15 22:59:36,brandonwillard referenced 2022-11-16 02:16:18,brandonwillard merged 2022-11-16 02:16:18,brandonwillard closed 2022-11-16 02:16:19,brandonwillard head_ref_deleted 2022-11-16 02:16:21",codecov[bot] brandonwillard,1,True
595,1302,Remove `CholeskyGrad` Op,sudarsan2k5,"Fixes #1098 

This PR removes `CholeskyGrad` Op and all the tests related to it.


Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.
",refactor,rlouf brandonwillard,,2022-11-17 07:35:35,2022-11-24 11:25:21,tests/tensor/test_slinalg.py aesara/tensor/slinalg.py,aed5f935154e1808959fc94a9abdcf1d4f29d081,"brandonwillard labeled 2022-11-17 16:22:36,brandonwillard head_ref_force_pushed 2022-11-20 19:46:00,brandonwillard review_dismissed 2022-11-21 02:02:06,sudarsan2k5 head_ref_force_pushed 2022-11-21 16:38:31,rlouf head_ref_force_pushed 2022-11-24 10:20:34,rlouf referenced 2022-11-24 11:25:20,rlouf merged 2022-11-24 11:25:20,rlouf closed 2022-11-24 11:25:21",codecov[bot] rlouf sudarsan2k5 brandonwillard,3,True
596,1305,Refactor `SharedVariable` and its interfaces,brandonwillard,"This PR contains the following changes to `SharedVariable` and related machinery:
- Use `singledispatch` to register type constructors
  - This removes some unnecessary redundancy and complexity.
- Make `SharedVariable.default_update` a fixed property that defaults to `None`
  - This makes the interface clearer and its usage simpler.
- Automatically perform `Type` checking and conversion when assigning to `SharedVariable.default_update`
  - This will help identify `update`s-related problems _much_ earlier.
- Misc. docstring and error message updates",refactor,,brandonwillard,2022-11-20 02:04:08,2022-11-21 02:02:04,tests/compile/function/test_pfunc.py aesara/sparse/sharedvar.py aesara/tensor/sharedvar.py aesara/scan/basic.py doc/library/compile/shared.rst aesara/compile/sharedvalue.py tests/sparse/test_sparse.py aesara/compile/function/pfunc.py aesara/tensor/random/var.py tests/tensor/test_sharedvar.py tests/sparse/test_sharedvar.py tests/scan/test_basic.py,400013ebb8edc47ae4c128a24312411560818c28 3eff92f9eb9f27a47753401f8c94966764ac7b59 65c6faf50e2a1e3f4a4f0dca30bfbb7102c786aa 33a09cc1348cffe0f583c1859a0ee6cb499ecbf6,"brandonwillard assigned 2022-11-20 02:57:06,brandonwillard convert_to_draft 2022-11-20 02:57:09,brandonwillard labeled 2022-11-20 02:57:21,brandonwillard milestoned 2022-11-20 02:57:27,brandonwillard head_ref_force_pushed 2022-11-20 03:02:55,brandonwillard head_ref_force_pushed 2022-11-20 06:07:04,brandonwillard head_ref_force_pushed 2022-11-20 19:42:31,brandonwillard ready_for_review 2022-11-20 19:42:58,brandonwillard renamed 2022-11-20 19:43:11,brandonwillard referenced 2022-11-21 02:02:04,brandonwillard merged 2022-11-21 02:02:04,brandonwillard closed 2022-11-21 02:02:04,brandonwillard head_ref_deleted 2022-11-21 02:02:07",codecov[bot] brandonwillard,1,True
597,1306,Remove redundant `graph_inputs` usage in `OpFromGraph`,brandonwillard,"This PR removes a redundant walk through the graph.

There are a few more important improvements needed in the `OpFromGraph` constructor.  I may add them here.",enhancement refactor performance concern,,,2022-11-20 03:08:41,2022-11-20 19:44:02,aesara/scan/op.py tests/scan/test_basic.py aesara/compile/builders.py,99650353741dafd09a390ae9bd4fa4ee64da8ca8 905b2b21b8ea890b2ed9d9bf559d9e36066b196f 7b00c825d99f553192ce5765c2a5b2971d6128df,"brandonwillard labeled 2022-11-20 05:23:27,brandonwillard labeled 2022-11-20 05:23:27,brandonwillard labeled 2022-11-20 05:23:27,brandonwillard referenced 2022-11-20 19:44:02,brandonwillard merged 2022-11-20 19:44:02,brandonwillard closed 2022-11-20 19:44:02,brandonwillard head_ref_deleted 2022-11-20 19:44:05",codecov[bot] brandonwillard,1,True
598,1309,Removes redundant dependencies from environment.yml,j0ker70,"[Issue] #1308 
[Problem] As mentioned in #960, there are some redundant dependencies in the environment.yml file
[Solution] Removed the redundant dependencies(e.g. black, isort, flake8, pep8 and pyflakes)",,,,2022-11-21 20:17:44,2022-11-22 04:08:22,environment.yml,15ae1573e67ab921855ac50ad752e65a10c6c421,"brandonwillard referenced 2022-11-22 04:08:22,brandonwillard merged 2022-11-22 04:08:22,brandonwillard closed 2022-11-22 04:08:22,j0ker70 mentioned 2022-11-22 04:09:02,j0ker70 subscribed 2022-11-22 04:09:02,brandonwillard connected 2022-11-22 04:09:42",j0ker70 brandonwillard,1,True
599,1311,Fixing link appearances in README,larryshamalama,"I just realized that some links in the ""**Contributing**"" section of the Aesara README don't look *as* aesthetic due to formatting. This simple PR fixes such instances in the file.",,rlouf,,2022-11-23 05:00:07,2022-11-23 06:12:49,README.rst,515fd84fa6e17dee624df204dc0ebf726b2bb8d7,"rlouf referenced 2022-11-23 06:12:49,rlouf merged 2022-11-23 06:12:49,rlouf closed 2022-11-23 06:12:49",larryshamalama rlouf,0,True
600,1312,Replace time.time with time.perf_counter,redbopo,"close https://github.com/aesara-devs/aesara/issues/1276

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [ ] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement refactor tooling,rlouf,,2022-11-23 17:40:39,2022-11-25 03:34:13,aesara/misc/check_blas.py aesara/graph/features.py aesara/link/c/cmodule.py tests/sparse/sandbox/test_sp.py tests/sandbox/test_rng_mrg.py aesara/gradient.py aesara/graph/rewriting/basic.py aesara/link/vm.py aesara/tensor/rewriting/elemwise.py tests/sparse/test_basic.py tests/tensor/nnet/speed_test_conv.py aesara/graph/fg.py aesara/compile/profiling.py tests/tensor/nnet/test_conv3d2d.py tests/link/test_vm.py aesara/scan/op.py aesara/tensor/blas.py aesara/misc/latence_gpu_transfert.py tests/tensor/test_gc.py aesara/misc/elemwise_time_test.py tests/tensor/rewriting/test_math.py tests/tensor/nnet/test_conv.py,2bd953bdb7175672c946debb70b7fcfd93a6d5da 00b2aadf1b7bfd5266bcd7ebc3385f4be5058154,"brandonwillard labeled 2022-11-25 03:33:26,brandonwillard labeled 2022-11-25 03:33:26,brandonwillard labeled 2022-11-25 03:33:26,brandonwillard referenced 2022-11-25 03:34:13,brandonwillard merged 2022-11-25 03:34:13,brandonwillard closed 2022-11-25 03:34:13,redbopo mentioned 2022-11-25 03:34:23,redbopo subscribed 2022-11-25 03:34:23,redbopo head_ref_deleted 2022-12-05 15:26:02",codecov[bot] rlouf brandonwillard redbopo,3,True
601,1313,Type hint of `specify_shape` does not allow for None in shape,sudarsan2k5,"fixes #1164
Updated `specify_shape` type hint , allowed None in shape 


Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.",typing,brandonwillard,,2022-11-24 19:51:17,2022-11-27 15:22:27,aesara/tensor/shape.py,dff0acaa14a0c44a012087e2c50456fc639c4257,"brandonwillard head_ref_force_pushed 2022-11-25 00:31:42,brandonwillard labeled 2022-11-25 00:41:06,brandonwillard review_dismissed 2022-11-25 01:46:58,brandonwillard head_ref_force_pushed 2022-11-25 01:46:58,brandonwillard head_ref_force_pushed 2022-11-25 01:51:44,rlouf referenced 2022-11-27 15:22:27,rlouf merged 2022-11-27 15:22:27,rlouf closed 2022-11-27 15:22:28",codecov[bot] rlouf sudarsan2k5 brandonwillard,2,True
602,1315,Fix bug on macOS from pickling a closure,dgerlanc,Resolves: #1314,bug testing C-backend MacOS,,,2022-11-27 20:48:03,2023-03-16 21:06:31,tests/link/c/test_cmodule.py,3eb3375e6bc07488d2f2e13c4a82f08213c566ee,"dgerlanc head_ref_force_pushed 2022-11-29 02:25:35,brandonwillard labeled 2022-12-06 22:50:17,brandonwillard labeled 2022-12-06 22:51:05,brandonwillard labeled 2022-12-06 22:51:10,brandonwillard labeled 2022-12-06 22:51:19,dgerlanc head_ref_force_pushed 2023-02-17 02:08:23,dgerlanc head_ref_force_pushed 2023-02-18 14:51:32,dgerlanc closed 2023-03-16 21:06:31",codecov[bot] dgerlanc brandonwillard,2,False
603,1317,Refactor Numba dispatching and interfaces,brandonwillard,"This PR clarifies some of the dispatch interfaces for the Numba transpilation code, by&mdash;for instance&mdash;making it possible to customize Numba signature construction based on Aesara `Type`s.  It also introduces some necessary updates for the use of more recent Numba versions.",important refactor Numba,,,2022-11-29 06:47:08,2022-12-01 21:26:17,aesara/link/utils.py aesara/link/numba/dispatch/scan.py aesara/link/numba/dispatch/extra_ops.py aesara/link/numba/dispatch/tensor_basic.py doc/extending/creating_a_numba_jax_op.rst aesara/link/jax/dispatch/basic.py aesara/link/numba/linker.py aesara/link/numba/dispatch/__init__.py tests/link/numba/test_basic.py aesara/link/numba/dispatch/elemwise.py aesara/link/numba/dispatch/nlinalg.py aesara/link/numba/dispatch/basic.py aesara/link/numba/dispatch/random.py aesara/link/numba/dispatch/scalar.py,92c3e01495d406a3f98a50fb8bc907005425b580 94a0430782fdd767c7435ab3bc892d68ab82fa5c aaa64751aafab2420318bb1157a6c9785de7ac41 808731b811111c524cb7fcf40b88c000925561fa fab987f579f235af519cd655e7a65bdc504a8372 43304c85965421af1f7fba16e03561f8ef4f6768,"brandonwillard convert_to_draft 2022-11-29 06:47:21,brandonwillard labeled 2022-11-29 06:47:42,brandonwillard labeled 2022-11-29 06:47:42,brandonwillard head_ref_force_pushed 2022-11-29 06:48:02,brandonwillard head_ref_force_pushed 2022-12-01 00:05:23,brandonwillard head_ref_force_pushed 2022-12-01 00:20:25,brandonwillard head_ref_force_pushed 2022-12-01 00:24:58,brandonwillard head_ref_force_pushed 2022-12-01 18:08:26,brandonwillard renamed 2022-12-01 18:46:55,brandonwillard ready_for_review 2022-12-01 18:51:46,brandonwillard review_requested 2022-12-01 19:01:12,brandonwillard labeled 2022-12-01 19:14:13,brandonwillard referenced 2022-12-01 21:26:17,brandonwillard merged 2022-12-01 21:26:17,brandonwillard closed 2022-12-01 21:26:17,brandonwillard head_ref_deleted 2022-12-01 21:26:21",codecov[bot] brandonwillard,1,True
604,1320,Fix Argument name,twiecki,"Upstreaming https://github.com/pymc-devs/pytensor/pull/67.

renamed f_node to f_apply
corrected doc string
verified all the related tests

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",invalid wontfix,,,2022-11-30 18:28:10,2022-12-06 23:03:37,aesara/graph/basic.py,b6aa33162e944c857f548d9320405628e4ddac6a,"brandonwillard closed 2022-12-06 23:03:37,pymc-devs mentioned 2022-12-06 23:03:38,pymc-labs mentioned 2022-12-06 23:03:38,brandonwillard labeled 2022-12-06 23:05:08,brandonwillard labeled 2022-12-06 23:05:08,aesara-devs locked 2022-12-06 23:07:32",aesara-devs codecov[bot] brandonwillard pymc-devs pymc-labs twiecki,2,False
605,1336,Add basic support for SciPy CSC and CSR sparse types in Numba,brandonwillard,"This PR adds support for SciPy sparse matrix types to Numba.  Currently, only boxing and unboxing of CSC and CSR types are supported.

This is the start of #658.

- [x] Finish the boxing implementation",enhancement important Numba sparse tensors,,brandonwillard,2022-12-06 01:46:53,2022-12-07 01:16:29,aesara/link/vm.py aesara/link/numba/dispatch/sparse.py tests/link/numba/test_sparse.py aesara/scan/op.py .pre-commit-config.yaml aesara/link/numba/dispatch/__init__.py aesara/link/numba/dispatch/basic.py,96c4125d4efab134855062e85dea22988900d1b2 4dfd74d271f86482436c92497a6b37cc22fef3c0,"brandonwillard assigned 2022-12-06 01:47:24,brandonwillard review_requested 2022-12-06 01:47:26,brandonwillard convert_to_draft 2022-12-06 01:47:30,brandonwillard labeled 2022-12-06 01:48:49,brandonwillard labeled 2022-12-06 01:48:49,brandonwillard labeled 2022-12-06 01:48:55,brandonwillard head_ref_force_pushed 2022-12-06 18:39:32,brandonwillard ready_for_review 2022-12-06 18:39:55,brandonwillard renamed 2022-12-06 18:40:18,brandonwillard head_ref_force_pushed 2022-12-06 19:28:24,brandonwillard referenced 2022-12-07 01:16:29,brandonwillard merged 2022-12-07 01:16:29,brandonwillard closed 2022-12-07 01:16:30,brandonwillard head_ref_deleted 2022-12-07 01:16:34,dgerlanc subscribed 2022-12-07 01:22:29,brandonwillard subscribed 2022-12-07 01:22:29,rlouf subscribed 2022-12-07 01:22:29,kc611 subscribed 2022-12-07 01:22:29,brandonwillard labeled 2022-12-07 01:36:09",rlouf codecov[bot] kc611 brandonwillard dgerlanc,2,True
606,1337,Add basic overloads for Numba sparse types,brandonwillard,"This PR adds some basic overloads for Numba sparse types (e.g. `np.shape`, `.ndim`, etc.)  This is a follow-up to https://github.com/aesara-devs/aesara/pull/1336.

- [x] Implement `np.shape`
- [x] Implement `.ndim`
- [x] Implement `.copy`",enhancement Numba sparse tensors,,,2022-12-07 01:35:30,2022-12-08 20:21:03,aesara/link/numba/dispatch/sparse.py tests/link/numba/test_sparse.py tests/link/numba/test_basic.py aesara/link/numba/linker.py aesara/link/numba/dispatch/basic.py,86bf1822f85f2cab9ed046d457d8f638fcf0215c e78be816b430f70ce0ab64c9597388240ea727fe 29fdf7cd94747f79033045dc37b76aa385f2cd8d dec28ca76a9da5e85ef09ade46b828f8d4eeb5cd 4de8dae0e013cd486013aa362030604a23d9cac8,"brandonwillard convert_to_draft 2022-12-07 01:35:42,brandonwillard labeled 2022-12-07 01:35:55,brandonwillard labeled 2022-12-07 01:35:55,brandonwillard head_ref_force_pushed 2022-12-07 22:38:38,brandonwillard head_ref_force_pushed 2022-12-07 23:27:20,brandonwillard head_ref_force_pushed 2022-12-07 23:32:13,brandonwillard head_ref_force_pushed 2022-12-07 23:56:18,brandonwillard head_ref_force_pushed 2022-12-08 00:46:56,brandonwillard head_ref_force_pushed 2022-12-08 01:28:38,brandonwillard head_ref_force_pushed 2022-12-08 01:45:44,brandonwillard ready_for_review 2022-12-08 04:24:09,brandonwillard review_requested 2022-12-08 04:24:38,brandonwillard review_requested 2022-12-08 04:24:39,brandonwillard review_requested 2022-12-08 04:24:39,brandonwillard labeled 2022-12-08 04:24:52,brandonwillard referenced 2022-12-08 20:21:03,brandonwillard merged 2022-12-08 20:21:03,brandonwillard closed 2022-12-08 20:21:03,brandonwillard head_ref_deleted 2022-12-08 20:21:06",codecov[bot] brandonwillard,1,True
607,1338,Fix the JAX `Subtensor` and `IncSubtensor` dispatcher,rlouf,"In this PR I fix the outstanding issues with the `Subtensor` and `IncSubtensor` dispatchers in the JAX backend, and a few other things that came up in #1202.

- Boolean mask arrays are not supported in JAX, except for some re-expressible logic that we should support via JAX-specific rewrites.
- Constant indexing should be hard-coded in the JAX transpiled function;
- Dynamic indexing is alllowed but should use `jax.lax.dynamic_slice`

### Progress

- [x] Raise when using boolean mask arrays
- [x] Rewrites for boolean logic that can be expressed in a JIT-compilable way (waiting for #1284)
- [x] Hardcode constant `start`, `stop`, `step` in `ARange`, raise if dynamic
- [x] Raise in `Subtensor` if slicing with dynamic length;
- [x] Dispatch `Elemwise` operations on scalar values to Python operators
- [x] Fix `IncSubtensor`
- [x] Use `jax.numpy.copy` directly
- [x] Implement `TensorFromScalar` as a pass-through
       This one requires more thoughts on scalars in JAX vs scalars in Aesara.
- [x] Refactor the `Reshape` implementation to make sure the `shape` parameter is passed concrete values (waiting for #1284)
- [x] ~~Allow combination of concrete values using Python operators as `shape` and `size` arguments (we may need a rewrite and custom Ops like `JAXPythonAdd` to make this easier).~~ They already are


This is a spinoff of #1202.",enhancement JAX,brandonwillard,,2022-12-07 11:20:00,2022-12-14 16:14:23,tests/link/jax/test_subtensor.py aesara/tensor/rewriting/jax.py aesara/link/jax/dispatch/basic.py aesara/link/jax/dispatch/elemwise.py aesara/link/jax/dispatch/scalar.py aesara/link/jax/dispatch/tensor_basic.py aesara/link/jax/dispatch/test_subtensor.py aesara/tensor/rewriting/__init__.py tests/link/jax/test_shape.py tests/link/jax/test_basic.py aesara/link/jax/dispatch/shape.py aesara/link/jax/dispatch/subtensor.py tests/link/jax/test_scalar.py tests/link/jax/test_tensor_basic.py,65917929742d0ddc934066216df41cee3f37b8f0 60fbdad5ca50d76ab92bbe234322cdf9d685f357 3ddde9454acfe6b9b9923cdc0ea476585c84a920 9cc0c286ff0e4d5a47ea6d49843f1d7467192b7d e5f959eb7dfe09f8c39bde951cacb4b399c8ae07 78d2dbf3721b9a5ec597d1907dcfb24694692e51 0202f6b901fbdfbe68632e450f2da50b389a6660 173e49a572cf2cae3b51080e0f55ece7f346f6b8 81816858b712e321b0489f312d38b6a148a01bbe c01a0f394ea56e66361a4a3ac70289ff199702c9 72930c925f45b943ad7a8f3ce96dc706cd8e22e4 e09919879dc7ce39ec74e9cee198341e7654db1d f9159e7940c445a930dee2c8e6c4fc027f8b8fc1 7fb2ba16c2232aba31d42ffe402424d8f251e0bd,"rlouf labeled 2022-12-07 11:20:00,rlouf labeled 2022-12-07 11:20:00,rlouf head_ref_force_pushed 2022-12-07 14:22:23,rlouf head_ref_force_pushed 2022-12-07 14:37:40,rlouf head_ref_force_pushed 2022-12-07 14:39:52,rlouf head_ref_force_pushed 2022-12-07 16:08:35,rlouf head_ref_force_pushed 2022-12-07 16:16:50,rlouf head_ref_force_pushed 2022-12-08 08:19:34,rlouf head_ref_force_pushed 2022-12-08 08:31:24,rlouf head_ref_force_pushed 2022-12-08 15:12:51,brandonwillard review_requested 2022-12-08 21:58:23,rlouf review_dismissed 2022-12-09 09:01:33,rlouf head_ref_force_pushed 2022-12-09 09:01:33,rlouf head_ref_force_pushed 2022-12-12 12:02:10,rlouf head_ref_force_pushed 2022-12-12 15:10:05,brandonwillard mentioned 2022-12-12 15:15:21,brandonwillard subscribed 2022-12-12 15:15:21,brandonwillard mentioned 2022-12-13 05:02:32,brandonwillard subscribed 2022-12-13 05:02:32,brandonwillard head_ref_force_pushed 2022-12-13 05:06:48,rlouf head_ref_force_pushed 2022-12-14 09:56:03,rlouf head_ref_force_pushed 2022-12-14 12:04:37,rlouf head_ref_force_pushed 2022-12-14 13:00:53,rlouf head_ref_force_pushed 2022-12-14 13:16:47,rlouf head_ref_force_pushed 2022-12-14 13:20:29,rlouf head_ref_force_pushed 2022-12-14 13:51:09,rlouf head_ref_force_pushed 2022-12-14 14:15:23,rlouf referenced 2022-12-14 16:14:23,rlouf merged 2022-12-14 16:14:23,rlouf closed 2022-12-14 16:14:24,rlouf head_ref_deleted 2022-12-14 16:14:33",codecov[bot] rlouf brandonwillard,8,True
608,1340,Add mission statement,dgerlanc,"Resolves: #1339

Co-authored-by: Brandon Willard <brandonwillard@users.noreply.github.com>
Co-authored-by: Rémi Louf <rlouf@users.noreply.github.com>",documentation important,rlouf brandonwillard,dgerlanc,2022-12-07 17:26:49,2022-12-07 21:31:53,README.rst doc/mission.rst,e38a2663a9e081ae3fb585ea982d061c7da372f3,"dgerlanc review_requested 2022-12-07 17:26:49,dgerlanc review_requested 2022-12-07 17:26:49,dgerlanc head_ref_force_pushed 2022-12-07 17:27:30,brandonwillard review_dismissed 2022-12-07 18:27:38,brandonwillard head_ref_force_pushed 2022-12-07 20:25:02,brandonwillard labeled 2022-12-07 20:25:28,brandonwillard labeled 2022-12-07 20:25:28,brandonwillard review_requested 2022-12-07 20:27:37,dgerlanc assigned 2022-12-07 20:27:51,dgerlanc referenced 2022-12-07 21:31:53,dgerlanc merged 2022-12-07 21:31:53,dgerlanc closed 2022-12-07 21:31:54",dgerlanc rlouf brandonwillard,2,True
609,1343,Support read-only Numba types,brandonwillard,"This PR adds support for read-only types via our loosely established `Variable.tag.indestructible` flag.

This PR also closes #1221 by simply ignoring those errors and disabling `warn_unused_ignores` for that specific module.",bug Numba,,brandonwillard,2022-12-09 01:53:13,2022-12-09 03:52:10,aesara/link/numba/dispatch/sparse.py aesara/link/numba/dispatch/extra_ops.py aesara/scan/op.py setup.cfg tests/link/numba/test_basic.py tests/link/numba/test_elemwise.py aesara/link/numba/dispatch/nlinalg.py aesara/link/numba/dispatch/basic.py,53b6c185bb5459511dd957e04e0f70ee49ad79c1 4a8c1cfd598671c92362e052d37244748fd0e9ad,"brandonwillard labeled 2022-12-09 01:53:35,brandonwillard labeled 2022-12-09 01:53:35,brandonwillard assigned 2022-12-09 01:53:38,brandonwillard head_ref_force_pushed 2022-12-09 01:56:36,brandonwillard head_ref_force_pushed 2022-12-09 02:09:53,brandonwillard referenced 2022-12-09 03:52:10,brandonwillard merged 2022-12-09 03:52:10,brandonwillard closed 2022-12-09 03:52:10,brandonwillard head_ref_deleted 2022-12-09 03:52:13",codecov[bot] brandonwillard,1,True
610,1345,Splitting before using JAX key,AdrienCorenflos,"This closes https://github.com/aesara-devs/aesara/issues/1344
As discussed offline with @rlouf at the moment the jax splitting logic relies on knowing the internals on the splitting and doesn't follow the JAX best practices. This PR fixes this.


Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [X] There are tests covering the changes introduced in the PR.

",JAX random variables,rlouf,,2022-12-09 18:10:25,2022-12-13 14:08:00,tests/link/jax/test_random.py aesara/link/jax/dispatch/random.py,c934b4cbef34bd884452cd6459e12d0bd44bf95e 16b50ba5d896d92563ec9d9d2c9e682f0e47cfa6,"rlouf mentioned 2022-12-09 18:10:25,rlouf subscribed 2022-12-09 18:10:26,brandonwillard review_requested 2022-12-09 18:22:25,brandonwillard labeled 2022-12-09 18:22:33,brandonwillard labeled 2022-12-09 18:22:45,AdrienCorenflos head_ref_force_pushed 2022-12-13 12:37:44,rlouf mentioned 2022-12-13 12:37:51,rlouf subscribed 2022-12-13 12:37:51,rlouf head_ref_force_pushed 2022-12-13 13:02:40,rlouf referenced 2022-12-13 14:08:00,rlouf merged 2022-12-13 14:08:00,rlouf closed 2022-12-13 14:08:00",codecov[bot] rlouf AdrienCorenflos brandonwillard,4,True
611,1346,Add JAX implementation for `LogNormalRV`,juanitorduz,"Closes: https://github.com/aesara-devs/aesara/issues/1325

References:

- https://stats.stackexchange.com/questions/110961/sampling-from-a-lognormal-distribution
- https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.lognorm.html",JAX random variables,rlouf brandonwillard,,2022-12-09 19:53:57,2022-12-10 09:53:08,tests/link/jax/test_random.py aesara/link/jax/dispatch/random.py,8d3089d776ee5e3a1b2fa6e34c71e39a4dc07cf9,"brandonwillard review_requested 2022-12-09 20:12:43,brandonwillard labeled 2022-12-09 20:12:56,brandonwillard labeled 2022-12-09 20:12:56,rlouf renamed 2022-12-09 20:40:44,rlouf referenced 2022-12-10 09:53:08,rlouf merged 2022-12-10 09:53:08,rlouf closed 2022-12-10 09:53:08,juanitorduz head_ref_deleted 2022-12-10 11:17:06",codecov[bot] rlouf juanitorduz brandonwillard,4,True
612,1347,Add CI support for benchmarking,brandonwillard,"This PR adds support for automated benchmarking via [`pytest-benchmarking`](https://github.com/ionelmc/pytest-benchmark) and [`github-action-benchmark`](https://github.com/benchmark-action/github-action-benchmark).  `pytest-benchmarking` worked well enough in my other project (i.e. http://github.com/pythological/unification/), so I figured we should try it here as well.

N.B. This is needed for the new Numba and JAX benchmarks we're in the process of adding.

- [x] Refactor existing benchmark tests to use the `pytest-benchmarking` fixtures.
    A couple of old `Scan` tests were converted to benchmarks, and Numba and JAX benchmarks were added for a `logsumexp` graph using different input sizes.

Closes #718",testing CI performance concern,rlouf,brandonwillard,2022-12-09 22:03:47,2022-12-12 17:35:05,requirements.txt tests/link/numba/test_scan.py .github/workflows/test.yml tests/link/numba/test_basic.py tests/scan/test_rewriting.py tests/link/jax/test_elemwise.py tests/link/numba/test_elemwise.py environment.yml environment-arm.yml tests/link/numba/test_tensor_basic.py tests/scan/test_basic.py,09e219525fd432cfe0ad88ac17709f7747fac676 6d2031d96068c406e76d6232a6d3e4a3ef690d1c,"brandonwillard labeled 2022-12-09 22:04:16,brandonwillard labeled 2022-12-09 22:04:16,brandonwillard labeled 2022-12-09 22:04:21,brandonwillard convert_to_draft 2022-12-09 22:06:01,brandonwillard head_ref_force_pushed 2022-12-09 22:10:17,brandonwillard assigned 2022-12-09 22:10:30,brandonwillard head_ref_force_pushed 2022-12-09 22:16:02,brandonwillard head_ref_force_pushed 2022-12-09 22:24:03,brandonwillard ready_for_review 2022-12-10 00:21:13,brandonwillard review_dismissed 2022-12-11 20:16:29,brandonwillard head_ref_force_pushed 2022-12-11 20:16:29,brandonwillard head_ref_force_pushed 2022-12-11 21:17:40,brandonwillard head_ref_force_pushed 2022-12-11 21:17:57,brandonwillard referenced 2022-12-12 17:35:05,brandonwillard merged 2022-12-12 17:35:05,brandonwillard closed 2022-12-12 17:35:06,brandonwillard head_ref_deleted 2022-12-12 17:36:02",codecov[bot] rlouf brandonwillard,4,True
613,1360,Add `MultinomialRV` JAX implementation,GStechschulte,"This draft PR is a work in progress and contains a JAX implementation of `MultinomialRV` for issue #1326. The implementation builds off the `Multinomial Distribution` [implementation](https://num.pyro.ai/en/v0.2.4/_modules/numpyro/distributions/util.html) in NumPyro. Likewise, the output is similar to that of the `numpy` [implementation](https://numpy.org/doc/stable/reference/random/generated/numpy.random.multinomial.html).  Below, you will find a brief outline of the functions used to construct the `MultinomialRV`. 

`def _categorical(key, p, shape)`

- returns the outcomes $k$ with probability $p$ for each trial / experiment $n$. 

`def _scatter_add_ones(operand, indices, update)` 

- returns the outcome counts by utilising the `jax.lax.scatter_add()` function
- `operand` is a zero filled array. 
- `indices` is the `outcomes` array with an added dimension and specifies the indices to which the update should be applied to. 
- `update` is an array filled with ones and can be thought of as a `cnt += 1` for each $K = k$ occurrence.
- In summary, the `operand` array is updated `+1` using the `update` array according to the outcomes in the `indices` array.

I still need to add a test for this. Thanks!

",JAX random variables,rlouf AdrienCorenflos brandonwillard,,2022-12-11 16:20:24,2024-03-12 18:20:35,tests/link/jax/test_random.py aesara/link/jax/dispatch/random.py,3bd255991428ecccdfa11cda7778ed487af76dba 148217a4dfc442e1910f1c71a2b38d5952c8f233,"brandonwillard labeled 2022-12-11 21:21:11,brandonwillard labeled 2022-12-11 21:21:11,rlouf connected 2022-12-12 09:27:29,rlouf connected 2022-12-12 09:27:29,rlouf disconnected 2022-12-12 09:27:39,rlouf renamed 2022-12-12 17:12:17,rlouf renamed 2022-12-12 17:12:38,GStechschulte ready_for_review 2022-12-12 21:00:25,AdrienCorenflos mentioned 2023-01-16 19:53:38,AdrienCorenflos subscribed 2023-01-16 19:53:38,GStechschulte mentioned 2023-01-16 19:53:38,GStechschulte subscribed 2023-01-16 19:53:38,AdrienCorenflos mentioned 2023-02-21 15:23:54,AdrienCorenflos subscribed 2023-02-21 15:23:54,GStechschulte mentioned 2023-02-21 15:23:54,GStechschulte subscribed 2023-02-21 15:23:54,rlouf mentioned 2023-03-10 14:08:53,rlouf subscribed 2023-03-10 14:08:53,GStechschulte closed 2024-03-12 18:20:35",rlouf GStechschulte AdrienCorenflos brandonwillard,16,False
614,1362,Add `HalfNormalRV` JAX implementation,theorashid,"This for #1335. The distribution does not exist exactly in `jax.random`, but it can be easily transformed. I chose `loc + jax.random.truncated_normal(rng_key, 0.0, jax.numpy.inf, size, dtype) * scale`, but you could equally choose `loc + jax.numpy.abs(jax.random.normal(rng_key, size, dtype)) * scale`. It's up to the maintainers to decide which they prefer. The tests work but I'm happy to implement more tests if desired.

Might also need to consider key splitting order #1345.

Side note: I'm more familiar with the numpyro/tfp-style HalfNormal distributions, which have a single `scale` parameter are centred at zero. 

--------

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.


",enhancement JAX random variables,,,2022-12-12 10:36:10,2022-12-14 13:13:12,tests/link/jax/test_random.py aesara/link/jax/dispatch/random.py,e0b8fb11faca6d35d433a4b47fbff3e7b30f75fb,"rlouf connected 2022-12-12 15:04:43,rlouf renamed 2022-12-12 17:11:51,brandonwillard labeled 2022-12-12 18:40:51,brandonwillard labeled 2022-12-12 18:40:51,brandonwillard labeled 2022-12-12 18:40:51,theorashid referenced 2022-12-13 15:02:35,rlouf referenced 2022-12-13 16:14:14,rlouf head_ref_force_pushed 2022-12-13 16:14:15,rlouf referenced 2022-12-13 16:15:44,rlouf head_ref_force_pushed 2022-12-13 16:15:45,rlouf referenced 2022-12-14 13:13:12,rlouf merged 2022-12-14 13:13:12,rlouf closed 2022-12-14 13:13:12",codecov[bot] rlouf theorashid brandonwillard,4,True
615,1363,Add `ChiSquareRV` JAX implementation,larryshamalama,"Closes #1322

Given the shape/rate parametrization of [`GammaRV`](https://github.com/aesara-devs/aesara/blob/main/aesara/tensor/random/basic.py#L453-L456) in Aesara, this addition uses the fact that $$\\chi^2_{\\text{df}} \\equiv \\Gamma\\left(\\frac{\\text{df}}{2}, \\frac{1}{2} \\right).$$

Wiki reference [here](https://en.wikipedia.org/wiki/Chi-squared_distribution#Gamma,_exponential,_and_related_distributions)",enhancement JAX random variables,rlouf,,2022-12-12 16:04:33,2023-03-10 01:50:17,tests/link/jax/test_random.py aesara/link/jax/dispatch/random.py,133fcec73d24d64a2aaa2f38ecf5ff70cf29381e 6f9cda70073f37977c551b8b248f51339c764f85,"brandonwillard labeled 2022-12-12 18:39:30,brandonwillard labeled 2022-12-12 18:39:30,brandonwillard labeled 2022-12-12 18:39:30,rlouf head_ref_force_pushed 2022-12-13 13:22:30,rlouf head_ref_force_pushed 2022-12-13 16:24:29,rlouf head_ref_force_pushed 2022-12-13 16:24:52,rlouf head_ref_force_pushed 2022-12-15 15:57:10,rlouf head_ref_force_pushed 2022-12-15 17:29:11,rlouf head_ref_force_pushed 2022-12-16 09:34:42,brandonwillard head_ref_force_pushed 2023-01-30 20:16:48,brandonwillard review_requested 2023-01-30 20:16:55,rlouf head_ref_force_pushed 2023-02-21 15:00:37,larryshamalama mentioned 2023-02-21 15:02:04,larryshamalama subscribed 2023-02-21 15:02:04,rlouf review_dismissed 2023-02-21 15:15:50,rlouf head_ref_force_pushed 2023-02-21 15:15:50,rlouf head_ref_force_pushed 2023-02-23 14:05:49,rlouf head_ref_force_pushed 2023-02-23 14:40:56,brandonwillard head_ref_force_pushed 2023-02-27 23:22:00,brandonwillard head_ref_force_pushed 2023-03-08 00:49:38,brandonwillard head_ref_force_pushed 2023-03-09 23:32:25,brandonwillard auto_rebase_enabled 2023-03-09 23:32:54,brandonwillard head_ref_force_pushed 2023-03-09 23:36:21,brandonwillard head_ref_force_pushed 2023-03-10 00:26:24,brandonwillard auto_merge_disabled 2023-03-10 01:50:09,brandonwillard referenced 2023-03-10 01:50:17,brandonwillard merged 2023-03-10 01:50:17,brandonwillard closed 2023-03-10 01:50:17,larryshamalama mentioned 2023-03-10 01:50:35,larryshamalama subscribed 2023-03-10 01:50:35",larryshamalama rlouf brandonwillard,6,True
616,1364,Add `random` alias to `aesara.tensor.random.basic`,redbopo,"
Close #1353 

This PR will add random() function in RandomStream.
For the testsuite I just copy that as standard_normal() does, look for some feedback.",enhancement random variables,rlouf brandonwillard,,2022-12-12 16:30:58,2022-12-15 19:19:49,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,a85c8a968657a69df6bd5f94028731a8c1758a07,"rlouf renamed 2022-12-12 17:10:44,brandonwillard labeled 2022-12-12 17:42:30,brandonwillard labeled 2022-12-12 17:42:30,brandonwillard head_ref_force_pushed 2022-12-15 00:00:30,brandonwillard head_ref_force_pushed 2022-12-15 00:00:39,brandonwillard renamed 2022-12-15 00:02:22,rlouf head_ref_force_pushed 2022-12-15 15:56:35,rlouf review_dismissed 2022-12-15 17:22:44,brandonwillard referenced 2022-12-15 19:19:49,brandonwillard merged 2022-12-15 19:19:49,brandonwillard closed 2022-12-15 19:19:49",codecov[bot] rlouf brandonwillard redbopo,5,True
617,1365,Continue benchmark-related CI work,brandonwillard,This PR continues the benchmark-related work in #1347.,CI performance concern,,brandonwillard,2022-12-12 17:51:00,2022-12-12 19:34:55,.github/workflows/pypi.yml .github/workflows/test.yml .github/workflows/nightly.yml,9052a4bc971198c6f19b93e5d0b4b4350d2ea73e 4816f1f910601b82b54dc8c31d65a887b9fd3059 7b8d7d17d6ea3109bcf3c202f4ef863a71f306ef ec69d3c98b43016a58bee9ad7cc05e01336bdd71,"brandonwillard labeled 2022-12-12 17:51:42,brandonwillard labeled 2022-12-12 17:51:42,brandonwillard assigned 2022-12-12 17:51:44,brandonwillard renamed 2022-12-12 17:52:09,brandonwillard referenced 2022-12-12 19:34:55,brandonwillard merged 2022-12-12 19:34:55,brandonwillard closed 2022-12-12 19:34:55,brandonwillard head_ref_deleted 2022-12-12 19:34:58,theorashid referenced 2022-12-14 16:21:14",codecov[bot] theorashid brandonwillard,1,True
618,1370,Add `HalfCauchyRV` JAX implementation,theorashid,"This is for #1334. Hopefully it's as obvious as the halfnormal

----------

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.
",enhancement JAX,brandonwillard,,2022-12-14 16:23:36,2022-12-15 17:22:42,tests/link/jax/test_random.py aesara/link/jax/dispatch/random.py,1bd931f604b81ac59a2c3349833410d41953fff3,"theorashid renamed 2022-12-14 16:24:59,rlouf renamed 2022-12-14 16:40:50,rlouf connected 2022-12-14 16:41:10,brandonwillard labeled 2022-12-14 23:23:03,brandonwillard labeled 2022-12-14 23:23:03,brandonwillard head_ref_force_pushed 2022-12-14 23:32:11,rlouf head_ref_force_pushed 2022-12-15 15:56:00,rlouf referenced 2022-12-15 17:22:41,rlouf merged 2022-12-15 17:22:42,rlouf closed 2022-12-15 17:22:42",codecov[bot] rlouf theorashid brandonwillard,8,True
619,1371,Migrate from setup.cfg to pyproject.toml,maresb,"Migrates from `setup.cfg` to `pyproject.toml`. I confirmed that the contents of *both* the sdist and wheel are equivalent up to trivial changes.

`PKG-INFO` before:

```
Metadata-Version: 2.1
Name: aesara
Version: 2.8.9+90.ge9bd02684
Summary: Optimizing compiler for evaluating mathematical expressions on CPUs and GPUs.
Home-page: https://github.com/aesara-devs/aesara
Author: aesara-devs
Author-email: aesara.devs@gmail.com
License: BSD
Keywords: aesara,math,numerical,symbolic,blas,numpy,autodiff,differentiation
...
```

`PKG-INFO` after:

```
Metadata-Version: 2.1
Name: aesara
Version: 2.8.9+105.ge708ed4e4
Summary: A library for defining, optimizing, and efficiently evaluating mathematical expressions involving multi-dimensional arrays.
Author-email: aesara-devs <aesara.devs@gmail.com>
License: BSD-3-Clause
Project-URL: Homepage, https://github.com/aesara-devs/aesara
Keywords: aesara,math,numerical,symbolic,blas,numpy,autodiff,differentiation
...
```

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement,rlouf brandonwillard,,2022-12-15 00:09:02,2022-12-28 19:24:26,.github/workflows/pypi.yml .flake8 pyproject.toml setup.cfg,f79ea86e71381ec349dd73506fa489181d2e784c f07ec5012d498072319e0bcecb1632688632ace5 aafd5fa7303cdb996e94ba23099d6bc1b60868e4 02c52b0282de26e27d3e7114d365fc876f48c1ef,"maresb review_requested 2022-12-15 00:09:21,maresb review_requested 2022-12-15 00:09:22,maresb convert_to_draft 2022-12-15 00:10:17,maresb head_ref_force_pushed 2022-12-16 08:21:07,maresb head_ref_force_pushed 2022-12-17 17:01:27,maresb renamed 2022-12-17 17:15:26,maresb renamed 2022-12-17 17:15:53,maresb ready_for_review 2022-12-17 18:05:19,brandonwillard review_requested 2022-12-20 16:46:27,brandonwillard labeled 2022-12-20 16:46:58,brandonwillard head_ref_force_pushed 2022-12-21 23:34:04,maresb review_dismissed 2022-12-25 16:22:17,maresb head_ref_force_pushed 2022-12-25 16:22:17,maresb head_ref_force_pushed 2022-12-25 18:08:33,maresb head_ref_force_pushed 2022-12-25 19:37:32,brandonwillard mentioned 2022-12-25 19:43:44,brandonwillard subscribed 2022-12-25 19:43:44,maresb referenced 2022-12-28 19:24:26,maresb merged 2022-12-28 19:24:26,maresb closed 2022-12-28 19:24:26,maresb head_ref_deleted 2022-12-28 19:24:32",maresb rlouf codecov[bot] brandonwillard,12,True
620,1372,Use `jax.Array` for type checking in tests,rlouf,"JAX's 0.4.1 release introduces `jax.Array` which [replaces `DeviceArray`](https://jax.readthedocs.io/en/latest/jax_array_migration.html). Tests were failing in CI because they are currently checking that the arrays returned by the compiled functions are `DeviceArray`. 

I updated the tests and added a constraint on the JAX version in `requirements.txt`.",bug JAX,,,2022-12-15 14:05:41,2022-12-15 15:55:30,requirements.txt tests/link/jax/test_basic.py,607bfc42c17a43a8c9a1e44746c3a73a4538c5d2,"rlouf labeled 2022-12-15 14:05:54,rlouf labeled 2022-12-15 14:05:54,rlouf referenced 2022-12-15 15:55:30,rlouf merged 2022-12-15 15:55:30,rlouf closed 2022-12-15 15:55:30,rlouf head_ref_deleted 2022-12-15 15:55:34",codecov[bot] rlouf,1,True
621,1374,Downgrade flake8 pre-commit for py37 compatibility,maresb,"Closes #1373

Aesara's minimum-supported Python version is 3.7, and it's probably really convenient to develop with that version in order to avoid using incompatible language features. Then of course you want to run pre-commit, but for that you either need a higher version of Python (>=3.8.1) or a lower (<=5.0.4) version of flake8.

It seems to me like the most straightforward solution is to revert flake8 to 5.0.4 (the second-most-recent release, August) until Aesara drops support for Python 3.7.


**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",testing,brandonwillard,,2022-12-15 19:53:58,2022-12-15 22:55:02,.pre-commit-config.yaml,75653db442afa485d3004616ad56d57be2c1877e,"brandonwillard labeled 2022-12-15 19:54:40,maresb review_dismissed 2022-12-15 19:56:22,maresb head_ref_force_pushed 2022-12-15 19:56:22,maresb referenced 2022-12-15 22:55:02,maresb merged 2022-12-15 22:55:02,maresb closed 2022-12-15 22:55:02,maresb head_ref_deleted 2022-12-15 22:55:06",maresb brandonwillard,3,True
622,1375,Migrate from versioneer to setuptools_scm,maresb,"**The base of this PR is #1371.** The **first original commit** on this branch is **""Remove versioneer"".**

In the first commit I remove versioneer and set the version to `""TODO""`. In the second commit, I add setuptools_scm.

I also attempt to correctly configure the nightly builds. I do this by running `aesara.misc.prepare_nightly_build` to modify `pyproject.toml` in the nightly build, updating the following entries:

```toml
[project]
name = ""aesara-nightly""
dynamic = []
version = ""[generated from aesara.misc.prepare_nightly_build:nightly_version_number]""

[tool.setuptools_scm]
(deleted)
```
This should be tested, but I'm reasonably confident that it will work properly, and I raise an error if the version number has an incorrect form.

One strange quirk which I don't quite understand is that in order to type-check `aesara.misc.prepare_nightly_build` I added the `types-toml` package to the mypy pre-commit config, and afterwards it raised an error about an unused `type: ignore` in `aesara/scan/op.py` L3430. Removing the `type: ignore` resolved the error. :man_shrugging: 

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement CI,brandonwillard,,2022-12-17 22:06:58,2023-01-10 03:30:02,requirements.txt versioneer.py setup.cfg doc/conf.py .pre-commit-config.yaml readthedocs.yml .github/workflows/dev-builds.yml .flake8 pyproject.toml aesara/version.py MANIFEST.in .gitignore aesara/_version.py setup.py .gitattributes,5f60814fff926e06497c5c9a22b4090fd996557b 9d46e0fcef97cc019319d411d01d779eb50e06b0 4ce25eac12f9edaed6ddab0a36e9921841e96e6b 5b567e248b87da506face01c0772753c3c7e1a16,"brandonwillard labeled 2022-12-18 03:24:44,brandonwillard unlabeled 2022-12-18 03:25:11,brandonwillard labeled 2022-12-18 03:25:11,maresb head_ref_force_pushed 2022-12-18 19:35:26,maresb ready_for_review 2022-12-18 23:42:19,brandonwillard mentioned 2022-12-20 16:16:51,brandonwillard subscribed 2022-12-20 16:16:51,brandonwillard mentioned 2022-12-20 16:46:16,brandonwillard subscribed 2022-12-20 16:46:16,maresb head_ref_force_pushed 2022-12-25 19:53:21,maresb head_ref_force_pushed 2022-12-25 20:03:44,maresb head_ref_force_pushed 2022-12-28 19:27:10,maresb head_ref_force_pushed 2022-12-29 21:50:19,maresb head_ref_force_pushed 2022-12-30 12:15:57,maresb head_ref_force_pushed 2022-12-30 19:15:08,maresb head_ref_force_pushed 2022-12-30 19:20:41,maresb review_dismissed 2022-12-31 21:22:42,maresb head_ref_force_pushed 2022-12-31 21:22:42,maresb review_dismissed 2023-01-01 23:36:13,maresb head_ref_force_pushed 2023-01-01 23:40:33,maresb head_ref_force_pushed 2023-01-02 22:02:35,maresb head_ref_force_pushed 2023-01-03 21:39:01,maresb head_ref_force_pushed 2023-01-06 21:47:00,maresb head_ref_force_pushed 2023-01-07 08:15:49,brandonwillard head_ref_force_pushed 2023-01-09 05:33:37,maresb review_dismissed 2023-01-09 08:54:05,maresb head_ref_force_pushed 2023-01-09 08:54:05,maresb head_ref_force_pushed 2023-01-09 13:30:43,brandonwillard mentioned 2023-01-09 14:16:54,brandonwillard subscribed 2023-01-09 14:16:54,maresb head_ref_force_pushed 2023-01-10 02:04:25,brandonwillard mentioned 2023-01-10 02:05:25,brandonwillard subscribed 2023-01-10 02:05:25,brandonwillard auto_rebase_enabled 2023-01-10 02:06:13,brandonwillard mentioned 2023-01-10 03:28:10,brandonwillard subscribed 2023-01-10 03:28:10,brandonwillard referenced 2023-01-10 03:30:02,brandonwillard merged 2023-01-10 03:30:02,brandonwillard closed 2023-01-10 03:30:02,maresb head_ref_deleted 2023-01-10 03:30:36,brandonwillard labeled 2023-01-10 03:30:40",maresb rlouf codecov[bot] brandonwillard,47,True
623,1376,Update setup-python action version,brandonwillard,"This PR updates the `setup-python` action in our workflows, which should remove a few of the deprecation warnings.

It looks like there are some [Python version issues in the docs build process](https://readthedocs.org/projects/aesara/builds/19033190/), so this PR includes some commits that address those issues.",CI,maresb,brandonwillard,2022-12-29 18:11:13,2022-12-30 01:30:53,doc/library/tensor/basic.rst .github/workflows/test.yml aesara/tensor/math.py .github/workflows/pypi.yml aesara/tensor/var.py doc/environment.yml .github/workflows/nightly.yml,e20d156328b4e1f6bf67badba060f3468d4ec06c 62860582d257564ba50865f892055abdf58b6b24 4108323171df7d4d898e33768a92911915ebf836 3b107f754e6593bee53d7700d273e9a55c53a39e 3e0b176ff6315cc3018a05e2118850c9f3523f62,"brandonwillard head_ref_force_pushed 2022-12-29 18:11:37,brandonwillard labeled 2022-12-29 18:37:33,brandonwillard assigned 2022-12-29 18:37:34,brandonwillard review_requested 2022-12-29 18:37:46,brandonwillard review_dismissed 2022-12-29 18:49:20,brandonwillard head_ref_force_pushed 2022-12-29 18:49:29,brandonwillard head_ref_force_pushed 2022-12-29 19:27:18,brandonwillard referenced 2022-12-30 01:30:53,brandonwillard merged 2022-12-30 01:30:53,brandonwillard closed 2022-12-30 01:30:53,brandonwillard head_ref_deleted 2022-12-30 01:30:55",maresb codecov[bot] brandonwillard,8,True
624,1377,Add GHA workflow to autoupdate GHA workflows,maresb,"Here's an example of what we'd need to autoupdate the GHA workflow versions.

GitHub security based on the `GITHUB_TOKEN` secret prohibits workflows from modifying workflow files. Thus unfortunately this **requires** a personal access token with `repo` and `workflow` scope. (See https://github.com/marketplace/actions/github-actions-version-updater#important-note, and to confirm, I've independently seen this restriction cause issues with Conda-Forge infrastructure.)

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",CI,brandonwillard,,2022-12-29 22:10:03,2023-01-06 01:30:41,.github/workflows/pypi.yml .github/workflows/update-gha.yml,67092ad928457968f04cc11da2d8d99ad7977430 0fcc6a4f9f69b9966a86077256e5bc3773db979f 9dc5e64f0708654b5e1bcca9c78813aa76008be7,"maresb head_ref_force_pushed 2022-12-30 12:20:32,brandonwillard labeled 2022-12-30 17:14:48,maresb head_ref_force_pushed 2023-01-02 23:15:47,maresb head_ref_force_pushed 2023-01-02 23:16:21,maresb head_ref_force_pushed 2023-01-02 23:16:50,maresb ready_for_review 2023-01-02 23:18:09,maresb convert_to_draft 2023-01-05 23:39:28,brandonwillard closed 2023-01-06 01:30:41",maresb codecov[bot] brandonwillard,9,False
625,1378,Add GHA workflow to autoupdate pre-commit hooks,maresb,"Here are a few important guidelines and requirements to check before your PR can be merged:
+ [ ] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement CI,brandonwillard,,2022-12-29 22:20:03,2023-01-07 09:30:44,.github/workflows/update-pre-commit.yml,6c25532fd7f244a0e83b70465c4e76ee13f0b21c,"maresb head_ref_force_pushed 2022-12-30 12:20:20,brandonwillard labeled 2022-12-30 17:14:40,maresb head_ref_force_pushed 2023-01-02 23:09:35,maresb ready_for_review 2023-01-02 23:09:55,brandonwillard labeled 2023-01-03 21:30:17,maresb head_ref_force_pushed 2023-01-03 21:41:37,brandonwillard head_ref_force_pushed 2023-01-07 00:34:36,brandonwillard auto_rebase_enabled 2023-01-07 00:34:43,maresb head_ref_force_pushed 2023-01-07 08:17:20,brandonwillard referenced 2023-01-07 09:30:44,brandonwillard merged 2023-01-07 09:30:44,brandonwillard closed 2023-01-07 09:30:44,maresb head_ref_deleted 2023-01-07 13:24:54",maresb codecov[bot] brandonwillard,3,True
626,1380,Set nightly build project.name in pyproject.toml,maresb,"Closes #1379

It seems that `python -m build .` ignores the project name from the `setuptools.setup` function when running `setup.py`. This commit moves the dynamic project name from `setup.py` to the `nightly.yml` workflow, using the `dasel` command-line tool to modify `project.name` in `pyproject.toml`.

I also add a `workflow_dispatch` trigger to `nightly.yml` for testing.

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",bug CI,,,2022-12-31 12:07:51,2022-12-31 21:04:02,setup.py .github/workflows/nightly.yml,5d798c08623779a8d3715cee2565884203b5fa7b,"maresb head_ref_force_pushed 2022-12-31 12:10:27,maresb renamed 2022-12-31 12:11:07,maresb ready_for_review 2022-12-31 12:12:09,maresb review_requested 2022-12-31 12:12:31,brandonwillard labeled 2022-12-31 21:03:18,brandonwillard labeled 2022-12-31 21:03:18,brandonwillard referenced 2022-12-31 21:04:02,brandonwillard merged 2022-12-31 21:04:02,brandonwillard closed 2022-12-31 21:04:03,maresb head_ref_deleted 2022-12-31 21:12:26",maresb codecov[bot] brandonwillard,1,True
627,1381,Update copyright years,brandonwillard,,documentation,,,2023-01-01 19:04:09,2023-01-01 19:45:05,doc/conf.py doc/LICENSE.txt,098415512d08684a4cddfc4e5a6f7a63773dd42e,"brandonwillard head_ref_force_pushed 2023-01-01 19:05:20,brandonwillard labeled 2023-01-01 19:05:27,brandonwillard referenced 2023-01-01 19:45:05,brandonwillard merged 2023-01-01 19:45:05,brandonwillard closed 2023-01-01 19:45:05,brandonwillard head_ref_deleted 2023-01-01 19:45:10",brandonwillard,0,True
628,1382,Move aesara-cache into aesara.bin package,maresb,"As observed in https://github.com/aesara-devs/aesara/pull/1375#issuecomment-1368566714, 

> Additionally, I noticed that aesara-cache is being installed in a top-level module called bin. This seems very undesirable, as it should probably instead go under aesara.bin. I will make a subsequent PR to address this.

In order to hopefully avoid breaking existing stuff, the old scripts are still there, but now with deprecation warnings.

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement refactor,brandonwillard,,2023-01-02 22:42:16,2023-01-09 06:50:35,aesara/bin/aesara_cache.py bin/__init__.py pyproject.toml aesara/bin/__init__.py bin/aesara_cache.py bin/aesara-cache,c7caa740fd91fe884e9ddeaea52f301b0a7221f8 47771516cfc684a12545f8e9144376cc12f628d2 e289cb256f0d8c187a0d7b8058582c50575cb2d4,"maresb ready_for_review 2023-01-02 23:12:05,brandonwillard labeled 2023-01-03 21:31:20,brandonwillard labeled 2023-01-03 21:31:20,brandonwillard head_ref_force_pushed 2023-01-07 00:35:56,brandonwillard auto_rebase_enabled 2023-01-07 00:36:08,maresb review_dismissed 2023-01-07 09:06:04,maresb head_ref_force_pushed 2023-01-07 09:06:04,maresb auto_merge_disabled 2023-01-07 09:12:32,maresb auto_squash_enabled 2023-01-07 09:13:32,brandonwillard head_ref_force_pushed 2023-01-09 05:32:18,maresb referenced 2023-01-09 06:50:35,maresb merged 2023-01-09 06:50:35,maresb closed 2023-01-09 06:50:35,maresb head_ref_deleted 2023-01-09 08:35:30",maresb codecov[bot] brandonwillard,7,True
629,1383,Give a CI error message when lazylinker_c.c missing,maresb,"Without this, when `lazylinker_c.c` is missing, the CI suddenly errors without any message.

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement CI,brandonwillard,,2023-01-02 22:47:14,2023-01-03 21:36:17,.github/workflows/pypi.yml,6da16f4bb1cbee50916f7bb79c8a211e8b5e95cf,"maresb labeled 2023-01-02 22:47:14,maresb ready_for_review 2023-01-02 23:12:00,brandonwillard labeled 2023-01-03 21:30:32,maresb referenced 2023-01-03 21:36:17,maresb merged 2023-01-03 21:36:17,maresb closed 2023-01-03 21:36:17,maresb head_ref_deleted 2023-01-03 21:36:21",maresb codecov[bot] brandonwillard,1,True
630,1384,Migrate from setuptools to hatchling,maresb,"**Base: #1371**

Change the build-backend from setuptools to hatchling.

**Question:** Is there any reason for `docs/` to be included in the sdist? It's not in the wheel.

~For some reason I'm having trouble including the file `aesara/d3viz/html/template.html`. I'm not sure yet why it's being excluded.~

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement,brandonwillard,,2023-01-02 23:56:44,2023-01-31 10:21:58,aesara/tensor/math.py .github/workflows/pypi.yml tests/tensor/test_special.py pyproject.toml aesara/scalar/math.py MANIFEST.in .gitignore aesara/tensor/special.py aesara/tensor/inplace.py tests/tensor/test_math_scipy.py,888c52ce49ba4165e0c499504988120323845c50 051652bef32a1bf7940898b867d28adfb93f3c7e,"maresb ready_for_review 2023-01-03 10:56:14,maresb head_ref_force_pushed 2023-01-03 21:45:37,brandonwillard labeled 2023-01-03 22:12:48,maresb head_ref_force_pushed 2023-01-06 22:00:17,maresb head_ref_force_pushed 2023-01-10 03:38:30,maresb review_requested 2023-01-17 12:01:32,maresb review_requested 2023-01-17 12:01:32,brandonwillard head_ref_force_pushed 2023-01-30 20:15:55,maresb auto_squash_enabled 2023-01-31 09:01:03,maresb referenced 2023-01-31 10:21:58,maresb merged 2023-01-31 10:21:58,maresb closed 2023-01-31 10:21:58,maresb head_ref_deleted 2023-02-01 01:59:30",maresb codecov[bot] brandonwillard,10,True
631,1386,Enable dependabot to update github-actions,maresb,"Replaces #1377 

This seems to be a simpler solution, since it doesn't require a bot account.

For initial testing I set the interval to `daily`, but to reduce noise we probably want to reduce this to weekly or monthly.

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",CI,brandonwillard,,2023-01-05 23:29:56,2023-01-06 07:24:39,.github/dependabot.yml,40976e3bf08b0c0736229a6dbbdd9863d4e23314,"maresb review_requested 2023-01-05 23:30:12,brandonwillard labeled 2023-01-06 01:27:18,maresb referenced 2023-01-06 07:24:38,maresb merged 2023-01-06 07:24:39,maresb closed 2023-01-06 07:24:39,maresb head_ref_deleted 2023-01-06 07:24:50",maresb brandonwillard,0,True
632,1387,Bump actions/download-artifact from 2 to 3,dependabot[bot],"Bumps [actions/download-artifact](https://github.com/actions/download-artifact) from 2 to 3.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/actions/download-artifact/releases"">actions/download-artifact's releases</a>.</em></p>
<blockquote>
<h2>v3.0.0</h2>
<h2>What's Changed</h2>
<ul>
<li>Update default runtime to node16 (<a href=""https://github-redirect.dependabot.com/actions/download-artifact/pull/134"">actions/download-artifact#134</a>)</li>
<li>Update package-lock.json file version to 2 (<a href=""https://github-redirect.dependabot.com/actions/download-artifact/pull/136"">actions/download-artifact#136</a>)</li>
</ul>
<h3>Breaking Changes</h3>
<p>With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.</p>
<h2>v2.1.0 Download Artifact</h2>
<ul>
<li>Improved output &amp; logging</li>
<li>Fixed issue where downloading all artifacts could cause display percentages to be over 100%</li>
<li>Various small bug fixes &amp; improvements</li>
</ul>
<h2>v2.0.10</h2>
<ul>
<li>Retry on HTTP 500 responses from the service</li>
</ul>
<h2>v2.0.9</h2>
<ul>
<li>Fixes to proxy related issues</li>
</ul>
<h2>v2.0.8</h2>
<ul>
<li>Improvements to retryability if an error is encountered during artifact download</li>
</ul>
<h2>v2.0.7 download-artifact</h2>
<ul>
<li>Improved download retry-ability if a partial download is encountered</li>
</ul>
<h2>v2.0.6</h2>
<p>Update actions/core NPM package that is used internally</p>
<h2>v2.0.5</h2>
<ul>
<li>Add Third Party License Information</li>
</ul>
<h2>v2.0.4</h2>
<ul>
<li>Use the latest version of the <code>@actions/artifact</code> NPM package</li>
</ul>
<h2>v2.0.3</h2>
<ul>
<li>Misc improvements</li>
</ul>
<h2>v2.0.2</h2>
<ul>
<li>Support for tilde expansion</li>
</ul>
<h2>v2.0.1</h2>
<ul>
<li>Download path output</li>
<li>Improved logging</li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/actions/download-artifact/commit/9bc31d5ccc31df68ecc42ccf4149144866c47d8a""><code>9bc31d5</code></a> Update to latest actions/artifact NPM package (<a href=""https://github-redirect.dependabot.com/actions/download-artifact/issues/195"">#195</a>)</li>
<li><a href=""https://github.com/actions/download-artifact/commit/d2278a10efbd646909370fd49fb454cb04e368e3""><code>d2278a1</code></a> Update release-new-action-version.yml (<a href=""https://github-redirect.dependabot.com/actions/download-artifact/issues/196"">#196</a>)</li>
<li><a href=""https://github.com/actions/download-artifact/commit/c1a6d8f06a2e68a3b8f869512742db4750e492bd""><code>c1a6d8f</code></a> Update codeql-analysis.yml (<a href=""https://github-redirect.dependabot.com/actions/download-artifact/issues/197"">#197</a>)</li>
<li><a href=""https://github.com/actions/download-artifact/commit/9782bd6a9848b53b110e712e20e42d89988822b7""><code>9782bd6</code></a> Update <code>@​actions/core</code> to 1.10.0 (<a href=""https://github-redirect.dependabot.com/actions/download-artifact/issues/178"">#178</a>)</li>
<li><a href=""https://github.com/actions/download-artifact/commit/076f0f7dd036d87e8e04f5f00d614e790308961b""><code>076f0f7</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/download-artifact/issues/156"">#156</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>
<li><a href=""https://github.com/actions/download-artifact/commit/7151be32215ef355cb7fe2aea5a54c10fd02172d""><code>7151be3</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>
<li><a href=""https://github.com/actions/download-artifact/commit/51cbdc41c19b18c53d3d78c72b50536e5abb89ce""><code>51cbdc4</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/download-artifact/issues/152"">#152</a> from actions/dependabot/npm_and_yarn/minimist-1.2.6</li>
<li><a href=""https://github.com/actions/download-artifact/commit/e89a529079d575da1409e3cd6ff98eb88d707721""><code>e89a529</code></a> Bump minimist from 1.2.5 to 1.2.6</li>
<li><a href=""https://github.com/actions/download-artifact/commit/fb598a63ae348fa914e94cd0ff38f362e927b741""><code>fb598a6</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/download-artifact/issues/136"">#136</a> from actions/jtamsut/update-lockfile-version</li>
<li><a href=""https://github.com/actions/download-artifact/commit/a4a09c5d7eb5932e0e6c4e77a434738189a24f1b""><code>a4a09c5</code></a> regenerate index.js</li>
<li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v2...v3"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>",CI dependencies,maresb brandonwillard,,2023-01-06 07:25:09,2023-01-06 18:27:08,.github/workflows/pypi.yml .github/workflows/test.yml,70fe5e60f70462445836f61a184d373bc868c2bd,"dependabot[bot] labeled 2023-01-06 07:25:10,dependabot[bot] review_dismissed 2023-01-06 14:53:49,dependabot[bot] head_ref_force_pushed 2023-01-06 14:53:50,brandonwillard labeled 2023-01-06 14:53:53,maresb referenced 2023-01-06 18:27:08,maresb merged 2023-01-06 18:27:08,maresb closed 2023-01-06 18:27:08,dependabot[bot] head_ref_deleted 2023-01-06 18:27:16",maresb codecov[bot] dependabot[bot] brandonwillard,1,True
633,1388,Bump actions/upload-artifact from 2 to 3,dependabot[bot],"Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 2 to 3.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/actions/upload-artifact/releases"">actions/upload-artifact's releases</a>.</em></p>
<blockquote>
<h2>v3.0.0</h2>
<h2>What's Changed</h2>
<ul>
<li>Update default runtime to node16 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/293"">#293</a>)</li>
<li>Update package-lock.json file version to 2 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/302"">#302</a>)</li>
</ul>
<h3>Breaking Changes</h3>
<p>With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.</p>
<h2>v2.3.1</h2>
<p>Fix for empty fails on Windows failing on upload <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/281"">#281</a></p>
<h2>v2.3.0 Upload Artifact</h2>
<ul>
<li>Optimizations for faster uploads of larger files that are already compressed</li>
<li>Significantly improved logging when there are chunked uploads</li>
<li>Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files</li>
<li>Various other small bugfixes &amp; optimizations</li>
</ul>
<h2>v2.2.4</h2>
<ul>
<li>Retry on HTTP 500 responses from the service</li>
</ul>
<h2>v2.2.3</h2>
<ul>
<li>Fixes for proxy related issues</li>
</ul>
<h2>v2.2.2</h2>
<ul>
<li>Improved retryability and error handling</li>
</ul>
<h2>v2.2.1</h2>
<ul>
<li>Update used actions/core package to the latest version</li>
</ul>
<h2>v2.2.0</h2>
<ul>
<li>Support for artifact retention</li>
</ul>
<h2>v2.1.4</h2>
<ul>
<li>Add Third Party License Information</li>
</ul>
<h2>v2.1.3</h2>
<ul>
<li>Use updated version of the <code>@action/artifact</code> NPM package</li>
</ul>
<h2>v2.1.2</h2>
<ul>
<li>Increase upload chunk size from 4MB to 8MB</li>
<li>Detect case insensitive file uploads</li>
</ul>
<h2>v2.1.1</h2>
<ul>
<li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>
</ul>
<h2>v2.1.0</h2>
<ul>
<li>Support for uploading artifacts with multiple paths</li>
<li>Support for using exclude paths</li>
<li>Updates to dependencies</li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/actions/upload-artifact/commit/83fd05a356d7e2593de66fc9913b3002723633cb""><code>83fd05a</code></a> Bump actions-core to v1.10.0 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/356"">#356</a>)</li>
<li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>
<li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>
<li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>
<li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>
<li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>
<li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>
<li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>
<li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>
<li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>
<li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v2...v3"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>",CI dependencies,maresb,,2023-01-06 07:25:12,2023-01-06 14:53:07,.github/workflows/pypi.yml .github/workflows/test.yml,822a1317503b932845add436a1bf12ea88ea0c3b,"dependabot[bot] labeled 2023-01-06 07:25:13,brandonwillard referenced 2023-01-06 14:53:07,brandonwillard merged 2023-01-06 14:53:07,brandonwillard closed 2023-01-06 14:53:07,dependabot[bot] head_ref_deleted 2023-01-06 14:53:16,brandonwillard labeled 2023-01-06 14:53:19",maresb codecov[bot] dependabot[bot] brandonwillard,1,True
634,1389,Bump actions/cache from 1 to 3,dependabot[bot],"Bumps [actions/cache](https://github.com/actions/cache) from 1 to 3.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>
<blockquote>
<h2>v3.0.0</h2>
<ul>
<li>
<p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>
</li>
<li>
<p>Few dependencies and cache action usage examples have also been updated.</p>
</li>
</ul>
<h2>v2.1.7</h2>
<p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>
<h2>v2.1.6</h2>
<ul>
<li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>
</ul>
<h2>v2.1.5</h2>
<ul>
<li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>
</ul>
<h2>v2.1.4</h2>
<ul>
<li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>
<li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>
</ul>
<h2>v2.1.3</h2>
<ul>
<li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>
<li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>
</ul>
<h2>v2.1.2</h2>
<ul>
<li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>
<li>No-op when executing on GHES</li>
</ul>
<h2>v2.1.1</h2>
<ul>
<li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>
</ul>
<h2>v2.1.0</h2>
<ul>
<li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure.  This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>
<li>Display download progress and speed</li>
</ul>
<h2>v2.0.0</h2>
<p>Initial v2 release</p>
<h2>What's new in v2</h2>
<ul>
<li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>
<li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>
<li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>
<li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>
<li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>
</ul>
<h2>v1.2.0</h2>
<h1>Bug Fixes</h1>
<ul>
<li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>
<li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>
<blockquote>
<h1>Releases</h1>
<h3>3.0.0</h3>
<ul>
<li>Updated minimum runner version support from node 12 -&gt; node 16</li>
</ul>
<h3>3.0.1</h3>
<ul>
<li>Added support for caching from GHES 3.5.</li>
<li>Fixed download issue for files &gt; 2GB during restore.</li>
</ul>
<h3>3.0.2</h3>
<ul>
<li>Added support for dynamic cache size cap on GHES.</li>
</ul>
<h3>3.0.3</h3>
<ul>
<li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>
</ul>
<h3>3.0.4</h3>
<ul>
<li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>
</ul>
<h3>3.0.5</h3>
<ul>
<li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>
</ul>
<h3>3.0.6</h3>
<ul>
<li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>
<li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>
</ul>
<h3>3.0.7</h3>
<ul>
<li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>
</ul>
<h3>3.0.8</h3>
<ul>
<li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>
<li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MINS</code>. Default is 60 minutes.</li>
</ul>
<h3>3.0.9</h3>
<ul>
<li>Enhanced the warning message for cache unavailablity in case of GHES.</li>
</ul>
<h3>3.0.10</h3>
<ul>
<li>Fix a bug with sorting inputs.</li>
<li>Update definition for restore-keys in README.md</li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/actions/cache/commit/4723a57e26efda3a62cbde1812113b730952852d""><code>4723a57</code></a> Revert compression changes related to windows but keep version logging (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/1049"">#1049</a>)</li>
<li><a href=""https://github.com/actions/cache/commit/d1507cccba5975e005ebd1bdaa5a0c51832f159d""><code>d1507cc</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/1042"">#1042</a> from me-and/correct-readme-re-windows</li>
<li><a href=""https://github.com/actions/cache/commit/333756372568b80b80849fbeb69c44a11639051b""><code>3337563</code></a> Merge branch 'main' into correct-readme-re-windows</li>
<li><a href=""https://github.com/actions/cache/commit/60c76667099108586fa72b6307da64c5fa03ebd4""><code>60c7666</code></a> save/README.md: Fix typo in example (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/1040"">#1040</a>)</li>
<li><a href=""https://github.com/actions/cache/commit/b053f2b699651003dc32d50fb3e2d03825d9172f""><code>b053f2b</code></a> Fix formatting error in restore/README.md (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/1044"">#1044</a>)</li>
<li><a href=""https://github.com/actions/cache/commit/501277cfd7e95763bb7a9e079b959b7e57713e71""><code>501277c</code></a> README.md: remove outdated Windows cache tip link</li>
<li><a href=""https://github.com/actions/cache/commit/c1a5de879eb890d062a85ee0252d6036480b1fe2""><code>c1a5de8</code></a> Upgrade codeql to v2 (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/1023"">#1023</a>)</li>
<li><a href=""https://github.com/actions/cache/commit/9b0be58822d00cbc2e7efa6780a8f0b9c273df2e""><code>9b0be58</code></a> Release compression related changes for windows (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/1039"">#1039</a>)</li>
<li><a href=""https://github.com/actions/cache/commit/c17f4bf4666a8001b1a45c09eb7a485c41aa64c3""><code>c17f4bf</code></a> GA for granular cache (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/1035"">#1035</a>)</li>
<li><a href=""https://github.com/actions/cache/commit/ac25611caef967612169ab7e95533cf932c32270""><code>ac25611</code></a> docs: fix an invalid link in workarounds.md (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/929"">#929</a>)</li>
<li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>",CI dependencies,maresb brandonwillard,,2023-01-06 07:25:16,2023-01-06 20:28:29,.github/workflows/test.yml,5d5cb25c6723f91188034978dbd34e6429a9e835,"dependabot[bot] labeled 2023-01-06 07:25:18,dependabot[bot] review_dismissed 2023-01-06 14:53:52,dependabot[bot] head_ref_force_pushed 2023-01-06 14:53:52,brandonwillard labeled 2023-01-06 14:55:21,dependabot[bot] review_dismissed 2023-01-06 18:27:49,dependabot[bot] head_ref_force_pushed 2023-01-06 18:27:49,maresb review_requested 2023-01-06 18:46:22,maresb referenced 2023-01-06 20:28:29,maresb merged 2023-01-06 20:28:29,maresb closed 2023-01-06 20:28:29,dependabot[bot] head_ref_deleted 2023-01-06 20:28:38",maresb codecov[bot] dependabot[bot] brandonwillard,6,True
635,1390,Set Dependabot GitHub Actions interval to monthly,maresb,"Dependabot seems to be working as expected when set to daily, but keeping GHA up-to-date is low-priority. (Probably in general, most GHA are updated yearly, if that.) To minimize noise, let's go monthly.

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [ ] There is an informative high-level description of the changes.
+ [ ] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [ ] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [ ] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [ ] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",CI,,,2023-01-06 09:02:03,2023-01-06 18:42:35,.github/dependabot.yml,51f45e4cc60cde4dc84c93010e3a47cad08f01d1,"maresb labeled 2023-01-06 09:13:58,maresb review_requested 2023-01-06 09:14:08,maresb closed 2023-01-06 18:42:36",maresb,1,False
636,1391,Seed benchmark tests,brandonwillard,This PR sets seeds for data generated in the newly added benchmark tests.,testing,,brandonwillard,2023-01-07 00:30:40,2023-01-07 01:36:08,tests/link/numba/test_elemwise.py tests/link/jax/test_elemwise.py aesara/sparse/basic.py,0df0b089d38c4e96cf9980f5629298adf4532f0b fd0974388a0db787b4c05d2b79f89bcab3d9ee6a,"brandonwillard labeled 2023-01-07 00:31:06,brandonwillard assigned 2023-01-07 00:32:21,brandonwillard auto_rebase_enabled 2023-01-07 00:32:31,brandonwillard auto_merge_disabled 2023-01-07 01:36:01,brandonwillard referenced 2023-01-07 01:36:08,brandonwillard merged 2023-01-07 01:36:08,brandonwillard closed 2023-01-07 01:36:08,brandonwillard head_ref_deleted 2023-01-07 01:36:12",codecov[bot] maresb brandonwillard,3,True
637,1392,Bump peter-evans/create-pull-request from 3 to 4,dependabot[bot],"Bumps [peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request) from 3 to 4.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/peter-evans/create-pull-request/releases"">peter-evans/create-pull-request's releases</a>.</em></p>
<blockquote>
<h2>Create Pull Request v4.0.0</h2>
<h2>Breaking changes</h2>
<ul>
<li>The <code>add-paths</code> input no longer accepts <code>-A</code> as a valid value. When committing all new and modified files the <code>add-paths</code> input should be omitted.</li>
<li>If using self-hosted runners or GitHub Enterprise Server, there are minimum requirements for <code>v4</code> to run. See &quot;What's new&quot; below for details.</li>
</ul>
<h2>What's new</h2>
<ul>
<li>Updated runtime to Node.js 16
<ul>
<li>The action now requires a minimum version of v2.285.0 for the <a href=""https://github.com/actions/runner/releases/tag/v2.285.0"">Actions Runner</a>.</li>
<li>If using GitHub Enterprise Server, the action requires <a href=""https://docs.github.com/en/enterprise-server@3.4/admin/release-notes"">GHES 3.4</a> or later.</li>
</ul>
</li>
</ul>
<h2>What's Changed</h2>
<ul>
<li>README.md: Add word &quot;permissions&quot; to part on GITHUB_TOKEN by <a href=""https://github.com/hartwork""><code>@​hartwork</code></a> in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1082"">peter-evans/create-pull-request#1082</a></li>
<li>docs: Document how to improve close-and-reopen user experience by <a href=""https://github.com/hartwork""><code>@​hartwork</code></a> in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1084"">peter-evans/create-pull-request#1084</a></li>
<li>README.md: Skip follow-up steps if there is no pull request by <a href=""https://github.com/hartwork""><code>@​hartwork</code></a> in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1083"">peter-evans/create-pull-request#1083</a></li>
<li>v4 by <a href=""https://github.com/peter-evans""><code>@​peter-evans</code></a> in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1099"">peter-evans/create-pull-request#1099</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href=""https://github.com/hartwork""><code>@​hartwork</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1082"">peter-evans/create-pull-request#1082</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/peter-evans/create-pull-request/compare/v3.14.0...v4.0.0"">https://github.com/peter-evans/create-pull-request/compare/v3.14.0...v4.0.0</a></p>
<h2>Create Pull Request v3.14.0</h2>
<p>This release reverts a commit made to bump the runtime to node 16. It inadvertently caused <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/issues/1077"">an issue</a> for users on GitHub Enterprise. Apologies. 🙇‍♂️</p>
<h2>What's Changed</h2>
<ul>
<li>feat: revert update action runtime to node 16 by <a href=""https://github.com/peter-evans""><code>@​peter-evans</code></a> <a href=""https://github.com/peter-evans/create-pull-request/commit/18f7dc018cc2cd597073088f7c7591b9d1c02672"">https://github.com/peter-evans/create-pull-request/commit/18f7dc018cc2cd597073088f7c7591b9d1c02672</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/peter-evans/create-pull-request/compare/v3.13.0...v3.14.0"">https://github.com/peter-evans/create-pull-request/compare/v3.13.0...v3.14.0</a></p>
<h2>Create Pull Request v3.13.0</h2>
<h2>What's Changed</h2>
<ul>
<li>Document that draft status changes are not reflected by <a href=""https://github.com/willthames""><code>@​willthames</code></a> in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1064"">peter-evans/create-pull-request#1064</a></li>
<li>fix: remove unused draft param from pull update by <a href=""https://github.com/peter-evans""><code>@​peter-evans</code></a> in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1065"">peter-evans/create-pull-request#1065</a></li>
<li>Update action runtime to node 16 by <a href=""https://github.com/sibiraj-s""><code>@​sibiraj-s</code></a> in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1074"">peter-evans/create-pull-request#1074</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href=""https://github.com/willthames""><code>@​willthames</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1064"">peter-evans/create-pull-request#1064</a></li>
<li><a href=""https://github.com/sibiraj-s""><code>@​sibiraj-s</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1074"">peter-evans/create-pull-request#1074</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/peter-evans/create-pull-request/compare/v3.12.1...v3.13.0"">https://github.com/peter-evans/create-pull-request/compare/v3.12.1...v3.13.0</a></p>
<h2>Create Pull Request v3.12.1</h2>
<h2>What's Changed</h2>
<ul>
<li>ci: remove workflow by <a href=""https://github.com/peter-evans""><code>@​peter-evans</code></a> in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1046"">peter-evans/create-pull-request#1046</a></li>
<li>fix: add '--' to checkout command to avoid ambiguity by <a href=""https://github.com/kenji-miyake""><code>@​kenji-miyake</code></a> in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1051"">peter-evans/create-pull-request#1051</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href=""https://github.com/kenji-miyake""><code>@​kenji-miyake</code></a> made their first contribution in <a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/pull/1051"">peter-evans/create-pull-request#1051</a></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/2b011faafdcbc9ceb11414d64d0573f37c774b04""><code>2b011fa</code></a> fix: add check for missing token input (<a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/issues/1324"">#1324</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/331d02c7e2104af23ad5974d4d5cbc58a3e6dc77""><code>331d02c</code></a> fix: support github server url for pushing to fork (<a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/issues/1318"">#1318</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/d7db273d6c7206ba99224e659c982ae34a1025e3""><code>d7db273</code></a> fix: handle update after force pushing base to a new commit (<a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/issues/1307"">#1307</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/ee93d78b55ada32aa74b5e9957aac9c2523dd22c""><code>ee93d78</code></a> test: set default branch to main (<a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/issues/1310"">#1310</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/6c704eb7a8ba1daa13da0dcea9bb93a4fe530275""><code>6c704eb</code></a> docs: clarify limitations of push-to-fork with restricted token</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/88bf0de51c7487d91e1abbb4899332e602c58bbf""><code>88bf0de</code></a> docs: correct examples</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/b38e8b0abe9d7481c24e68e98786ce75981ac6e2""><code>b38e8b0</code></a> docs: replace set-output in example</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/b4d51739f96fca8047ad065eccef63442d8e99f7""><code>b4d5173</code></a> feat: switch proxy implementation (<a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/issues/1269"">#1269</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/ad43dccb4d726ca8514126628bec209b8354b6dd""><code>ad43dcc</code></a> build(deps): bump <code>@​actions/io</code> from 1.1.1 to 1.1.2 (<a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/issues/1280"">#1280</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/c2f9cef04d2ae7c1b71a6c5acdff3421b6c22cae""><code>c2f9cef</code></a> build(deps): bump <code>@​actions/exec</code> from 1.1.0 to 1.1.1 (<a href=""https://github-redirect.dependabot.com/peter-evans/create-pull-request/issues/1279"">#1279</a>)</li>
<li>Additional commits viewable in <a href=""https://github.com/peter-evans/create-pull-request/compare/v3...v4"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=peter-evans/create-pull-request&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>",dependencies,,,2023-01-09 03:18:42,2023-01-09 05:31:41,.github/workflows/update-pre-commit.yml,81fab6738bc95cda9205e867f1fac7cfbd2cd600,"dependabot[bot] labeled 2023-01-09 03:18:43,brandonwillard referenced 2023-01-09 05:31:41,brandonwillard merged 2023-01-09 05:31:41,brandonwillard closed 2023-01-09 05:31:42,brandonwillard head_ref_deleted 2023-01-09 05:31:42",codecov[bot] dependabot[bot] brandonwillard,1,True
638,1393,Update pre-commit hooks,github-actions[bot],Update versions of pre-commit hooks to latest version.,,brandonwillard,,2023-01-09 07:33:58,2023-01-09 17:56:19,.pre-commit-config.yaml,4fb9f514975b7ad124c27096101aa8976c476919 958d1f2b479f0a3d2bc0efbd229352b733fa98be,"brandonwillard referenced 2023-01-09 17:56:19,brandonwillard merged 2023-01-09 17:56:19,brandonwillard closed 2023-01-09 17:56:20,brandonwillard head_ref_deleted 2023-01-09 17:56:20",github-actions[bot] brandonwillard,0,True
639,1396,Update pre-commit hooks,github-actions[bot],Update versions of pre-commit hooks to latest version.,CI,brandonwillard,,2023-01-16 07:33:46,2023-02-06 23:29:15,.pre-commit-config.yaml,e79acedc671906b0af747db9b468c049fcc99f27,"brandonwillard auto_rebase_enabled 2023-01-16 19:49:32,brandonwillard auto_merge_disabled 2023-01-16 19:50:02,brandonwillard labeled 2023-01-18 19:34:04,brandonwillard labeled 2023-01-18 19:34:11,github-actions[bot] head_ref_force_pushed 2023-01-23 07:34:10,github-actions[bot] head_ref_force_pushed 2023-01-30 07:35:01,brandonwillard head_ref_force_pushed 2023-02-06 23:07:42,brandonwillard unlabeled 2023-02-06 23:08:13,brandonwillard auto_rebase_enabled 2023-02-06 23:08:32,brandonwillard referenced 2023-02-06 23:29:14,brandonwillard merged 2023-02-06 23:29:15,brandonwillard closed 2023-02-06 23:29:15,brandonwillard head_ref_deleted 2023-02-06 23:29:16",github-actions[bot] brandonwillard,0,True
640,1398,Fix for recent failures in setup-miniconda,brandonwillard,See https://github.com/conda-incubator/setup-miniconda/issues/274.,CI setup and installation,,,2023-01-18 19:21:12,2023-01-18 20:55:53,.github/workflows/test.yml,1c24a2c165fb0312abfd435596c23bbf97ddb8d9,"brandonwillard review_requested 2023-01-18 19:21:46,brandonwillard labeled 2023-01-18 19:21:54,brandonwillard labeled 2023-01-18 19:21:54,brandonwillard referenced 2023-01-18 20:55:53,brandonwillard merged 2023-01-18 20:55:53,brandonwillard closed 2023-01-18 20:55:53,brandonwillard head_ref_deleted 2023-01-18 20:55:57",codecov[bot] maresb brandonwillard,4,True
641,1399,Add numerical stabilization for difference of exponentials,Smit-create,Closes #1303.,enhancement graph rewriting,rlouf brandonwillard,,2023-01-20 04:17:26,2023-01-31 15:44:32,aesara/tensor/rewriting/math.py tests/tensor/test_math.py,5fbbc8a52b71917940f81a229231d64d7ce1ffcd d5a4653bdbefa25419f2cb31552380cda1710223 9d706294de4e7fd9ccaacea357e7616ee962eee4 6d7f154571af3f78d0489e4b2ef46a842812067f,"Smit-create head_ref_force_pushed 2023-01-20 11:54:10,brandonwillard mentioned 2023-01-24 04:14:26,brandonwillard subscribed 2023-01-24 04:14:26,brandonwillard head_ref_force_pushed 2023-01-25 00:55:44,brandonwillard mentioned 2023-01-25 01:01:21,brandonwillard subscribed 2023-01-25 01:01:21,brandonwillard labeled 2023-01-30 20:08:07,brandonwillard ready_for_review 2023-01-30 20:08:15,brandonwillard head_ref_force_pushed 2023-01-30 20:08:25,brandonwillard review_requested 2023-01-30 20:08:30,brandonwillard review_requested 2023-01-30 20:08:36,brandonwillard labeled 2023-01-30 20:08:43,brandonwillard auto_squash_enabled 2023-01-30 20:13:30,rlouf auto_merge_disabled 2023-01-31 15:44:12,rlouf referenced 2023-01-31 15:44:32,rlouf merged 2023-01-31 15:44:32,rlouf closed 2023-01-31 15:44:33,Smit-create head_ref_deleted 2023-02-03 00:44:39",codecov[bot] rlouf brandonwillard Smit-create,14,True
642,1402,Resolving math typo in sigmoid docstring issue,vrii14,"**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,,,2023-01-26 11:51:52,2023-01-26 12:28:54,aesara/tensor/math.py aesara/tensor/inplace.py aesara/scalar/math.py,bd727d91b4ccb92d60a7ab16ca2311c6541de8c3,"rlouf auto_rebase_enabled 2023-01-26 12:28:12,rlouf referenced 2023-01-26 12:28:54,rlouf merged 2023-01-26 12:28:54,rlouf closed 2023-01-26 12:28:54",rlouf vrii14,2,True
643,1403,Overhaul the documentation,rlouf,"In this PR I overhaul Aesara's documentation:

- Switch to Sphinx Book Theme
- Rewrite the homepage",documentation important,brandonwillard,,2023-02-03 13:00:37,2023-02-03 17:10:41,doc/conf.py requirements-rtd.txt doc/images/aesara_overview_diagram.png doc/images/aesara_logo_200.png doc/index.rst doc/environment.yml,1c9a36eb64a594373acf9c7836e256d5fa5fbcfe 118cab300a139ecaccf573c446d7f8ae8cbef17e 2f180bbdc2121ba09e273e011917d3cac3f48575 3158b212a11ee5174acc40b36fd71ca6a85cabab dda9bec482dda6f40a28ce443edb589f469af64b,"brandonwillard labeled 2023-02-03 15:04:35,brandonwillard labeled 2023-02-03 15:04:35,rlouf referenced 2023-02-03 17:10:41,rlouf merged 2023-02-03 17:10:41,rlouf closed 2023-02-03 17:10:41,rlouf head_ref_deleted 2023-02-03 17:10:47",rlouf brandonwillard,0,True
644,1404,Fix the repository URL in the documentation,rlouf,,,,,2023-02-04 06:44:48,2023-02-04 06:49:49,doc/conf.py,0e815315a5dc5a684d354c7ae911a63f3f49d703,"rlouf referenced 2023-02-04 06:49:49,rlouf merged 2023-02-04 06:49:49,rlouf closed 2023-02-04 06:49:49,rlouf head_ref_deleted 2023-02-04 06:49:53",rlouf,0,True
645,1405,Ensure git archives contains version info,carlsmedstad,"Using setuptools-scm to resolve the version of a source archive is not possible unless that information is exported during the archival process. This creates issues for downstream packagers as they must manually add version information in their packages or switch to another source.

See https://github.com/pypa/setuptools_scm/#git-archive for more information.",enhancement dependencies setup and installation,,,2023-02-04 16:40:55,2023-02-05 02:23:23,.git_archival.txt .gitattributes,9af55f42571f40f6eec96654e6a3b2cb208efe1e,"brandonwillard labeled 2023-02-05 00:10:01,brandonwillard labeled 2023-02-05 00:10:01,brandonwillard labeled 2023-02-05 00:10:01,brandonwillard review_requested 2023-02-05 00:10:13,brandonwillard referenced 2023-02-05 02:23:23,brandonwillard merged 2023-02-05 02:23:23,brandonwillard closed 2023-02-05 02:23:23,carlsmedstad mentioned 2023-02-05 02:24:03,carlsmedstad subscribed 2023-02-05 02:24:03,carlsmedstad mentioned 2023-02-05 08:14:39,carlsmedstad subscribed 2023-02-05 08:14:39",maresb carlsmedstad brandonwillard,6,True
646,1407,Adapt dev-builds settings for hatch-vcs,maresb,"When switching from setuptools to Hatch, we switched from setuptools_scm to Hatch's ""hatch-vcs"" wrapper of setuptools_scm. The keys for passing raw options to setuptools_scm need to be adapted accordingly in the `pyproject.toml`.

Closes #1406 

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",setup and installation,brandonwillard,,2023-02-05 08:49:11,2023-02-05 17:16:07,.github/workflows/dev-builds.yml,8b792d1bbe675b6f4eaa58099a75d717b6a89218,"maresb review_requested 2023-02-05 11:34:01,maresb review_requested 2023-02-05 11:35:39,brandonwillard referenced 2023-02-05 17:16:07,brandonwillard merged 2023-02-05 17:16:07,brandonwillard closed 2023-02-05 17:16:07,brandonwillard labeled 2023-02-05 17:16:19,maresb head_ref_deleted 2023-02-06 00:46:43",maresb codecov[bot] brandonwillard,1,True
647,1408,Exclude doc/ from sdist,maresb,"It seems that the doc/ directory isn't doing anything but taking up space in the sdist. (Deleting reduces the .tar.gz sdist from 3.85MB to 1.34MB.)

Note: doc/.build/PLACEHOLDER is still included. It's 14 years old now, so perhaps it is unnecessary and can be deleted?

Closes #1397


**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement setup and installation,brandonwillard,,2023-02-05 09:09:32,2023-02-19 01:03:16,LICENSE.txt pyproject.toml doc/LICENSE.txt,8b611482069bb336c829c0d904879e3353655b3d 68d923a3b9fac73da9f62605019825399f1eef87,"brandonwillard labeled 2023-02-06 23:00:37,brandonwillard labeled 2023-02-06 23:00:37,maresb head_ref_force_pushed 2023-02-18 10:52:33,dgerlanc mentioned 2023-02-18 10:55:58,dgerlanc subscribed 2023-02-18 10:55:58,brandonwillard referenced 2023-02-19 01:03:16,brandonwillard merged 2023-02-19 01:03:16,brandonwillard closed 2023-02-19 01:03:16,maresb mentioned 2023-02-19 01:04:32,maresb subscribed 2023-02-19 01:04:32,maresb head_ref_deleted 2023-02-19 08:39:30",maresb dgerlanc brandonwillard,7,True
648,1411,Update the README,rlouf,,documentation,brandonwillard,,2023-02-06 20:36:04,2023-02-08 06:26:35,README.rst README.md,fc92ad050396926f31a8e7e724951f62bdaec049,"rlouf labeled 2023-02-06 20:36:04,rlouf head_ref_force_pushed 2023-02-06 20:36:16,rlouf head_ref_force_pushed 2023-02-07 08:00:13,rlouf head_ref_force_pushed 2023-02-07 08:02:40,rlouf head_ref_force_pushed 2023-02-07 08:39:32,rlouf referenced 2023-02-08 06:26:35,rlouf merged 2023-02-08 06:26:35,rlouf closed 2023-02-08 06:26:36,rlouf head_ref_deleted 2023-02-08 06:26:40",rlouf brandonwillard,0,True
649,1412,Add `SharedVariable.default_update` graphs to `debugprint`,brandonwillard,"This PR adds a `print_default_updates` option to `debugprint` that shows all the
`SharedVariable.default_update`s in a graph.

``` python
import aesara
import aesara.tensor as at


srng = at.random.RandomStream(903902)

a = at.vector(""a"")
mu = 2 * a
sigma = srng.invgamma(0.5, 0.5, name=""sigma"")
X_rv = srng.normal(mu, at.sqrt(sigma), name=""X"")

aesara.dprint(X_rv, print_default_updates=True)
# normal_rv{0, (0, 0), floatX, False}.1 [id A] 'X'
#  |RandomGeneratorSharedVariable(<Generator(PCG64) at 0x7F2A98FAED60>) [id B] <- [id A]
#  |TensorConstant{[]} [id C]
#  |TensorConstant{11} [id D]
#  |Elemwise{mul,no_inplace} [id E]
#  | |InplaceDimShuffle{x} [id F]
#  | | |TensorConstant{2} [id G]
#  | |a [id H]
#  |Elemwise{sqrt,no_inplace} [id I]
#    |invgamma_rv{0, (0, 0), floatX, False}.1 [id J] 'sigma'
#      |RandomGeneratorSharedVariable(<Generator(PCG64) at 0x7F2A98FAEBA0>) [id K] <- [id J]
#      |TensorConstant{[]} [id L]
#      |TensorConstant{11} [id M]
#      |TensorConstant{0.5} [id N]
#      |TensorConstant{0.5} [id O]
#
# Default updates:
#
# normal_rv{0, (0, 0), floatX, False}.0 [id A]
#  |RandomGeneratorSharedVariable(<Generator(PCG64) at 0x7F2A98FAED60>) [id B] <- [id A]
#  |TensorConstant{[]} [id C]
#  |TensorConstant{11} [id D]
#  |Elemwise{mul,no_inplace} [id E]
#  |Elemwise{sqrt,no_inplace} [id I]
#
# invgamma_rv{0, (0, 0), floatX, False}.0 [id J]
#  |RandomGeneratorSharedVariable(<Generator(PCG64) at 0x7F2A98FAEBA0>) [id K] <- [id J]
#  |TensorConstant{[]} [id L]
#  |TensorConstant{11} [id M]
#  |TensorConstant{0.5} [id N]
#  |TensorConstant{0.5} [id O]
```",enhancement tooling,,brandonwillard,2023-02-06 23:28:54,2023-02-07 18:47:48,tests/graph/utils.py tests/test_printing.py aesara/printing.py,d0535e109ec00812b7adc1a9cee0cb47d5864bde,"brandonwillard head_ref_force_pushed 2023-02-06 23:29:50,brandonwillard assigned 2023-02-06 23:30:11,brandonwillard labeled 2023-02-06 23:30:24,brandonwillard labeled 2023-02-06 23:30:24,brandonwillard review_requested 2023-02-06 23:31:04,brandonwillard review_requested 2023-02-06 23:31:05,brandonwillard auto_rebase_enabled 2023-02-07 00:24:44,brandonwillard auto_merge_disabled 2023-02-07 18:47:39,brandonwillard referenced 2023-02-07 18:47:48,brandonwillard merged 2023-02-07 18:47:48,brandonwillard closed 2023-02-07 18:47:49,brandonwillard head_ref_deleted 2023-02-07 18:47:53",codecov[bot] brandonwillard,1,True
650,1413,Refactor the documentation,rlouf,"- [ ] Do we keep the d3viz stuff?
- [ ] Do we keep the stuff about multicore support?
- [ ] How to interpret the outputs of  `dprint`
- [ ] Reference for decorated functions (rewrites): See [what Celery has done](https://docs.celeryq.dev/en/latest/_modules/celery/contrib/sphinx.html). There doesn't seem to be any easy way to do it.
- [x] Make sure the list of tensor operation is exhaustive
- [x] NumPy comparison
- [ ] Scan diagram


## Structure

```
What is Aesara?
Mission
Installing Aesara
Get help
Working with Aesara
    Building Aesara graphs
    Compiling
    Serializing
    Troubleshoot
Understanding Aesara
    Aesara graphs
    Compilation
    Rewrites
Extending Aesara
```",documentation enhancement important,brandonwillard,,2023-02-07 11:22:18,2023-02-20 17:27:08,doc/reference/sparse/sparse_api.rst doc/fundamentals/rewrites/graph_rewriting.rst doc/troubleshoot/breakpoints.rst doc/fundamentals/compilation/pipeline.rst doc/conf.py doc/extend/backend/index.rst doc/reference/tensor/slinalg.rst doc/reference/tensor/operations.mathematical_functions.rst doc/reference/index.rst doc/troubleshoot/d3viz/examples/mlp2.png doc/reference/tensor/shared/index.rst doc/compile/modes.rst doc/reference/loops/loops_api.rst doc/faq.rst doc/reference/gradient/gradient_tutorial.rst doc/reference/random/utils.rst doc/troubleshoot/d3viz/examples/mlp2.pdf doc/reference/tensor/math_opt.rst doc/reference/tensor/nlinalg.rst doc/extend/op/how_to_make_ops.rst doc/reference/shapes/shape_info.rst doc/troubleshoot/d3viz/examples/mlp2.html doc/reference/tensor/bcast.svg doc/library/compile/index.rst doc/install.rst doc/reference/tensor/bcast.png doc/serializing/index.rst doc/troubleshoot/d3viz.png doc/reference/shared/shared.rst doc/fundamentals/rewrites/index.rst doc/fundamentals/graph/graph/type.rst doc/tutorial/examples.rst doc/reference/tensor/tensor.rst doc/compile/shared.rst doc/troubleshoot/d3viz/examples/ofg.html doc/extending/extending_faq.rst doc/library/index.rst doc/library/typed_list.rst doc/tutorial/bcast.png doc/sandbox/index.rst doc/reference/tensor/operations.indexing.rst doc/troubleshoot/d3viz/examples/d3viz/js/d3-context-menu.js doc/reference/sparse/sparse.rst doc/reference/tensor/plot_fft.png doc/fundamentals/graph/other_ops.rst doc/compile/rewrites/index.rst doc/serializing/pkl_utils.rst doc/compile/ops.rst doc/reference/shared/aliasing.rst doc/fundamentals/graph/graph/index.rst doc/reference/tensor/operations.tensor_creation.rst doc/reference/shapes/index.rst doc/troubleshoot/interacting_with_graph.rst doc/troubleshoot/d3viz/examples/d3viz/js/graphlib-dot.min.js doc/extend/backend/creating_a_numba_jax_op.rst doc/troubleshoot/d3viz/examples/d3viz/js/dagre-d3.min.js doc/index.rst doc/extend/rewrite.rst doc/fundamentals/compilation/index.rst doc/reference/tensor/create.rst doc/troubleshoot/unittest.rst doc/extend/op/inplace.rst doc/fundamentals/graph/apply2.svg doc/reference/tensor/operations.tensor_manipulation.rst aesara/tensor/var.py aesara/tensor/type.py doc/troubleshoot/d3viz/examples/ofg2.html doc/dev_start_guide.rst doc/extend/backend/creating_a_c_op.rst doc/compile/modes_solution_1.py doc/troubleshoot/d3viz/index_files/index_24_0.png doc/fundamentals/graph/type.rst doc/reference/shapes/bcast.svg doc/reference/compile/debugmode.rst doc/tutorial/adding.rst doc/library/graph/params_type.rst doc/reference/compile/nanguardmode.rst doc/reference/shared/index.rst doc/reference/tensor/sparse/index.rst doc/reference/random/index.rst doc/library/sandbox/linalg.rst doc/reference/gradient/gradient_api.rst doc/library/tensor/index.rst doc/tutorial/apply.png doc/fundamentals/rewrites/optimizations.rst doc/reference/random/basic.rst doc/reference/rewrites/basic_opt.rst doc/troubleshoot/d3viz/examples/d3viz/css/d3viz.css doc/tutorial/logistic.gp doc/reference/tensor/io.rst doc/compile/debugmode.rst doc/reference/compile/io.rst doc/compile/mode.rst doc/extend/op/apply2.svg doc/library/sandbox/rng_mrg.rst doc/troubleshoot/profiling.rst doc/reference/serializing/pkl_utils.rst doc/troubleshoot/d3viz/examples/d3viz/js/d3.v3.min.js doc/tutorial/faq_tutorial.rst doc/troubleshoot/logreg_pydotprint_predict.png doc/fundamentals/graph/graphstructures.rst doc/reference/sparse/index.rst doc/reference/loops/loop_solution_1.py doc/fundamentals/graph/index.rst doc/reference/tensor/basic_opt.rst doc/fundamentals/graph/graph/utils.rst doc/introduction.rst doc/reference/tensor/sparse/sandbox.rst doc/reference/tensor/sparse/sparse.rst doc/reference/tensor/utils.rst doc/fundamentals/graph/symbolic_graph_opt.png doc/troubleshoot/logreg_pydotprint_train.png doc/reference/tensor/operations.rst doc/reference/conditionals.rst doc/reference/loops/scan_extend.rst doc/tutorial/apply.svg doc/reference/tensor/operations.binary_operations.rst doc/reference/tensor/operations.sorting.rst doc/links.rst doc/reference/gradient/dlogistic.png doc/reference/sparse/sandbox.rst doc/compile/profilemode.rst doc/troubleshoot/optimisations.rst doc/tutorial/logistic.png doc/how_to_think_in_aesara.rst doc/troubleshoot/d3viz/examples/d3viz/css/d3-context-menu.css doc/reference/compile/function.rst doc/troubleshoot/printing.rst doc/fundamentals/graph/op.rst doc/reference/tensor/operations.logic.rst doc/extend/backend/ctype.rst doc/reference/tensor/elemwise.rst doc/reference/config.rst doc/help.rst doc/troubleshoot/d3viz/examples/mlp.html doc/fundamentals/graph/graph/features.rst doc/extend/op/index.rst doc/reference/serializing/index.rst doc/reference/tensor/shapes.rst doc/compile/index.rst doc/serializing/loading_and_saving.rst doc/internal/how_to_release.rst doc/glossary.rst doc/troubleshoot/d3viz/examples/d3viz/js/d3viz.js doc/reference/tensor/operations.statistics.rst doc/reference/loops/index.rst doc/reference/tensor/fft.rst doc/troubleshoot/d3viz/index.ipynb doc/fundamentals/graph/apply.png doc/reference/tensor/shared/aliasing.rst doc/reference/tensor/extra_ops.rst doc/library/scalar/index.rst doc/extend/op/creating_an_op.rst doc/reference/tensor/operations.window_functions.rst doc/library/sandbox/index.rst doc/reference/compile/ops.rst doc/reference/tensor/basic.rst doc/compile/opfromgraph.rst doc/reference/compile/shared.rst doc/fundamentals/graph/symbolic_graph_unopt.png doc/troubleshoot/d3viz/index_files/index_11_0.png doc/reference/shapes/bcast.png doc/troubleshoot/logreg_pydotprint_prediction.png doc/fundamentals/graph/using_params.rst doc/library/graph/index.rst doc/reference/compile/opfromgraph.rst doc/troubleshoot/nan_tutorial.rst doc/troubleshoot/printing_drawing.rst doc/reference/tensor/operations.linalg.rst doc/extending/extending_aesara_solution_1.py doc/extend/index.rst doc/reference/compile/profilemode.rst doc/reference/multi_cores.rst doc/reference/tensor/operations.discrete_fourier.rst doc/reference/compile/mode.rst doc/troubleshoot/index.rst doc/troubleshoot/debug_faq.rst doc/troubleshoot/d3viz/index_files/index_10_0.png doc/reference/compile/index.rst doc/reference/compile/modes_solution_1.py doc/troubleshoot/profiling_example_out.prof doc/config.rst doc/tutorial/profiling_example.py doc/reference/gradient/index.rst doc/troubleshoot/troubleshooting.rst doc/reference/rewrites/math_opt.rst doc/tutorial/index.rst doc/compile/nanguardmode.rst doc/troubleshoot/d3viz/index.rst doc/fundamentals/graph/graph/graph.rst doc/reference/tensor/sparse/sparse_api.rst doc/compile/function.rst doc/reference/tensor/index.rst doc/reference/loops/loops_tutorial.rst doc/reference/shapes/broadcasting.rst doc/reference/tensor/operations.padding.rst doc/tutorial/symbolic_graphs.rst doc/core_development_guide.rst doc/fundamentals/graph/graph/op.rst doc/fundamentals/graph/graph/fgraph.rst doc/tutorial/adding_solution_1.py doc/troubleshoot/d3viz/examples/mlp.png doc/reference/rewrites/index.rst doc/extend/op/apply.png doc/fundamentals/graph/apply.svg doc/reference/serializing/loading_and_saving.rst doc/internal/metadocumentation.rst doc/troubleshoot/d3viz/index_files/index_25_0.png doc/reference/tensor/shared/shared.rst doc/internal/index.rst doc/compile/io.rst doc/reference/compile/modes.rst .gitignore doc/extend/op/apply.svg,a9f50f8a3e59e895ad8806d682562831a1f07f0c c2afef3f01a6cc691bdfe7c7d02fbc1fb39df6d3 10e68ddca628dd4c515d7c1e9398bc069c9b2590 4a2b3433ef80b15f48cda2909ccc926cc1449bcb 4e419853ebd610712133601b63d53f6fa9286799 54e4c701d1652e48409bdaab6a072e1e0cc3f2f4 30e73e8d58804a1a5183e46ee06db8d0678c0464 7015ef62044f7382ef4a35ef4e44802c39c79933 de80a22525e31ab3b911e1d03c9bac0a14f0e35c c9c09633e86d41fecaf1aec0039d2091cca460e0 8033179502ee290ccaca60d85d6a63392e43c7c3 65090f6192a410737829f3629920f34de9cbddc9 e46bdd4e8cd83b0d4ebb07a883ea337332852c43 68e963a85c95b694f2b106531412d0cd48accf43 c5074242db1ab3d1d582a166eaf364b88e4f671d ea6accc85b0df6b9c7e374bf2ddd37baa3a9dd76 370b63099b19d5a1cb0413b2732768997e2e0469 7a8bd302a10b16a421197e836ce822d1090c61c9 ae80939cf4227027f4803b1b5ed44d86dcd8f1f2 e62d1e7be8f99fb02a92e245017780469d3d4cfd 7b0f537600e64b342ac4e2db3f4bec7bc5c24149,"rlouf labeled 2023-02-07 11:22:18,rlouf head_ref_force_pushed 2023-02-07 15:42:06,rlouf head_ref_force_pushed 2023-02-07 15:46:43,rlouf head_ref_force_pushed 2023-02-07 18:27:11,rlouf head_ref_force_pushed 2023-02-07 20:02:48,rlouf head_ref_force_pushed 2023-02-07 20:11:30,rlouf head_ref_force_pushed 2023-02-07 20:38:07,rlouf head_ref_force_pushed 2023-02-07 21:23:15,rlouf head_ref_force_pushed 2023-02-07 21:32:13,rlouf head_ref_force_pushed 2023-02-07 22:00:07,rlouf head_ref_force_pushed 2023-02-07 22:01:01,rlouf head_ref_force_pushed 2023-02-07 22:32:33,rlouf head_ref_force_pushed 2023-02-07 22:35:18,rlouf head_ref_force_pushed 2023-02-08 09:13:54,rlouf head_ref_force_pushed 2023-02-08 09:14:08,rlouf head_ref_force_pushed 2023-02-08 16:29:43,rlouf head_ref_force_pushed 2023-02-10 08:26:19,rlouf head_ref_force_pushed 2023-02-10 09:42:08,brandonwillard labeled 2023-02-10 18:11:22,rlouf head_ref_force_pushed 2023-02-11 17:58:30,rlouf head_ref_force_pushed 2023-02-13 15:03:38,brandonwillard labeled 2023-02-15 18:09:56,rlouf head_ref_force_pushed 2023-02-16 15:59:38,rlouf head_ref_force_pushed 2023-02-20 17:11:16,rlouf ready_for_review 2023-02-20 17:26:58,rlouf referenced 2023-02-20 17:27:08,rlouf merged 2023-02-20 17:27:08,rlouf closed 2023-02-20 17:27:08,rlouf head_ref_deleted 2023-02-20 17:27:11",codecov[bot] dgerlanc rlouf brandonwillard,3,True
651,1414,Rename `true_div` to `true_divide` to match with NumPy,sudarsan2k5,"Addressing #1212 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.
",refactor NumPy compatibility,brandonwillard,,2023-02-07 19:37:35,2023-02-13 19:20:31,aesara/tensor/var.py doc/library/config.rst aesara/tensor/math.py tests/scalar/test_basic.py tests/tensor/test_math.py aesara/tensor/rewriting/special.py doc/tutorial/printing_drawing.rst aesara/tensor/nnet/basic.py aesara/tensor/nnet/batchnorm.py aesara/tensor/elemwise.py doc/extending/graph_rewriting.rst tests/tensor/test_extra_ops.py tests/tensor/rewriting/test_elemwise.py aesara/scalar/basic.py tests/tensor/rewriting/test_special.py tests/tensor/rewriting/test_math.py tests/sparse/test_var.py aesara/tensor/rewriting/math.py tests/tensor/rewriting/test_basic.py aesara/scalar/math.py aesara/sparse/basic.py,cd83a1e68f889b78dc2c87f4c4ad29a921f82fb1 7a62a891deed41027ccfd573ec171282f2da2a93 5df45c126aa8fdb2e8ff3c1cc331a0d39beb08ba 1354dab03976a75098a7d8aa0038be72d18d5e1c 1331ce0609717d038b4b9f10ce13c3f3cdd5bfe5 2f956d8044525b299f31043977b08677e1a2488a,"sudarsan2k5 head_ref_force_pushed 2023-02-07 19:43:35,brandonwillard connected 2023-02-08 04:45:16,brandonwillard labeled 2023-02-08 04:45:23,brandonwillard labeled 2023-02-08 04:45:28,sudarsan2k5 head_ref_force_pushed 2023-02-08 19:37:46,rlouf mentioned 2023-02-08 19:43:27,rlouf subscribed 2023-02-08 19:43:27,rlouf mentioned 2023-02-09 17:57:31,rlouf subscribed 2023-02-09 17:57:31,sudarsan2k5 head_ref_force_pushed 2023-02-13 18:12:30,sudarsan2k5 mentioned 2023-02-13 19:20:23,sudarsan2k5 subscribed 2023-02-13 19:20:23,brandonwillard referenced 2023-02-13 19:20:31,brandonwillard merged 2023-02-13 19:20:31,brandonwillard closed 2023-02-13 19:20:31,sudarsan2k5 head_ref_deleted 2023-02-13 20:28:21",codecov[bot] rlouf sudarsan2k5 brandonwillard,12,True
652,1416,Add documentation tagline to the README,rlouf,,documentation,brandonwillard,,2023-02-08 09:18:33,2023-02-10 06:00:18,README.md,bf7df50b3a4b4e30b423777119038a0420bc2344,"rlouf labeled 2023-02-08 09:18:33,rlouf referenced 2023-02-10 06:00:18,rlouf merged 2023-02-10 06:00:18,rlouf closed 2023-02-10 06:00:18",rlouf brandonwillard,0,True
653,1417,Fix link to the mission statement in the README,sudarsan2k5,"fixes #1415 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.
",bug documentation,rlouf brandonwillard,,2023-02-09 18:12:33,2023-02-10 06:00:36,README.md,171130799e0d201688d304b1fc06817088ef5953,"brandonwillard labeled 2023-02-10 05:38:10,brandonwillard labeled 2023-02-10 05:38:10,rlouf referenced 2023-02-10 06:00:35,rlouf merged 2023-02-10 06:00:35,rlouf closed 2023-02-10 06:00:36",rlouf sudarsan2k5 brandonwillard,0,True
654,1432,Rename `floor_div` to `floor_divide` to match NumPy's API,sudarsan2k5,"Addressing #1212 

- Replaced `floor_div` with `floor_divide`
- Deprecated `int_div`

+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.


",enhancement NumPy compatibility,rlouf brandonwillard,,2023-02-13 19:09:00,2023-02-27 12:19:36,doc/images/aesara_overview_diagram.png aesara/tensor/var.py aesara/tensor/inplace.py README.md aesara/tensor/math.py aesara/compile/profiling.py tests/scalar/test_basic.py tests/tensor/test_math.py tests/link/c/test_cmodule.py aesara/tensor/elemwise.py tests/tensor/test_inplace.py tests/scalar/test_type.py tests/tensor/rewriting/test_elemwise.py aesara/scalar/basic.py aesara/scan/c_code/scan_perform.c tests/tensor/rewriting/test_special.py aesara/tensor/basic.py .github/workflows/test.yml tests/tensor/rewriting/test_math.py aesara/link/jax/dispatch/scalar.py aesara/link/numba/dispatch/elemwise.py aesara/tensor/rewriting/math.py tests/tensor/rewriting/test_basic.py,711b8c669c03b03c03d284b947fd3a67aeb01e8c 1e455e3c7f3095771c7bccba603eb244b81b82c2 d6c4170b413e2050f48fd80e552822870e2dbe6a 6b8547f3458def82f744a352175cbb31bbbdcf33,"sudarsan2k5 head_ref_force_pushed 2023-02-13 19:27:47,brandonwillard labeled 2023-02-13 19:35:16,brandonwillard labeled 2023-02-13 19:35:23,sudarsan2k5 closed 2023-02-14 18:06:39,sudarsan2k5 reopened 2023-02-14 18:06:50,sudarsan2k5 review_dismissed 2023-02-16 01:58:38,sudarsan2k5 head_ref_force_pushed 2023-02-16 01:58:38,sudarsan2k5 convert_to_draft 2023-02-16 06:15:12,sudarsan2k5 head_ref_force_pushed 2023-02-16 11:32:07,sudarsan2k5 ready_for_review 2023-02-16 11:32:28,brandonwillard mentioned 2023-02-16 11:34:45,brandonwillard subscribed 2023-02-16 11:34:45,sudarsan2k5 head_ref_force_pushed 2023-02-18 18:45:57,sudarsan2k5 head_ref_force_pushed 2023-02-20 19:24:54,sudarsan2k5 head_ref_force_pushed 2023-02-21 17:43:57,rlouf mentioned 2023-02-26 16:02:48,rlouf subscribed 2023-02-26 16:02:48,rlouf renamed 2023-02-27 08:09:06,rlouf renamed 2023-02-27 08:13:15,sudarsan2k5 mentioned 2023-02-27 08:15:20,sudarsan2k5 subscribed 2023-02-27 08:15:20,rlouf referenced 2023-02-27 12:19:36,rlouf merged 2023-02-27 12:19:36,rlouf closed 2023-02-27 12:19:36,sudarsan2k5 head_ref_deleted 2023-02-27 14:34:35",codecov[bot] rlouf sudarsan2k5 brandonwillard,18,True
655,1433,Implement RayleighRV,Smit-create,"Fixes #1351 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.


",enhancement random variables Op implementation,brandonwillard,,2023-02-14 13:02:08,2023-02-14 17:52:50,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,86b6db8c621b02b578bb74d9a7badf0851233e7a f65235740490fcf3e94701766f31ca7f7bd90128,"Smit-create review_requested 2023-02-14 13:02:16,Smit-create review_requested 2023-02-14 13:02:23,Smit-create ready_for_review 2023-02-14 15:53:00,Smit-create head_ref_force_pushed 2023-02-14 16:31:41,brandonwillard labeled 2023-02-14 17:52:09,brandonwillard labeled 2023-02-14 17:52:09,brandonwillard labeled 2023-02-14 17:52:09,brandonwillard referenced 2023-02-14 17:52:50,brandonwillard merged 2023-02-14 17:52:50,brandonwillard closed 2023-02-14 17:52:50,Smit-create head_ref_deleted 2023-02-14 17:58:29",codecov[bot] rlouf brandonwillard Smit-create,2,True
656,1434,Add sub-package-level deprecations,brandonwillard,This PR allows deprecations to be accessed via  sub-packages (e.g. `aesara.tensor.true_div` instead of `aesara.tensor.math.true_div`).,bug,,brandonwillard,2023-02-15 23:48:16,2023-02-16 01:39:50,aesara/tensor/math.py tests/scalar/test_basic.py tests/tensor/test_math.py aesara/scalar/basic.py aesara/scalar/__init__.py aesara/tensor/__init__.py,92522541da13474f8f453bdb470331429c3a38d4 9e3c2f9fb03db529c4b1f4bdb00b86b1c68e7d91,"brandonwillard labeled 2023-02-15 23:48:34,brandonwillard assigned 2023-02-15 23:48:37,brandonwillard auto_rebase_enabled 2023-02-15 23:48:44,brandonwillard head_ref_force_pushed 2023-02-15 23:56:35,brandonwillard auto_merge_disabled 2023-02-16 01:39:44,brandonwillard referenced 2023-02-16 01:39:50,brandonwillard merged 2023-02-16 01:39:50,brandonwillard closed 2023-02-16 01:39:50,brandonwillard head_ref_deleted 2023-02-16 01:39:53",codecov[bot] brandonwillard,1,True
657,1435,Add Jax WaldRV (invgauss),FredericWantiez,"This adds a Jax implementation of `WaldRV` to close #1329. I've added a cdf test but for scipy `invgauss` means `lam=1` ([here](https://docs.scipy.org/doc/scipy/reference/generated/scipy.stats.invgauss.html)), I should probably add a few more ",JAX,brandonwillard,,2023-02-16 23:15:58,2023-02-20 17:03:00,tests/link/jax/test_random.py aesara/link/jax/dispatch/random.py,a3dc64178647dcdcdfb32cd2a7ea930420dd261b,"brandonwillard labeled 2023-02-17 23:05:11,brandonwillard review_requested 2023-02-17 23:05:19,rlouf head_ref_force_pushed 2023-02-20 15:43:43,rlouf referenced 2023-02-20 17:03:00,rlouf merged 2023-02-20 17:03:00,rlouf closed 2023-02-20 17:03:00",codecov[bot] rlouf brandonwillard FredericWantiez,2,True
658,1439,Replace `sqr` with `square`,sudarsan2k5,"Fixes #1422

- Rename `sqr` for `square` 
- Deprecated `sqr`
- Added test for deprecation

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.",enhancement NumPy compatibility,brandonwillard Smit-create,sudarsan2k5,2023-02-18 20:03:12,2023-03-10 01:03:01,tests/sparse/test_basic.py tests/tensor/rewriting/test_subtensor.py aesara/tensor/math.py doc/reference/tensor/sparse/sparse_api.rst tests/tensor/rewriting/test_math.py tests/test_gradient.py tests/tensor/nnet/test_neighbours.py aesara/tensor/rewriting/math.py tests/scalar/test_basic.py aesara/gradient.py tests/tensor/rewriting/test_elemwise.py aesara/scalar/basic.py tests/tensor/test_math.py aesara/sparse/basic.py,e3c340d6e53c24187e798df51ec91bf707ec973d,"purna135 labeled 2023-02-18 20:11:35,purna135 labeled 2023-02-18 20:11:35,sudarsan2k5 head_ref_force_pushed 2023-02-20 17:16:58,sudarsan2k5 assigned 2023-02-27 23:00:56,brandonwillard renamed 2023-03-08 00:46:13,brandonwillard head_ref_force_pushed 2023-03-09 23:27:59,brandonwillard auto_rebase_enabled 2023-03-09 23:28:52,brandonwillard auto_merge_disabled 2023-03-10 01:02:55,brandonwillard referenced 2023-03-10 01:03:01,brandonwillard merged 2023-03-10 01:03:01,brandonwillard closed 2023-03-10 01:03:01,sudarsan2k5 head_ref_deleted 2023-04-26 12:13:31",purna135 rlouf sudarsan2k5 codecov[bot] brandonwillard Smit-create,4,True
659,1441,Add support for `SharedVariable.default_update`s in `OpFromGraph`,brandonwillard,"This PR adds support for `SharedVariable.default_update`s in `OpFromGraph`, and some miscellaneous fixes to issues discovered along the way.

These changes also provide a means of implementing general support for updates in `OpFromGraph` (i.e. #1316).
",bug enhancement important,,brandonwillard,2023-02-18 23:43:23,2023-02-19 23:11:17,tests/compile/function/test_pfunc.py aesara/scan/op.py aesara/compile/builders.py aesara/tensor/math.py tests/compile/test_builders.py tests/test_printing.py tests/graph/test_fg.py aesara/graph/fg.py aesara/compile/ops.py aesara/tensor/rewriting/math.py tests/compile/function/test_types.py tests/tensor/test_math.py aesara/compile/function/types.py aesara/tensor/__init__.py,50ca044365459b9bf7cd0b5ebd64f66bd90cb66c 375050a001adebf8753a76a0f967162f9746ccb6 f51726299499c2934d13f799e08b070c26dec706 6d2191b5d9300858a511e737b9ee4b4e5ed61b98 fde4748f847addadf3f2bce9f1d8befee4189629 0be1740b08f322e2b9f67cd0d891e8c26979dcc1 1247a1a0700cbe0d4dae251fcc6b368de80d01be,"brandonwillard assigned 2023-02-18 23:43:35,brandonwillard labeled 2023-02-18 23:44:02,brandonwillard labeled 2023-02-18 23:44:02,brandonwillard labeled 2023-02-18 23:44:02,brandonwillard review_requested 2023-02-18 23:44:49,brandonwillard connected 2023-02-18 23:50:08,brandonwillard head_ref_force_pushed 2023-02-19 00:58:34,brandonwillard auto_rebase_enabled 2023-02-19 00:58:44,brandonwillard head_ref_force_pushed 2023-02-19 01:03:50,brandonwillard auto_merge_disabled 2023-02-19 23:11:11,brandonwillard referenced 2023-02-19 23:11:17,brandonwillard merged 2023-02-19 23:11:17,brandonwillard closed 2023-02-19 23:11:18,brandonwillard head_ref_deleted 2023-02-19 23:11:21",codecov[bot] brandonwillard,1,True
660,1442,Update Actions versions in `update-pre-commit.yml`,brandonwillard,,CI,rlouf,brandonwillard,2023-02-19 19:31:27,2023-02-19 20:35:45,.github/workflows/update-pre-commit.yml,6c7c35ca400ecc48e5bcdad86efd8c14cd209aff,"brandonwillard assigned 2023-02-19 19:48:33,brandonwillard labeled 2023-02-19 19:48:42,brandonwillard auto_rebase_enabled 2023-02-19 19:48:50,brandonwillard referenced 2023-02-19 20:35:44,brandonwillard merged 2023-02-19 20:35:44,brandonwillard closed 2023-02-19 20:35:45",rlouf brandonwillard,0,True
661,1443,Minor improvements to index/install/intro docs,maresb,"Here are a few suggested cleanups for the docs. Please feel free to unilaterally revert any of these changes. I may make changes, but also feel free to merge now if you think it's an improvement.

I don't like that we duplicate install instructions between `index.rst` and `install.rst`. I think we should replace the ""Install Aesara"" section of `index.rst` with a link.

I was also wondering: is there some simple way to check which backend is in use?

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",documentation enhancement,,maresb,2023-02-19 20:38:22,2023-03-08 16:44:42,doc/introduction.rst doc/install.rst doc/index.rst,35059f8b68c892abfb27c21ef932076ecba1e728,"brandonwillard labeled 2023-02-27 22:57:30,maresb assigned 2023-02-27 22:57:35,brandonwillard labeled 2023-02-27 22:57:49,brandonwillard head_ref_force_pushed 2023-03-08 00:40:23,brandonwillard auto_rebase_enabled 2023-03-08 00:40:33,brandonwillard auto_merge_disabled 2023-03-08 16:44:18,brandonwillard referenced 2023-03-08 16:44:42,brandonwillard merged 2023-03-08 16:44:42,brandonwillard closed 2023-03-08 16:44:42",maresb rlouf brandonwillard,4,True
662,1444,JAX: Implement geometric RV sampling,Smit-create,"Fixes #1323 
Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

",enhancement JAX random variables,rlouf brandonwillard,,2023-02-20 12:28:56,2023-02-21 06:29:44,tests/link/jax/test_random.py aesara/link/jax/dispatch/random.py,8a9fd870dcbdf1230cf9cad3ef3fe092a8a78bc3 552346fd7c8641a9a2867f923ac45164a45a16cc,"Smit-create review_requested 2023-02-20 12:29:00,Smit-create review_requested 2023-02-20 12:29:01,brandonwillard labeled 2023-02-21 01:14:04,brandonwillard labeled 2023-02-21 01:14:04,brandonwillard labeled 2023-02-21 01:14:04,Smit-create review_dismissed 2023-02-21 05:05:24,Smit-create review_dismissed 2023-02-21 05:05:25,Smit-create head_ref_force_pushed 2023-02-21 05:05:25,Smit-create ready_for_review 2023-02-21 05:05:53,rlouf referenced 2023-02-21 06:29:44,rlouf merged 2023-02-21 06:29:44,rlouf closed 2023-02-21 06:29:45,Smit-create mentioned 2023-02-21 06:30:04,Smit-create subscribed 2023-02-21 06:30:04,Smit-create head_ref_deleted 2023-02-21 06:31:05",codecov[bot] rlouf brandonwillard Smit-create,3,True
663,1447,Update Cython-generated code for Python 3.11,brandonwillard,Closes #1446,bug important Scan,,brandonwillard,2023-02-21 02:00:07,2023-02-21 18:56:44,aesara/scan/c_code/scan_perform.c .github/workflows/test.yml,05c835a4a9b0a5358960cbbb77e2e8881ba49353 b64b4fc79954139dd66e7c2d73a535307782bfdd,"brandonwillard labeled 2023-02-21 02:00:24,brandonwillard labeled 2023-02-21 02:00:24,brandonwillard labeled 2023-02-21 02:00:24,brandonwillard auto_rebase_enabled 2023-02-21 02:00:31,brandonwillard assigned 2023-02-21 02:00:33,brandonwillard head_ref_force_pushed 2023-02-21 15:20:50,brandonwillard head_ref_force_pushed 2023-02-21 15:38:38,brandonwillard head_ref_force_pushed 2023-02-21 15:56:18,brandonwillard auto_merge_disabled 2023-02-21 18:56:06,brandonwillard referenced 2023-02-21 18:56:43,brandonwillard merged 2023-02-21 18:56:43,brandonwillard closed 2023-02-21 18:56:44,brandonwillard head_ref_deleted 2023-02-21 18:56:47",codecov[bot] rlouf brandonwillard,3,True
664,1448,Add power and zipf RV,Smit-create,"Fixes #1352 
Fixes #1350 
Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.
",enhancement random variables NumPy compatibility Op implementation,brandonwillard,,2023-02-21 12:50:39,2023-03-02 18:21:46,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,fc63b38d91a486537789d24a0670c8d010749a7a 775076df72d4436b5c3c2d84fbd8757bba31ef24,"Smit-create labeled 2023-02-21 12:51:20,Smit-create labeled 2023-02-21 12:51:20,Smit-create labeled 2023-02-21 12:51:20,Smit-create labeled 2023-02-21 12:51:20,Smit-create review_requested 2023-02-21 12:51:31,Smit-create review_requested 2023-02-21 12:51:38,rlouf closed 2023-02-21 14:49:50,rlouf reopened 2023-02-21 15:02:27,Smit-create ready_for_review 2023-02-21 17:20:29,rlouf head_ref_force_pushed 2023-02-23 14:12:04,brandonwillard head_ref_force_pushed 2023-02-27 22:58:41,brandonwillard referenced 2023-03-02 18:21:46,brandonwillard merged 2023-03-02 18:21:46,brandonwillard closed 2023-03-02 18:21:46,Smit-create head_ref_deleted 2023-03-03 04:31:20",codecov[bot] rlouf brandonwillard Smit-create,4,True
665,1450,Add GenGammaRV jax implementation,FredericWantiez,"Adding a jax implementation of `GenGammaRV`, closing #1333. Could do better with the test I've setup, but I don't think `stats.cramervonmises` can take a named `scale` argument. 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement JAX,rlouf brandonwillard,,2023-02-21 22:31:03,2023-03-10 00:22:53,tests/link/jax/test_random.py aesara/link/jax/dispatch/random.py,4d777b06c3c309cd86656c662af2d446bf018a98,"brandonwillard labeled 2023-02-22 00:02:54,brandonwillard labeled 2023-02-22 00:02:54,brandonwillard connected 2023-02-22 00:04:09,brandonwillard head_ref_force_pushed 2023-02-27 23:05:23,brandonwillard head_ref_force_pushed 2023-03-08 00:43:20,FredericWantiez head_ref_force_pushed 2023-03-08 20:24:44,FredericWantiez head_ref_force_pushed 2023-03-08 20:29:44,FredericWantiez head_ref_force_pushed 2023-03-08 22:37:40,FredericWantiez head_ref_force_pushed 2023-03-08 22:40:04,FredericWantiez ready_for_review 2023-03-08 22:50:19,brandonwillard head_ref_force_pushed 2023-03-09 23:19:17,brandonwillard auto_rebase_enabled 2023-03-09 23:21:49,brandonwillard referenced 2023-03-10 00:22:53,brandonwillard merged 2023-03-10 00:22:53,brandonwillard closed 2023-03-10 00:22:53",rlouf brandonwillard FredericWantiez,8,True
666,1451,Update README with relevant links,dgerlanc,"Adds links to the roadmap and docs in the README header. Also, I ran a lossless PNG optimizer on the Aesara Overview Diagram and reduced the size by 41%!",documentation enhancement,brandonwillard,,2023-02-21 23:54:40,2023-02-22 00:01:21,doc/images/aesara_overview_diagram.png README.md,a4d430b9b06616c7f5594b53d94309c3abcc4c12 ca67499d3edfd4b2f1e6f9e9952866b23783ccdf 62daa30f8dffa03a0a7bd800bef00868a7caba57,"dgerlanc review_requested 2023-02-21 23:54:40,brandonwillard labeled 2023-02-21 23:59:03,brandonwillard labeled 2023-02-21 23:59:03,brandonwillard auto_rebase_enabled 2023-02-22 00:00:17,brandonwillard referenced 2023-02-22 00:01:21,brandonwillard merged 2023-02-22 00:01:21,brandonwillard closed 2023-02-22 00:01:21,dgerlanc head_ref_deleted 2023-02-22 00:08:35",dgerlanc brandonwillard,0,True
667,1452,Skip test_cache_race_condition on macOS,dgerlanc,"Resolves: #1314


**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [X] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",testing MacOS,brandonwillard,,2023-02-22 00:28:59,2023-02-22 01:44:13,tests/link/c/test_cmodule.py,860748010f049ce187bec7043108472e10abcec6,"dgerlanc review_requested 2023-02-22 00:29:00,brandonwillard auto_rebase_enabled 2023-02-22 00:31:51,brandonwillard labeled 2023-02-22 00:31:58,brandonwillard labeled 2023-02-22 00:31:58,brandonwillard referenced 2023-02-22 01:44:13,brandonwillard merged 2023-02-22 01:44:13,brandonwillard closed 2023-02-22 01:44:13,dgerlanc head_ref_deleted 2023-02-22 21:23:39",dgerlanc brandonwillard,0,True
668,1454,Add tests and doc to sdist,maresb,"This makes it more viable to use the PyPI sdist for building Gentoo, as per https://github.com/aesara-devs/aesara/discussions/1453#discussioncomment-5092297

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",setup and installation,mgorny,,2023-02-23 19:39:49,2023-02-27 22:56:50,pyproject.toml,753cf7dbd61e4c53894eda0bbea49437cefacf6c 6b5261b65515ed75fc9098c237a1791f0542f7da e41eaa9951db3a83afeb7d2029a9df160cd7bd87,"brandonwillard labeled 2023-02-23 19:57:14,brandonwillard referenced 2023-02-27 22:56:50,brandonwillard merged 2023-02-27 22:56:50,brandonwillard closed 2023-02-27 22:56:50,brandonwillard head_ref_deleted 2023-02-27 22:56:51",maresb brandonwillard mgorny,3,True
669,1460,[WIP] Add Pytest Profiling and Monitoring workflow,purna135,"This pull request adds a new workflow for Pytest Profiling and Monitoring. It includes two jobs, ""profiling"" and ""monitoring"", which are run sequentially.

The ""profiling"" job installs necessary dependencies, runs Pytest with profiling options to generate a report of CPU and memory usage, and saves the report as an artifact. The ""monitoring"" job monitors CPU and memory usage, and posts a warning comment on the pull request if either exceeds 90%.


Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.",CI performance concern,,,2023-03-02 12:05:04,2023-08-24 10:44:43,.github/workflows/test.yml,62bb4d11dcfbc8e2f2dc3511a8464a1ce115e34b d4bdbde3638a3481b3b49e9320c698b7c7f827f8,"purna135 convert_to_draft 2023-03-02 13:59:06,brandonwillard labeled 2023-03-02 18:22:46,brandonwillard labeled 2023-03-02 18:22:46,brandonwillard head_ref_force_pushed 2023-03-08 00:58:38,purna135 head_ref_force_pushed 2023-03-10 05:57:36,purna135 head_ref_force_pushed 2023-03-10 12:44:23,purna135 closed 2023-08-24 10:44:43",codecov[bot] purna135 brandonwillard,1,False
670,1461,"Remove custom standard RV `Op`(s) and add remaining ""standard"" NumPy RVs",Smit-create,"Fixes #1358 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.",enhancement random variables NumPy compatibility Op implementation,brandonwillard,,2023-03-02 14:09:30,2023-03-10 01:03:31,tests/tensor/random/test_utils.py aesara/tensor/random/basic.py tests/tensor/random/test_basic.py aesara/link/jax/dispatch/random.py aesara/tensor/random/utils.py,867382cf6ff8deef286d22b029c6bcf532bec611 ffa4d81c4ea6c53fbaf86b5fdbee237dee4e0665 5dc9c804c2200f0dbc1f1c2d0eca76f4c55be363,"Smit-create labeled 2023-03-02 14:13:49,Smit-create labeled 2023-03-02 14:13:49,Smit-create labeled 2023-03-02 14:13:49,Smit-create labeled 2023-03-02 14:13:49,Smit-create head_ref_force_pushed 2023-03-03 16:58:35,Smit-create head_ref_force_pushed 2023-03-03 17:00:02,brandonwillard head_ref_force_pushed 2023-03-08 00:44:07,Smit-create head_ref_force_pushed 2023-03-09 06:52:55,Smit-create ready_for_review 2023-03-09 11:27:58,Smit-create review_requested 2023-03-09 11:28:02,brandonwillard renamed 2023-03-09 22:44:41,brandonwillard renamed 2023-03-09 22:46:54,brandonwillard renamed 2023-03-09 22:47:13,brandonwillard head_ref_force_pushed 2023-03-09 23:09:32,brandonwillard auto_rebase_enabled 2023-03-09 23:11:02,brandonwillard auto_merge_disabled 2023-03-10 01:03:24,brandonwillard referenced 2023-03-10 01:03:30,brandonwillard merged 2023-03-10 01:03:30,brandonwillard closed 2023-03-10 01:03:31,Smit-create head_ref_deleted 2023-03-10 02:37:47",codecov[bot] brandonwillard Smit-create,4,True
671,1464,Use different sample sizes for empirical JAX sampler tests,brandonwillard,"This PR increases the sample sizes for some empirical JAX sampler tests that use Cramér–von Mises.  More specifically, the Student-T and uniform sampler tests have their sample sizes increased.",bug testing JAX,,brandonwillard,2023-03-05 20:21:20,2023-03-07 23:58:00,tests/link/jax/test_random.py tests/tensor/random/test_basic.py,0d5f51733b5b169e21041fa73250d00f9afde52b faa579c2f5578e52c21534683cc5f7e6545f5ce1,"brandonwillard labeled 2023-03-05 20:21:44,brandonwillard labeled 2023-03-05 20:21:44,brandonwillard labeled 2023-03-05 20:21:44,brandonwillard assigned 2023-03-05 20:21:48,brandonwillard connected 2023-03-05 20:21:52,brandonwillard referenced 2023-03-07 23:57:59,brandonwillard merged 2023-03-07 23:58:00,brandonwillard closed 2023-03-07 23:58:00,brandonwillard head_ref_deleted 2023-03-07 23:58:03",codecov[bot] brandonwillard,1,True
672,1465,Add mention of tags and ARM environments to developer start guide,PaulScemama,"Resolves [1457](https://github.com/aesara-devs/aesara/issues/1457)

Very minimal change to the documentation for developer install guide. It

1. adds instruction to collect tags.
2. notes a possible error when using `git://` and gives instruction to resolve if the issue occurs.
3. notes using `environment-arm.yml` when creating conda environment if using ARM processor.

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [] There are tests covering the changes introduced in the PR.

Not sure how to write a test for this, or if that is even necessary. Let me know!
",documentation enhancement,brandonwillard,,2023-03-07 01:14:27,2023-03-09 22:42:34,doc/dev_start_guide.rst,6c36840a1a5090bb898a9546e1166797429be974 ab87369596486b19196cafd7613254b52b72258e,"brandonwillard head_ref_force_pushed 2023-03-08 00:44:30,brandonwillard labeled 2023-03-08 00:45:24,PaulScemama renamed 2023-03-08 17:19:11,brandonwillard mentioned 2023-03-08 17:19:47,brandonwillard subscribed 2023-03-08 17:19:48,rlouf mentioned 2023-03-08 17:19:48,rlouf subscribed 2023-03-08 17:19:48,brandonwillard labeled 2023-03-09 22:39:28,brandonwillard renamed 2023-03-09 22:41:47,brandonwillard referenced 2023-03-09 22:42:34,brandonwillard merged 2023-03-09 22:42:34,brandonwillard closed 2023-03-09 22:42:35",rlouf PaulScemama brandonwillard,3,True
673,1466,Fix new RTD build failures,brandonwillard,"This PR attempts to fix recent RTD build failures.

Locally, it looks like the deprecated HTML4 conversion option is causing an issue with HTML generation of tables.

Closes #1462",bug documentation,,,2023-03-07 23:36:24,2023-03-08 00:33:46,aesara/tensor/basic.py doc/conf.py doc/reference/tensor/sparse/sparse_api.rst doc/environment.yml doc/compile/modes.rst readthedocs.yml,08526fb0b3bbf80d99758d2db79dcc3f37ce1d38 b40ef273a7589136242e3f9e081be8b29877a4c2 64a36f4d641a773e18aea1a8d06e2bcbb970a8f9 660b3f3c7d8910e6945cabafaf1c084d951a34f3 86142ab29eb1250c98fd8354a913acb0c4d9e327 727633bfc69d0d3e47c926e927dad0a5ed04fa91 9cc486e3f74365478da80c56e75f5042a3ec7b3f,"brandonwillard labeled 2023-03-07 23:36:37,brandonwillard labeled 2023-03-07 23:36:37,brandonwillard head_ref_force_pushed 2023-03-07 23:40:27,brandonwillard head_ref_force_pushed 2023-03-08 00:23:34,brandonwillard auto_rebase_enabled 2023-03-08 00:29:13,brandonwillard auto_merge_disabled 2023-03-08 00:33:40,brandonwillard referenced 2023-03-08 00:33:46,brandonwillard merged 2023-03-08 00:33:46,brandonwillard closed 2023-03-08 00:33:46,brandonwillard head_ref_deleted 2023-03-08 00:33:50",brandonwillard,0,True
674,1468,Don't build bin package,carlsmedstad,"This package has a high probability of conflicting with another package due to the generic name. It is also redundant since the executable now lives in aesara/bin/.
",bug setup and installation,brandonwillard,,2023-03-11 13:24:44,2023-03-12 00:05:28,pyproject.toml,aaf5e68dafc2f17942f82e89b14434353fe2cc50,"brandonwillard review_requested 2023-03-11 20:44:56,brandonwillard labeled 2023-03-11 20:45:20,brandonwillard labeled 2023-03-11 20:45:20,carlsmedstad mentioned 2023-03-12 00:00:27,carlsmedstad subscribed 2023-03-12 00:00:27,maresb closed 2023-03-12 00:05:28,carlsmedstad head_ref_deleted 2023-03-12 00:10:25",maresb carlsmedstad brandonwillard,4,False
675,1471,gh: refactor community files,SauravMaheshkar,This PR aims to move the `CONTRIBUTING.md` and `CODE_OF_CONDUCT.md` files from the root of the directory to the `.github/` directory. Github looks for a contribution guideline file in the following order: `.github dir > project root > docs dir` ([source](https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/setting-guidelines-for-repository-contributors)). Moving the file to the `.github/` dir leads to a minimal project structure without any functional change.,,dgerlanc,,2023-03-13 21:50:34,2023-04-01 23:54:25,pyproject.toml README.md .github/CONTRIBUTING.md .github/CODE_OF_CONDUCT.md,01337dfb67df0a043ff5f9a97bbe4ab6bbf0fd5f,"soraros unsubscribed 2023-03-13 22:09:58,brandonwillard review_requested 2023-03-14 23:00:08,brandonwillard review_requested 2023-03-14 23:00:08,dgerlanc mentioned 2023-03-17 09:54:30,dgerlanc subscribed 2023-03-17 09:54:30,dgerlanc mentioned 2023-03-19 20:02:27,dgerlanc subscribed 2023-03-19 20:02:27,dgerlanc mentioned 2023-03-24 17:37:44,dgerlanc subscribed 2023-03-24 17:37:44,SauravMaheshkar review_request_removed 2023-03-26 07:34:35,SauravMaheshkar review_requested 2023-03-26 07:34:35,dgerlanc referenced 2023-04-01 23:54:25,dgerlanc merged 2023-04-01 23:54:25,dgerlanc closed 2023-04-01 23:54:25",SauravMaheshkar dgerlanc soraros brandonwillard,6,True
676,1475,Fix a typo in JAX `gengamma`,Smit-create,"**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Fixes #1472 ",bug JAX random variables,brandonwillard,,2023-03-14 17:58:11,2023-03-15 00:20:26,tests/link/jax/test_scalar.py aesara/link/jax/dispatch/random.py,fb57b6efad0e92dee2bc0f60b719c062259440e5 7c70e137331f497cbd8329b30e5e47cf0453b74a,"Smit-create labeled 2023-03-14 18:09:41,Smit-create labeled 2023-03-14 18:09:41,Smit-create labeled 2023-03-14 18:09:41,brandonwillard review_dismissed 2023-03-14 23:08:27,brandonwillard head_ref_force_pushed 2023-03-14 23:09:01,brandonwillard ready_for_review 2023-03-14 23:11:38,brandonwillard renamed 2023-03-14 23:11:57,brandonwillard auto_rebase_enabled 2023-03-14 23:33:07,brandonwillard referenced 2023-03-15 00:20:26,brandonwillard merged 2023-03-15 00:20:26,brandonwillard closed 2023-03-15 00:20:26,Smit-create mentioned 2023-03-15 00:20:41,Smit-create subscribed 2023-03-15 00:20:41,Smit-create head_ref_deleted 2023-03-15 04:08:36,soraros unsubscribed 2023-03-16 13:02:37",codecov[bot] soraros brandonwillard Smit-create,2,True
677,1476,Create a base type for shared RNG variables,brandonwillard,This PR creates a base type for shared RNG variables (i.e. a base class for `RandomStateSharedVariable` and `RandomGeneratorSharedVariable`) and fills in some type hints for `SharedVariable` itself.,enhancement random variables graph objects typing,,brandonwillard,2023-03-16 22:31:01,2023-03-17 15:53:13,aesara/compile/sharedvalue.py aesara/tensor/random/var.py,7fa7024760d6f919d4a3d6cea81705806b24737d,"brandonwillard labeled 2023-03-16 22:31:39,brandonwillard labeled 2023-03-16 22:31:39,brandonwillard labeled 2023-03-16 22:31:39,brandonwillard labeled 2023-03-16 22:31:39,brandonwillard assigned 2023-03-16 22:31:42,brandonwillard head_ref_force_pushed 2023-03-16 22:31:56,brandonwillard auto_rebase_enabled 2023-03-16 22:32:01,brandonwillard head_ref_force_pushed 2023-03-16 22:35:35,brandonwillard auto_merge_disabled 2023-03-17 15:53:04,brandonwillard referenced 2023-03-17 15:53:13,brandonwillard merged 2023-03-17 15:53:13,brandonwillard closed 2023-03-17 15:53:13,brandonwillard head_ref_deleted 2023-03-17 15:53:18",codecov[bot] brandonwillard,1,True
678,1480,Add JAX implementation for `InvGammaRV`,PaulScemama,"This PR is a draft to close https://github.com/aesara-devs/aesara/issues/1368. Furthermore, I had to change the `.pre-commit-config.yaml` slightly to pass the `mypy` check. This bug has been discussed in https://github.com/aesara-devs/aesara/discussions/1474#discussioncomment-5362160.

@brandonwillard @rlouf let me know what you both think regarding the `types-setuptools` issue. If it hasn't affected anyone else then I would assume you wouldn't want the change to the `.pre-commit-config.yaml`. 


Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.


*EDIT*: 

Something that I didn't realize in the beginning...from [wolfram](https://reference.wolfram.com/language/ref/InverseGammaDistribution.html): 

""the inverse gamma distribution with shape parameter $\\alpha$ and scale parameter $\\beta$ is the distribution followed by the inverse of a gamma distribution with shape parameter $\\alpha$ and **scale parameter** $\\color{red} 1 / \\beta$.""

Could be useful to say something like:

""the InvGamma(shape, scale) is equivalent to taking the reciprocal of samples from a Gamma(shape, 1 / scale) distribution"" in the docs. 

",JAX random variables,brandonwillard,,2023-03-19 21:28:12,2023-03-23 23:34:39,tests/link/jax/test_random.py aesara/link/jax/dispatch/random.py,eda2f5053b139ec4b7002dedb85d9199be69deba,"brandonwillard mentioned 2023-03-19 21:28:12,brandonwillard subscribed 2023-03-19 21:28:12,rlouf mentioned 2023-03-19 21:28:12,rlouf subscribed 2023-03-19 21:28:13,soraros unsubscribed 2023-03-20 02:10:36,brandonwillard labeled 2023-03-20 16:52:12,brandonwillard labeled 2023-03-20 16:52:43,PaulScemama head_ref_force_pushed 2023-03-22 23:43:56,PaulScemama head_ref_force_pushed 2023-03-23 00:09:22,PaulScemama head_ref_force_pushed 2023-03-23 00:11:44,PaulScemama head_ref_force_pushed 2023-03-23 00:15:47,PaulScemama head_ref_force_pushed 2023-03-23 00:17:05,dgerlanc mentioned 2023-03-23 01:21:34,dgerlanc subscribed 2023-03-23 01:21:34,brandonwillard mentioned 2023-03-23 01:21:34,brandonwillard subscribed 2023-03-23 01:21:34,rlouf mentioned 2023-03-23 01:21:34,rlouf subscribed 2023-03-23 01:21:34,PaulScemama renamed 2023-03-23 01:56:11,brandonwillard mentioned 2023-03-23 12:05:03,brandonwillard subscribed 2023-03-23 12:05:04,brandonwillard head_ref_force_pushed 2023-03-23 22:12:30,brandonwillard head_ref_force_pushed 2023-03-23 22:13:47,brandonwillard auto_rebase_enabled 2023-03-23 22:20:10,brandonwillard referenced 2023-03-23 23:34:39,brandonwillard merged 2023-03-23 23:34:39,brandonwillard closed 2023-03-23 23:34:40,PaulScemama mentioned 2023-03-23 23:38:54,PaulScemama subscribed 2023-03-23 23:38:54,brandonwillard mentioned 2023-03-23 23:44:05,brandonwillard subscribed 2023-03-23 23:44:05",rlouf PaulScemama soraros codecov[bot] brandonwillard dgerlanc,7,True
679,1481,Adjust `RandomTypeSharedVariable.__str__`,brandonwillard,This PR fixes the string representation of `RandomTypeSharedVariable` so that it only displays the class name.,enhancement random variables,,brandonwillard,2023-03-20 23:29:43,2023-03-21 00:33:33,tests/tensor/random/test_var.py aesara/tensor/random/var.py,93c436e4b0094d45cdfee7e543af07e636b59502,"brandonwillard labeled 2023-03-20 23:33:45,brandonwillard labeled 2023-03-20 23:33:45,brandonwillard assigned 2023-03-20 23:34:20,brandonwillard referenced 2023-03-21 00:33:33,brandonwillard merged 2023-03-21 00:33:33,brandonwillard closed 2023-03-21 00:33:33,brandonwillard head_ref_deleted 2023-03-21 00:33:37",brandonwillard,0,True
680,1482,Update `pre-commit` config,brandonwillard,This PR updates the `pre-commit` config and addresses a Mypy error involving an import from `setuptools._distutils.errors` in `aesara.link.c.exceptions`.,bug important typing,,,2023-03-21 00:31:12,2023-03-21 02:30:06,aesara/tensor/shape.py tests/compile/test_builders.py aesara/link/c/cmodule.py aesara/link/jax/dispatch/elemwise.py tests/tensor/nnet/test_corr.py tests/sparse/test_basic.py tests/tensor/_test_mpi_roundtrip.py tests/tensor/test_var.py tests/tensor/signal/test_conv.py tests/tensor/test_keepdims.py aesara/tensor/rewriting/basic.py aesara/graph/fg.py tests/link/test_link.py tests/scan/test_printing.py aesara/compile/profiling.py aesara/tensor/rewriting/shape.py aesara/tensor/slinalg.py aesara/tensor/extra_ops.py aesara/compile/function/types.py tests/typed_list/test_basic.py aesara/link/utils.py aesara/scan/scan_perform_ext.py tests/tensor/utils.py aesara/tensor/blas.py aesara/printing.py tests/graph/test_compute_test_value.py tests/graph/test_features.py aesara/link/c/cutils.py tests/tensor/test_shape.py tests/tensor/nnet/test_batchnorm.py tests/tensor/nnet/test_blocksparse.py tests/graph/rewriting/test_basic.py aesara/scalar/basic.py tests/unittest_tools.py tests/compile/function/test_pfunc.py tests/link/jax/test_random.py tests/tensor/rewriting/test_math.py aesara/misc/check_duplicate_key.py tests/tensor/nnet/test_neighbours.py aesara/tensor/fourier.py tests/tensor/random/test_utils.py tests/sparse/test_var.py tests/tensor/rewriting/test_basic.py tests/tensor/nnet/test_abstract_conv.py aesara/scalar/math.py aesara/sparse/basic.py aesara/link/jax/dispatch/subtensor.py aesara/link/numba/dispatch/sparse.py aesara/tensor/io.py aesara/link/numba/dispatch/tensor_basic.py .pre-commit-config.yaml aesara/link/numba/dispatch/nlinalg.py tests/link/jax/test_shape.py aesara/tensor/var.py tests/graph/test_op.py tests/tensor/random/test_op.py aesara/link/numba/dispatch/extra_ops.py aesara/tensor/subtensor.py tests/compile/function/test_types.py tests/link/c/test_basic.py tests/link/numba/test_tensor_basic.py tests/scalar/test_basic.py aesara/tensor/nnet/conv.py tests/link/numba/test_scan.py tests/link/numba/test_sparse.py aesara/tensor/elemwise.py tests/test_breakpoint.py aesara/link/numba/dispatch/basic.py aesara/tensor/random/basic.py tests/tensor/test_type_other.py tests/compile/function/test_function.py aesara/raise_op.py tests/scan/test_basic.py tests/tensor/test_nlinalg.py tests/tensor/test_subtensor.py tests/test_config.py tests/graph/test_basic.py aesara/tensor/rewriting/math.py aesara/tensor/nnet/rewriting.py aesara/ifelse.py tests/sparse/sandbox/test_sp.py aesara/link/jax/dispatch/extra_ops.py aesara/link/jax/dispatch/slinalg.py aesara/scan/rewriting.py aesara/sparse/rewriting.py tests/misc/test_may_share_memory.py aesara/tensor/nlinalg.py tests/sandbox/test_rng_mrg.py aesara/gradient.py tests/tensor/test_elemwise.py tests/tensor/nnet/test_corr3d.py tests/test_updates.py tests/tensor/rewriting/test_shape.py aesara/tensor/math.py tests/compile/test_profiling.py tests/scan/test_views.py tests/tensor/nnet/test_basic.py tests/tensor/test_math.py aesara/typed_list/rewriting.py tests/graph/rewriting/test_unify.py aesara/scan/op.py aesara/tensor/nnet/basic.py aesara/tensor/type_other.py tests/link/numba/test_elemwise.py aesara/compile/debugmode.py tests/tensor/rewriting/test_elemwise.py tests/compile/test_debugmode.py aesara/compile/builders.py tests/tensor/random/test_rewriting.py tests/graph/test_fg.py aesara/link/numba/dispatch/elemwise.py tests/compile/test_shared.py aesara/sparse/sandbox/sp.py aesara/tensor/random/rewriting/basic.py tests/test_raise_op.py aesara/utils.py aesara/link/numba/dispatch/scalar.py aesara/link/c/params_type.py aesara/tensor/nnet/abstract_conv.py tests/tensor/random/test_basic.py aesara/link/c/basic.py aesara/scan/basic.py aesara/tensor/elemwise_cgen.py tests/link/numba/test_basic.py tests/compile/test_compilelock.py aesara/tensor/fft.py tests/tensor/test_blas.py tests/tensor/test_basic.py aesara/sandbox/linalg/ops.py aesara/link/jax/dispatch/shape.py aesara/graph/rewriting/basic.py aesara/link/numba/dispatch/scan.py aesara/link/vm.py tests/scan/test_rewriting.py tests/tensor/signal/test_pool.py tests/test_printing.py aesara/graph/utils.py aesara/tensor/rewriting/extra_ops.py aesara/typed_list/type.py tests/tensor/rewriting/test_uncanonicalize.py tests/link/jax/test_basic.py aesara/link/numba/dispatch/random.py aesara/link/c/op.py aesara/breakpoint.py tests/link/test_utils.py tests/link/test_vm.py tests/sparse/test_rewriting.py aesara/sandbox/rng_mrg.py tests/tensor/random/test_type.py tests/tensor/rewriting/test_subtensor.py aesara/tensor/rewriting/subtensor.py tests/link/c/test_cmodule.py aesara/configdefaults.py aesara/compile/function/pfunc.py tests/graph/test_destroyhandler.py tests/scan/test_utils.py tests/tensor/test_extra_ops.py tests/graph/rewriting/test_utils.py aesara/link/c/exceptions.py aesara/scan/utils.py tests/test_ifelse.py aesara/tensor/basic.py tests/tensor/random/test_var.py tests/link/jax/test_scan.py aesara/graph/basic.py tests/tensor/test_fourier.py aesara/updates.py tests/tensor/nnet/test_conv.py,e137dd8aff859e60700595d789253fd3424e1386,"brandonwillard head_ref_force_pushed 2023-03-21 00:35:59,brandonwillard head_ref_force_pushed 2023-03-21 00:39:38,brandonwillard labeled 2023-03-21 00:40:49,brandonwillard labeled 2023-03-21 00:42:24,brandonwillard labeled 2023-03-21 00:42:24,brandonwillard head_ref_force_pushed 2023-03-21 00:43:26,brandonwillard referenced 2023-03-21 02:30:06,brandonwillard merged 2023-03-21 02:30:06,brandonwillard closed 2023-03-21 02:30:06,brandonwillard head_ref_deleted 2023-03-21 02:30:09",codecov[bot] brandonwillard,1,True
681,1483,Remove support for Python 3.7,brandonwillard,This PR removes explicit Python 3.7 support.,important dependencies,maresb,,2023-03-21 00:34:19,2023-03-22 00:49:32,.pre-commit-config.yaml pyproject.toml .github/workflows/test.yml,20fb999882620b4d704d86f27b1f8de667d5a450 6412d252ed37db13e1df3592bef4a68ba260bae9,"brandonwillard labeled 2023-03-21 00:34:59,brandonwillard review_requested 2023-03-21 00:35:05,brandonwillard head_ref_force_pushed 2023-03-21 00:35:22,brandonwillard labeled 2023-03-21 00:36:30,brandonwillard convert_to_draft 2023-03-21 00:40:25,maresb head_ref_force_pushed 2023-03-21 09:25:21,maresb head_ref_force_pushed 2023-03-21 09:48:25,maresb head_ref_force_pushed 2023-03-21 09:54:29,brandonwillard mentioned 2023-03-21 09:58:31,brandonwillard subscribed 2023-03-21 09:58:31,maresb head_ref_force_pushed 2023-03-21 10:27:59,brandonwillard ready_for_review 2023-03-22 00:49:01,brandonwillard referenced 2023-03-22 00:49:32,brandonwillard merged 2023-03-22 00:49:32,brandonwillard closed 2023-03-22 00:49:32,brandonwillard head_ref_deleted 2023-03-22 00:49:36,maresb mentioned 2023-03-22 00:50:02,maresb subscribed 2023-03-22 00:50:03",maresb codecov[bot] brandonwillard,4,True
682,1484,Add pyupgrade as pre-commit hook,maresb,"This builds on #1483.

Pyupgrade upgrades idiomatic Python code to a particular minimum version. Thus it does things like replacing `.format` with f-strings, and updating some imports. It gives a substantial increase in code quality IMO.

**Thank you for opening a PR!**

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [ ] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",,brandonwillard,,2023-03-21 10:32:04,2023-03-22 10:30:30,tests/tensor/test_slinalg.py aesara/link/c/basic.py aesara/configparser.py aesara/scan/basic.py aesara/tensor/shape.py tests/tensor/test_blas.py tests/compile/test_builders.py .pre-commit-config.yaml aesara/link/c/cmodule.py tests/sparse/sandbox/test_sp.py aesara/graph/type.py tests/tensor/test_basic.py aesara/tensor/nlinalg.py aesara/tensor/random/op.py aesara/gradient.py aesara/tensor/var.py tests/tensor/test_complex.py aesara/graph/rewriting/basic.py aesara/tensor/rewriting/elemwise.py tests/sparse/test_basic.py tests/tensor/rewriting/test_shape.py aesara/tensor/math.py tests/tensor/nnet/speed_test_conv.py tests/tensor/nnet/test_basic.py tests/test_gradient.py aesara/graph/utils.py tests/tensor/nnet/test_sigm.py aesara/graph/fg.py aesara/link/c/interface.py aesara/tensor/slinalg.py aesara/tensor/rewriting/shape.py aesara/link/numba/dispatch/random.py aesara/link/c/type.py aesara/compile/function/types.py tests/tensor/test_special.py aesara/graph/rewriting/utils.py aesara/scan/op.py tests/link/numba/test_scan.py aesara/tensor/elemwise.py aesara/tensor/blas.py tests/tensor/test_blas_c.py aesara/sparse/type.py aesara/printing.py aesara/compile/mode.py tests/graph/test_destroyhandler.py tests/graph/test_features.py tests/link/c/test_params_type.py tests/tensor/test_shape.py aesara/link/numba/dispatch/basic.py tests/tensor/nnet/test_batchnorm.py tests/tensor/rewriting/test_elemwise.py aesara/scalar/basic.py tests/scan/test_basic.py aesara/tensor/random/utils.py tests/compile/function/test_pfunc.py aesara/scan/utils.py tests/compile/test_debugmode.py tests/tensor/test_nlinalg.py tests/tensor/test_subtensor.py .github/workflows/test.yml aesara/tensor/basic.py tests/test_ifelse.py tests/tensor/rewriting/test_math.py tests/link/jax/test_scan.py aesara/graph/basic.py tests/tensor/test_sort.py tests/tensor/test_fourier.py aesara/graph/op.py tests/tensor/rewriting/test_basic.py pyproject.toml aesara/link/c/params_type.py,20fb999882620b4d704d86f27b1f8de667d5a450 bd2ac007db2d451ac58b050d313e2b9053c0e1d2 ccca39738fd3938b68814c237cbc5c5f5deac267 6412d252ed37db13e1df3592bef4a68ba260bae9,"soraros unsubscribed 2023-03-21 13:19:12,maresb ready_for_review 2023-03-21 14:48:22,maresb referenced 2023-03-22 10:30:30,maresb merged 2023-03-22 10:30:30,maresb closed 2023-03-22 10:30:30,maresb head_ref_deleted 2023-03-22 10:30:36",maresb soraros codecov[bot] brandonwillard,1,True
683,1485,Implement ConvolveOp,Smit-create,"Fixes #1223 
Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.

Don't worry, your PR doesn't need to be in perfect order to submit it.  As development progresses and/or reviewers request changes, you can always [rewrite the history](https://git-scm.com/book/en/v2/Git-Tools-Rewriting-History#_rewriting_history) of your feature/PR branches.

If your PR is an ongoing effort and you would like to involve us in the process, simply make it a [draft PR](https://docs.github.com/en/free-pro-team@latest/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests).
",enhancement NumPy compatibility Op implementation,brandonwillard,,2023-03-26 14:56:56,2023-04-23 19:30:29,aesara/tensor/math.py aesara/tensor/basic.py tests/tensor/test_math.py,f64018b7b01dcaf63df91fb21814d790614a47ee,"Smit-create head_ref_force_pushed 2023-03-29 14:33:58,brandonwillard labeled 2023-03-29 21:23:02,brandonwillard labeled 2023-03-29 21:23:02,brandonwillard labeled 2023-03-29 21:23:02,Smit-create review_requested 2023-04-02 15:08:40,Smit-create review_requested 2023-04-08 07:59:30,Smit-create ready_for_review 2023-04-09 06:29:05,Smit-create head_ref_force_pushed 2023-04-22 14:18:42,brandonwillard head_ref_force_pushed 2023-04-23 01:13:12,brandonwillard head_ref_force_pushed 2023-04-23 01:27:21,brandonwillard head_ref_force_pushed 2023-04-23 01:35:56,brandonwillard review_dismissed 2023-04-23 01:44:41,brandonwillard head_ref_force_pushed 2023-04-23 01:44:41,brandonwillard mentioned 2023-04-23 17:00:14,brandonwillard subscribed 2023-04-23 17:00:14,brandonwillard referenced 2023-04-23 19:30:29,brandonwillard merged 2023-04-23 19:30:29,brandonwillard closed 2023-04-23 19:30:30,Smit-create head_ref_deleted 2023-04-23 19:59:37,Smit-create mentioned 2023-05-03 15:50:56,Smit-create subscribed 2023-05-03 15:50:56",codecov[bot] maresb brandonwillard Smit-create,10,True
684,1486,Update pre-commit hooks,github-actions[bot],Update pre-commit hooks to their latest versions.,,brandonwillard,,2023-03-27 07:33:54,2023-04-06 20:05:26,.pre-commit-config.yaml,4285e60e3cf18bba236acd039b697079df17de35,"brandonwillard auto_rebase_enabled 2023-03-28 00:35:33,github-actions[bot] review_dismissed 2023-04-03 07:34:32,github-actions[bot] head_ref_force_pushed 2023-04-03 07:34:32,brandonwillard head_ref_force_pushed 2023-04-06 19:57:51,brandonwillard referenced 2023-04-06 20:05:26,brandonwillard merged 2023-04-06 20:05:26,brandonwillard closed 2023-04-06 20:05:26,brandonwillard head_ref_deleted 2023-04-06 20:05:27",github-actions[bot] brandonwillard,0,True
685,1487,Enable `pip` caching in CI,SauravMaheshkar,This PR sets the `cache` and `cache-dependency-path` argument of `actions/setup-python` to enable pip caching.,enhancement CI,brandonwillard,,2023-04-02 23:07:35,2023-04-08 21:34:15,.github/workflows/test.yml .github/workflows/update-pre-commit.yml .pre-commit-config.yaml .github/workflows/dev-builds.yml .github/workflows/pypi.yml,e4d64900f0036d91e4daec6133733260159dfdd2 9ad45929fbc35092560e2399c8aef57cbc9645a7,"brandonwillard auto_rebase_enabled 2023-04-06 20:01:17,brandonwillard renamed 2023-04-06 20:01:27,brandonwillard renamed 2023-04-06 20:01:33,brandonwillard labeled 2023-04-06 20:01:40,brandonwillard labeled 2023-04-06 20:01:44,brandonwillard referenced 2023-04-08 21:34:15,brandonwillard merged 2023-04-08 21:34:15,brandonwillard closed 2023-04-08 21:34:15,SauravMaheshkar head_ref_deleted 2023-04-11 17:31:12",SauravMaheshkar codecov[bot] brandonwillard,1,True
686,1489,Bump peter-evans/create-pull-request from 4 to 5,dependabot[bot],"Bumps [peter-evans/create-pull-request](https://github.com/peter-evans/create-pull-request) from 4 to 5.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/peter-evans/create-pull-request/releases"">peter-evans/create-pull-request's releases</a>.</em></p>
<blockquote>
<h2>Create Pull Request v5.0.0</h2>
<h2>Behaviour changes</h2>
<ul>
<li>The action will no longer leave the local repository checked out on the pull request <code>branch</code>. Instead, it will leave the repository checked out on the branch or commit that it was when the action started.</li>
<li>When using <code>add-paths</code>, uncommitted changes will no longer be destroyed. They will be stashed and restored at the end of the action run.</li>
</ul>
<h2>What's new</h2>
<ul>
<li>Adds input <code>body-path</code>, the path to a file containing the pull request body.</li>
<li>At the end of the action run the local repository is now checked out on the branch or commit that it was when the action started.</li>
<li>Any uncommitted tracked or untracked changes are now stashed and restored at the end of the action run. Currently, this can only occur when using the <code>add-paths</code> input, which allows for changes to not be committed. Previously, any uncommitted changes would be destroyed.</li>
<li>The proxy implementation has been revised but is not expected to have any change in behaviour. It continues to support the standard environment variables <code>http_proxy</code>, <code>https_proxy</code> and <code>no_proxy</code>.</li>
<li>Now sets the git <code>safe.directory</code> configuration for the local repository path. The configuration is removed when the action completes. Fixes issue <a href=""https://redirect.github.com/peter-evans/create-pull-request/issues/1170"">peter-evans/create-pull-request#1170</a>.</li>
<li>Now determines the git directory path using the <code>git rev-parse --git-dir</code> command. This allows users with custom repository configurations to use the action.</li>
<li>Improved handling of the <code>team-reviewers</code> input and associated errors.</li>
</ul>
<h2>News</h2>
<p>:trophy:  create-pull-request won <a href=""https://twitter.com/peterevans0/status/1638463617686470657?s=20"">an award</a> for &quot;awesome action&quot; at the Open Source Awards at GitHub Universe. Thank you for your support and for making create-pull-request one of the top used actions. Please give it a :star:, or even <a href=""https://github.com/sponsors/peter-evans"">buy me a coffee</a>.</p>
<h2>What's Changed</h2>
<ul>
<li>v5 by <a href=""https://github.com/peter-evans""><code>@​peter-evans</code></a> in <a href=""https://redirect.github.com/peter-evans/create-pull-request/pull/1792"">peter-evans/create-pull-request#1792</a></li>
<li>15 dependency updates by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/peter-evans/create-pull-request/compare/v4.2.4...v5.0.0"">https://github.com/peter-evans/create-pull-request/compare/v4.2.4...v5.0.0</a></p>
<h2>Create Pull Request v4.2.4</h2>
<p>⚙️ Patches some recent security vulnerabilities.</p>
<h2>What's Changed</h2>
<ul>
<li>Update concepts-guidelines.md by <a href=""https://github.com/chrisbruford""><code>@​chrisbruford</code></a> in <a href=""https://redirect.github.com/peter-evans/create-pull-request/pull/1610"">peter-evans/create-pull-request#1610</a></li>
<li>58 dependency updates by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a href=""https://github.com/chrisbruford""><code>@​chrisbruford</code></a> made their first contribution in <a href=""https://redirect.github.com/peter-evans/create-pull-request/pull/1610"">peter-evans/create-pull-request#1610</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/peter-evans/create-pull-request/compare/v4.2.3...v4.2.4"">https://github.com/peter-evans/create-pull-request/compare/v4.2.3...v4.2.4</a></p>
<h2>Create Pull Request v4.2.3</h2>
<h2>What's Changed</h2>
<ul>
<li>fix: add check for missing token input by <a href=""https://github.com/peter-evans""><code>@​peter-evans</code></a> in <a href=""https://redirect.github.com/peter-evans/create-pull-request/pull/1324"">peter-evans/create-pull-request#1324</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/peter-evans/create-pull-request/compare/v4.2.2...v4.2.3"">https://github.com/peter-evans/create-pull-request/compare/v4.2.2...v4.2.3</a></p>
<h2>Create Pull Request v4.2.2</h2>
<h2>What's Changed</h2>
<ul>
<li>fix: support github server url for pushing to fork by <a href=""https://github.com/peter-evans""><code>@​peter-evans</code></a> in <a href=""https://redirect.github.com/peter-evans/create-pull-request/pull/1318"">peter-evans/create-pull-request#1318</a></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/5b4a9f6a9e2af26e5f02351490b90d01eb8ec1e5""><code>5b4a9f6</code></a> v5 (<a href=""https://redirect.github.com/peter-evans/create-pull-request/issues/1792"">#1792</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/1847e5d1d66115e99988ff4ccbe629ae5b14820b""><code>1847e5d</code></a> build(deps-dev): bump eslint from 8.36.0 to 8.37.0 (<a href=""https://redirect.github.com/peter-evans/create-pull-request/issues/1803"">#1803</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/c246f7e9126aba0f1cc780a7133429d9771e9b66""><code>c246f7e</code></a> build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 5.57.0 to 5.57.1 (<a href=""https://redirect.github.com/peter-evans/create-pull-request/issues/1801"">#1801</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/2dd2b11b09f0b3bf86c25cf615e4bbe624f80314""><code>2dd2b11</code></a> build(deps-dev): bump eslint-import-resolver-typescript (<a href=""https://redirect.github.com/peter-evans/create-pull-request/issues/1802"">#1802</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/05d5a3c3f9506f8628125834beec3993d3eada67""><code>05d5a3c</code></a> build(deps-dev): bump <code>@​types/node</code> from 18.15.10 to 18.15.11 (<a href=""https://redirect.github.com/peter-evans/create-pull-request/issues/1800"">#1800</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/21479f22fcc890fd56c1b5a47d47162fa907dddc""><code>21479f2</code></a> build(deps-dev): bump ts-jest from 29.0.5 to 29.1.0 (<a href=""https://redirect.github.com/peter-evans/create-pull-request/issues/1799"">#1799</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/36a56dac0739df8d3d8ebb9e6e41026ba248ec27""><code>36a56da</code></a> build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 5.56.0 to 5.57.0 (<a href=""https://redirect.github.com/peter-evans/create-pull-request/issues/1768"">#1768</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/b7f0c9773b3f9bd0eb8d00cc963aceb9da2345e5""><code>b7f0c97</code></a> build(deps-dev): bump prettier from 2.8.6 to 2.8.7 (<a href=""https://redirect.github.com/peter-evans/create-pull-request/issues/1767"">#1767</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/6a62596740af10ccfc9800db9f74c255f65c9055""><code>6a62596</code></a> build(deps): bump peter-evans/enable-pull-request-automerge from 2 to 3 (<a href=""https://redirect.github.com/peter-evans/create-pull-request/issues/1766"">#1766</a>)</li>
<li><a href=""https://github.com/peter-evans/create-pull-request/commit/d1ed29fe1ea9695e51f6bdda3db7211f3294d9d5""><code>d1ed29f</code></a> build(deps-dev): bump <code>@​types/node</code> from 18.15.5 to 18.15.10 (<a href=""https://redirect.github.com/peter-evans/create-pull-request/issues/1765"">#1765</a>)</li>
<li>Additional commits viewable in <a href=""https://github.com/peter-evans/create-pull-request/compare/v4...v5"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=peter-evans/create-pull-request&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>",dependencies,,,2023-04-05 04:02:51,2023-04-06 19:57:21,.github/workflows/update-pre-commit.yml,979d086e158f87b266985c22f5b93fc154672beb,"dependabot[bot] labeled 2023-04-05 04:02:52,brandonwillard referenced 2023-04-06 19:57:21,brandonwillard merged 2023-04-06 19:57:21,brandonwillard closed 2023-04-06 19:57:21,brandonwillard head_ref_deleted 2023-04-06 19:57:22",codecov[bot] dependabot[bot] brandonwillard,1,True
687,1492,Update pre-commit hooks,github-actions[bot],Update pre-commit hooks to their latest versions.,,dgerlanc,,2023-04-10 07:33:24,2023-04-22 16:32:45,.pre-commit-config.yaml,53a68ed46df9d604dd05b7f04d5822514b650737,"dgerlanc head_ref_force_pushed 2023-04-21 14:23:18,brandonwillard referenced 2023-04-22 16:32:45,brandonwillard merged 2023-04-22 16:32:45,brandonwillard closed 2023-04-22 16:32:45,brandonwillard head_ref_deleted 2023-04-22 16:32:46",dgerlanc github-actions[bot] brandonwillard,0,True
688,1493,Removes pydot2 dependency,Ankit-Dhankhar,"This PR fixes #1488 

This PR removes dependency on pydot2 which throws error while installing using pip due to incompibility of setuptools (>v58) with `use_2to3` (ref [stackoverflow link](https://stackoverflow.com/questions/69100275/error-while-downloading-the-requirements-using-pip-install-setup-command-use-2)).

More details about the issue can be found in referenced issue #1488


PR Checklist
+ [X] There is an informative high-level description of the changes.
+ [X] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [X] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [X] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [X] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.

",bug setup and installation,,,2023-04-16 16:54:56,2023-04-17 19:24:15,requirements-rtd.txt,adb36f88b7a1e930a6fd006b92e18ea454a845f7,"brandonwillard labeled 2023-04-17 19:23:20,brandonwillard labeled 2023-04-17 19:23:20,brandonwillard referenced 2023-04-17 19:24:15,brandonwillard merged 2023-04-17 19:24:15,brandonwillard closed 2023-04-17 19:24:15,Ankit-Dhankhar mentioned 2023-04-17 19:24:27,Ankit-Dhankhar subscribed 2023-04-17 19:24:27,Ankit-Dhankhar head_ref_deleted 2023-04-19 17:55:15",Ankit-Dhankhar brandonwillard,1,True
689,1494,Remove type ignore in `aesara.link.c.exceptions`,brandonwillard,,typing,,brandonwillard,2023-04-23 01:22:26,2023-04-23 01:27:07,aesara/link/c/exceptions.py,4d4fe5c5d28652b7a63e27ddb65cd2c678ef5ab4,"brandonwillard labeled 2023-04-23 01:22:26,brandonwillard assigned 2023-04-23 01:26:39,brandonwillard referenced 2023-04-23 01:27:07,brandonwillard merged 2023-04-23 01:27:07,brandonwillard closed 2023-04-23 01:27:07,brandonwillard head_ref_deleted 2023-04-23 01:27:10",brandonwillard,0,True
690,1495,Update pre-commit hooks,github-actions[bot],Update pre-commit hooks to their latest versions.,,,,2023-05-01 07:33:26,2023-06-22 17:53:37,,,"soraros unsubscribed 2023-05-01 19:04:12,github-actions[bot] head_ref_force_pushed 2023-05-08 07:33:56,github-actions[bot] head_ref_force_pushed 2023-05-15 07:33:41,github-actions[bot] head_ref_force_pushed 2023-06-05 07:33:41,github-actions[bot] head_ref_force_pushed 2023-06-12 07:34:01,brandonwillard closed 2023-06-22 17:53:38,brandonwillard head_ref_force_pushed 2023-06-22 17:53:38,brandonwillard head_ref_deleted 2023-06-22 17:54:00",github-actions[bot] soraros brandonwillard,0,False
691,1496,Use NumPy recommended approach to out-of-bounds integer conversion,brandonwillard,"This PR fixes new deprecation errors caused by certain types of conversions to out-of-bounds integers to integer arrays.

The error is as follows:

``` python
DeprecationWarning: NumPy will stop allowing conversion of out-of-bound Python integers to integer arrays.  The conversion of 255 to int8 will fail in the future.
For the old behavior, usually:
    np.array(value).astype(dtype)`
will give the desired result (the cast overflows).
```",bug important NumPy compatibility,,brandonwillard,2023-05-06 23:03:03,2023-05-07 00:32:15,aesara/misc/safe_asarray.py,526b185abc3a2144b7bd1892775093fcaa2e9eb6,"brandonwillard labeled 2023-05-06 23:03:32,brandonwillard labeled 2023-05-06 23:03:32,brandonwillard labeled 2023-05-06 23:03:32,brandonwillard assigned 2023-05-06 23:03:35,brandonwillard referenced 2023-05-07 00:32:14,brandonwillard merged 2023-05-07 00:32:15,brandonwillard closed 2023-05-07 00:32:15,brandonwillard head_ref_deleted 2023-05-07 00:32:17,soraros unsubscribed 2023-05-07 01:05:28",codecov[bot] soraros brandonwillard,1,True
692,1501,Fix bad initial values shape assumptions in `save_mem_new_scan` rewrite,brandonwillard,"This PR closes #1499.  The underlying issue was that `save_mem_new_scan` always assumed that the output storage array graphs, which take the form `at.set_subtensor(at.empty[:tap_spread], initial_tap_values)`, would have non-scalar `initial_tap_values`; however, this isn't always the case.

In general, the logic in `save_mem_new_scan` is a bit convoluted and unclear about the assumptions it makes.  These changes don't completely fix that, but they do provide some refactoring that improves the situation a little.",bug graph rewriting Scan,,brandonwillard,2023-06-03 22:09:32,2023-06-03 23:48:30,tests/scan/test_rewriting.py tests/scan/test_basic.py aesara/scan/rewriting.py,bee65b1ebdcb234712c0fea9fc123d2e3d1628c7 cfe2af73d0d0e7f624578395133ec85cf4dda0e0,"brandonwillard assigned 2023-06-03 22:09:42,brandonwillard labeled 2023-06-03 22:09:52,brandonwillard labeled 2023-06-03 22:09:52,brandonwillard labeled 2023-06-03 22:09:52,brandonwillard head_ref_force_pushed 2023-06-03 22:11:02,brandonwillard referenced 2023-06-03 23:48:30,brandonwillard merged 2023-06-03 23:48:30,brandonwillard closed 2023-06-03 23:48:30,brandonwillard head_ref_deleted 2023-06-04 19:12:10",codecov[bot] brandonwillard,1,True
693,1502,Replace deprecated `np.product` with `np.prod`,brandonwillard,This PR also fixes a typing issue caused by unnecessary `staticmethod`s on the `Op`s in `nlinalg`.,important refactor NumPy compatibility,,brandonwillard,2023-06-28 23:18:01,2023-06-29 01:37:50,tests/tensor/test_subtensor.py tests/tensor/test_extra_ops.py tests/link/jax/test_extra_ops.py aesara/tensor/nlinalg.py aesara/scalar/basic.py,0ad16ce64891cd14c679fbc866fc538481acdb7c 44705739176925251375fdb27717f739fad8d295,"brandonwillard assigned 2023-06-28 23:24:32,brandonwillard labeled 2023-06-28 23:24:43,brandonwillard labeled 2023-06-28 23:24:43,brandonwillard labeled 2023-06-28 23:26:05,brandonwillard referenced 2023-06-29 01:37:50,brandonwillard merged 2023-06-29 01:37:50,brandonwillard closed 2023-06-29 01:37:50,brandonwillard head_ref_deleted 2023-06-29 01:37:56",codecov[bot] brandonwillard,1,True
694,1505,Add a `CITATION.cff` file,brandonwillard,This PR adds a `CITATION.cff`.  See https://github.com/aesara-devs/aesara/discussions/1504#discussioncomment-6415430.,documentation,rlouf Smit-create,,2023-07-11 22:26:33,2023-07-15 13:28:29,CITATION.cff,13c8ca5a99f44a999ebea22da47e2067ff2d3b0a 7b1b5244bd530621bda0918951fd762e29e57b66,"brandonwillard head_ref_force_pushed 2023-07-11 22:33:41,brandonwillard head_ref_force_pushed 2023-07-11 22:35:10,brandonwillard labeled 2023-07-11 22:36:14,brandonwillard review_requested 2023-07-11 22:36:21,Smit-create review_dismissed 2023-07-15 06:15:50,Smit-create review_dismissed 2023-07-15 06:15:50,brandonwillard referenced 2023-07-15 13:28:29,brandonwillard merged 2023-07-15 13:28:29,brandonwillard closed 2023-07-15 13:28:29,brandonwillard head_ref_deleted 2023-07-15 13:28:33",Smit-create rlouf brandonwillard,4,True
695,1509,Add F RandomVariable,aadya940,"Fixes #1366 

Here are a few important guidelines and requirements to check before your PR can be merged:
+ [x] There is an informative high-level description of the changes.
+ [x] The description and/or commit message(s) references the relevant GitHub issue(s).
+ [x] [`pre-commit`](https://pre-commit.com/#installation) is installed and [set up](https://pre-commit.com/#3-install-the-git-hook-scripts).
+ [x] The commit messages follow [these guidelines](https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html).
+ [x] The commits correspond to [_relevant logical changes_](https://wiki.openstack.org/wiki/GitCommitMessages#Structural_split_of_changes), and there are **no commits that fix changes introduced by other commits in the same branch/BR**.
+ [x] There are tests covering the changes introduced in the PR.
",enhancement random variables,brandonwillard,,2023-09-05 15:32:17,2023-09-21 00:03:44,tests/tensor/random/test_basic.py aesara/tensor/random/basic.py,e7fc0dbaba2058face1c14c51143108f87efc64a,"aadya940 renamed 2023-09-05 15:34:00,aadya940 mentioned 2023-09-05 18:05:20,aadya940 subscribed 2023-09-05 18:05:20,brandonwillard labeled 2023-09-09 16:21:27,brandonwillard labeled 2023-09-09 16:21:27,brandonwillard referenced 2023-09-21 00:03:44,brandonwillard merged 2023-09-21 00:03:44,brandonwillard closed 2023-09-21 00:03:44,aadya940 mentioned 2023-09-21 00:04:09,aadya940 subscribed 2023-09-21 00:04:09,aadya940 mentioned 2023-09-21 07:05:50,aadya940 subscribed 2023-09-21 07:05:50",codecov[bot] aadya940 brandonwillard,7,True
696,1510,Bump codecov/codecov-action from 3 to 4,dependabot[bot],"Bumps [codecov/codecov-action](https://github.com/codecov/codecov-action) from 3 to 4.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/codecov/codecov-action/releases"">codecov/codecov-action's releases</a>.</em></p>
<blockquote>
<h2>v4.0.0-beta.2</h2>
<h2>What's Changed</h2>
<ul>
<li>not adding -n if empty to do-upload command by <a href=""https://github.com/dana-yaish""><code>@​dana-yaish</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1085"">codecov/codecov-action#1085</a></li>
<li>4.0.0-beta.2 by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1086"">codecov/codecov-action#1086</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href=""https://github.com/codecov/codecov-action/compare/v4.0.0-beta.1...v4.0.0-beta.2"">https://github.com/codecov/codecov-action/compare/v4.0.0-beta.1...v4.0.0-beta.2</a></p>
<h2>4.0.0-beta.1</h2>
<p><code>v4</code> represents a move from the <a href=""https://github.com/codecov/uploader"">universal uploader</a> to the <a href=""https://github.com/codecov/codecov-cli"">Codecov CLI</a>. Although this will unlock new features for our users, the CLI is not yet at feature parity with the universal uploader.</p>
<h2>Breaking Changes</h2>
<ul>
<li>No current support for <code>aarch64</code> and <code>alpine</code> architectures.</li>
<li>Tokenless uploading is unsuported</li>
<li>Various arguments to the Action have been removed</li>
</ul>
<h2>What's Changed</h2>
<ul>
<li>build(deps): bump openpgp from 5.8.0 to 5.9.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/985"">codecov/codecov-action#985</a></li>
<li>build(deps): bump actions/checkout from 3.0.0 to 3.5.3 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1000"">codecov/codecov-action#1000</a></li>
<li>build(deps): bump ossf/scorecard-action from 2.1.3 to 2.2.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1006"">codecov/codecov-action#1006</a></li>
<li>build(deps): bump tough-cookie from 4.0.0 to 4.1.3 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1013"">codecov/codecov-action#1013</a></li>
<li>build(deps-dev): bump word-wrap from 1.2.3 to 1.2.4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1024"">codecov/codecov-action#1024</a></li>
<li>build(deps): bump node-fetch from 3.3.1 to 3.3.2 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1031"">codecov/codecov-action#1031</a></li>
<li>build(deps-dev): bump <code>@​types/node</code> from 20.1.4 to 20.4.5 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1032"">codecov/codecov-action#1032</a></li>
<li>build(deps): bump github/codeql-action from 1.0.26 to 2.21.2 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1033"">codecov/codecov-action#1033</a></li>
<li>build commit,report and upload args based on codecovcli by <a href=""https://github.com/dana-yaish""><code>@​dana-yaish</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/943"">codecov/codecov-action#943</a></li>
<li>build(deps-dev): bump <code>@​types/node</code> from 20.4.5 to 20.5.3 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1055"">codecov/codecov-action#1055</a></li>
<li>build(deps): bump github/codeql-action from 2.21.2 to 2.21.4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1051"">codecov/codecov-action#1051</a></li>
<li>build(deps-dev): bump <code>@​types/node</code> from 20.5.3 to 20.5.4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1058"">codecov/codecov-action#1058</a></li>
<li>chore(deps): update outdated deps by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1059"">codecov/codecov-action#1059</a></li>
<li>build(deps-dev): bump <code>@​types/node</code> from 20.5.4 to 20.5.6 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1060"">codecov/codecov-action#1060</a></li>
<li>build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 6.4.1 to 6.5.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1065"">codecov/codecov-action#1065</a></li>
<li>build(deps-dev): bump <code>@​typescript-eslint/eslint-plugin</code> from 6.4.1 to 6.5.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1064"">codecov/codecov-action#1064</a></li>
<li>build(deps): bump actions/checkout from 3.5.3 to 3.6.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1063"">codecov/codecov-action#1063</a></li>
<li>build(deps-dev): bump eslint from 8.47.0 to 8.48.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1061"">codecov/codecov-action#1061</a></li>
<li>build(deps-dev): bump <code>@​types/node</code> from 20.5.6 to 20.5.7 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1062"">codecov/codecov-action#1062</a></li>
<li>build(deps): bump openpgp from 5.9.0 to 5.10.1 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1066"">codecov/codecov-action#1066</a></li>
<li>build(deps-dev): bump <code>@​types/node</code> from 20.5.7 to 20.5.9 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1070"">codecov/codecov-action#1070</a></li>
<li>build(deps): bump github/codeql-action from 2.21.4 to 2.21.5 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1069"">codecov/codecov-action#1069</a></li>
<li>build(deps-dev): bump <code>@​typescript-eslint/eslint-plugin</code> from 6.5.0 to 6.6.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1072"">codecov/codecov-action#1072</a></li>
<li>Update README.md by <a href=""https://github.com/thomasrockhu-codecov""><code>@​thomasrockhu-codecov</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1073"">codecov/codecov-action#1073</a></li>
<li>build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 6.5.0 to 6.6.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1071"">codecov/codecov-action#1071</a></li>
<li>build(deps-dev): bump <code>@​vercel/ncc</code> from 0.36.1 to 0.38.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1074"">codecov/codecov-action#1074</a></li>
<li>build(deps): bump <code>@​actions/core</code> from 1.10.0 to 1.10.1 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1081"">codecov/codecov-action#1081</a></li>
<li>build(deps-dev): bump <code>@​typescript-eslint/eslint-plugin</code> from 6.6.0 to 6.7.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1080"">codecov/codecov-action#1080</a></li>
<li>build(deps): bump actions/checkout from 3.6.0 to 4.0.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1078"">codecov/codecov-action#1078</a></li>
<li>build(deps): bump actions/upload-artifact from 3.1.2 to 3.1.3 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1077"">codecov/codecov-action#1077</a></li>
<li>build(deps-dev): bump <code>@​types/node</code> from 20.5.9 to 20.6.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1075"">codecov/codecov-action#1075</a></li>
<li>build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 6.6.0 to 6.7.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1079"">codecov/codecov-action#1079</a></li>
<li>build(deps-dev): bump eslint from 8.48.0 to 8.49.0 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/codecov/codecov-action/pull/1076"">codecov/codecov-action#1076</a></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/codecov/codecov-action/blob/main/CHANGELOG.md"">codecov/codecov-action's changelog</a>.</em></p>
<blockquote>
<h2>4.0.0-beta.2</h2>
<h3>Fixes</h3>
<ul>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/1085"">#1085</a> not adding -n if empty to do-upload command</li>
</ul>
<h2>4.0.0-beta.1</h2>
<p><code>v4</code> represents a move from the <a href=""https://github.com/codecov/uploader"">universal uploader</a> to the <a href=""https://github.com/codecov/codecov-cli"">Codecov CLI</a>. Although this will unlock new features for our users, the CLI is not yet at feature parity with the universal uploader.</p>
<h3>Breaking Changes</h3>
<ul>
<li>No current support for <code>aarch64</code> and <code>alpine</code> architectures.</li>
<li>Tokenless uploading is unsuported</li>
<li>Various arguments to the Action have been removed</li>
</ul>
<h2>3.1.4</h2>
<h3>Fixes</h3>
<ul>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/967"">#967</a> Fix typo in README.md</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/971"">#971</a> fix: add back in working dir</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/969"">#969</a> fix: CLI option names for uploader</li>
</ul>
<h3>Dependencies</h3>
<ul>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/970"">#970</a> build(deps-dev): bump <code>@​types/node</code> from 18.15.12 to 18.16.3</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/979"">#979</a> build(deps-dev): bump <code>@​types/node</code> from 20.1.0 to 20.1.2</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/981"">#981</a> build(deps-dev): bump <code>@​types/node</code> from 20.1.2 to 20.1.4</li>
</ul>
<h2>3.1.3</h2>
<h3>Fixes</h3>
<ul>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/960"">#960</a> fix: allow for aarch64 build</li>
</ul>
<h3>Dependencies</h3>
<ul>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/957"">#957</a> build(deps-dev): bump jest-junit from 15.0.0 to 16.0.0</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/958"">#958</a> build(deps): bump openpgp from 5.7.0 to 5.8.0</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/959"">#959</a> build(deps-dev): bump <code>@​types/node</code> from 18.15.10 to 18.15.12</li>
</ul>
<h2>3.1.2</h2>
<h3>Fixes</h3>
<ul>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/718"">#718</a> Update README.md</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/851"">#851</a> Remove unsupported path_to_write_report argument</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/898"">#898</a> codeql-analysis.yml</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/901"">#901</a> Update README to contain correct information - inputs and negate feature</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/955"">#955</a> fix: add in all the extra arguments for uploader</li>
</ul>
<h3>Dependencies</h3>
<ul>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/819"">#819</a> build(deps): bump openpgp from 5.4.0 to 5.5.0</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/835"">#835</a> build(deps): bump node-fetch from 3.2.4 to 3.2.10</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/840"">#840</a> build(deps): bump ossf/scorecard-action from 1.1.1 to 2.0.4</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/841"">#841</a> build(deps): bump <code>@​actions/core</code> from 1.9.1 to 1.10.0</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/843"">#843</a> build(deps): bump <code>@​actions/github</code> from 5.0.3 to 5.1.1</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/869"">#869</a> build(deps): bump node-fetch from 3.2.10 to 3.3.0</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/872"">#872</a> build(deps-dev): bump jest-junit from 13.2.0 to 15.0.0</li>
<li><a href=""https://redirect.github.com/codecov/codecov-action/issues/879"">#879</a> build(deps): bump decode-uri-component from 0.2.0 to 0.2.2</li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/codecov/codecov-action/commit/c4cf8a4f03f0ac8585acb7c1b7ce3460ec15782f""><code>c4cf8a4</code></a> 4.0.0-beta.2 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1086"">#1086</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/845c445181131d954f0198d3d0f26242acc0376e""><code>845c445</code></a> not adding -n if empty to do-upload command (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1085"">#1085</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/0016507ac73abde47045262c5eb6a92f777322ec""><code>0016507</code></a> chore(release): 4.0.0-beta.1 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1084"">#1084</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/c9e4b7326764720e2d95c3a9615d9e6ba7fc949f""><code>c9e4b73</code></a> use cli instead of node uploader (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1068"">#1068</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/c9e0f0b3cf5f112462339d69850c01735114b9ed""><code>c9e0f0b</code></a> build(deps-dev): bump eslint from 8.48.0 to 8.49.0 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1076"">#1076</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/da8479a5b3816abcdf6296d5595225c8c2822d27""><code>da8479a</code></a> build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 6.6.0 to 6.7.0 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1079"">#1079</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/8e29a53ea65f98e97f4ad4594d355d8e8fd5bcfe""><code>8e29a53</code></a> build(deps-dev): bump <code>@​types/node</code> from 20.5.9 to 20.6.0 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1075"">#1075</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/162bda9838a53b5f35a4ed175b035db48651c736""><code>162bda9</code></a> build(deps): bump actions/upload-artifact from 3.1.2 to 3.1.3 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1077"">#1077</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/46acd9de81204f09c57137e70b715375df52ea4c""><code>46acd9d</code></a> build(deps): bump actions/checkout from 3.6.0 to 4.0.0 (<a href=""https://redirect.github.com/codecov/codecov-action/issues/1078"">#1078</a>)</li>
<li><a href=""https://github.com/codecov/codecov-action/commit/904bf5a0317421edb11d2be9bbd857c58af7a673""><code>904bf5a</code></a> build(deps-dev): bump <code>@​typescript-eslint/eslint-plugin</code> from 6.6.0 to 6.7.0 (#...</li>
<li>Additional commits viewable in <a href=""https://github.com/codecov/codecov-action/compare/v3...v4"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=codecov/codecov-action&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)


</details>",dependencies,,,2023-09-15 03:14:15,2023-09-15 04:12:40,.github/workflows/test.yml,4723c67424bf349364d838f70ae2fa4669998cc0,"dependabot[bot] labeled 2023-09-15 03:14:16,brandonwillard referenced 2023-09-15 04:12:40,brandonwillard merged 2023-09-15 04:12:40,brandonwillard closed 2023-09-15 04:12:40,brandonwillard head_ref_deleted 2023-09-15 04:12:41",dependabot[bot] brandonwillard,0,True
697,1512,Update NumPy BLAS info approach for version 1.26,brandonwillard,Closes #1511,documentation important NumPy compatibility,,brandonwillard,2023-09-20 19:08:08,2023-09-20 22:20:45,.github/workflows/test.yml aesara/link/c/cmodule.py aesara/scalar/basic.py .readthedocs.yaml doc/environment.yml,2a08d67ae9c00d3c061be048f0626d0ec533c75a 84f4e92f16cbd413ed1ab176666acc7008932661 b2a21f74545c0241974abddb120150d8ef010df4 081cb56c4b9611b6179e9805cfc14a6a99d994b5 0c85740f687594c2ef5aa1f242ad29dbe55203c9,"brandonwillard head_ref_force_pushed 2023-09-20 19:10:54,brandonwillard assigned 2023-09-20 19:14:43,brandonwillard labeled 2023-09-20 19:14:50,brandonwillard labeled 2023-09-20 19:14:50,brandonwillard labeled 2023-09-20 19:14:54,brandonwillard referenced 2023-09-20 22:20:45,brandonwillard merged 2023-09-20 22:20:45,brandonwillard closed 2023-09-20 22:20:45,brandonwillard head_ref_deleted 2023-09-20 22:20:52",brandonwillard,0,True
698,1519,Fix memory leak in `TensorFromScalar`,brandonwillard,Closes #1517,bug important C-backend Op implementation,,,2023-10-24 22:55:05,2023-10-25 14:19:09,aesara/tensor/basic.py,5d9a9658c355231c9250144ec7654d0b1e369e28,"brandonwillard labeled 2023-10-24 22:57:18,brandonwillard labeled 2023-10-24 22:57:18,brandonwillard labeled 2023-10-24 22:57:18,brandonwillard labeled 2023-10-24 23:56:59,mattearllongshot mentioned 2023-10-24 23:59:31,mattearllongshot subscribed 2023-10-24 23:59:31,brandonwillard referenced 2023-10-25 14:19:09,brandonwillard merged 2023-10-25 14:19:09,brandonwillard closed 2023-10-25 14:19:09,brandonwillard head_ref_deleted 2023-10-25 14:19:13",codecov[bot] mattearllongshot brandonwillard,3,True
